// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Async credentials component should render correctly 1`] = `
<AsyncCredentials
  asyncValidate={[Function]}
  component="async-credentials"
  edit={false}
  fields={
    Array [
      Object {
        "component": "text-field",
        "initialValue": "bar",
        "name": "foo",
      },
    ]
  }
  name="validate_credentials"
  validateDefaultError="Validation Required"
  validateLabel="Validate"
  validationDependencies={Array []}
  validationProgressLabel="Validating"
  validationSuccessLabel="Validation successful"
>
  <SingleField
    component="text-field"
    initialValue="bar"
    key="foo"
    name="foo"
  >
    <FormConditionWrapper
      field={
        Object {
          "component": "text-field",
          "initialValue": "bar",
          "isDisabled": undefined,
          "name": "foo",
        }
      }
    >
      <FormFieldHideWrapper
        hideField={false}
      >
        <TextField
          component="text-field"
          initialValue="bar"
          name="foo"
        >
          <Pf3FormGroup
            meta={
              Object {
                "active": false,
                "data": Object {},
                "dirty": false,
                "dirtySinceLastSubmit": false,
                "error": undefined,
                "initial": "bar",
                "invalid": false,
                "length": undefined,
                "modified": false,
                "modifiedSinceLastSubmit": false,
                "pristine": true,
                "submitError": undefined,
                "submitFailed": false,
                "submitSucceeded": false,
                "submitting": false,
                "touched": false,
                "valid": true,
                "validating": false,
                "visited": false,
              }
            }
          >
            <FormGroup
              bsClass="form-group"
              validationState={null}
            >
              <div
                className="form-group"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  name="foo"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="bar"
                >
                  <input
                    className="form-control"
                    name="foo"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="bar"
                  />
                </FormControl>
              </div>
            </FormGroup>
          </Pf3FormGroup>
        </TextField>
      </FormFieldHideWrapper>
    </FormConditionWrapper>
  </SingleField>
  <FormGroup
    bsClass="form-group"
    validationState={null}
  >
    <div
      className="form-group"
    >
      <input
        name="validate_credentials"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="hidden"
        value={true}
      />
      <FormSpy
        subscription={
          Object {
            "dirtyFields": true,
            "values": true,
          }
        }
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="primary"
          disabled={true}
          onClick={[Function]}
        >
          <button
            className="btn btn-sm btn-primary"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Validate
          </button>
        </Button>
      </FormSpy>
    </div>
  </FormGroup>
</AsyncCredentials>
`;
