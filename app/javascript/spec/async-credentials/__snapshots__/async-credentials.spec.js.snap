// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Async credentials component should render correctly 1`] = `
<AsyncCredentials
  asyncValidate={[Function]}
  component="async-credentials"
  edit={false}
  fields={
    Array [
      Object {
        "component": "text-field",
        "initialValue": "bar",
        "name": "foo",
      },
    ]
  }
  name="validate_credentials"
  validateDefaultError="Validation Required"
  validateLabel="Validate"
  validationDependencies={Array []}
  validationProgressLabel="Validating"
  validationSuccessLabel="Validation successful"
>
  <SingleField
    component="text-field"
    initialValue="bar"
    key="foo"
    name="foo"
  >
    <FormConditionWrapper
      field={
        Object {
          "component": "text-field",
          "initialValue": "bar",
          "isDisabled": undefined,
          "name": "foo",
        }
      }
    >
      <FormFieldHideWrapper
        hideField={false}
      >
        <TextField
          component="text-field"
          initialValue="bar"
          name="foo"
        >
          <TextInput
            disabled={false}
            helperText=""
            id="foo"
            inline={false}
            invalid={false}
            invalidText=""
            key="foo"
            light={false}
            name="foo"
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            type="text"
            value="bar"
            warn={false}
            warnText=""
          >
            <div
              className="bx--form-item bx--text-input-wrapper"
            >
              <div
                className="bx--text-input__field-outer-wrapper"
              >
                <div
                  className="bx--text-input__field-wrapper"
                  data-invalid={null}
                >
                  <input
                    className="bx--text-input"
                    disabled={false}
                    id="foo"
                    name="foo"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    type="text"
                    value="bar"
                  />
                </div>
              </div>
            </div>
          </TextInput>
        </TextField>
      </FormFieldHideWrapper>
    </FormConditionWrapper>
  </SingleField>
  <input
    name="validate_credentials"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="hidden"
    value={true}
  />
  <FormSpy
    subscription={
      Object {
        "dirtyFields": true,
        "values": true,
      }
    }
  >
    <Button
      dangerDescription="danger"
      disabled={true}
      isExpressive={false}
      kind="tertiary"
      onClick={[Function]}
      size="small"
      tabIndex={0}
      tooltipAlignment="center"
      tooltipPosition="top"
      type="button"
    >
      <button
        aria-describedby={null}
        aria-pressed={null}
        className="bx--btn bx--btn--sm bx--btn--tertiary bx--btn--disabled"
        disabled={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        tabIndex={0}
        type="button"
      >
        Validate
      </button>
    </Button>
    <HelperTextBlock
      helperText={false}
    />
  </FormSpy>
</AsyncCredentials>
`;
