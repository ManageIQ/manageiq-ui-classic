// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Reconfigure VM form component should render reconfigure form and click cd-rom disconnect button 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReconfigureVmForm
    memory={
      Object {
        "max": 10,
        "min": 1024,
      }
    }
    options={
      Object {
        "avail_adapter_names": Array [],
        "controller_types": Array [
          "VirtualController",
          "ParaVirtualController",
          "VirtualBusController",
        ],
        "cores_options": Array [
          1,
          2,
          3,
          4,
        ],
        "host_file_options": Array [
          Array [
            "host file test 1.iso",
            "host file test 1.iso,18",
          ],
          Array [
            "host file test 2.iso",
            "host file test 2.iso,18",
          ],
          Array [
            "host file test 3.iso",
            "host file test 3.iso,18",
          ],
        ],
        "socket_options": Array [
          1,
          2,
          3,
          4,
        ],
        "vlan_options": Array [
          "vlan test 0",
          "vlan test 1",
          "vlan test 3",
        ],
      }
    }
    recordId={
      Array [
        12,
      ]
    }
    requestId="new"
    roles={
      Object {
        "allowCdromsChange": true,
        "allowCpuChange": true,
        "allowDiskChange": true,
        "allowDiskSizeChange": true,
        "allowMemoryChange": true,
        "allowNetworkChange": true,
        "isRedhat": true,
        "isVmwareCloud": false,
        "isVmwareInfra": true,
      }
    }
  >
    <Connect(MiqFormRenderer)
      FormTemplate={[Function]}
      clearOnUnmount={false}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "reconfigure-table": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "cb_memory": false,
          "cores_per_socket_count": "1",
          "mem_type": "GB",
          "memory": "2",
          "processor": false,
          "socket_count": "2",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "className": "reconfigure_form",
              "component": "sub-form",
              "fields": Array [
                Array [
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Memory",
                    "name": "cb_memory",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "cb_memory",
                    },
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "initialValue": 16,
                        "isRequired": true,
                        "label": "Memory Size",
                        "name": "memory",
                        "validate": Array [
                          Object {
                            "type": "memoryCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "helperText": "Between 1024MB and 0.009765625GB",
                        "id": "memoryType",
                        "initialValue": "GB",
                        "label": "Unit",
                        "name": "mem_type",
                        "options": Array [
                          Object {
                            "label": "GB",
                            "value": "GB",
                          },
                          Object {
                            "label": "MB",
                            "value": "MB",
                          },
                        ],
                      },
                    ],
                    "id": "memory-sub-form",
                    "name": "memory-sub-form",
                  },
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Processor",
                    "name": "processor",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "processor",
                    },
                    "fields": Array [
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "socket",
                        "label": "Sockets",
                        "name": "socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "socket",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "cores",
                        "label": "Cores Per Socket",
                        "name": "cores_per_socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "cores",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "total_cpus",
                        "initialValue": 2,
                        "isReadOnly": true,
                        "label": "Total Processors",
                        "name": "total_cpus",
                        "type": "number",
                      },
                    ],
                    "id": "processor-sub-form",
                    "name": "processor-sub-form",
                  },
                  Array [
                    Object {
                      "addButtonLabel": "Add Disk",
                      "buttonClick": [Function],
                      "component": "reconfigure-table",
                      "formType": "disk",
                      "headers": Array [
                        Object {
                          "header": "Name",
                          "key": "name",
                        },
                        Object {
                          "header": "Type",
                          "key": "type",
                        },
                        Object {
                          "header": "Size",
                          "key": "size",
                        },
                        Object {
                          "header": "Unit",
                          "key": "unit",
                        },
                        Object {
                          "header": "Mode",
                          "key": "mode",
                        },
                        Object {
                          "header": "Controller Type",
                          "key": "controller",
                        },
                        Object {
                          "header": "Dependent",
                          "key": "dependent",
                        },
                        Object {
                          "header": "Delete Backing",
                          "key": "backing",
                        },
                        Object {
                          "header": "Bootable",
                          "key": "bootable",
                        },
                        Object {
                          "header": "Resize",
                          "key": "resize",
                        },
                        Object {
                          "contentButton": true,
                          "header": "Action",
                          "key": "action",
                        },
                      ],
                      "label": "Disks",
                      "name": "disk",
                      "onCellClick": [Function],
                      "rows": Array [
                        Object {
                          "action": Object {
                            "alt": "Delete",
                            "callback": "deleteDisk",
                            "disabled": false,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Delete",
                            "title": "Delete",
                          },
                          "backing": Object {
                            "disabled": false,
                            "is_toggle": true,
                            "labelA": "Yes",
                            "labelB": "No",
                            "labelText": "Delete Backing",
                            "ontoggle": [Function],
                            "toggled": false,
                          },
                          "bootable": "No",
                          "controller": "None",
                          "dependent": "No",
                          "id": "disk0",
                          "mode": "persistent",
                          "name": "disk test 2",
                          "resize": Object {
                            "alt": "Resize",
                            "callback": "resizeDisk",
                            "disabled": false,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Resize",
                            "title": "Resize",
                          },
                          "size": "16",
                          "type": "thin",
                          "unit": "GB",
                        },
                      ],
                    },
                    Object {
                      "addButtonLabel": "Add Network Adapter",
                      "buttonClick": [Function],
                      "component": "reconfigure-table",
                      "formType": "network",
                      "headers": Array [
                        Object {
                          "header": "Name",
                          "key": "name",
                        },
                        Object {
                          "header": "MAC address",
                          "key": "mac",
                        },
                        Object {
                          "header": "vLan",
                          "key": "vlan",
                        },
                        Object {
                          "contentButton": true,
                          "header": "Edit",
                          "key": "edit",
                        },
                        Object {
                          "contentButton": true,
                          "header": "Action",
                          "key": "action",
                        },
                      ],
                      "label": "Network Adapters",
                      "name": "network",
                      "onCellClick": [Function],
                      "rows": Array [],
                    },
                    Object {
                      "addButton": false,
                      "component": "reconfigure-table",
                      "formType": "drive",
                      "headers": Array [
                        Object {
                          "header": "Name",
                          "key": "name",
                        },
                        Object {
                          "header": "Host File",
                          "key": "hostFile",
                        },
                        Object {
                          "header": "Disconnect",
                          "key": "disconnect",
                        },
                        Object {
                          "header": "Actions",
                          "key": "action",
                        },
                      ],
                      "hideField": false,
                      "label": "CD/DVD Drives",
                      "name": "drive",
                      "onCellClick": [Function],
                      "rows": Array [
                        Object {
                          "action": Object {
                            "alt": "Connect",
                            "callback": "connectDrives",
                            "disabled": false,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Connect",
                            "title": "Connect",
                          },
                          "disconnect": Object {
                            "alt": "Cancel Disconnect",
                            "callback": "cancelDisconnectDrives",
                            "disabled": false,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Cancel Disconnect",
                            "title": "Cancel Disconnect",
                          },
                          "hostFile": "",
                          "id": "drive0",
                          "name": "CD/DVD drive 1",
                        },
                      ],
                    },
                  ],
                ],
              ],
              "name": "BasicInformation",
              "title": "Options",
            },
          ],
        }
      }
      validatorMapper={
        Object {
          "cpuCheck": [Function],
          "customRequired": [Function],
          "diskMemoryCheck": [Function],
          "memoryCheck": [Function],
        }
      }
    >
      <MiqFormRenderer
        FormTemplate={[Function]}
        buttonsLabels={Object {}}
        canReset={false}
        className="form-react"
        clearOnUnmount={false}
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "reconfigure-table": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "cb_memory": false,
            "cores_per_socket_count": "1",
            "mem_type": "GB",
            "memory": "2",
            "processor": false,
            "socket_count": "2",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "className": "reconfigure_form",
                "component": "sub-form",
                "fields": Array [
                  Array [
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Memory",
                      "name": "cb_memory",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "cb_memory",
                      },
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "initialValue": 16,
                          "isRequired": true,
                          "label": "Memory Size",
                          "name": "memory",
                          "validate": Array [
                            Object {
                              "type": "memoryCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "helperText": "Between 1024MB and 0.009765625GB",
                          "id": "memoryType",
                          "initialValue": "GB",
                          "label": "Unit",
                          "name": "mem_type",
                          "options": Array [
                            Object {
                              "label": "GB",
                              "value": "GB",
                            },
                            Object {
                              "label": "MB",
                              "value": "MB",
                            },
                          ],
                        },
                      ],
                      "id": "memory-sub-form",
                      "name": "memory-sub-form",
                    },
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Processor",
                      "name": "processor",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "processor",
                      },
                      "fields": Array [
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "socket",
                          "label": "Sockets",
                          "name": "socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "socket",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "cores",
                          "label": "Cores Per Socket",
                          "name": "cores_per_socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "cores",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "text-field",
                          "id": "total_cpus",
                          "initialValue": 2,
                          "isReadOnly": true,
                          "label": "Total Processors",
                          "name": "total_cpus",
                          "type": "number",
                        },
                      ],
                      "id": "processor-sub-form",
                      "name": "processor-sub-form",
                    },
                    Array [
                      Object {
                        "addButtonLabel": "Add Disk",
                        "buttonClick": [Function],
                        "component": "reconfigure-table",
                        "formType": "disk",
                        "headers": Array [
                          Object {
                            "header": "Name",
                            "key": "name",
                          },
                          Object {
                            "header": "Type",
                            "key": "type",
                          },
                          Object {
                            "header": "Size",
                            "key": "size",
                          },
                          Object {
                            "header": "Unit",
                            "key": "unit",
                          },
                          Object {
                            "header": "Mode",
                            "key": "mode",
                          },
                          Object {
                            "header": "Controller Type",
                            "key": "controller",
                          },
                          Object {
                            "header": "Dependent",
                            "key": "dependent",
                          },
                          Object {
                            "header": "Delete Backing",
                            "key": "backing",
                          },
                          Object {
                            "header": "Bootable",
                            "key": "bootable",
                          },
                          Object {
                            "header": "Resize",
                            "key": "resize",
                          },
                          Object {
                            "contentButton": true,
                            "header": "Action",
                            "key": "action",
                          },
                        ],
                        "label": "Disks",
                        "name": "disk",
                        "onCellClick": [Function],
                        "rows": Array [
                          Object {
                            "action": Object {
                              "alt": "Delete",
                              "callback": "deleteDisk",
                              "disabled": false,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Delete",
                              "title": "Delete",
                            },
                            "backing": Object {
                              "disabled": false,
                              "is_toggle": true,
                              "labelA": "Yes",
                              "labelB": "No",
                              "labelText": "Delete Backing",
                              "ontoggle": [Function],
                              "toggled": false,
                            },
                            "bootable": "No",
                            "controller": "None",
                            "dependent": "No",
                            "id": "disk0",
                            "mode": "persistent",
                            "name": "disk test 2",
                            "resize": Object {
                              "alt": "Resize",
                              "callback": "resizeDisk",
                              "disabled": false,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Resize",
                              "title": "Resize",
                            },
                            "size": "16",
                            "type": "thin",
                            "unit": "GB",
                          },
                        ],
                      },
                      Object {
                        "addButtonLabel": "Add Network Adapter",
                        "buttonClick": [Function],
                        "component": "reconfigure-table",
                        "formType": "network",
                        "headers": Array [
                          Object {
                            "header": "Name",
                            "key": "name",
                          },
                          Object {
                            "header": "MAC address",
                            "key": "mac",
                          },
                          Object {
                            "header": "vLan",
                            "key": "vlan",
                          },
                          Object {
                            "contentButton": true,
                            "header": "Edit",
                            "key": "edit",
                          },
                          Object {
                            "contentButton": true,
                            "header": "Action",
                            "key": "action",
                          },
                        ],
                        "label": "Network Adapters",
                        "name": "network",
                        "onCellClick": [Function],
                        "rows": Array [],
                      },
                      Object {
                        "addButton": false,
                        "component": "reconfigure-table",
                        "formType": "drive",
                        "headers": Array [
                          Object {
                            "header": "Name",
                            "key": "name",
                          },
                          Object {
                            "header": "Host File",
                            "key": "hostFile",
                          },
                          Object {
                            "header": "Disconnect",
                            "key": "disconnect",
                          },
                          Object {
                            "header": "Actions",
                            "key": "action",
                          },
                        ],
                        "hideField": false,
                        "label": "CD/DVD Drives",
                        "name": "drive",
                        "onCellClick": [Function],
                        "rows": Array [
                          Object {
                            "action": Object {
                              "alt": "Connect",
                              "callback": "connectDrives",
                              "disabled": false,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Connect",
                              "title": "Connect",
                            },
                            "disconnect": Object {
                              "alt": "Cancel Disconnect",
                              "callback": "cancelDisconnectDrives",
                              "disabled": false,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Cancel Disconnect",
                              "title": "Cancel Disconnect",
                            },
                            "hostFile": "",
                            "id": "drive0",
                            "name": "CD/DVD drive 1",
                          },
                        ],
                      },
                    ],
                  ],
                ],
                "name": "BasicInformation",
                "title": "Options",
              },
            ],
          }
        }
        showFormControls={true}
        validatorMapper={
          Object {
            "cpuCheck": [Function],
            "customRequired": [Function],
            "diskMemoryCheck": [Function],
            "memoryCheck": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "reconfigure-table": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "cb_memory": false,
              "cores_per_socket_count": "1",
              "mem_type": "GB",
              "memory": "2",
              "processor": false,
              "socket_count": "2",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "className": "reconfigure_form",
                  "component": "sub-form",
                  "fields": Array [
                    Array [
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Memory",
                        "name": "cb_memory",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "fields": Array [
                          Object {
                            "component": "text-field",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "initialValue": 16,
                            "isRequired": true,
                            "label": "Memory Size",
                            "name": "memory",
                            "validate": Array [
                              Object {
                                "type": "memoryCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "helperText": "Between 1024MB and 0.009765625GB",
                            "id": "memoryType",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "mem_type",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                        ],
                        "id": "memory-sub-form",
                        "name": "memory-sub-form",
                      },
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Processor",
                        "name": "processor",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "processor",
                        },
                        "fields": Array [
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "socket",
                            "label": "Sockets",
                            "name": "socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "socket",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "cores",
                            "label": "Cores Per Socket",
                            "name": "cores_per_socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "cores",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "total_cpus",
                            "initialValue": 2,
                            "isReadOnly": true,
                            "label": "Total Processors",
                            "name": "total_cpus",
                            "type": "number",
                          },
                        ],
                        "id": "processor-sub-form",
                        "name": "processor-sub-form",
                      },
                      Array [
                        Object {
                          "addButtonLabel": "Add Disk",
                          "buttonClick": [Function],
                          "component": "reconfigure-table",
                          "formType": "disk",
                          "headers": Array [
                            Object {
                              "header": "Name",
                              "key": "name",
                            },
                            Object {
                              "header": "Type",
                              "key": "type",
                            },
                            Object {
                              "header": "Size",
                              "key": "size",
                            },
                            Object {
                              "header": "Unit",
                              "key": "unit",
                            },
                            Object {
                              "header": "Mode",
                              "key": "mode",
                            },
                            Object {
                              "header": "Controller Type",
                              "key": "controller",
                            },
                            Object {
                              "header": "Dependent",
                              "key": "dependent",
                            },
                            Object {
                              "header": "Delete Backing",
                              "key": "backing",
                            },
                            Object {
                              "header": "Bootable",
                              "key": "bootable",
                            },
                            Object {
                              "header": "Resize",
                              "key": "resize",
                            },
                            Object {
                              "contentButton": true,
                              "header": "Action",
                              "key": "action",
                            },
                          ],
                          "label": "Disks",
                          "name": "disk",
                          "onCellClick": [Function],
                          "rows": Array [
                            Object {
                              "action": Object {
                                "alt": "Delete",
                                "callback": "deleteDisk",
                                "disabled": false,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Delete",
                                "title": "Delete",
                              },
                              "backing": Object {
                                "disabled": false,
                                "is_toggle": true,
                                "labelA": "Yes",
                                "labelB": "No",
                                "labelText": "Delete Backing",
                                "ontoggle": [Function],
                                "toggled": false,
                              },
                              "bootable": "No",
                              "controller": "None",
                              "dependent": "No",
                              "id": "disk0",
                              "mode": "persistent",
                              "name": "disk test 2",
                              "resize": Object {
                                "alt": "Resize",
                                "callback": "resizeDisk",
                                "disabled": false,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Resize",
                                "title": "Resize",
                              },
                              "size": "16",
                              "type": "thin",
                              "unit": "GB",
                            },
                          ],
                        },
                        Object {
                          "addButtonLabel": "Add Network Adapter",
                          "buttonClick": [Function],
                          "component": "reconfigure-table",
                          "formType": "network",
                          "headers": Array [
                            Object {
                              "header": "Name",
                              "key": "name",
                            },
                            Object {
                              "header": "MAC address",
                              "key": "mac",
                            },
                            Object {
                              "header": "vLan",
                              "key": "vlan",
                            },
                            Object {
                              "contentButton": true,
                              "header": "Edit",
                              "key": "edit",
                            },
                            Object {
                              "contentButton": true,
                              "header": "Action",
                              "key": "action",
                            },
                          ],
                          "label": "Network Adapters",
                          "name": "network",
                          "onCellClick": [Function],
                          "rows": Array [],
                        },
                        Object {
                          "addButton": false,
                          "component": "reconfigure-table",
                          "formType": "drive",
                          "headers": Array [
                            Object {
                              "header": "Name",
                              "key": "name",
                            },
                            Object {
                              "header": "Host File",
                              "key": "hostFile",
                            },
                            Object {
                              "header": "Disconnect",
                              "key": "disconnect",
                            },
                            Object {
                              "header": "Actions",
                              "key": "action",
                            },
                          ],
                          "hideField": false,
                          "label": "CD/DVD Drives",
                          "name": "drive",
                          "onCellClick": [Function],
                          "rows": Array [
                            Object {
                              "action": Object {
                                "alt": "Connect",
                                "callback": "connectDrives",
                                "disabled": false,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Connect",
                                "title": "Connect",
                              },
                              "disconnect": Object {
                                "alt": "Cancel Disconnect",
                                "callback": "cancelDisconnectDrives",
                                "disabled": false,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Cancel Disconnect",
                                "title": "Cancel Disconnect",
                              },
                              "hostFile": "",
                              "id": "drive0",
                              "name": "CD/DVD drive 1",
                            },
                          ],
                        },
                      ],
                    ],
                  ],
                  "name": "BasicInformation",
                  "title": "Options",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validatorMapper={
            Object {
              "cpuCheck": [Function],
              "customRequired": [Function],
              "diskMemoryCheck": [Function],
              "memoryCheck": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "cb_memory": false,
                "cores_per_socket_count": "1",
                "mem_type": "GB",
                "memory": "2",
                "processor": false,
                "socket_count": "2",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <FormTemplate
              formFields={
                Array [
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 2,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                          Array [
                            Object {
                              "addButtonLabel": "Add Disk",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "disk",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Type",
                                  "key": "type",
                                },
                                Object {
                                  "header": "Size",
                                  "key": "size",
                                },
                                Object {
                                  "header": "Unit",
                                  "key": "unit",
                                },
                                Object {
                                  "header": "Mode",
                                  "key": "mode",
                                },
                                Object {
                                  "header": "Controller Type",
                                  "key": "controller",
                                },
                                Object {
                                  "header": "Dependent",
                                  "key": "dependent",
                                },
                                Object {
                                  "header": "Delete Backing",
                                  "key": "backing",
                                },
                                Object {
                                  "header": "Bootable",
                                  "key": "bootable",
                                },
                                Object {
                                  "header": "Resize",
                                  "key": "resize",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Disks",
                              "name": "disk",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Delete",
                                    "callback": "deleteDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Delete",
                                    "title": "Delete",
                                  },
                                  "backing": Object {
                                    "disabled": false,
                                    "is_toggle": true,
                                    "labelA": "Yes",
                                    "labelB": "No",
                                    "labelText": "Delete Backing",
                                    "ontoggle": [Function],
                                    "toggled": false,
                                  },
                                  "bootable": "No",
                                  "controller": "None",
                                  "dependent": "No",
                                  "id": "disk0",
                                  "mode": "persistent",
                                  "name": "disk test 2",
                                  "resize": Object {
                                    "alt": "Resize",
                                    "callback": "resizeDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Resize",
                                    "title": "Resize",
                                  },
                                  "size": "16",
                                  "type": "thin",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "addButtonLabel": "Add Network Adapter",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "network",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "MAC address",
                                  "key": "mac",
                                },
                                Object {
                                  "header": "vLan",
                                  "key": "vlan",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Edit",
                                  "key": "edit",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Network Adapters",
                              "name": "network",
                              "onCellClick": [Function],
                              "rows": Array [],
                            },
                            Object {
                              "addButton": false,
                              "component": "reconfigure-table",
                              "formType": "drive",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Host File",
                                  "key": "hostFile",
                                },
                                Object {
                                  "header": "Disconnect",
                                  "key": "disconnect",
                                },
                                Object {
                                  "header": "Actions",
                                  "key": "action",
                                },
                              ],
                              "hideField": false,
                              "label": "CD/DVD Drives",
                              "name": "drive",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Connect",
                                    "callback": "connectDrives",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Connect",
                                    "title": "Connect",
                                  },
                                  "disconnect": Object {
                                    "alt": "Cancel Disconnect",
                                    "callback": "cancelDisconnectDrives",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Cancel Disconnect",
                                    "title": "Cancel Disconnect",
                                  },
                                  "hostFile": "",
                                  "id": "drive0",
                                  "name": "CD/DVD drive 1",
                                },
                              ],
                            },
                          ],
                        ],
                      ]
                    }
                    name="BasicInformation"
                    title="Options"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "className": "reconfigure_form",
                      "component": "sub-form",
                      "fields": Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 2,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                          Array [
                            Object {
                              "addButtonLabel": "Add Disk",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "disk",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Type",
                                  "key": "type",
                                },
                                Object {
                                  "header": "Size",
                                  "key": "size",
                                },
                                Object {
                                  "header": "Unit",
                                  "key": "unit",
                                },
                                Object {
                                  "header": "Mode",
                                  "key": "mode",
                                },
                                Object {
                                  "header": "Controller Type",
                                  "key": "controller",
                                },
                                Object {
                                  "header": "Dependent",
                                  "key": "dependent",
                                },
                                Object {
                                  "header": "Delete Backing",
                                  "key": "backing",
                                },
                                Object {
                                  "header": "Bootable",
                                  "key": "bootable",
                                },
                                Object {
                                  "header": "Resize",
                                  "key": "resize",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Disks",
                              "name": "disk",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Delete",
                                    "callback": "deleteDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Delete",
                                    "title": "Delete",
                                  },
                                  "backing": Object {
                                    "disabled": false,
                                    "is_toggle": true,
                                    "labelA": "Yes",
                                    "labelB": "No",
                                    "labelText": "Delete Backing",
                                    "ontoggle": [Function],
                                    "toggled": false,
                                  },
                                  "bootable": "No",
                                  "controller": "None",
                                  "dependent": "No",
                                  "id": "disk0",
                                  "mode": "persistent",
                                  "name": "disk test 2",
                                  "resize": Object {
                                    "alt": "Resize",
                                    "callback": "resizeDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Resize",
                                    "title": "Resize",
                                  },
                                  "size": "16",
                                  "type": "thin",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "addButtonLabel": "Add Network Adapter",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "network",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "MAC address",
                                  "key": "mac",
                                },
                                Object {
                                  "header": "vLan",
                                  "key": "vlan",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Edit",
                                  "key": "edit",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Network Adapters",
                              "name": "network",
                              "onCellClick": [Function],
                              "rows": Array [],
                            },
                            Object {
                              "addButton": false,
                              "component": "reconfigure-table",
                              "formType": "drive",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Host File",
                                  "key": "hostFile",
                                },
                                Object {
                                  "header": "Disconnect",
                                  "key": "disconnect",
                                },
                                Object {
                                  "header": "Actions",
                                  "key": "action",
                                },
                              ],
                              "hideField": false,
                              "label": "CD/DVD Drives",
                              "name": "drive",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Connect",
                                    "callback": "connectDrives",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Connect",
                                    "title": "Connect",
                                  },
                                  "disconnect": Object {
                                    "alt": "Cancel Disconnect",
                                    "callback": "cancelDisconnectDrives",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Cancel Disconnect",
                                    "title": "Cancel Disconnect",
                                  },
                                  "hostFile": "",
                                  "id": "drive0",
                                  "name": "CD/DVD drive 1",
                                },
                              ],
                            },
                          ],
                        ],
                      ],
                      "name": "BasicInformation",
                      "title": "Options",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <ReconfigureTemplate
                canSubmit={true}
                formFields={
                  Array [
                    <SingleField
                      className="reconfigure_form"
                      component="sub-form"
                      fields={
                        Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 2,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                            Array [
                              Object {
                                "addButtonLabel": "Add Disk",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "disk",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Type",
                                    "key": "type",
                                  },
                                  Object {
                                    "header": "Size",
                                    "key": "size",
                                  },
                                  Object {
                                    "header": "Unit",
                                    "key": "unit",
                                  },
                                  Object {
                                    "header": "Mode",
                                    "key": "mode",
                                  },
                                  Object {
                                    "header": "Controller Type",
                                    "key": "controller",
                                  },
                                  Object {
                                    "header": "Dependent",
                                    "key": "dependent",
                                  },
                                  Object {
                                    "header": "Delete Backing",
                                    "key": "backing",
                                  },
                                  Object {
                                    "header": "Bootable",
                                    "key": "bootable",
                                  },
                                  Object {
                                    "header": "Resize",
                                    "key": "resize",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Disks",
                                "name": "disk",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Delete",
                                      "callback": "deleteDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Delete",
                                      "title": "Delete",
                                    },
                                    "backing": Object {
                                      "disabled": false,
                                      "is_toggle": true,
                                      "labelA": "Yes",
                                      "labelB": "No",
                                      "labelText": "Delete Backing",
                                      "ontoggle": [Function],
                                      "toggled": false,
                                    },
                                    "bootable": "No",
                                    "controller": "None",
                                    "dependent": "No",
                                    "id": "disk0",
                                    "mode": "persistent",
                                    "name": "disk test 2",
                                    "resize": Object {
                                      "alt": "Resize",
                                      "callback": "resizeDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Resize",
                                      "title": "Resize",
                                    },
                                    "size": "16",
                                    "type": "thin",
                                    "unit": "GB",
                                  },
                                ],
                              },
                              Object {
                                "addButtonLabel": "Add Network Adapter",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "network",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "MAC address",
                                    "key": "mac",
                                  },
                                  Object {
                                    "header": "vLan",
                                    "key": "vlan",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Edit",
                                    "key": "edit",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Network Adapters",
                                "name": "network",
                                "onCellClick": [Function],
                                "rows": Array [],
                              },
                              Object {
                                "addButton": false,
                                "component": "reconfigure-table",
                                "formType": "drive",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Host File",
                                    "key": "hostFile",
                                  },
                                  Object {
                                    "header": "Disconnect",
                                    "key": "disconnect",
                                  },
                                  Object {
                                    "header": "Actions",
                                    "key": "action",
                                  },
                                ],
                                "hideField": false,
                                "label": "CD/DVD Drives",
                                "name": "drive",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Connect",
                                      "callback": "connectDrives",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Connect",
                                      "title": "Connect",
                                    },
                                    "disconnect": Object {
                                      "alt": "Cancel Disconnect",
                                      "callback": "cancelDisconnectDrives",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Cancel Disconnect",
                                      "title": "Cancel Disconnect",
                                    },
                                    "hostFile": "",
                                    "id": "drive0",
                                    "name": "CD/DVD drive 1",
                                  },
                                ],
                              },
                            ],
                          ],
                        ]
                      }
                      name="BasicInformation"
                      title="Options"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                hideButtons={false}
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "className": "reconfigure_form",
                        "component": "sub-form",
                        "fields": Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 2,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                            Array [
                              Object {
                                "addButtonLabel": "Add Disk",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "disk",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Type",
                                    "key": "type",
                                  },
                                  Object {
                                    "header": "Size",
                                    "key": "size",
                                  },
                                  Object {
                                    "header": "Unit",
                                    "key": "unit",
                                  },
                                  Object {
                                    "header": "Mode",
                                    "key": "mode",
                                  },
                                  Object {
                                    "header": "Controller Type",
                                    "key": "controller",
                                  },
                                  Object {
                                    "header": "Dependent",
                                    "key": "dependent",
                                  },
                                  Object {
                                    "header": "Delete Backing",
                                    "key": "backing",
                                  },
                                  Object {
                                    "header": "Bootable",
                                    "key": "bootable",
                                  },
                                  Object {
                                    "header": "Resize",
                                    "key": "resize",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Disks",
                                "name": "disk",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Delete",
                                      "callback": "deleteDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Delete",
                                      "title": "Delete",
                                    },
                                    "backing": Object {
                                      "disabled": false,
                                      "is_toggle": true,
                                      "labelA": "Yes",
                                      "labelB": "No",
                                      "labelText": "Delete Backing",
                                      "ontoggle": [Function],
                                      "toggled": false,
                                    },
                                    "bootable": "No",
                                    "controller": "None",
                                    "dependent": "No",
                                    "id": "disk0",
                                    "mode": "persistent",
                                    "name": "disk test 2",
                                    "resize": Object {
                                      "alt": "Resize",
                                      "callback": "resizeDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Resize",
                                      "title": "Resize",
                                    },
                                    "size": "16",
                                    "type": "thin",
                                    "unit": "GB",
                                  },
                                ],
                              },
                              Object {
                                "addButtonLabel": "Add Network Adapter",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "network",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "MAC address",
                                    "key": "mac",
                                  },
                                  Object {
                                    "header": "vLan",
                                    "key": "vlan",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Edit",
                                    "key": "edit",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Network Adapters",
                                "name": "network",
                                "onCellClick": [Function],
                                "rows": Array [],
                              },
                              Object {
                                "addButton": false,
                                "component": "reconfigure-table",
                                "formType": "drive",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Host File",
                                    "key": "hostFile",
                                  },
                                  Object {
                                    "header": "Disconnect",
                                    "key": "disconnect",
                                  },
                                  Object {
                                    "header": "Actions",
                                    "key": "action",
                                  },
                                ],
                                "hideField": false,
                                "label": "CD/DVD Drives",
                                "name": "drive",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Connect",
                                      "callback": "connectDrives",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Connect",
                                      "title": "Connect",
                                    },
                                    "disconnect": Object {
                                      "alt": "Cancel Disconnect",
                                      "callback": "cancelDisconnectDrives",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Cancel Disconnect",
                                      "title": "Cancel Disconnect",
                                    },
                                    "hostFile": "",
                                    "id": "drive0",
                                    "name": "CD/DVD drive 1",
                                  },
                                ],
                              },
                            ],
                          ],
                        ],
                        "name": "BasicInformation",
                        "title": "Options",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
              >
                <form
                  className="form-react reconfigure-form"
                  onSubmit={[Function]}
                >
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 2,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                          Array [
                            Object {
                              "addButtonLabel": "Add Disk",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "disk",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Type",
                                  "key": "type",
                                },
                                Object {
                                  "header": "Size",
                                  "key": "size",
                                },
                                Object {
                                  "header": "Unit",
                                  "key": "unit",
                                },
                                Object {
                                  "header": "Mode",
                                  "key": "mode",
                                },
                                Object {
                                  "header": "Controller Type",
                                  "key": "controller",
                                },
                                Object {
                                  "header": "Dependent",
                                  "key": "dependent",
                                },
                                Object {
                                  "header": "Delete Backing",
                                  "key": "backing",
                                },
                                Object {
                                  "header": "Bootable",
                                  "key": "bootable",
                                },
                                Object {
                                  "header": "Resize",
                                  "key": "resize",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Disks",
                              "name": "disk",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Delete",
                                    "callback": "deleteDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Delete",
                                    "title": "Delete",
                                  },
                                  "backing": Object {
                                    "disabled": false,
                                    "is_toggle": true,
                                    "labelA": "Yes",
                                    "labelB": "No",
                                    "labelText": "Delete Backing",
                                    "ontoggle": [Function],
                                    "toggled": false,
                                  },
                                  "bootable": "No",
                                  "controller": "None",
                                  "dependent": "No",
                                  "id": "disk0",
                                  "mode": "persistent",
                                  "name": "disk test 2",
                                  "resize": Object {
                                    "alt": "Resize",
                                    "callback": "resizeDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Resize",
                                    "title": "Resize",
                                  },
                                  "size": "16",
                                  "type": "thin",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "addButtonLabel": "Add Network Adapter",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "network",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "MAC address",
                                  "key": "mac",
                                },
                                Object {
                                  "header": "vLan",
                                  "key": "vlan",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Edit",
                                  "key": "edit",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Network Adapters",
                              "name": "network",
                              "onCellClick": [Function],
                              "rows": Array [],
                            },
                            Object {
                              "addButton": false,
                              "component": "reconfigure-table",
                              "formType": "drive",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Host File",
                                  "key": "hostFile",
                                },
                                Object {
                                  "header": "Disconnect",
                                  "key": "disconnect",
                                },
                                Object {
                                  "header": "Actions",
                                  "key": "action",
                                },
                              ],
                              "hideField": false,
                              "label": "CD/DVD Drives",
                              "name": "drive",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Connect",
                                    "callback": "connectDrives",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Connect",
                                    "title": "Connect",
                                  },
                                  "disconnect": Object {
                                    "alt": "Cancel Disconnect",
                                    "callback": "cancelDisconnectDrives",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Cancel Disconnect",
                                    "title": "Cancel Disconnect",
                                  },
                                  "hostFile": "",
                                  "id": "drive0",
                                  "name": "CD/DVD drive 1",
                                },
                              ],
                            },
                          ],
                        ],
                      ]
                    }
                    key="BasicInformation"
                    name="BasicInformation"
                    title="Options"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "className": "reconfigure_form",
                          "component": "sub-form",
                          "fields": Array [
                            Array [
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Memory",
                                "name": "cb_memory",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ],
                                "id": "memory-sub-form",
                                "name": "memory-sub-form",
                              },
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Processor",
                                "name": "processor",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "processor",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 2,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ],
                                "id": "processor-sub-form",
                                "name": "processor-sub-form",
                              },
                              Array [
                                Object {
                                  "addButtonLabel": "Add Disk",
                                  "buttonClick": [Function],
                                  "component": "reconfigure-table",
                                  "formType": "disk",
                                  "headers": Array [
                                    Object {
                                      "header": "Name",
                                      "key": "name",
                                    },
                                    Object {
                                      "header": "Type",
                                      "key": "type",
                                    },
                                    Object {
                                      "header": "Size",
                                      "key": "size",
                                    },
                                    Object {
                                      "header": "Unit",
                                      "key": "unit",
                                    },
                                    Object {
                                      "header": "Mode",
                                      "key": "mode",
                                    },
                                    Object {
                                      "header": "Controller Type",
                                      "key": "controller",
                                    },
                                    Object {
                                      "header": "Dependent",
                                      "key": "dependent",
                                    },
                                    Object {
                                      "header": "Delete Backing",
                                      "key": "backing",
                                    },
                                    Object {
                                      "header": "Bootable",
                                      "key": "bootable",
                                    },
                                    Object {
                                      "header": "Resize",
                                      "key": "resize",
                                    },
                                    Object {
                                      "contentButton": true,
                                      "header": "Action",
                                      "key": "action",
                                    },
                                  ],
                                  "label": "Disks",
                                  "name": "disk",
                                  "onCellClick": [Function],
                                  "rows": Array [
                                    Object {
                                      "action": Object {
                                        "alt": "Delete",
                                        "callback": "deleteDisk",
                                        "disabled": false,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Delete",
                                        "title": "Delete",
                                      },
                                      "backing": Object {
                                        "disabled": false,
                                        "is_toggle": true,
                                        "labelA": "Yes",
                                        "labelB": "No",
                                        "labelText": "Delete Backing",
                                        "ontoggle": [Function],
                                        "toggled": false,
                                      },
                                      "bootable": "No",
                                      "controller": "None",
                                      "dependent": "No",
                                      "id": "disk0",
                                      "mode": "persistent",
                                      "name": "disk test 2",
                                      "resize": Object {
                                        "alt": "Resize",
                                        "callback": "resizeDisk",
                                        "disabled": false,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Resize",
                                        "title": "Resize",
                                      },
                                      "size": "16",
                                      "type": "thin",
                                      "unit": "GB",
                                    },
                                  ],
                                },
                                Object {
                                  "addButtonLabel": "Add Network Adapter",
                                  "buttonClick": [Function],
                                  "component": "reconfigure-table",
                                  "formType": "network",
                                  "headers": Array [
                                    Object {
                                      "header": "Name",
                                      "key": "name",
                                    },
                                    Object {
                                      "header": "MAC address",
                                      "key": "mac",
                                    },
                                    Object {
                                      "header": "vLan",
                                      "key": "vlan",
                                    },
                                    Object {
                                      "contentButton": true,
                                      "header": "Edit",
                                      "key": "edit",
                                    },
                                    Object {
                                      "contentButton": true,
                                      "header": "Action",
                                      "key": "action",
                                    },
                                  ],
                                  "label": "Network Adapters",
                                  "name": "network",
                                  "onCellClick": [Function],
                                  "rows": Array [],
                                },
                                Object {
                                  "addButton": false,
                                  "component": "reconfigure-table",
                                  "formType": "drive",
                                  "headers": Array [
                                    Object {
                                      "header": "Name",
                                      "key": "name",
                                    },
                                    Object {
                                      "header": "Host File",
                                      "key": "hostFile",
                                    },
                                    Object {
                                      "header": "Disconnect",
                                      "key": "disconnect",
                                    },
                                    Object {
                                      "header": "Actions",
                                      "key": "action",
                                    },
                                  ],
                                  "hideField": false,
                                  "label": "CD/DVD Drives",
                                  "name": "drive",
                                  "onCellClick": [Function],
                                  "rows": Array [
                                    Object {
                                      "action": Object {
                                        "alt": "Connect",
                                        "callback": "connectDrives",
                                        "disabled": false,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Connect",
                                        "title": "Connect",
                                      },
                                      "disconnect": Object {
                                        "alt": "Cancel Disconnect",
                                        "callback": "cancelDisconnectDrives",
                                        "disabled": false,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Cancel Disconnect",
                                        "title": "Cancel Disconnect",
                                      },
                                      "hostFile": "",
                                      "id": "drive0",
                                      "name": "CD/DVD drive 1",
                                    },
                                  ],
                                },
                              ],
                            ],
                          ],
                          "name": "BasicInformation",
                          "title": "Options",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SubForm
                          DescriptionElement="p"
                          TitleElement="h3"
                          className="reconfigure_form"
                          component="sub-form"
                          fields={
                            Array [
                              Array [
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Memory",
                                  "name": "cb_memory",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "initialValue": 16,
                                      "isRequired": true,
                                      "label": "Memory Size",
                                      "name": "memory",
                                      "validate": Array [
                                        Object {
                                          "type": "memoryCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "helperText": "Between 1024MB and 0.009765625GB",
                                      "id": "memoryType",
                                      "initialValue": "GB",
                                      "label": "Unit",
                                      "name": "mem_type",
                                      "options": Array [
                                        Object {
                                          "label": "GB",
                                          "value": "GB",
                                        },
                                        Object {
                                          "label": "MB",
                                          "value": "MB",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "memory-sub-form",
                                  "name": "memory-sub-form",
                                },
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Processor",
                                  "name": "processor",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "processor",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "socket",
                                      "label": "Sockets",
                                      "name": "socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "socket",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "cores",
                                      "label": "Cores Per Socket",
                                      "name": "cores_per_socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "cores",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "text-field",
                                      "id": "total_cpus",
                                      "initialValue": 2,
                                      "isReadOnly": true,
                                      "label": "Total Processors",
                                      "name": "total_cpus",
                                      "type": "number",
                                    },
                                  ],
                                  "id": "processor-sub-form",
                                  "name": "processor-sub-form",
                                },
                                Array [
                                  Object {
                                    "addButtonLabel": "Add Disk",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "disk",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Type",
                                        "key": "type",
                                      },
                                      Object {
                                        "header": "Size",
                                        "key": "size",
                                      },
                                      Object {
                                        "header": "Unit",
                                        "key": "unit",
                                      },
                                      Object {
                                        "header": "Mode",
                                        "key": "mode",
                                      },
                                      Object {
                                        "header": "Controller Type",
                                        "key": "controller",
                                      },
                                      Object {
                                        "header": "Dependent",
                                        "key": "dependent",
                                      },
                                      Object {
                                        "header": "Delete Backing",
                                        "key": "backing",
                                      },
                                      Object {
                                        "header": "Bootable",
                                        "key": "bootable",
                                      },
                                      Object {
                                        "header": "Resize",
                                        "key": "resize",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Disks",
                                    "name": "disk",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Delete",
                                          "callback": "deleteDisk",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Delete",
                                          "title": "Delete",
                                        },
                                        "backing": Object {
                                          "disabled": false,
                                          "is_toggle": true,
                                          "labelA": "Yes",
                                          "labelB": "No",
                                          "labelText": "Delete Backing",
                                          "ontoggle": [Function],
                                          "toggled": false,
                                        },
                                        "bootable": "No",
                                        "controller": "None",
                                        "dependent": "No",
                                        "id": "disk0",
                                        "mode": "persistent",
                                        "name": "disk test 2",
                                        "resize": Object {
                                          "alt": "Resize",
                                          "callback": "resizeDisk",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Resize",
                                          "title": "Resize",
                                        },
                                        "size": "16",
                                        "type": "thin",
                                        "unit": "GB",
                                      },
                                    ],
                                  },
                                  Object {
                                    "addButtonLabel": "Add Network Adapter",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "network",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "MAC address",
                                        "key": "mac",
                                      },
                                      Object {
                                        "header": "vLan",
                                        "key": "vlan",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Edit",
                                        "key": "edit",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Network Adapters",
                                    "name": "network",
                                    "onCellClick": [Function],
                                    "rows": Array [],
                                  },
                                  Object {
                                    "addButton": false,
                                    "component": "reconfigure-table",
                                    "formType": "drive",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Host File",
                                        "key": "hostFile",
                                      },
                                      Object {
                                        "header": "Disconnect",
                                        "key": "disconnect",
                                      },
                                      Object {
                                        "header": "Actions",
                                        "key": "action",
                                      },
                                    ],
                                    "hideField": false,
                                    "label": "CD/DVD Drives",
                                    "name": "drive",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Connect",
                                          "callback": "connectDrives",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Connect",
                                          "title": "Connect",
                                        },
                                        "disconnect": Object {
                                          "alt": "Cancel Disconnect",
                                          "callback": "cancelDisconnectDrives",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Cancel Disconnect",
                                          "title": "Cancel Disconnect",
                                        },
                                        "hostFile": "",
                                        "id": "drive0",
                                        "name": "CD/DVD drive 1",
                                      },
                                    ],
                                  },
                                ],
                              ],
                            ]
                          }
                          name="BasicInformation"
                          title="Options"
                        >
                          <div
                            className="reconfigure_form"
                            name="BasicInformation"
                          >
                            <div>
                              <h3>
                                Options
                              </h3>
                            </div>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="cb_memory"
                              label="Memory"
                              name="cb_memory"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Memory",
                                    "name": "cb_memory",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Memory"
                                    name="cb_memory"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="cb_memory"
                                        key="cb_memory"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Memory"
                                        name="cb_memory"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="cb_memory"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Memory"
                                          name="cb_memory"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="cb_memory"
                                              name="cb_memory"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="cb_memory"
                                            >
                                              Memory
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "cb_memory",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ]
                              }
                              id="memory-sub-form"
                              key="memory-sub-form"
                              name="memory-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "initialValue": 16,
                                        "isRequired": true,
                                        "label": "Memory Size",
                                        "name": "memory",
                                        "validate": Array [
                                          Object {
                                            "type": "memoryCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "helperText": "Between 1024MB and 0.009765625GB",
                                        "id": "memoryType",
                                        "initialValue": "GB",
                                        "label": "Unit",
                                        "name": "mem_type",
                                        "options": Array [
                                          Object {
                                            "label": "GB",
                                            "value": "GB",
                                          },
                                          Object {
                                            "label": "MB",
                                            "value": "MB",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "memory-sub-form",
                                    "name": "memory-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "initialValue": 16,
                                          "isRequired": true,
                                          "label": "Memory Size",
                                          "name": "memory",
                                          "validate": Array [
                                            Object {
                                              "type": "memoryCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "helperText": "Between 1024MB and 0.009765625GB",
                                          "id": "memoryType",
                                          "initialValue": "GB",
                                          "label": "Unit",
                                          "name": "mem_type",
                                          "options": Array [
                                            Object {
                                              "label": "GB",
                                              "value": "GB",
                                            },
                                            Object {
                                              "label": "MB",
                                              "value": "MB",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "memory-sub-form",
                                      "name": "memory-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "cb_memory",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="cb_memory"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "initialValue": 16,
                                              "isRequired": true,
                                              "label": "Memory Size",
                                              "name": "memory",
                                              "validate": Array [
                                                Object {
                                                  "type": "memoryCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "helperText": "Between 1024MB and 0.009765625GB",
                                              "id": "memoryType",
                                              "initialValue": "GB",
                                              "label": "Unit",
                                              "name": "mem_type",
                                              "options": Array [
                                                Object {
                                                  "label": "GB",
                                                  "value": "GB",
                                                },
                                                Object {
                                                  "label": "MB",
                                                  "value": "MB",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "memory-sub-form",
                                          "name": "memory-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "cb_memory": false,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "text-field",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "initialValue": 16,
                                                "isRequired": true,
                                                "label": "Memory Size",
                                                "name": "memory",
                                                "validate": Array [
                                                  Object {
                                                    "type": "memoryCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "helperText": "Between 1024MB and 0.009765625GB",
                                                "id": "memoryType",
                                                "initialValue": "GB",
                                                "label": "Unit",
                                                "name": "mem_type",
                                                "options": Array [
                                                  Object {
                                                    "label": "GB",
                                                    "value": "GB",
                                                  },
                                                  Object {
                                                    "label": "MB",
                                                    "value": "MB",
                                                  },
                                                ],
                                              },
                                            ],
                                            "id": "memory-sub-form",
                                            "name": "memory-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "cb_memory": false,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "cb_memory",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "initialValue": 16,
                                                  "isRequired": true,
                                                  "label": "Memory Size",
                                                  "name": "memory",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "memoryCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "helperText": "Between 1024MB and 0.009765625GB",
                                                  "id": "memoryType",
                                                  "initialValue": "GB",
                                                  "label": "Unit",
                                                  "name": "mem_type",
                                                  "options": Array [
                                                    Object {
                                                      "label": "GB",
                                                      "value": "GB",
                                                    },
                                                    Object {
                                                      "label": "MB",
                                                      "value": "MB",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "memory-sub-form",
                                              "name": "memory-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "cb_memory": false,
                                            }
                                          }
                                        />
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="processor"
                              label="Processor"
                              name="processor"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Processor",
                                    "name": "processor",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Processor"
                                    name="processor"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="processor"
                                        key="processor"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Processor"
                                        name="processor"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="processor"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Processor"
                                          name="processor"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="processor"
                                              name="processor"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="processor"
                                            >
                                              Processor
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "processor",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 2,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ]
                              }
                              id="processor-sub-form"
                              key="processor-sub-form"
                              name="processor-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "processor",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "socket",
                                        "label": "Sockets",
                                        "name": "socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "socket",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "cores",
                                        "label": "Cores Per Socket",
                                        "name": "cores_per_socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "cores",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "text-field",
                                        "id": "total_cpus",
                                        "initialValue": 2,
                                        "isReadOnly": true,
                                        "label": "Total Processors",
                                        "name": "total_cpus",
                                        "type": "number",
                                      },
                                    ],
                                    "id": "processor-sub-form",
                                    "name": "processor-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "processor",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "socket",
                                          "label": "Sockets",
                                          "name": "socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "socket",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "cores",
                                          "label": "Cores Per Socket",
                                          "name": "cores_per_socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "cores",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "text-field",
                                          "id": "total_cpus",
                                          "initialValue": 2,
                                          "isReadOnly": true,
                                          "label": "Total Processors",
                                          "name": "total_cpus",
                                          "type": "number",
                                        },
                                      ],
                                      "id": "processor-sub-form",
                                      "name": "processor-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "processor",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="processor"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "processor",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "socket",
                                              "label": "Sockets",
                                              "name": "socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "socket",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "cores",
                                              "label": "Cores Per Socket",
                                              "name": "cores_per_socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "cores",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "text-field",
                                              "id": "total_cpus",
                                              "initialValue": 2,
                                              "isReadOnly": true,
                                              "label": "Total Processors",
                                              "name": "total_cpus",
                                              "type": "number",
                                            },
                                          ],
                                          "id": "processor-sub-form",
                                          "name": "processor-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "processor": false,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "processor",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "socket",
                                                "label": "Sockets",
                                                "name": "socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "socket",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "cores",
                                                "label": "Cores Per Socket",
                                                "name": "cores_per_socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "cores",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "text-field",
                                                "id": "total_cpus",
                                                "initialValue": 2,
                                                "isReadOnly": true,
                                                "label": "Total Processors",
                                                "name": "total_cpus",
                                                "type": "number",
                                              },
                                            ],
                                            "id": "processor-sub-form",
                                            "name": "processor-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "processor": false,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "processor",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "socket",
                                                  "label": "Sockets",
                                                  "name": "socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "socket",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "cores",
                                                  "label": "Cores Per Socket",
                                                  "name": "cores_per_socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "cores",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "text-field",
                                                  "id": "total_cpus",
                                                  "initialValue": 2,
                                                  "isReadOnly": true,
                                                  "label": "Total Processors",
                                                  "name": "total_cpus",
                                                  "type": "number",
                                                },
                                              ],
                                              "id": "processor-sub-form",
                                              "name": "processor-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "processor": false,
                                            }
                                          }
                                        />
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              addButtonLabel="Add Disk"
                              buttonClick={[Function]}
                              component="reconfigure-table"
                              formType="disk"
                              headers={
                                Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Type",
                                    "key": "type",
                                  },
                                  Object {
                                    "header": "Size",
                                    "key": "size",
                                  },
                                  Object {
                                    "header": "Unit",
                                    "key": "unit",
                                  },
                                  Object {
                                    "header": "Mode",
                                    "key": "mode",
                                  },
                                  Object {
                                    "header": "Controller Type",
                                    "key": "controller",
                                  },
                                  Object {
                                    "header": "Dependent",
                                    "key": "dependent",
                                  },
                                  Object {
                                    "header": "Delete Backing",
                                    "key": "backing",
                                  },
                                  Object {
                                    "header": "Bootable",
                                    "key": "bootable",
                                  },
                                  Object {
                                    "header": "Resize",
                                    "key": "resize",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ]
                              }
                              key="disk"
                              label="Disks"
                              name="disk"
                              onCellClick={[Function]}
                              rows={
                                Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Delete",
                                      "callback": "deleteDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Delete",
                                      "title": "Delete",
                                    },
                                    "backing": Object {
                                      "disabled": false,
                                      "is_toggle": true,
                                      "labelA": "Yes",
                                      "labelB": "No",
                                      "labelText": "Delete Backing",
                                      "ontoggle": [Function],
                                      "toggled": false,
                                    },
                                    "bootable": "No",
                                    "controller": "None",
                                    "dependent": "No",
                                    "id": "disk0",
                                    "mode": "persistent",
                                    "name": "disk test 2",
                                    "resize": Object {
                                      "alt": "Resize",
                                      "callback": "resizeDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Resize",
                                      "title": "Resize",
                                    },
                                    "size": "16",
                                    "type": "thin",
                                    "unit": "GB",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "addButtonLabel": "Add Disk",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "disk",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Type",
                                        "key": "type",
                                      },
                                      Object {
                                        "header": "Size",
                                        "key": "size",
                                      },
                                      Object {
                                        "header": "Unit",
                                        "key": "unit",
                                      },
                                      Object {
                                        "header": "Mode",
                                        "key": "mode",
                                      },
                                      Object {
                                        "header": "Controller Type",
                                        "key": "controller",
                                      },
                                      Object {
                                        "header": "Dependent",
                                        "key": "dependent",
                                      },
                                      Object {
                                        "header": "Delete Backing",
                                        "key": "backing",
                                      },
                                      Object {
                                        "header": "Bootable",
                                        "key": "bootable",
                                      },
                                      Object {
                                        "header": "Resize",
                                        "key": "resize",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Disks",
                                    "name": "disk",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Delete",
                                          "callback": "deleteDisk",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Delete",
                                          "title": "Delete",
                                        },
                                        "backing": Object {
                                          "disabled": false,
                                          "is_toggle": true,
                                          "labelA": "Yes",
                                          "labelB": "No",
                                          "labelText": "Delete Backing",
                                          "ontoggle": [Function],
                                          "toggled": false,
                                        },
                                        "bootable": "No",
                                        "controller": "None",
                                        "dependent": "No",
                                        "id": "disk0",
                                        "mode": "persistent",
                                        "name": "disk test 2",
                                        "resize": Object {
                                          "alt": "Resize",
                                          "callback": "resizeDisk",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Resize",
                                          "title": "Resize",
                                        },
                                        "size": "16",
                                        "type": "thin",
                                        "unit": "GB",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <ReconfigureTable
                                    addButtonLabel="Add Disk"
                                    buttonClick={[Function]}
                                    component="reconfigure-table"
                                    formType="disk"
                                    headers={
                                      Array [
                                        Object {
                                          "header": "Name",
                                          "key": "name",
                                        },
                                        Object {
                                          "header": "Type",
                                          "key": "type",
                                        },
                                        Object {
                                          "header": "Size",
                                          "key": "size",
                                        },
                                        Object {
                                          "header": "Unit",
                                          "key": "unit",
                                        },
                                        Object {
                                          "header": "Mode",
                                          "key": "mode",
                                        },
                                        Object {
                                          "header": "Controller Type",
                                          "key": "controller",
                                        },
                                        Object {
                                          "header": "Dependent",
                                          "key": "dependent",
                                        },
                                        Object {
                                          "header": "Delete Backing",
                                          "key": "backing",
                                        },
                                        Object {
                                          "header": "Bootable",
                                          "key": "bootable",
                                        },
                                        Object {
                                          "header": "Resize",
                                          "key": "resize",
                                        },
                                        Object {
                                          "contentButton": true,
                                          "header": "Action",
                                          "key": "action",
                                        },
                                      ]
                                    }
                                    label="Disks"
                                    name="disk"
                                    onCellClick={[Function]}
                                    rows={
                                      Array [
                                        Object {
                                          "action": Object {
                                            "alt": "Delete",
                                            "callback": "deleteDisk",
                                            "disabled": false,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Delete",
                                            "title": "Delete",
                                          },
                                          "backing": Object {
                                            "disabled": false,
                                            "is_toggle": true,
                                            "labelA": "Yes",
                                            "labelB": "No",
                                            "labelText": "Delete Backing",
                                            "ontoggle": [Function],
                                            "toggled": false,
                                          },
                                          "bootable": "No",
                                          "controller": "None",
                                          "dependent": "No",
                                          "id": "disk0",
                                          "mode": "persistent",
                                          "name": "disk test 2",
                                          "resize": Object {
                                            "alt": "Resize",
                                            "callback": "resizeDisk",
                                            "disabled": false,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Resize",
                                            "title": "Resize",
                                          },
                                          "size": "16",
                                          "type": "thin",
                                          "unit": "GB",
                                        },
                                      ]
                                    }
                                  >
                                    <div
                                      className="disk-table reconfigure-form-table"
                                    >
                                      <div
                                        className="form-section-title"
                                      >
                                        <h3>
                                          Disks
                                        </h3>
                                        <Button
                                          className="disk-add bx--btn bx--btn--primary pull-right reconfigure-add-button"
                                          kind="primary"
                                          onClick={[Function]}
                                          type="button"
                                          variant="contained"
                                        >
                                          <button
                                            aria-describedby={null}
                                            aria-pressed={null}
                                            className="disk-add bx--btn bx--btn--primary pull-right reconfigure-add-button bx--btn bx--btn--primary"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            tabIndex={0}
                                            type="button"
                                            variant="contained"
                                          >
                                            Add Disk
                                          </button>
                                        </Button>
                                      </div>
                                      <MiqDataTable
                                        gridChecks={Array []}
                                        headers={
                                          Array [
                                            Object {
                                              "header": "Name",
                                              "key": "name",
                                            },
                                            Object {
                                              "header": "Type",
                                              "key": "type",
                                            },
                                            Object {
                                              "header": "Size",
                                              "key": "size",
                                            },
                                            Object {
                                              "header": "Unit",
                                              "key": "unit",
                                            },
                                            Object {
                                              "header": "Mode",
                                              "key": "mode",
                                            },
                                            Object {
                                              "header": "Controller Type",
                                              "key": "controller",
                                            },
                                            Object {
                                              "header": "Dependent",
                                              "key": "dependent",
                                            },
                                            Object {
                                              "header": "Delete Backing",
                                              "key": "backing",
                                            },
                                            Object {
                                              "header": "Bootable",
                                              "key": "bootable",
                                            },
                                            Object {
                                              "header": "Resize",
                                              "key": "resize",
                                            },
                                            Object {
                                              "contentButton": true,
                                              "header": "Action",
                                              "key": "action",
                                            },
                                          ]
                                        }
                                        mode="disk-table-list"
                                        onCellClick={[Function]}
                                        pageOptions={
                                          Object {
                                            "page": 1,
                                            "pageSize": 20,
                                            "pageSizes": Array [
                                              5,
                                              10,
                                              20,
                                              50,
                                              100,
                                              200,
                                            ],
                                            "totalItems": 10,
                                          }
                                        }
                                        rowCheckBox={false}
                                        rows={
                                          Array [
                                            Object {
                                              "action": Object {
                                                "alt": "Delete",
                                                "callback": "deleteDisk",
                                                "disabled": false,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Delete",
                                                "title": "Delete",
                                              },
                                              "backing": Object {
                                                "disabled": false,
                                                "is_toggle": true,
                                                "labelA": "Yes",
                                                "labelB": "No",
                                                "labelText": "Delete Backing",
                                                "ontoggle": [Function],
                                                "toggled": false,
                                              },
                                              "bootable": "No",
                                              "controller": "None",
                                              "dependent": "No",
                                              "id": "disk0",
                                              "mode": "persistent",
                                              "name": "disk test 2",
                                              "resize": Object {
                                                "alt": "Resize",
                                                "callback": "resizeDisk",
                                                "disabled": false,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Resize",
                                                "title": "Resize",
                                              },
                                              "size": "16",
                                              "type": "thin",
                                              "unit": "GB",
                                            },
                                          ]
                                        }
                                        showPagination={false}
                                        size="lg"
                                        sortable={false}
                                        stickyHeader={false}
                                        truncateText={true}
                                      >
                                        <div
                                          className="miq-data-table disk-table-list"
                                        >
                                          <DataTable
                                            filterRows={[Function]}
                                            headers={
                                              Array [
                                                Object {
                                                  "header": "Name",
                                                  "key": "name",
                                                },
                                                Object {
                                                  "header": "Type",
                                                  "key": "type",
                                                },
                                                Object {
                                                  "header": "Size",
                                                  "key": "size",
                                                },
                                                Object {
                                                  "header": "Unit",
                                                  "key": "unit",
                                                },
                                                Object {
                                                  "header": "Mode",
                                                  "key": "mode",
                                                },
                                                Object {
                                                  "header": "Controller Type",
                                                  "key": "controller",
                                                },
                                                Object {
                                                  "header": "Dependent",
                                                  "key": "dependent",
                                                },
                                                Object {
                                                  "header": "Delete Backing",
                                                  "key": "backing",
                                                },
                                                Object {
                                                  "header": "Bootable",
                                                  "key": "bootable",
                                                },
                                                Object {
                                                  "header": "Resize",
                                                  "key": "resize",
                                                },
                                                Object {
                                                  "contentButton": true,
                                                  "header": "Action",
                                                  "key": "action",
                                                },
                                              ]
                                            }
                                            isSortable={false}
                                            locale="en"
                                            overflowMenuOnHover={true}
                                            rows={
                                              Array [
                                                Object {
                                                  "action": Object {
                                                    "alt": "Delete",
                                                    "callback": "deleteDisk",
                                                    "disabled": false,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Delete",
                                                    "title": "Delete",
                                                  },
                                                  "backing": Object {
                                                    "disabled": false,
                                                    "is_toggle": true,
                                                    "labelA": "Yes",
                                                    "labelB": "No",
                                                    "labelText": "Delete Backing",
                                                    "ontoggle": [Function],
                                                    "toggled": false,
                                                  },
                                                  "bootable": "No",
                                                  "controller": "None",
                                                  "dependent": "No",
                                                  "id": "disk0",
                                                  "mode": "persistent",
                                                  "name": "disk test 2",
                                                  "resize": Object {
                                                    "alt": "Resize",
                                                    "callback": "resizeDisk",
                                                    "disabled": false,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Resize",
                                                    "title": "Resize",
                                                  },
                                                  "size": "16",
                                                  "type": "thin",
                                                  "unit": "GB",
                                                },
                                              ]
                                            }
                                            size="lg"
                                            sortDirection="ASC"
                                            sortRow={[Function]}
                                            stickyHeader={false}
                                            translateWithId={[Function]}
                                          >
                                            <Table
                                              isSortable={false}
                                              overflowMenuOnHover={true}
                                              size="lg"
                                              stickyHeader={false}
                                            >
                                              <div
                                                className="bx--data-table-content"
                                              >
                                                <table
                                                  className="bx--data-table bx--data-table--lg bx--data-table--no-border"
                                                >
                                                  <TableHead>
                                                    <thead>
                                                      <TableRow>
                                                        <tr>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="name"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-236"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Name header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-236"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Name
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="type"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-237"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Type header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-237"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Type
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="size"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-238"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Size header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-238"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Size
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="unit"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-239"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Unit header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-239"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Unit
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="mode"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-240"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Mode header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-240"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Mode
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="controller"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-241"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Controller Type header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-241"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Controller Type
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="dependent"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-242"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Dependent header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-242"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Dependent
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="backing"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-243"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Delete Backing header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-243"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Delete Backing
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="bootable"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-244"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Bootable header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-244"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Bootable
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="resize"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-245"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Resize header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-245"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Resize
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header header-button"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="action"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header header-button"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-246"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Action header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-246"
                                                                className="miq-data-table-header header-button bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Action
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                        </tr>
                                                      </TableRow>
                                                    </thead>
                                                  </TableHead>
                                                  <TableBody
                                                    aria-live="polite"
                                                  >
                                                    <tbody
                                                      aria-live="polite"
                                                    >
                                                      <TableRow
                                                        ariaLabel="Expand current row"
                                                        className=""
                                                        disabled={false}
                                                        isExpanded={false}
                                                        isSelected={false}
                                                        key="disk0"
                                                        onExpand={[Function]}
                                                        onKeyPress={[Function]}
                                                        tabIndex="0"
                                                        title=""
                                                      >
                                                        <tr
                                                          disabled={false}
                                                          onKeyPress={[Function]}
                                                          tabIndex="0"
                                                          title=""
                                                        >
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "disk test 2",
                                                                "errors": null,
                                                                "id": "disk0:name",
                                                                "info": Object {
                                                                  "header": "name",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "disk test 2",
                                                              }
                                                            }
                                                            key="0-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:name"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="disk test 2"
                                                                  >
                                                                    disk test 2
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "thin",
                                                                "errors": null,
                                                                "id": "disk0:type",
                                                                "info": Object {
                                                                  "header": "type",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "thin",
                                                              }
                                                            }
                                                            key="1-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:type"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="thin"
                                                                  >
                                                                    thin
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "16",
                                                                "errors": null,
                                                                "id": "disk0:size",
                                                                "info": Object {
                                                                  "header": "size",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "16",
                                                              }
                                                            }
                                                            key="2-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:size"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="16"
                                                                  >
                                                                    16
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "GB",
                                                                "errors": null,
                                                                "id": "disk0:unit",
                                                                "info": Object {
                                                                  "header": "unit",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "GB",
                                                              }
                                                            }
                                                            key="3-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:unit"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="GB"
                                                                  >
                                                                    GB
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "persistent",
                                                                "errors": null,
                                                                "id": "disk0:mode",
                                                                "info": Object {
                                                                  "header": "mode",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "persistent",
                                                              }
                                                            }
                                                            key="4-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:mode"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="persistent"
                                                                  >
                                                                    persistent
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "None",
                                                                "errors": null,
                                                                "id": "disk0:controller",
                                                                "info": Object {
                                                                  "header": "controller",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "None",
                                                              }
                                                            }
                                                            key="5-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:controller"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="None"
                                                                  >
                                                                    None
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "No",
                                                                "errors": null,
                                                                "id": "disk0:dependent",
                                                                "info": Object {
                                                                  "header": "dependent",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "No",
                                                              }
                                                            }
                                                            key="6-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:dependent"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="No"
                                                                  >
                                                                    No
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "disabled": false,
                                                                  "is_toggle": true,
                                                                  "labelA": "Yes",
                                                                  "labelB": "No",
                                                                  "labelText": "Delete Backing",
                                                                  "ontoggle": [Function],
                                                                  "toggled": false,
                                                                },
                                                                "errors": null,
                                                                "id": "disk0:backing",
                                                                "info": Object {
                                                                  "header": "backing",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            key="7-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:backing"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <FeatureToggle(Toggle)
                                                                    disabled={false}
                                                                    id="disk0:backing"
                                                                    labelA="Yes"
                                                                    labelB="No"
                                                                    labelText={
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title=""
                                                                      >
                                                                        
                                                                      </span>
                                                                    }
                                                                    onToggle={[Function]}
                                                                    tabIndex={0}
                                                                    toggled={false}
                                                                  >
                                                                    <Toggle
                                                                      aria-label="Toggle"
                                                                      defaultToggled={false}
                                                                      disabled={false}
                                                                      id="disk0:backing"
                                                                      labelA="Yes"
                                                                      labelB="No"
                                                                      labelText={
                                                                        <span
                                                                          className="bx--front-line"
                                                                          title=""
                                                                        >
                                                                          
                                                                        </span>
                                                                      }
                                                                      onToggle={[Function]}
                                                                      tabIndex={0}
                                                                      toggled={false}
                                                                    >
                                                                      <div
                                                                        className="bx--form-item"
                                                                      >
                                                                        <input
                                                                          aria-label={null}
                                                                          checked={false}
                                                                          className="bx--toggle-input"
                                                                          disabled={false}
                                                                          id="disk0:backing"
                                                                          onChange={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          tabIndex={0}
                                                                          type="checkbox"
                                                                        />
                                                                        <label
                                                                          aria-label="Toggle"
                                                                          className="bx--toggle-input__label"
                                                                          htmlFor="disk0:backing"
                                                                        >
                                                                          <span
                                                                            className="bx--front-line"
                                                                            title=""
                                                                          />
                                                                          <span
                                                                            className="bx--toggle__switch"
                                                                          >
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="bx--toggle__text--off"
                                                                            >
                                                                              Yes
                                                                            </span>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="bx--toggle__text--on"
                                                                            >
                                                                              No
                                                                            </span>
                                                                          </span>
                                                                        </label>
                                                                      </div>
                                                                    </Toggle>
                                                                  </FeatureToggle(Toggle)>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "No",
                                                                "errors": null,
                                                                "id": "disk0:bootable",
                                                                "info": Object {
                                                                  "header": "bootable",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "No",
                                                              }
                                                            }
                                                            key="8-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:bootable"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="No"
                                                                  >
                                                                    No
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Resize",
                                                                  "callback": "resizeDisk",
                                                                  "disabled": false,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Resize",
                                                                  "title": "Resize",
                                                                },
                                                                "errors": null,
                                                                "id": "disk0:resize",
                                                                "info": Object {
                                                                  "header": "resize",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Resize",
                                                              }
                                                            }
                                                            key="9-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:resize"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={false}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Resize"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Resize"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Resize"
                                                                      >
                                                                        Resize
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Delete",
                                                                  "callback": "deleteDisk",
                                                                  "disabled": false,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Delete",
                                                                  "title": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "disk0:action",
                                                                "info": Object {
                                                                  "header": "action",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              }
                                                            }
                                                            key="10-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:action"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={false}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Delete"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Delete"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Delete"
                                                                      >
                                                                        Delete
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                        </tr>
                                                      </TableRow>
                                                    </tbody>
                                                  </TableBody>
                                                </table>
                                              </div>
                                            </Table>
                                          </DataTable>
                                        </div>
                                      </MiqDataTable>
                                    </div>
                                  </ReconfigureTable>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              addButtonLabel="Add Network Adapter"
                              buttonClick={[Function]}
                              component="reconfigure-table"
                              formType="network"
                              headers={
                                Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "MAC address",
                                    "key": "mac",
                                  },
                                  Object {
                                    "header": "vLan",
                                    "key": "vlan",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Edit",
                                    "key": "edit",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ]
                              }
                              key="network"
                              label="Network Adapters"
                              name="network"
                              onCellClick={[Function]}
                              rows={Array []}
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "addButtonLabel": "Add Network Adapter",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "network",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "MAC address",
                                        "key": "mac",
                                      },
                                      Object {
                                        "header": "vLan",
                                        "key": "vlan",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Edit",
                                        "key": "edit",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Network Adapters",
                                    "name": "network",
                                    "onCellClick": [Function],
                                    "rows": Array [],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <ReconfigureTable
                                    addButtonLabel="Add Network Adapter"
                                    buttonClick={[Function]}
                                    component="reconfigure-table"
                                    formType="network"
                                    headers={
                                      Array [
                                        Object {
                                          "header": "Name",
                                          "key": "name",
                                        },
                                        Object {
                                          "header": "MAC address",
                                          "key": "mac",
                                        },
                                        Object {
                                          "header": "vLan",
                                          "key": "vlan",
                                        },
                                        Object {
                                          "contentButton": true,
                                          "header": "Edit",
                                          "key": "edit",
                                        },
                                        Object {
                                          "contentButton": true,
                                          "header": "Action",
                                          "key": "action",
                                        },
                                      ]
                                    }
                                    label="Network Adapters"
                                    name="network"
                                    onCellClick={[Function]}
                                    rows={Array []}
                                  >
                                    <div
                                      className="network-table reconfigure-form-table"
                                    >
                                      <div
                                        className="form-section-title"
                                      >
                                        <h3>
                                          Network Adapters
                                        </h3>
                                        <Button
                                          className="network-add bx--btn bx--btn--primary pull-right reconfigure-add-button"
                                          kind="primary"
                                          onClick={[Function]}
                                          type="button"
                                          variant="contained"
                                        >
                                          <button
                                            aria-describedby={null}
                                            aria-pressed={null}
                                            className="network-add bx--btn bx--btn--primary pull-right reconfigure-add-button bx--btn bx--btn--primary"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            tabIndex={0}
                                            type="button"
                                            variant="contained"
                                          >
                                            Add Network Adapter
                                          </button>
                                        </Button>
                                      </div>
                                      <MiqDataTable
                                        gridChecks={Array []}
                                        headers={
                                          Array [
                                            Object {
                                              "header": "Name",
                                              "key": "name",
                                            },
                                            Object {
                                              "header": "MAC address",
                                              "key": "mac",
                                            },
                                            Object {
                                              "header": "vLan",
                                              "key": "vlan",
                                            },
                                            Object {
                                              "contentButton": true,
                                              "header": "Edit",
                                              "key": "edit",
                                            },
                                            Object {
                                              "contentButton": true,
                                              "header": "Action",
                                              "key": "action",
                                            },
                                          ]
                                        }
                                        mode="network-table-list"
                                        onCellClick={[Function]}
                                        pageOptions={
                                          Object {
                                            "page": 1,
                                            "pageSize": 20,
                                            "pageSizes": Array [
                                              5,
                                              10,
                                              20,
                                              50,
                                              100,
                                              200,
                                            ],
                                            "totalItems": 10,
                                          }
                                        }
                                        rowCheckBox={false}
                                        rows={Array []}
                                        showPagination={false}
                                        size="lg"
                                        sortable={false}
                                        stickyHeader={false}
                                        truncateText={true}
                                      >
                                        <div
                                          className="miq-data-table network-table-list"
                                        >
                                          <DataTable
                                            filterRows={[Function]}
                                            headers={
                                              Array [
                                                Object {
                                                  "header": "Name",
                                                  "key": "name",
                                                },
                                                Object {
                                                  "header": "MAC address",
                                                  "key": "mac",
                                                },
                                                Object {
                                                  "header": "vLan",
                                                  "key": "vlan",
                                                },
                                                Object {
                                                  "contentButton": true,
                                                  "header": "Edit",
                                                  "key": "edit",
                                                },
                                                Object {
                                                  "contentButton": true,
                                                  "header": "Action",
                                                  "key": "action",
                                                },
                                              ]
                                            }
                                            isSortable={false}
                                            locale="en"
                                            overflowMenuOnHover={true}
                                            rows={Array []}
                                            size="lg"
                                            sortDirection="ASC"
                                            sortRow={[Function]}
                                            stickyHeader={false}
                                            translateWithId={[Function]}
                                          >
                                            <Table
                                              isSortable={false}
                                              overflowMenuOnHover={true}
                                              size="lg"
                                              stickyHeader={false}
                                            >
                                              <div
                                                className="bx--data-table-content"
                                              >
                                                <table
                                                  className="bx--data-table bx--data-table--lg bx--data-table--no-border"
                                                >
                                                  <TableHead>
                                                    <thead>
                                                      <TableRow>
                                                        <tr>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="name"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-250"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Name header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-250"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Name
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="mac"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-251"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by MAC address header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-251"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    MAC address
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="vlan"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-252"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by vLan header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-252"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    vLan
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header header-button"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="edit"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header header-button"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-253"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Edit header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-253"
                                                                className="miq-data-table-header header-button bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Edit
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header header-button"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="action"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header header-button"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-254"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Action header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-254"
                                                                className="miq-data-table-header header-button bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Action
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                        </tr>
                                                      </TableRow>
                                                    </thead>
                                                  </TableHead>
                                                  <TableBody
                                                    aria-live="polite"
                                                  >
                                                    <tbody
                                                      aria-live="polite"
                                                    />
                                                  </TableBody>
                                                </table>
                                              </div>
                                            </Table>
                                          </DataTable>
                                        </div>
                                      </MiqDataTable>
                                    </div>
                                  </ReconfigureTable>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              addButton={false}
                              component="reconfigure-table"
                              formType="drive"
                              headers={
                                Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Host File",
                                    "key": "hostFile",
                                  },
                                  Object {
                                    "header": "Disconnect",
                                    "key": "disconnect",
                                  },
                                  Object {
                                    "header": "Actions",
                                    "key": "action",
                                  },
                                ]
                              }
                              hideField={false}
                              key="drive"
                              label="CD/DVD Drives"
                              name="drive"
                              onCellClick={[Function]}
                              rows={
                                Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Connect",
                                      "callback": "connectDrives",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Connect",
                                      "title": "Connect",
                                    },
                                    "disconnect": Object {
                                      "alt": "Cancel Disconnect",
                                      "callback": "cancelDisconnectDrives",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Cancel Disconnect",
                                      "title": "Cancel Disconnect",
                                    },
                                    "hostFile": "",
                                    "id": "drive0",
                                    "name": "CD/DVD drive 1",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "addButton": false,
                                    "component": "reconfigure-table",
                                    "formType": "drive",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Host File",
                                        "key": "hostFile",
                                      },
                                      Object {
                                        "header": "Disconnect",
                                        "key": "disconnect",
                                      },
                                      Object {
                                        "header": "Actions",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "CD/DVD Drives",
                                    "name": "drive",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Connect",
                                          "callback": "connectDrives",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Connect",
                                          "title": "Connect",
                                        },
                                        "disconnect": Object {
                                          "alt": "Cancel Disconnect",
                                          "callback": "cancelDisconnectDrives",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Cancel Disconnect",
                                          "title": "Cancel Disconnect",
                                        },
                                        "hostFile": "",
                                        "id": "drive0",
                                        "name": "CD/DVD drive 1",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <ReconfigureTable
                                    addButton={false}
                                    addButtonLabel=""
                                    component="reconfigure-table"
                                    formType="drive"
                                    headers={
                                      Array [
                                        Object {
                                          "header": "Name",
                                          "key": "name",
                                        },
                                        Object {
                                          "header": "Host File",
                                          "key": "hostFile",
                                        },
                                        Object {
                                          "header": "Disconnect",
                                          "key": "disconnect",
                                        },
                                        Object {
                                          "header": "Actions",
                                          "key": "action",
                                        },
                                      ]
                                    }
                                    label="CD/DVD Drives"
                                    name="drive"
                                    onCellClick={[Function]}
                                    rows={
                                      Array [
                                        Object {
                                          "action": Object {
                                            "alt": "Connect",
                                            "callback": "connectDrives",
                                            "disabled": false,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Connect",
                                            "title": "Connect",
                                          },
                                          "disconnect": Object {
                                            "alt": "Cancel Disconnect",
                                            "callback": "cancelDisconnectDrives",
                                            "disabled": false,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Cancel Disconnect",
                                            "title": "Cancel Disconnect",
                                          },
                                          "hostFile": "",
                                          "id": "drive0",
                                          "name": "CD/DVD drive 1",
                                        },
                                      ]
                                    }
                                  >
                                    <div
                                      className="drive-table reconfigure-form-table"
                                    >
                                      <div
                                        className="form-section-title"
                                      >
                                        <h3>
                                          CD/DVD Drives
                                        </h3>
                                      </div>
                                      <MiqDataTable
                                        gridChecks={Array []}
                                        headers={
                                          Array [
                                            Object {
                                              "header": "Name",
                                              "key": "name",
                                            },
                                            Object {
                                              "header": "Host File",
                                              "key": "hostFile",
                                            },
                                            Object {
                                              "header": "Disconnect",
                                              "key": "disconnect",
                                            },
                                            Object {
                                              "header": "Actions",
                                              "key": "action",
                                            },
                                          ]
                                        }
                                        mode="drive-table-list"
                                        onCellClick={[Function]}
                                        pageOptions={
                                          Object {
                                            "page": 1,
                                            "pageSize": 20,
                                            "pageSizes": Array [
                                              5,
                                              10,
                                              20,
                                              50,
                                              100,
                                              200,
                                            ],
                                            "totalItems": 10,
                                          }
                                        }
                                        rowCheckBox={false}
                                        rows={
                                          Array [
                                            Object {
                                              "action": Object {
                                                "alt": "Connect",
                                                "callback": "connectDrives",
                                                "disabled": false,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Connect",
                                                "title": "Connect",
                                              },
                                              "disconnect": Object {
                                                "alt": "Cancel Disconnect",
                                                "callback": "cancelDisconnectDrives",
                                                "disabled": false,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Cancel Disconnect",
                                                "title": "Cancel Disconnect",
                                              },
                                              "hostFile": "",
                                              "id": "drive0",
                                              "name": "CD/DVD drive 1",
                                            },
                                          ]
                                        }
                                        showPagination={false}
                                        size="lg"
                                        sortable={false}
                                        stickyHeader={false}
                                        truncateText={true}
                                      >
                                        <div
                                          className="miq-data-table drive-table-list"
                                        >
                                          <DataTable
                                            filterRows={[Function]}
                                            headers={
                                              Array [
                                                Object {
                                                  "header": "Name",
                                                  "key": "name",
                                                },
                                                Object {
                                                  "header": "Host File",
                                                  "key": "hostFile",
                                                },
                                                Object {
                                                  "header": "Disconnect",
                                                  "key": "disconnect",
                                                },
                                                Object {
                                                  "header": "Actions",
                                                  "key": "action",
                                                },
                                              ]
                                            }
                                            isSortable={false}
                                            locale="en"
                                            overflowMenuOnHover={true}
                                            rows={
                                              Array [
                                                Object {
                                                  "action": Object {
                                                    "alt": "Connect",
                                                    "callback": "connectDrives",
                                                    "disabled": false,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Connect",
                                                    "title": "Connect",
                                                  },
                                                  "disconnect": Object {
                                                    "alt": "Cancel Disconnect",
                                                    "callback": "cancelDisconnectDrives",
                                                    "disabled": false,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Cancel Disconnect",
                                                    "title": "Cancel Disconnect",
                                                  },
                                                  "hostFile": "",
                                                  "id": "drive0",
                                                  "name": "CD/DVD drive 1",
                                                },
                                              ]
                                            }
                                            size="lg"
                                            sortDirection="ASC"
                                            sortRow={[Function]}
                                            stickyHeader={false}
                                            translateWithId={[Function]}
                                          >
                                            <Table
                                              isSortable={false}
                                              overflowMenuOnHover={true}
                                              size="lg"
                                              stickyHeader={false}
                                            >
                                              <div
                                                className="bx--data-table-content"
                                              >
                                                <table
                                                  className="bx--data-table bx--data-table--lg bx--data-table--no-border"
                                                >
                                                  <TableHead>
                                                    <thead>
                                                      <TableRow>
                                                        <tr>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="name"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-255"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Name header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-255"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Name
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="hostFile"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-256"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Host File header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-256"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Host File
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="disconnect"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-257"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Disconnect header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-257"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Disconnect
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="action"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-258"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Actions header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-258"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Actions
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                        </tr>
                                                      </TableRow>
                                                    </thead>
                                                  </TableHead>
                                                  <TableBody
                                                    aria-live="polite"
                                                  >
                                                    <tbody
                                                      aria-live="polite"
                                                    >
                                                      <TableRow
                                                        ariaLabel="Expand current row"
                                                        className=""
                                                        disabled={false}
                                                        isExpanded={false}
                                                        isSelected={false}
                                                        key="drive0"
                                                        onExpand={[Function]}
                                                        onKeyPress={[Function]}
                                                        tabIndex="0"
                                                        title=""
                                                      >
                                                        <tr
                                                          disabled={false}
                                                          onKeyPress={[Function]}
                                                          tabIndex="0"
                                                          title=""
                                                        >
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "CD/DVD drive 1",
                                                                "errors": null,
                                                                "id": "drive0:name",
                                                                "info": Object {
                                                                  "header": "name",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "CD/DVD drive 1",
                                                              }
                                                            }
                                                            key="0-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "CD/DVD drive 1",
                                                                    "errors": null,
                                                                    "id": "drive0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "CD/DVD drive 1",
                                                                  },
                                                                  Object {
                                                                    "data": "",
                                                                    "errors": null,
                                                                    "id": "drive0:hostFile",
                                                                    "info": Object {
                                                                      "header": "hostFile",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Disconnect",
                                                                      "callback": "cancelDisconnectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Disconnect",
                                                                      "title": "Cancel Disconnect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:disconnect",
                                                                    "info": Object {
                                                                      "header": "disconnect",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Disconnect",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Connect",
                                                                      "callback": "connectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Connect",
                                                                      "title": "Connect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Connect",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "drive0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="drive0:name"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="CD/DVD drive 1"
                                                                  >
                                                                    CD/DVD drive 1
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "",
                                                                "errors": null,
                                                                "id": "drive0:hostFile",
                                                                "info": Object {
                                                                  "header": "hostFile",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            key="1-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "CD/DVD drive 1",
                                                                    "errors": null,
                                                                    "id": "drive0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "CD/DVD drive 1",
                                                                  },
                                                                  Object {
                                                                    "data": "",
                                                                    "errors": null,
                                                                    "id": "drive0:hostFile",
                                                                    "info": Object {
                                                                      "header": "hostFile",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Disconnect",
                                                                      "callback": "cancelDisconnectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Disconnect",
                                                                      "title": "Cancel Disconnect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:disconnect",
                                                                    "info": Object {
                                                                      "header": "disconnect",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Disconnect",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Connect",
                                                                      "callback": "connectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Connect",
                                                                      "title": "Connect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Connect",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "drive0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="drive0:hostFile"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title=""
                                                                  />
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Cancel Disconnect",
                                                                  "callback": "cancelDisconnectDrives",
                                                                  "disabled": false,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Cancel Disconnect",
                                                                  "title": "Cancel Disconnect",
                                                                },
                                                                "errors": null,
                                                                "id": "drive0:disconnect",
                                                                "info": Object {
                                                                  "header": "disconnect",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Cancel Disconnect",
                                                              }
                                                            }
                                                            key="2-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "CD/DVD drive 1",
                                                                    "errors": null,
                                                                    "id": "drive0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "CD/DVD drive 1",
                                                                  },
                                                                  Object {
                                                                    "data": "",
                                                                    "errors": null,
                                                                    "id": "drive0:hostFile",
                                                                    "info": Object {
                                                                      "header": "hostFile",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Disconnect",
                                                                      "callback": "cancelDisconnectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Disconnect",
                                                                      "title": "Cancel Disconnect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:disconnect",
                                                                    "info": Object {
                                                                      "header": "disconnect",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Disconnect",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Connect",
                                                                      "callback": "connectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Connect",
                                                                      "title": "Connect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Connect",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "drive0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="drive0:disconnect"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={false}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Cancel Disconnect"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Cancel Disconnect"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Cancel Disconnect"
                                                                      >
                                                                        Cancel Disconnect
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Connect",
                                                                  "callback": "connectDrives",
                                                                  "disabled": false,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Connect",
                                                                  "title": "Connect",
                                                                },
                                                                "errors": null,
                                                                "id": "drive0:action",
                                                                "info": Object {
                                                                  "header": "action",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Connect",
                                                              }
                                                            }
                                                            key="3-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "CD/DVD drive 1",
                                                                    "errors": null,
                                                                    "id": "drive0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "CD/DVD drive 1",
                                                                  },
                                                                  Object {
                                                                    "data": "",
                                                                    "errors": null,
                                                                    "id": "drive0:hostFile",
                                                                    "info": Object {
                                                                      "header": "hostFile",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Disconnect",
                                                                      "callback": "cancelDisconnectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Disconnect",
                                                                      "title": "Cancel Disconnect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:disconnect",
                                                                    "info": Object {
                                                                      "header": "disconnect",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Disconnect",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Connect",
                                                                      "callback": "connectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Connect",
                                                                      "title": "Connect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Connect",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "drive0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="drive0:action"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={false}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Connect"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Connect"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Connect"
                                                                      >
                                                                        Connect
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                        </tr>
                                                      </TableRow>
                                                    </tbody>
                                                  </TableBody>
                                                </table>
                                              </div>
                                            </Table>
                                          </DataTable>
                                        </div>
                                      </MiqDataTable>
                                    </div>
                                  </ReconfigureTable>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                          </div>
                        </SubForm>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <SingleField
                    component="spy-field"
                    key="spy-field"
                    name="spy-field"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SpyField
                          component="spy-field"
                          name="spy-field"
                        >
                          <FormSpy
                            onChange={[Function]}
                            subscription={
                              Object {
                                "pristine": true,
                                "valid": true,
                              }
                            }
                          />
                        </SpyField>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <div
                    className="bx--btn-set"
                  >
                    <button
                      alt="Save"
                      className="bx--btn bx--btn--primary"
                      disabled={false}
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      alt="Reset"
                      className="bx--btn bx--btn--secondary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      Reset
                    </button>
                    <button
                      alt="Cancel"
                      className="bx--btn bx--btn--secondary"
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              </ReconfigureTemplate>
            </FormTemplate>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </ReconfigureVmForm>
</Provider>
`;

exports[`Reconfigure VM form component should render reconfigure form and show cd rom connect form 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReconfigureVmForm
    memory={
      Object {
        "max": 10,
        "min": 1024,
      }
    }
    options={
      Object {
        "avail_adapter_names": Array [],
        "controller_types": Array [
          "VirtualController",
          "ParaVirtualController",
          "VirtualBusController",
        ],
        "cores_options": Array [
          1,
          2,
          3,
          4,
        ],
        "host_file_options": Array [
          Array [
            "host file test 1.iso",
            "host file test 1.iso,18",
          ],
          Array [
            "host file test 2.iso",
            "host file test 2.iso,18",
          ],
          Array [
            "host file test 3.iso",
            "host file test 3.iso,18",
          ],
        ],
        "socket_options": Array [
          1,
          2,
          3,
          4,
        ],
        "vlan_options": Array [
          "vlan test 0",
          "vlan test 1",
          "vlan test 3",
        ],
      }
    }
    recordId={
      Array [
        12,
      ]
    }
    requestId="new"
    roles={
      Object {
        "allowCdromsChange": true,
        "allowCpuChange": true,
        "allowDiskChange": true,
        "allowDiskSizeChange": true,
        "allowMemoryChange": true,
        "allowNetworkChange": true,
        "isRedhat": true,
        "isVmwareCloud": false,
        "isVmwareInfra": true,
      }
    }
  >
    <Connect(MiqFormRenderer)
      FormTemplate={[Function]}
      clearOnUnmount={true}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "reconfigure-table": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "cb_memory": false,
          "cores_per_socket_count": "1",
          "mem_type": "GB",
          "memory": "2",
          "processor": false,
          "socket_count": "2",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "className": "drive_form",
              "component": "sub-form",
              "fields": Array [
                Array [
                  Object {
                    "autoFocus": true,
                    "component": "text-field",
                    "id": "name",
                    "initialValue": "CD/DVD drive 1",
                    "isReadOnly": true,
                    "label": "Name",
                    "name": "name",
                  },
                  Object {
                    "component": "select",
                    "id": "host_file",
                    "includeEmpty": true,
                    "initialValue": "",
                    "isRequired": true,
                    "label": "Host File",
                    "name": "host_file",
                    "options": Array [
                      Object {
                        "label": "host file test 1.iso",
                        "value": "host file test 1.iso,18",
                      },
                      Object {
                        "label": "host file test 2.iso",
                        "value": "host file test 2.iso,18",
                      },
                      Object {
                        "label": "host file test 3.iso",
                        "value": "host file test 3.iso,18",
                      },
                    ],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "type": "required",
                      },
                    ],
                  },
                ],
              ],
              "name": "BasicInformation",
              "title": "Connect CD/DVD Drives",
            },
          ],
        }
      }
      validatorMapper={
        Object {
          "cpuCheck": [Function],
          "customRequired": [Function],
          "diskMemoryCheck": [Function],
          "memoryCheck": [Function],
        }
      }
    >
      <MiqFormRenderer
        FormTemplate={[Function]}
        buttonsLabels={Object {}}
        canReset={false}
        className="form-react"
        clearOnUnmount={true}
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "reconfigure-table": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "cb_memory": false,
            "cores_per_socket_count": "1",
            "mem_type": "GB",
            "memory": "2",
            "processor": false,
            "socket_count": "2",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "className": "drive_form",
                "component": "sub-form",
                "fields": Array [
                  Array [
                    Object {
                      "autoFocus": true,
                      "component": "text-field",
                      "id": "name",
                      "initialValue": "CD/DVD drive 1",
                      "isReadOnly": true,
                      "label": "Name",
                      "name": "name",
                    },
                    Object {
                      "component": "select",
                      "id": "host_file",
                      "includeEmpty": true,
                      "initialValue": "",
                      "isRequired": true,
                      "label": "Host File",
                      "name": "host_file",
                      "options": Array [
                        Object {
                          "label": "host file test 1.iso",
                          "value": "host file test 1.iso,18",
                        },
                        Object {
                          "label": "host file test 2.iso",
                          "value": "host file test 2.iso,18",
                        },
                        Object {
                          "label": "host file test 3.iso",
                          "value": "host file test 3.iso,18",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                ],
                "name": "BasicInformation",
                "title": "Connect CD/DVD Drives",
              },
            ],
          }
        }
        showFormControls={true}
        validatorMapper={
          Object {
            "cpuCheck": [Function],
            "customRequired": [Function],
            "diskMemoryCheck": [Function],
            "memoryCheck": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={true}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "reconfigure-table": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "cb_memory": false,
              "cores_per_socket_count": "1",
              "mem_type": "GB",
              "memory": "2",
              "processor": false,
              "socket_count": "2",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "className": "drive_form",
                  "component": "sub-form",
                  "fields": Array [
                    Array [
                      Object {
                        "autoFocus": true,
                        "component": "text-field",
                        "id": "name",
                        "initialValue": "CD/DVD drive 1",
                        "isReadOnly": true,
                        "label": "Name",
                        "name": "name",
                      },
                      Object {
                        "component": "select",
                        "id": "host_file",
                        "includeEmpty": true,
                        "initialValue": "",
                        "isRequired": true,
                        "label": "Host File",
                        "name": "host_file",
                        "options": Array [
                          Object {
                            "label": "host file test 1.iso",
                            "value": "host file test 1.iso,18",
                          },
                          Object {
                            "label": "host file test 2.iso",
                            "value": "host file test 2.iso,18",
                          },
                          Object {
                            "label": "host file test 3.iso",
                            "value": "host file test 3.iso,18",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                    ],
                  ],
                  "name": "BasicInformation",
                  "title": "Connect CD/DVD Drives",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validatorMapper={
            Object {
              "cpuCheck": [Function],
              "customRequired": [Function],
              "diskMemoryCheck": [Function],
              "memoryCheck": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "cb_memory": false,
                "cores_per_socket_count": "1",
                "mem_type": "GB",
                "memory": "2",
                "processor": false,
                "socket_count": "2",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <FormTemplate
              formFields={
                Array [
                  <SingleField
                    className="drive_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "autoFocus": true,
                            "component": "text-field",
                            "id": "name",
                            "initialValue": "CD/DVD drive 1",
                            "isReadOnly": true,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "component": "select",
                            "id": "host_file",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isRequired": true,
                            "label": "Host File",
                            "name": "host_file",
                            "options": Array [
                              Object {
                                "label": "host file test 1.iso",
                                "value": "host file test 1.iso,18",
                              },
                              Object {
                                "label": "host file test 2.iso",
                                "value": "host file test 2.iso,18",
                              },
                              Object {
                                "label": "host file test 3.iso",
                                "value": "host file test 3.iso,18",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                        ],
                      ]
                    }
                    name="BasicInformation"
                    title="Connect CD/DVD Drives"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "className": "drive_form",
                      "component": "sub-form",
                      "fields": Array [
                        Array [
                          Object {
                            "autoFocus": true,
                            "component": "text-field",
                            "id": "name",
                            "initialValue": "CD/DVD drive 1",
                            "isReadOnly": true,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "component": "select",
                            "id": "host_file",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isRequired": true,
                            "label": "Host File",
                            "name": "host_file",
                            "options": Array [
                              Object {
                                "label": "host file test 1.iso",
                                "value": "host file test 1.iso,18",
                              },
                              Object {
                                "label": "host file test 2.iso",
                                "value": "host file test 2.iso,18",
                              },
                              Object {
                                "label": "host file test 3.iso",
                                "value": "host file test 3.iso,18",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                        ],
                      ],
                      "name": "BasicInformation",
                      "title": "Connect CD/DVD Drives",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <ReconfigureTemplate
                canSubmit={false}
                formFields={
                  Array [
                    <SingleField
                      className="drive_form"
                      component="sub-form"
                      fields={
                        Array [
                          Array [
                            Object {
                              "autoFocus": true,
                              "component": "text-field",
                              "id": "name",
                              "initialValue": "CD/DVD drive 1",
                              "isReadOnly": true,
                              "label": "Name",
                              "name": "name",
                            },
                            Object {
                              "component": "select",
                              "id": "host_file",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isRequired": true,
                              "label": "Host File",
                              "name": "host_file",
                              "options": Array [
                                Object {
                                  "label": "host file test 1.iso",
                                  "value": "host file test 1.iso,18",
                                },
                                Object {
                                  "label": "host file test 2.iso",
                                  "value": "host file test 2.iso,18",
                                },
                                Object {
                                  "label": "host file test 3.iso",
                                  "value": "host file test 3.iso,18",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                        ]
                      }
                      name="BasicInformation"
                      title="Connect CD/DVD Drives"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                hideButtons={false}
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "className": "drive_form",
                        "component": "sub-form",
                        "fields": Array [
                          Array [
                            Object {
                              "autoFocus": true,
                              "component": "text-field",
                              "id": "name",
                              "initialValue": "CD/DVD drive 1",
                              "isReadOnly": true,
                              "label": "Name",
                              "name": "name",
                            },
                            Object {
                              "component": "select",
                              "id": "host_file",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isRequired": true,
                              "label": "Host File",
                              "name": "host_file",
                              "options": Array [
                                Object {
                                  "label": "host file test 1.iso",
                                  "value": "host file test 1.iso,18",
                                },
                                Object {
                                  "label": "host file test 2.iso",
                                  "value": "host file test 2.iso,18",
                                },
                                Object {
                                  "label": "host file test 3.iso",
                                  "value": "host file test 3.iso,18",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                        ],
                        "name": "BasicInformation",
                        "title": "Connect CD/DVD Drives",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
              >
                <form
                  className="form-react reconfigure-form"
                  onSubmit={[Function]}
                >
                  <SingleField
                    className="drive_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "autoFocus": true,
                            "component": "text-field",
                            "id": "name",
                            "initialValue": "CD/DVD drive 1",
                            "isReadOnly": true,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "component": "select",
                            "id": "host_file",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isRequired": true,
                            "label": "Host File",
                            "name": "host_file",
                            "options": Array [
                              Object {
                                "label": "host file test 1.iso",
                                "value": "host file test 1.iso,18",
                              },
                              Object {
                                "label": "host file test 2.iso",
                                "value": "host file test 2.iso,18",
                              },
                              Object {
                                "label": "host file test 3.iso",
                                "value": "host file test 3.iso,18",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                        ],
                      ]
                    }
                    key="BasicInformation"
                    name="BasicInformation"
                    title="Connect CD/DVD Drives"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "className": "drive_form",
                          "component": "sub-form",
                          "fields": Array [
                            Array [
                              Object {
                                "autoFocus": true,
                                "component": "text-field",
                                "id": "name",
                                "initialValue": "CD/DVD drive 1",
                                "isReadOnly": true,
                                "label": "Name",
                                "name": "name",
                              },
                              Object {
                                "component": "select",
                                "id": "host_file",
                                "includeEmpty": true,
                                "initialValue": "",
                                "isRequired": true,
                                "label": "Host File",
                                "name": "host_file",
                                "options": Array [
                                  Object {
                                    "label": "host file test 1.iso",
                                    "value": "host file test 1.iso,18",
                                  },
                                  Object {
                                    "label": "host file test 2.iso",
                                    "value": "host file test 2.iso,18",
                                  },
                                  Object {
                                    "label": "host file test 3.iso",
                                    "value": "host file test 3.iso,18",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                          ],
                          "name": "BasicInformation",
                          "title": "Connect CD/DVD Drives",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SubForm
                          DescriptionElement="p"
                          TitleElement="h3"
                          className="drive_form"
                          component="sub-form"
                          fields={
                            Array [
                              Array [
                                Object {
                                  "autoFocus": true,
                                  "component": "text-field",
                                  "id": "name",
                                  "initialValue": "CD/DVD drive 1",
                                  "isReadOnly": true,
                                  "label": "Name",
                                  "name": "name",
                                },
                                Object {
                                  "component": "select",
                                  "id": "host_file",
                                  "includeEmpty": true,
                                  "initialValue": "",
                                  "isRequired": true,
                                  "label": "Host File",
                                  "name": "host_file",
                                  "options": Array [
                                    Object {
                                      "label": "host file test 1.iso",
                                      "value": "host file test 1.iso,18",
                                    },
                                    Object {
                                      "label": "host file test 2.iso",
                                      "value": "host file test 2.iso,18",
                                    },
                                    Object {
                                      "label": "host file test 3.iso",
                                      "value": "host file test 3.iso,18",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                            ]
                          }
                          name="BasicInformation"
                          title="Connect CD/DVD Drives"
                        >
                          <div
                            className="drive_form"
                            name="BasicInformation"
                          >
                            <div>
                              <h3>
                                Connect CD/DVD Drives
                              </h3>
                            </div>
                            <SingleField
                              autoFocus={true}
                              component="text-field"
                              id="name"
                              initialValue="CD/DVD drive 1"
                              isReadOnly={true}
                              key="name"
                              label="Name"
                              name="name"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "autoFocus": true,
                                    "component": "text-field",
                                    "id": "name",
                                    "initialValue": "CD/DVD drive 1",
                                    "isReadOnly": true,
                                    "label": "Name",
                                    "name": "name",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <TextField
                                    autoFocus={true}
                                    component="text-field"
                                    id="name"
                                    initialValue="CD/DVD drive 1"
                                    isReadOnly={true}
                                    label="Name"
                                    name="name"
                                  >
                                    <TextInput
                                      autoFocus={true}
                                      id="name"
                                      invalid={false}
                                      invalidText=""
                                      key="name"
                                      labelText="Name"
                                      name="name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      readOnly={true}
                                      value="CD/DVD drive 1"
                                      warn={false}
                                      warnText=""
                                    >
                                      <div
                                        className="bx--form-item bx--text-input-wrapper bx--text-input-wrapper--readonly"
                                      >
                                        <label
                                          className="bx--label"
                                          htmlFor="name"
                                        >
                                          Name
                                        </label>
                                        <div
                                          className="bx--text-input__field-outer-wrapper"
                                        >
                                          <div
                                            className="bx--text-input__field-wrapper"
                                            data-invalid={null}
                                          >
                                            <ForwardRef(EditOff16)
                                              className="bx--text-input__readonly-icon"
                                            >
                                              <Icon
                                                className="bx--text-input__readonly-icon"
                                                fill="currentColor"
                                                height={16}
                                                preserveAspectRatio="xMidYMid meet"
                                                viewBox="0 0 32 32"
                                                width={16}
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="bx--text-input__readonly-icon"
                                                  fill="currentColor"
                                                  focusable="false"
                                                  height={16}
                                                  preserveAspectRatio="xMidYMid meet"
                                                  viewBox="0 0 32 32"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M30 28.6L3.4 2 2 3.4l10.1 10.1L4 21.6V28h6.4l8.1-8.1L28.6 30 30 28.6zM9.6 26H6v-3.6l7.5-7.5 3.6 3.6L9.6 26zM29.4 6.2L29.4 6.2l-3.6-3.6c-.8-.8-2-.8-2.8 0l0 0 0 0-8 8 1.4 1.4L20 8.4l3.6 3.6L20 15.6l1.4 1.4 8-8C30.2 8.2 30.2 7 29.4 6.2L29.4 6.2zM25 10.6L21.4 7l3-3L28 7.6 25 10.6z"
                                                  />
                                                </svg>
                                              </Icon>
                                            </ForwardRef(EditOff16)>
                                            <input
                                              autoFocus={true}
                                              className="bx--text-input bx--text-input--md"
                                              disabled={false}
                                              id="name"
                                              name="name"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              readOnly={true}
                                              type="text"
                                              value="CD/DVD drive 1"
                                            />
                                          </div>
                                        </div>
                                      </div>
                                    </TextInput>
                                  </TextField>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="select"
                              id="host_file"
                              includeEmpty={true}
                              initialValue=""
                              isRequired={true}
                              key="host_file"
                              label="Host File"
                              name="host_file"
                              options={
                                Array [
                                  Object {
                                    "label": "host file test 1.iso",
                                    "value": "host file test 1.iso,18",
                                  },
                                  Object {
                                    "label": "host file test 2.iso",
                                    "value": "host file test 2.iso,18",
                                  },
                                  Object {
                                    "label": "host file test 3.iso",
                                    "value": "host file test 3.iso,18",
                                  },
                                ]
                              }
                              placeholder="<Choose>"
                              validate={
                                Array [
                                  Object {
                                    "type": "required",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "select",
                                    "id": "host_file",
                                    "includeEmpty": true,
                                    "initialValue": "",
                                    "isRequired": true,
                                    "label": "Host File",
                                    "name": "host_file",
                                    "options": Array [
                                      Object {
                                        "label": "host file test 1.iso",
                                        "value": "host file test 1.iso,18",
                                      },
                                      Object {
                                        "label": "host file test 2.iso",
                                        "value": "host file test 2.iso,18",
                                      },
                                      Object {
                                        "label": "host file test 3.iso",
                                        "value": "host file test 3.iso,18",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    component="select"
                                    id="host_file"
                                    includeEmpty={true}
                                    initialValue=""
                                    isRequired={true}
                                    label="Host File"
                                    name="host_file"
                                    options={
                                      Array [
                                        Object {
                                          "label": "host file test 1.iso",
                                          "value": "host file test 1.iso,18",
                                        },
                                        Object {
                                          "label": "host file test 2.iso",
                                          "value": "host file test 2.iso,18",
                                        },
                                        Object {
                                          "label": "host file test 3.iso",
                                          "value": "host file test 3.iso,18",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                    validate={
                                      Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ]
                                    }
                                  >
                                    <Select
                                      component="select"
                                      id="host_file"
                                      initialValue=""
                                      isRequired={true}
                                      label="Host File"
                                      loadingMessage="Loading..."
                                      name="host_file"
                                      options={
                                        Array [
                                          Object {
                                            "label": "<Choose>",
                                            "value": undefined,
                                          },
                                          Object {
                                            "label": "host file test 1.iso",
                                            "value": "host file test 1.iso,18",
                                          },
                                          Object {
                                            "label": "host file test 2.iso",
                                            "value": "host file test 2.iso,18",
                                          },
                                          Object {
                                            "label": "host file test 3.iso",
                                            "value": "host file test 3.iso,18",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                      validate={
                                        Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ]
                                      }
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        compareValues={[Function]}
                                        id="host_file"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText={
                                          <IsRequired>
                                            Host File
                                          </IsRequired>
                                        }
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="host_file"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "<Choose>",
                                              "value": undefined,
                                            },
                                            Object {
                                              "label": "host file test 1.iso",
                                              "value": "host file test 1.iso,18",
                                            },
                                            Object {
                                              "label": "host file test 2.iso",
                                              "value": "host file test 2.iso,18",
                                            },
                                            Object {
                                              "label": "host file test 3.iso",
                                              "value": "host file test 3.iso,18",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        simpleValue={false}
                                        value=""
                                      >
                                        <ClearedSelect
                                          className=""
                                          closeMenuOnSelect={true}
                                          hideSelectedOptions={false}
                                          id="host_file"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText={
                                            <IsRequired>
                                              Host File
                                            </IsRequired>
                                          }
                                          name="host_file"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "<Choose>",
                                                "value": undefined,
                                              },
                                              Object {
                                                "label": "host file test 1.iso",
                                                "value": "host file test 1.iso,18",
                                              },
                                              Object {
                                                "label": "host file test 2.iso",
                                                "value": "host file test 2.iso,18",
                                              },
                                              Object {
                                                "label": "host file test 3.iso",
                                                "value": "host file test 3.iso,18",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          value=""
                                        >
                                          <Select
                                            className=""
                                            disabled={false}
                                            helperText=""
                                            id="host_file"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText={
                                              <IsRequired>
                                                Host File
                                              </IsRequired>
                                            }
                                            light={false}
                                            name="host_file"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value=""
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select"
                                              >
                                                <label
                                                  className="bx--label"
                                                  htmlFor="host_file"
                                                >
                                                  <IsRequired>
                                                    <span
                                                      aria-hidden="true"
                                                      className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                                    >
                                                      *
                                                    </span>
                                                    Host File
                                                  </IsRequired>
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    className="bx--select-input"
                                                    id="host_file"
                                                    name="host_file"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value=""
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="0"
                                                      label="<Choose>"
                                                      text="<Choose>"
                                                      value=""
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="<Choose>"
                                                        value=""
                                                      >
                                                        &lt;Choose&gt;
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="host file test 1.iso,18"
                                                      label="host file test 1.iso"
                                                      text="host file test 1.iso"
                                                      value="host file test 1.iso,18"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="host file test 1.iso"
                                                        value="host file test 1.iso,18"
                                                      >
                                                        host file test 1.iso
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="host file test 2.iso,18"
                                                      label="host file test 2.iso"
                                                      text="host file test 2.iso"
                                                      value="host file test 2.iso,18"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="host file test 2.iso"
                                                        value="host file test 2.iso,18"
                                                      >
                                                        host file test 2.iso
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="host file test 3.iso,18"
                                                      label="host file test 3.iso"
                                                      text="host file test 3.iso"
                                                      value="host file test 3.iso,18"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="host file test 3.iso"
                                                        value="host file test 3.iso,18"
                                                      >
                                                        host file test 3.iso
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                          </div>
                        </SubForm>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <SingleField
                    component="spy-field"
                    key="spy-field"
                    name="spy-field"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SpyField
                          component="spy-field"
                          name="spy-field"
                        >
                          <FormSpy
                            onChange={[Function]}
                            subscription={
                              Object {
                                "pristine": true,
                                "valid": true,
                              }
                            }
                          />
                        </SpyField>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <div
                    className="bx--btn-set"
                  >
                    <button
                      alt="Save"
                      className="bx--btn bx--btn--primary"
                      disabled={true}
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      alt="Reset"
                      className="bx--btn bx--btn--secondary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Reset
                    </button>
                    <button
                      alt="Cancel"
                      className="bx--btn bx--btn--secondary"
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              </ReconfigureTemplate>
            </FormTemplate>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </ReconfigureVmForm>
</Provider>
`;

exports[`Reconfigure VM form component should render reconfigure form and show disk add form 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReconfigureVmForm
    memory={
      Object {
        "max": 10,
        "min": 1024,
      }
    }
    options={
      Object {
        "avail_adapter_names": Array [],
        "controller_types": Array [
          "VirtualController",
          "ParaVirtualController",
          "VirtualBusController",
        ],
        "cores_options": Array [
          1,
          2,
          3,
          4,
        ],
        "host_file_options": Array [
          Array [
            "host file test 1.iso",
            "host file test 1.iso,18",
          ],
          Array [
            "host file test 2.iso",
            "host file test 2.iso,18",
          ],
          Array [
            "host file test 3.iso",
            "host file test 3.iso,18",
          ],
        ],
        "socket_options": Array [
          1,
          2,
          3,
          4,
        ],
        "vlan_options": Array [
          "vlan test 0",
          "vlan test 1",
          "vlan test 3",
        ],
      }
    }
    recordId={
      Array [
        12,
      ]
    }
    requestId="new"
    roles={
      Object {
        "allowCdromsChange": true,
        "allowCpuChange": true,
        "allowDiskChange": true,
        "allowDiskSizeChange": true,
        "allowMemoryChange": true,
        "allowNetworkChange": true,
        "isRedhat": true,
        "isVmwareCloud": false,
        "isVmwareInfra": true,
      }
    }
  >
    <Connect(MiqFormRenderer)
      FormTemplate={[Function]}
      clearOnUnmount={true}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "reconfigure-table": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "cb_memory": false,
          "cores_per_socket_count": "1",
          "mem_type": "GB",
          "memory": "16",
          "processor": false,
          "socket_count": "4",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "className": "disk_form",
              "component": "sub-form",
              "fields": Array [
                Array [
                  Object {
                    "component": "text-field",
                    "hideField": true,
                    "id": "name",
                    "initialValue": "",
                    "isReadOnly": true,
                    "label": "Name",
                    "name": "name",
                  },
                  Object {
                    "autoFocus": true,
                    "component": "select",
                    "disabled": false,
                    "id": "type",
                    "includeEmpty": true,
                    "initialValue": "",
                    "isReadOnly": false,
                    "isRequired": true,
                    "label": "Type",
                    "name": "type",
                    "options": Array [
                      Object {
                        "label": "thin",
                        "value": "thin",
                      },
                      Object {
                        "label": "thick",
                        "value": "thick",
                      },
                    ],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "type": "required",
                      },
                    ],
                  },
                  Object {
                    "component": "text-field",
                    "id": "size",
                    "initialValue": "",
                    "isRequired": true,
                    "label": "Size",
                    "name": "size",
                    "validate": Array [
                      Object {
                        "size": 1,
                        "type": "diskMemoryCheck",
                        "unit": "MB",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "id": "unit",
                    "initialValue": "GB",
                    "label": "Unit",
                    "name": "unit",
                    "options": Array [
                      Object {
                        "label": "GB",
                        "value": "GB",
                      },
                      Object {
                        "label": "MB",
                        "value": "MB",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "disabled": false,
                    "hideField": false,
                    "id": "mode",
                    "includeEmpty": true,
                    "initialValue": "",
                    "isReadOnly": false,
                    "isRequired": true,
                    "label": "Mode",
                    "name": "mode",
                    "options": Array [
                      Object {
                        "label": "persistent",
                        "value": "persistent",
                      },
                      Object {
                        "label": "nonpersistent",
                        "value": "nonpersistent",
                      },
                    ],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "hideField": false,
                        "type": "customRequired",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "disabled": false,
                    "hideField": false,
                    "id": "controller",
                    "initialValue": "",
                    "isReadOnly": false,
                    "label": "Controller",
                    "name": "controller",
                    "options": Array [
                      Object {
                        "label": "VirtualController",
                        "value": "VirtualController",
                      },
                      Object {
                        "label": "ParaVirtualController",
                        "value": "ParaVirtualController",
                      },
                      Object {
                        "label": "VirtualBusController",
                        "value": "VirtualBusController",
                      },
                    ],
                  },
                  Object {
                    "component": "switch",
                    "disabled": false,
                    "hideField": false,
                    "id": "dependent",
                    "initialValue": "",
                    "label": "Dependent",
                    "name": "dependent",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "component": "switch",
                    "hideField": false,
                    "initialValue": false,
                    "isReadOnly": false,
                    "label": "Bootable",
                    "name": "bootable",
                    "offText": "No",
                    "onText": "Yes",
                  },
                ],
              ],
              "name": "BasicInformation",
              "title": "Add Disk",
            },
          ],
        }
      }
      validatorMapper={
        Object {
          "cpuCheck": [Function],
          "customRequired": [Function],
          "diskMemoryCheck": [Function],
          "memoryCheck": [Function],
        }
      }
    >
      <MiqFormRenderer
        FormTemplate={[Function]}
        buttonsLabels={Object {}}
        canReset={false}
        className="form-react"
        clearOnUnmount={true}
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "reconfigure-table": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "cb_memory": false,
            "cores_per_socket_count": "1",
            "mem_type": "GB",
            "memory": "16",
            "processor": false,
            "socket_count": "4",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "className": "disk_form",
                "component": "sub-form",
                "fields": Array [
                  Array [
                    Object {
                      "component": "text-field",
                      "hideField": true,
                      "id": "name",
                      "initialValue": "",
                      "isReadOnly": true,
                      "label": "Name",
                      "name": "name",
                    },
                    Object {
                      "autoFocus": true,
                      "component": "select",
                      "disabled": false,
                      "id": "type",
                      "includeEmpty": true,
                      "initialValue": "",
                      "isReadOnly": false,
                      "isRequired": true,
                      "label": "Type",
                      "name": "type",
                      "options": Array [
                        Object {
                          "label": "thin",
                          "value": "thin",
                        },
                        Object {
                          "label": "thick",
                          "value": "thick",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "text-field",
                      "id": "size",
                      "initialValue": "",
                      "isRequired": true,
                      "label": "Size",
                      "name": "size",
                      "validate": Array [
                        Object {
                          "size": 1,
                          "type": "diskMemoryCheck",
                          "unit": "MB",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "id": "unit",
                      "initialValue": "GB",
                      "label": "Unit",
                      "name": "unit",
                      "options": Array [
                        Object {
                          "label": "GB",
                          "value": "GB",
                        },
                        Object {
                          "label": "MB",
                          "value": "MB",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "disabled": false,
                      "hideField": false,
                      "id": "mode",
                      "includeEmpty": true,
                      "initialValue": "",
                      "isReadOnly": false,
                      "isRequired": true,
                      "label": "Mode",
                      "name": "mode",
                      "options": Array [
                        Object {
                          "label": "persistent",
                          "value": "persistent",
                        },
                        Object {
                          "label": "nonpersistent",
                          "value": "nonpersistent",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "hideField": false,
                          "type": "customRequired",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "disabled": false,
                      "hideField": false,
                      "id": "controller",
                      "initialValue": "",
                      "isReadOnly": false,
                      "label": "Controller",
                      "name": "controller",
                      "options": Array [
                        Object {
                          "label": "VirtualController",
                          "value": "VirtualController",
                        },
                        Object {
                          "label": "ParaVirtualController",
                          "value": "ParaVirtualController",
                        },
                        Object {
                          "label": "VirtualBusController",
                          "value": "VirtualBusController",
                        },
                      ],
                    },
                    Object {
                      "component": "switch",
                      "disabled": false,
                      "hideField": false,
                      "id": "dependent",
                      "initialValue": "",
                      "label": "Dependent",
                      "name": "dependent",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "component": "switch",
                      "hideField": false,
                      "initialValue": false,
                      "isReadOnly": false,
                      "label": "Bootable",
                      "name": "bootable",
                      "offText": "No",
                      "onText": "Yes",
                    },
                  ],
                ],
                "name": "BasicInformation",
                "title": "Add Disk",
              },
            ],
          }
        }
        showFormControls={true}
        validatorMapper={
          Object {
            "cpuCheck": [Function],
            "customRequired": [Function],
            "diskMemoryCheck": [Function],
            "memoryCheck": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={true}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "reconfigure-table": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "cb_memory": false,
              "cores_per_socket_count": "1",
              "mem_type": "GB",
              "memory": "16",
              "processor": false,
              "socket_count": "4",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "className": "disk_form",
                  "component": "sub-form",
                  "fields": Array [
                    Array [
                      Object {
                        "component": "text-field",
                        "hideField": true,
                        "id": "name",
                        "initialValue": "",
                        "isReadOnly": true,
                        "label": "Name",
                        "name": "name",
                      },
                      Object {
                        "autoFocus": true,
                        "component": "select",
                        "disabled": false,
                        "id": "type",
                        "includeEmpty": true,
                        "initialValue": "",
                        "isReadOnly": false,
                        "isRequired": true,
                        "label": "Type",
                        "name": "type",
                        "options": Array [
                          Object {
                            "label": "thin",
                            "value": "thin",
                          },
                          Object {
                            "label": "thick",
                            "value": "thick",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "size",
                        "initialValue": "",
                        "isRequired": true,
                        "label": "Size",
                        "name": "size",
                        "validate": Array [
                          Object {
                            "size": 1,
                            "type": "diskMemoryCheck",
                            "unit": "MB",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "id": "unit",
                        "initialValue": "GB",
                        "label": "Unit",
                        "name": "unit",
                        "options": Array [
                          Object {
                            "label": "GB",
                            "value": "GB",
                          },
                          Object {
                            "label": "MB",
                            "value": "MB",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "disabled": false,
                        "hideField": false,
                        "id": "mode",
                        "includeEmpty": true,
                        "initialValue": "",
                        "isReadOnly": false,
                        "isRequired": true,
                        "label": "Mode",
                        "name": "mode",
                        "options": Array [
                          Object {
                            "label": "persistent",
                            "value": "persistent",
                          },
                          Object {
                            "label": "nonpersistent",
                            "value": "nonpersistent",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "hideField": false,
                            "type": "customRequired",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "disabled": false,
                        "hideField": false,
                        "id": "controller",
                        "initialValue": "",
                        "isReadOnly": false,
                        "label": "Controller",
                        "name": "controller",
                        "options": Array [
                          Object {
                            "label": "VirtualController",
                            "value": "VirtualController",
                          },
                          Object {
                            "label": "ParaVirtualController",
                            "value": "ParaVirtualController",
                          },
                          Object {
                            "label": "VirtualBusController",
                            "value": "VirtualBusController",
                          },
                        ],
                      },
                      Object {
                        "component": "switch",
                        "disabled": false,
                        "hideField": false,
                        "id": "dependent",
                        "initialValue": "",
                        "label": "Dependent",
                        "name": "dependent",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "component": "switch",
                        "hideField": false,
                        "initialValue": false,
                        "isReadOnly": false,
                        "label": "Bootable",
                        "name": "bootable",
                        "offText": "No",
                        "onText": "Yes",
                      },
                    ],
                  ],
                  "name": "BasicInformation",
                  "title": "Add Disk",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validatorMapper={
            Object {
              "cpuCheck": [Function],
              "customRequired": [Function],
              "diskMemoryCheck": [Function],
              "memoryCheck": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "cb_memory": false,
                "cores_per_socket_count": "1",
                "mem_type": "GB",
                "memory": "16",
                "processor": false,
                "socket_count": "4",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <FormTemplate
              formFields={
                Array [
                  <SingleField
                    className="disk_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "text-field",
                            "hideField": true,
                            "id": "name",
                            "initialValue": "",
                            "isReadOnly": true,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "autoFocus": true,
                            "component": "select",
                            "disabled": false,
                            "id": "type",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isReadOnly": false,
                            "isRequired": true,
                            "label": "Type",
                            "name": "type",
                            "options": Array [
                              Object {
                                "label": "thin",
                                "value": "thin",
                              },
                              Object {
                                "label": "thick",
                                "value": "thick",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "size",
                            "initialValue": "",
                            "isRequired": true,
                            "label": "Size",
                            "name": "size",
                            "validate": Array [
                              Object {
                                "size": 1,
                                "type": "diskMemoryCheck",
                                "unit": "MB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "id": "unit",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "unit",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": false,
                            "hideField": false,
                            "id": "mode",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isReadOnly": false,
                            "isRequired": true,
                            "label": "Mode",
                            "name": "mode",
                            "options": Array [
                              Object {
                                "label": "persistent",
                                "value": "persistent",
                              },
                              Object {
                                "label": "nonpersistent",
                                "value": "nonpersistent",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": false,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": false,
                            "hideField": false,
                            "id": "controller",
                            "initialValue": "",
                            "isReadOnly": false,
                            "label": "Controller",
                            "name": "controller",
                            "options": Array [
                              Object {
                                "label": "VirtualController",
                                "value": "VirtualController",
                              },
                              Object {
                                "label": "ParaVirtualController",
                                "value": "ParaVirtualController",
                              },
                              Object {
                                "label": "VirtualBusController",
                                "value": "VirtualBusController",
                              },
                            ],
                          },
                          Object {
                            "component": "switch",
                            "disabled": false,
                            "hideField": false,
                            "id": "dependent",
                            "initialValue": "",
                            "label": "Dependent",
                            "name": "dependent",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "component": "switch",
                            "hideField": false,
                            "initialValue": false,
                            "isReadOnly": false,
                            "label": "Bootable",
                            "name": "bootable",
                            "offText": "No",
                            "onText": "Yes",
                          },
                        ],
                      ]
                    }
                    name="BasicInformation"
                    title="Add Disk"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "className": "disk_form",
                      "component": "sub-form",
                      "fields": Array [
                        Array [
                          Object {
                            "component": "text-field",
                            "hideField": true,
                            "id": "name",
                            "initialValue": "",
                            "isReadOnly": true,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "autoFocus": true,
                            "component": "select",
                            "disabled": false,
                            "id": "type",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isReadOnly": false,
                            "isRequired": true,
                            "label": "Type",
                            "name": "type",
                            "options": Array [
                              Object {
                                "label": "thin",
                                "value": "thin",
                              },
                              Object {
                                "label": "thick",
                                "value": "thick",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "size",
                            "initialValue": "",
                            "isRequired": true,
                            "label": "Size",
                            "name": "size",
                            "validate": Array [
                              Object {
                                "size": 1,
                                "type": "diskMemoryCheck",
                                "unit": "MB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "id": "unit",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "unit",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": false,
                            "hideField": false,
                            "id": "mode",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isReadOnly": false,
                            "isRequired": true,
                            "label": "Mode",
                            "name": "mode",
                            "options": Array [
                              Object {
                                "label": "persistent",
                                "value": "persistent",
                              },
                              Object {
                                "label": "nonpersistent",
                                "value": "nonpersistent",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": false,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": false,
                            "hideField": false,
                            "id": "controller",
                            "initialValue": "",
                            "isReadOnly": false,
                            "label": "Controller",
                            "name": "controller",
                            "options": Array [
                              Object {
                                "label": "VirtualController",
                                "value": "VirtualController",
                              },
                              Object {
                                "label": "ParaVirtualController",
                                "value": "ParaVirtualController",
                              },
                              Object {
                                "label": "VirtualBusController",
                                "value": "VirtualBusController",
                              },
                            ],
                          },
                          Object {
                            "component": "switch",
                            "disabled": false,
                            "hideField": false,
                            "id": "dependent",
                            "initialValue": "",
                            "label": "Dependent",
                            "name": "dependent",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "component": "switch",
                            "hideField": false,
                            "initialValue": false,
                            "isReadOnly": false,
                            "label": "Bootable",
                            "name": "bootable",
                            "offText": "No",
                            "onText": "Yes",
                          },
                        ],
                      ],
                      "name": "BasicInformation",
                      "title": "Add Disk",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <ReconfigureTemplate
                canSubmit={false}
                formFields={
                  Array [
                    <SingleField
                      className="disk_form"
                      component="sub-form"
                      fields={
                        Array [
                          Array [
                            Object {
                              "component": "text-field",
                              "hideField": true,
                              "id": "name",
                              "initialValue": "",
                              "isReadOnly": true,
                              "label": "Name",
                              "name": "name",
                            },
                            Object {
                              "autoFocus": true,
                              "component": "select",
                              "disabled": false,
                              "id": "type",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isReadOnly": false,
                              "isRequired": true,
                              "label": "Type",
                              "name": "type",
                              "options": Array [
                                Object {
                                  "label": "thin",
                                  "value": "thin",
                                },
                                Object {
                                  "label": "thick",
                                  "value": "thick",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "text-field",
                              "id": "size",
                              "initialValue": "",
                              "isRequired": true,
                              "label": "Size",
                              "name": "size",
                              "validate": Array [
                                Object {
                                  "size": 1,
                                  "type": "diskMemoryCheck",
                                  "unit": "MB",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "id": "unit",
                              "initialValue": "GB",
                              "label": "Unit",
                              "name": "unit",
                              "options": Array [
                                Object {
                                  "label": "GB",
                                  "value": "GB",
                                },
                                Object {
                                  "label": "MB",
                                  "value": "MB",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "disabled": false,
                              "hideField": false,
                              "id": "mode",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isReadOnly": false,
                              "isRequired": true,
                              "label": "Mode",
                              "name": "mode",
                              "options": Array [
                                Object {
                                  "label": "persistent",
                                  "value": "persistent",
                                },
                                Object {
                                  "label": "nonpersistent",
                                  "value": "nonpersistent",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "hideField": false,
                                  "type": "customRequired",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "disabled": false,
                              "hideField": false,
                              "id": "controller",
                              "initialValue": "",
                              "isReadOnly": false,
                              "label": "Controller",
                              "name": "controller",
                              "options": Array [
                                Object {
                                  "label": "VirtualController",
                                  "value": "VirtualController",
                                },
                                Object {
                                  "label": "ParaVirtualController",
                                  "value": "ParaVirtualController",
                                },
                                Object {
                                  "label": "VirtualBusController",
                                  "value": "VirtualBusController",
                                },
                              ],
                            },
                            Object {
                              "component": "switch",
                              "disabled": false,
                              "hideField": false,
                              "id": "dependent",
                              "initialValue": "",
                              "label": "Dependent",
                              "name": "dependent",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "component": "switch",
                              "hideField": false,
                              "initialValue": false,
                              "isReadOnly": false,
                              "label": "Bootable",
                              "name": "bootable",
                              "offText": "No",
                              "onText": "Yes",
                            },
                          ],
                        ]
                      }
                      name="BasicInformation"
                      title="Add Disk"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                hideButtons={false}
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "className": "disk_form",
                        "component": "sub-form",
                        "fields": Array [
                          Array [
                            Object {
                              "component": "text-field",
                              "hideField": true,
                              "id": "name",
                              "initialValue": "",
                              "isReadOnly": true,
                              "label": "Name",
                              "name": "name",
                            },
                            Object {
                              "autoFocus": true,
                              "component": "select",
                              "disabled": false,
                              "id": "type",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isReadOnly": false,
                              "isRequired": true,
                              "label": "Type",
                              "name": "type",
                              "options": Array [
                                Object {
                                  "label": "thin",
                                  "value": "thin",
                                },
                                Object {
                                  "label": "thick",
                                  "value": "thick",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "text-field",
                              "id": "size",
                              "initialValue": "",
                              "isRequired": true,
                              "label": "Size",
                              "name": "size",
                              "validate": Array [
                                Object {
                                  "size": 1,
                                  "type": "diskMemoryCheck",
                                  "unit": "MB",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "id": "unit",
                              "initialValue": "GB",
                              "label": "Unit",
                              "name": "unit",
                              "options": Array [
                                Object {
                                  "label": "GB",
                                  "value": "GB",
                                },
                                Object {
                                  "label": "MB",
                                  "value": "MB",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "disabled": false,
                              "hideField": false,
                              "id": "mode",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isReadOnly": false,
                              "isRequired": true,
                              "label": "Mode",
                              "name": "mode",
                              "options": Array [
                                Object {
                                  "label": "persistent",
                                  "value": "persistent",
                                },
                                Object {
                                  "label": "nonpersistent",
                                  "value": "nonpersistent",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "hideField": false,
                                  "type": "customRequired",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "disabled": false,
                              "hideField": false,
                              "id": "controller",
                              "initialValue": "",
                              "isReadOnly": false,
                              "label": "Controller",
                              "name": "controller",
                              "options": Array [
                                Object {
                                  "label": "VirtualController",
                                  "value": "VirtualController",
                                },
                                Object {
                                  "label": "ParaVirtualController",
                                  "value": "ParaVirtualController",
                                },
                                Object {
                                  "label": "VirtualBusController",
                                  "value": "VirtualBusController",
                                },
                              ],
                            },
                            Object {
                              "component": "switch",
                              "disabled": false,
                              "hideField": false,
                              "id": "dependent",
                              "initialValue": "",
                              "label": "Dependent",
                              "name": "dependent",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "component": "switch",
                              "hideField": false,
                              "initialValue": false,
                              "isReadOnly": false,
                              "label": "Bootable",
                              "name": "bootable",
                              "offText": "No",
                              "onText": "Yes",
                            },
                          ],
                        ],
                        "name": "BasicInformation",
                        "title": "Add Disk",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
              >
                <form
                  className="form-react reconfigure-form"
                  onSubmit={[Function]}
                >
                  <SingleField
                    className="disk_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "text-field",
                            "hideField": true,
                            "id": "name",
                            "initialValue": "",
                            "isReadOnly": true,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "autoFocus": true,
                            "component": "select",
                            "disabled": false,
                            "id": "type",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isReadOnly": false,
                            "isRequired": true,
                            "label": "Type",
                            "name": "type",
                            "options": Array [
                              Object {
                                "label": "thin",
                                "value": "thin",
                              },
                              Object {
                                "label": "thick",
                                "value": "thick",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "size",
                            "initialValue": "",
                            "isRequired": true,
                            "label": "Size",
                            "name": "size",
                            "validate": Array [
                              Object {
                                "size": 1,
                                "type": "diskMemoryCheck",
                                "unit": "MB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "id": "unit",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "unit",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": false,
                            "hideField": false,
                            "id": "mode",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isReadOnly": false,
                            "isRequired": true,
                            "label": "Mode",
                            "name": "mode",
                            "options": Array [
                              Object {
                                "label": "persistent",
                                "value": "persistent",
                              },
                              Object {
                                "label": "nonpersistent",
                                "value": "nonpersistent",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": false,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": false,
                            "hideField": false,
                            "id": "controller",
                            "initialValue": "",
                            "isReadOnly": false,
                            "label": "Controller",
                            "name": "controller",
                            "options": Array [
                              Object {
                                "label": "VirtualController",
                                "value": "VirtualController",
                              },
                              Object {
                                "label": "ParaVirtualController",
                                "value": "ParaVirtualController",
                              },
                              Object {
                                "label": "VirtualBusController",
                                "value": "VirtualBusController",
                              },
                            ],
                          },
                          Object {
                            "component": "switch",
                            "disabled": false,
                            "hideField": false,
                            "id": "dependent",
                            "initialValue": "",
                            "label": "Dependent",
                            "name": "dependent",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "component": "switch",
                            "hideField": false,
                            "initialValue": false,
                            "isReadOnly": false,
                            "label": "Bootable",
                            "name": "bootable",
                            "offText": "No",
                            "onText": "Yes",
                          },
                        ],
                      ]
                    }
                    key="BasicInformation"
                    name="BasicInformation"
                    title="Add Disk"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "className": "disk_form",
                          "component": "sub-form",
                          "fields": Array [
                            Array [
                              Object {
                                "component": "text-field",
                                "hideField": true,
                                "id": "name",
                                "initialValue": "",
                                "isReadOnly": true,
                                "label": "Name",
                                "name": "name",
                              },
                              Object {
                                "autoFocus": true,
                                "component": "select",
                                "disabled": false,
                                "id": "type",
                                "includeEmpty": true,
                                "initialValue": "",
                                "isReadOnly": false,
                                "isRequired": true,
                                "label": "Type",
                                "name": "type",
                                "options": Array [
                                  Object {
                                    "label": "thin",
                                    "value": "thin",
                                  },
                                  Object {
                                    "label": "thick",
                                    "value": "thick",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "size",
                                "initialValue": "",
                                "isRequired": true,
                                "label": "Size",
                                "name": "size",
                                "validate": Array [
                                  Object {
                                    "size": 1,
                                    "type": "diskMemoryCheck",
                                    "unit": "MB",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "id": "unit",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "unit",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "disabled": false,
                                "hideField": false,
                                "id": "mode",
                                "includeEmpty": true,
                                "initialValue": "",
                                "isReadOnly": false,
                                "isRequired": true,
                                "label": "Mode",
                                "name": "mode",
                                "options": Array [
                                  Object {
                                    "label": "persistent",
                                    "value": "persistent",
                                  },
                                  Object {
                                    "label": "nonpersistent",
                                    "value": "nonpersistent",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "hideField": false,
                                    "type": "customRequired",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "disabled": false,
                                "hideField": false,
                                "id": "controller",
                                "initialValue": "",
                                "isReadOnly": false,
                                "label": "Controller",
                                "name": "controller",
                                "options": Array [
                                  Object {
                                    "label": "VirtualController",
                                    "value": "VirtualController",
                                  },
                                  Object {
                                    "label": "ParaVirtualController",
                                    "value": "ParaVirtualController",
                                  },
                                  Object {
                                    "label": "VirtualBusController",
                                    "value": "VirtualBusController",
                                  },
                                ],
                              },
                              Object {
                                "component": "switch",
                                "disabled": false,
                                "hideField": false,
                                "id": "dependent",
                                "initialValue": "",
                                "label": "Dependent",
                                "name": "dependent",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "component": "switch",
                                "hideField": false,
                                "initialValue": false,
                                "isReadOnly": false,
                                "label": "Bootable",
                                "name": "bootable",
                                "offText": "No",
                                "onText": "Yes",
                              },
                            ],
                          ],
                          "name": "BasicInformation",
                          "title": "Add Disk",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SubForm
                          DescriptionElement="p"
                          TitleElement="h3"
                          className="disk_form"
                          component="sub-form"
                          fields={
                            Array [
                              Array [
                                Object {
                                  "component": "text-field",
                                  "hideField": true,
                                  "id": "name",
                                  "initialValue": "",
                                  "isReadOnly": true,
                                  "label": "Name",
                                  "name": "name",
                                },
                                Object {
                                  "autoFocus": true,
                                  "component": "select",
                                  "disabled": false,
                                  "id": "type",
                                  "includeEmpty": true,
                                  "initialValue": "",
                                  "isReadOnly": false,
                                  "isRequired": true,
                                  "label": "Type",
                                  "name": "type",
                                  "options": Array [
                                    Object {
                                      "label": "thin",
                                      "value": "thin",
                                    },
                                    Object {
                                      "label": "thick",
                                      "value": "thick",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "size",
                                  "initialValue": "",
                                  "isRequired": true,
                                  "label": "Size",
                                  "name": "size",
                                  "validate": Array [
                                    Object {
                                      "size": 1,
                                      "type": "diskMemoryCheck",
                                      "unit": "MB",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "id": "unit",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "unit",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "disabled": false,
                                  "hideField": false,
                                  "id": "mode",
                                  "includeEmpty": true,
                                  "initialValue": "",
                                  "isReadOnly": false,
                                  "isRequired": true,
                                  "label": "Mode",
                                  "name": "mode",
                                  "options": Array [
                                    Object {
                                      "label": "persistent",
                                      "value": "persistent",
                                    },
                                    Object {
                                      "label": "nonpersistent",
                                      "value": "nonpersistent",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "hideField": false,
                                      "type": "customRequired",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "disabled": false,
                                  "hideField": false,
                                  "id": "controller",
                                  "initialValue": "",
                                  "isReadOnly": false,
                                  "label": "Controller",
                                  "name": "controller",
                                  "options": Array [
                                    Object {
                                      "label": "VirtualController",
                                      "value": "VirtualController",
                                    },
                                    Object {
                                      "label": "ParaVirtualController",
                                      "value": "ParaVirtualController",
                                    },
                                    Object {
                                      "label": "VirtualBusController",
                                      "value": "VirtualBusController",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "switch",
                                  "disabled": false,
                                  "hideField": false,
                                  "id": "dependent",
                                  "initialValue": "",
                                  "label": "Dependent",
                                  "name": "dependent",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "component": "switch",
                                  "hideField": false,
                                  "initialValue": false,
                                  "isReadOnly": false,
                                  "label": "Bootable",
                                  "name": "bootable",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                              ],
                            ]
                          }
                          name="BasicInformation"
                          title="Add Disk"
                        >
                          <div
                            className="disk_form"
                            name="BasicInformation"
                          >
                            <div>
                              <h3>
                                Add Disk
                              </h3>
                            </div>
                            <SingleField
                              component="text-field"
                              hideField={true}
                              id="name"
                              initialValue=""
                              isReadOnly={true}
                              key="name"
                              label="Name"
                              name="name"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "text-field",
                                    "id": "name",
                                    "initialValue": "",
                                    "isReadOnly": true,
                                    "label": "Name",
                                    "name": "name",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={true}
                                >
                                  <div
                                    hidden={true}
                                  >
                                    <TextField
                                      component="text-field"
                                      id="name"
                                      initialValue=""
                                      isReadOnly={true}
                                      label="Name"
                                      name="name"
                                    >
                                      <TextInput
                                        id="name"
                                        invalid={false}
                                        invalidText=""
                                        key="name"
                                        labelText="Name"
                                        name="name"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        readOnly={true}
                                        value=""
                                        warn={false}
                                        warnText=""
                                      >
                                        <div
                                          className="bx--form-item bx--text-input-wrapper bx--text-input-wrapper--readonly"
                                        >
                                          <label
                                            className="bx--label"
                                            htmlFor="name"
                                          >
                                            Name
                                          </label>
                                          <div
                                            className="bx--text-input__field-outer-wrapper"
                                          >
                                            <div
                                              className="bx--text-input__field-wrapper"
                                              data-invalid={null}
                                            >
                                              <ForwardRef(EditOff16)
                                                className="bx--text-input__readonly-icon"
                                              >
                                                <Icon
                                                  className="bx--text-input__readonly-icon"
                                                  fill="currentColor"
                                                  height={16}
                                                  preserveAspectRatio="xMidYMid meet"
                                                  viewBox="0 0 32 32"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="bx--text-input__readonly-icon"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    height={16}
                                                    preserveAspectRatio="xMidYMid meet"
                                                    viewBox="0 0 32 32"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M30 28.6L3.4 2 2 3.4l10.1 10.1L4 21.6V28h6.4l8.1-8.1L28.6 30 30 28.6zM9.6 26H6v-3.6l7.5-7.5 3.6 3.6L9.6 26zM29.4 6.2L29.4 6.2l-3.6-3.6c-.8-.8-2-.8-2.8 0l0 0 0 0-8 8 1.4 1.4L20 8.4l3.6 3.6L20 15.6l1.4 1.4 8-8C30.2 8.2 30.2 7 29.4 6.2L29.4 6.2zM25 10.6L21.4 7l3-3L28 7.6 25 10.6z"
                                                    />
                                                  </svg>
                                                </Icon>
                                              </ForwardRef(EditOff16)>
                                              <input
                                                className="bx--text-input bx--text-input--md"
                                                disabled={false}
                                                id="name"
                                                name="name"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                readOnly={true}
                                                type="text"
                                                value=""
                                              />
                                            </div>
                                          </div>
                                        </div>
                                      </TextInput>
                                    </TextField>
                                  </div>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              autoFocus={true}
                              component="select"
                              disabled={false}
                              id="type"
                              includeEmpty={true}
                              initialValue=""
                              isReadOnly={false}
                              isRequired={true}
                              key="type"
                              label="Type"
                              name="type"
                              options={
                                Array [
                                  Object {
                                    "label": "thin",
                                    "value": "thin",
                                  },
                                  Object {
                                    "label": "thick",
                                    "value": "thick",
                                  },
                                ]
                              }
                              placeholder="<Choose>"
                              validate={
                                Array [
                                  Object {
                                    "type": "required",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "autoFocus": true,
                                    "component": "select",
                                    "disabled": false,
                                    "id": "type",
                                    "includeEmpty": true,
                                    "initialValue": "",
                                    "isReadOnly": false,
                                    "isRequired": true,
                                    "label": "Type",
                                    "name": "type",
                                    "options": Array [
                                      Object {
                                        "label": "thin",
                                        "value": "thin",
                                      },
                                      Object {
                                        "label": "thick",
                                        "value": "thick",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    autoFocus={true}
                                    component="select"
                                    disabled={false}
                                    id="type"
                                    includeEmpty={true}
                                    initialValue=""
                                    isReadOnly={false}
                                    isRequired={true}
                                    label="Type"
                                    name="type"
                                    options={
                                      Array [
                                        Object {
                                          "label": "thin",
                                          "value": "thin",
                                        },
                                        Object {
                                          "label": "thick",
                                          "value": "thick",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                    validate={
                                      Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ]
                                    }
                                  >
                                    <Select
                                      autoFocus={true}
                                      component="select"
                                      disabled={false}
                                      id="type"
                                      initialValue=""
                                      isReadOnly={false}
                                      isRequired={true}
                                      label="Type"
                                      loadingMessage="Loading..."
                                      name="type"
                                      options={
                                        Array [
                                          Object {
                                            "label": "<Choose>",
                                            "value": undefined,
                                          },
                                          Object {
                                            "label": "thin",
                                            "value": "thin",
                                          },
                                          Object {
                                            "label": "thick",
                                            "value": "thick",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                      validate={
                                        Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ]
                                      }
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        autoFocus={true}
                                        compareValues={[Function]}
                                        disabled={false}
                                        id="type"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText={
                                          <IsRequired>
                                            Type
                                          </IsRequired>
                                        }
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "<Choose>",
                                              "value": undefined,
                                            },
                                            Object {
                                              "label": "thin",
                                              "value": "thin",
                                            },
                                            Object {
                                              "label": "thick",
                                              "value": "thick",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        readOnly={false}
                                        simpleValue={false}
                                        value=""
                                      >
                                        <ClearedSelect
                                          autoFocus={true}
                                          className=""
                                          closeMenuOnSelect={true}
                                          disabled={false}
                                          hideSelectedOptions={false}
                                          id="type"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText={
                                            <IsRequired>
                                              Type
                                            </IsRequired>
                                          }
                                          name="type"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "<Choose>",
                                                "value": undefined,
                                              },
                                              Object {
                                                "label": "thin",
                                                "value": "thin",
                                              },
                                              Object {
                                                "label": "thick",
                                                "value": "thick",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          readOnly={false}
                                          value=""
                                        >
                                          <Select
                                            autoFocus={true}
                                            className=""
                                            disabled={false}
                                            helperText=""
                                            id="type"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText={
                                              <IsRequired>
                                                Type
                                              </IsRequired>
                                            }
                                            light={false}
                                            name="type"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            readOnly={false}
                                            value=""
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select"
                                              >
                                                <label
                                                  className="bx--label"
                                                  htmlFor="type"
                                                >
                                                  <IsRequired>
                                                    <span
                                                      aria-hidden="true"
                                                      className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                                    >
                                                      *
                                                    </span>
                                                    Type
                                                  </IsRequired>
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    autoFocus={true}
                                                    className="bx--select-input"
                                                    id="type"
                                                    name="type"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    readOnly={false}
                                                    value=""
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="0"
                                                      label="<Choose>"
                                                      text="<Choose>"
                                                      value=""
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="<Choose>"
                                                        value=""
                                                      >
                                                        &lt;Choose&gt;
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="thin"
                                                      label="thin"
                                                      text="thin"
                                                      value="thin"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="thin"
                                                        value="thin"
                                                      >
                                                        thin
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="thick"
                                                      label="thick"
                                                      text="thick"
                                                      value="thick"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="thick"
                                                        value="thick"
                                                      >
                                                        thick
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="text-field"
                              id="size"
                              initialValue=""
                              isRequired={true}
                              key="size"
                              label="Size"
                              name="size"
                              validate={
                                Array [
                                  Object {
                                    "size": 1,
                                    "type": "diskMemoryCheck",
                                    "unit": "MB",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "text-field",
                                    "id": "size",
                                    "initialValue": "",
                                    "isRequired": true,
                                    "label": "Size",
                                    "name": "size",
                                    "validate": Array [
                                      Object {
                                        "size": 1,
                                        "type": "diskMemoryCheck",
                                        "unit": "MB",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <TextField
                                    component="text-field"
                                    id="size"
                                    initialValue=""
                                    isRequired={true}
                                    label="Size"
                                    name="size"
                                    validate={
                                      Array [
                                        Object {
                                          "size": 1,
                                          "type": "diskMemoryCheck",
                                          "unit": "MB",
                                        },
                                      ]
                                    }
                                  >
                                    <TextInput
                                      id="size"
                                      invalid={false}
                                      invalidText=""
                                      key="size"
                                      labelText={
                                        <IsRequired>
                                          Size
                                        </IsRequired>
                                      }
                                      name="size"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      value=""
                                      warn={false}
                                      warnText=""
                                    >
                                      <div
                                        className="bx--form-item bx--text-input-wrapper"
                                      >
                                        <label
                                          className="bx--label"
                                          htmlFor="size"
                                        >
                                          <IsRequired>
                                            <span
                                              aria-hidden="true"
                                              className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                            >
                                              *
                                            </span>
                                            Size
                                          </IsRequired>
                                        </label>
                                        <div
                                          className="bx--text-input__field-outer-wrapper"
                                        >
                                          <div
                                            className="bx--text-input__field-wrapper"
                                            data-invalid={null}
                                          >
                                            <input
                                              className="bx--text-input bx--text-input--md"
                                              disabled={false}
                                              id="size"
                                              name="size"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </div>
                                    </TextInput>
                                  </TextField>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="select"
                              id="unit"
                              initialValue="GB"
                              key="unit"
                              label="Unit"
                              name="unit"
                              options={
                                Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "select",
                                    "id": "unit",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "unit",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    component="select"
                                    id="unit"
                                    initialValue="GB"
                                    label="Unit"
                                    name="unit"
                                    options={
                                      Array [
                                        Object {
                                          "label": "GB",
                                          "value": "GB",
                                        },
                                        Object {
                                          "label": "MB",
                                          "value": "MB",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                  >
                                    <Select
                                      component="select"
                                      id="unit"
                                      initialValue="GB"
                                      label="Unit"
                                      loadingMessage="Loading..."
                                      name="unit"
                                      options={
                                        Array [
                                          Object {
                                            "label": "GB",
                                            "value": "GB",
                                          },
                                          Object {
                                            "label": "MB",
                                            "value": "MB",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        compareValues={[Function]}
                                        id="unit"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText="Unit"
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="unit"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "GB",
                                              "value": "GB",
                                            },
                                            Object {
                                              "label": "MB",
                                              "value": "MB",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        simpleValue={false}
                                        value="GB"
                                      >
                                        <ClearedSelect
                                          className=""
                                          closeMenuOnSelect={true}
                                          hideSelectedOptions={false}
                                          id="unit"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText="Unit"
                                          name="unit"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "GB",
                                                "value": "GB",
                                              },
                                              Object {
                                                "label": "MB",
                                                "value": "MB",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          value="GB"
                                        >
                                          <Select
                                            className=""
                                            disabled={false}
                                            helperText=""
                                            id="unit"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText="Unit"
                                            light={false}
                                            name="unit"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="GB"
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select"
                                              >
                                                <label
                                                  className="bx--label"
                                                  htmlFor="unit"
                                                >
                                                  Unit
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    className="bx--select-input"
                                                    id="unit"
                                                    name="unit"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value="GB"
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="GB"
                                                      label="GB"
                                                      text="GB"
                                                      value="GB"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="GB"
                                                        value="GB"
                                                      >
                                                        GB
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="MB"
                                                      label="MB"
                                                      text="MB"
                                                      value="MB"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="MB"
                                                        value="MB"
                                                      >
                                                        MB
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="select"
                              disabled={false}
                              hideField={false}
                              id="mode"
                              includeEmpty={true}
                              initialValue=""
                              isReadOnly={false}
                              isRequired={true}
                              key="mode"
                              label="Mode"
                              name="mode"
                              options={
                                Array [
                                  Object {
                                    "label": "persistent",
                                    "value": "persistent",
                                  },
                                  Object {
                                    "label": "nonpersistent",
                                    "value": "nonpersistent",
                                  },
                                ]
                              }
                              placeholder="<Choose>"
                              validate={
                                Array [
                                  Object {
                                    "hideField": false,
                                    "type": "customRequired",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "select",
                                    "disabled": false,
                                    "id": "mode",
                                    "includeEmpty": true,
                                    "initialValue": "",
                                    "isReadOnly": false,
                                    "isRequired": true,
                                    "label": "Mode",
                                    "name": "mode",
                                    "options": Array [
                                      Object {
                                        "label": "persistent",
                                        "value": "persistent",
                                      },
                                      Object {
                                        "label": "nonpersistent",
                                        "value": "nonpersistent",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "hideField": false,
                                        "type": "customRequired",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    component="select"
                                    disabled={false}
                                    id="mode"
                                    includeEmpty={true}
                                    initialValue=""
                                    isReadOnly={false}
                                    isRequired={true}
                                    label="Mode"
                                    name="mode"
                                    options={
                                      Array [
                                        Object {
                                          "label": "persistent",
                                          "value": "persistent",
                                        },
                                        Object {
                                          "label": "nonpersistent",
                                          "value": "nonpersistent",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                    validate={
                                      Array [
                                        Object {
                                          "hideField": false,
                                          "type": "customRequired",
                                        },
                                      ]
                                    }
                                  >
                                    <Select
                                      component="select"
                                      disabled={false}
                                      id="mode"
                                      initialValue=""
                                      isReadOnly={false}
                                      isRequired={true}
                                      label="Mode"
                                      loadingMessage="Loading..."
                                      name="mode"
                                      options={
                                        Array [
                                          Object {
                                            "label": "<Choose>",
                                            "value": undefined,
                                          },
                                          Object {
                                            "label": "persistent",
                                            "value": "persistent",
                                          },
                                          Object {
                                            "label": "nonpersistent",
                                            "value": "nonpersistent",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                      validate={
                                        Array [
                                          Object {
                                            "hideField": false,
                                            "type": "customRequired",
                                          },
                                        ]
                                      }
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        compareValues={[Function]}
                                        disabled={false}
                                        id="mode"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText={
                                          <IsRequired>
                                            Mode
                                          </IsRequired>
                                        }
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="mode"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "<Choose>",
                                              "value": undefined,
                                            },
                                            Object {
                                              "label": "persistent",
                                              "value": "persistent",
                                            },
                                            Object {
                                              "label": "nonpersistent",
                                              "value": "nonpersistent",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        readOnly={false}
                                        simpleValue={false}
                                        value=""
                                      >
                                        <ClearedSelect
                                          className=""
                                          closeMenuOnSelect={true}
                                          disabled={false}
                                          hideSelectedOptions={false}
                                          id="mode"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText={
                                            <IsRequired>
                                              Mode
                                            </IsRequired>
                                          }
                                          name="mode"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "<Choose>",
                                                "value": undefined,
                                              },
                                              Object {
                                                "label": "persistent",
                                                "value": "persistent",
                                              },
                                              Object {
                                                "label": "nonpersistent",
                                                "value": "nonpersistent",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          readOnly={false}
                                          value=""
                                        >
                                          <Select
                                            className=""
                                            disabled={false}
                                            helperText=""
                                            id="mode"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText={
                                              <IsRequired>
                                                Mode
                                              </IsRequired>
                                            }
                                            light={false}
                                            name="mode"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            readOnly={false}
                                            value=""
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select"
                                              >
                                                <label
                                                  className="bx--label"
                                                  htmlFor="mode"
                                                >
                                                  <IsRequired>
                                                    <span
                                                      aria-hidden="true"
                                                      className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                                    >
                                                      *
                                                    </span>
                                                    Mode
                                                  </IsRequired>
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    className="bx--select-input"
                                                    id="mode"
                                                    name="mode"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    readOnly={false}
                                                    value=""
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="0"
                                                      label="<Choose>"
                                                      text="<Choose>"
                                                      value=""
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="<Choose>"
                                                        value=""
                                                      >
                                                        &lt;Choose&gt;
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="persistent"
                                                      label="persistent"
                                                      text="persistent"
                                                      value="persistent"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="persistent"
                                                        value="persistent"
                                                      >
                                                        persistent
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="nonpersistent"
                                                      label="nonpersistent"
                                                      text="nonpersistent"
                                                      value="nonpersistent"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="nonpersistent"
                                                        value="nonpersistent"
                                                      >
                                                        nonpersistent
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="select"
                              disabled={false}
                              hideField={false}
                              id="controller"
                              initialValue=""
                              isReadOnly={false}
                              key="controller"
                              label="Controller"
                              name="controller"
                              options={
                                Array [
                                  Object {
                                    "label": "VirtualController",
                                    "value": "VirtualController",
                                  },
                                  Object {
                                    "label": "ParaVirtualController",
                                    "value": "ParaVirtualController",
                                  },
                                  Object {
                                    "label": "VirtualBusController",
                                    "value": "VirtualBusController",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "select",
                                    "disabled": false,
                                    "id": "controller",
                                    "initialValue": "",
                                    "isReadOnly": false,
                                    "label": "Controller",
                                    "name": "controller",
                                    "options": Array [
                                      Object {
                                        "label": "VirtualController",
                                        "value": "VirtualController",
                                      },
                                      Object {
                                        "label": "ParaVirtualController",
                                        "value": "ParaVirtualController",
                                      },
                                      Object {
                                        "label": "VirtualBusController",
                                        "value": "VirtualBusController",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    component="select"
                                    disabled={false}
                                    id="controller"
                                    initialValue=""
                                    isReadOnly={false}
                                    label="Controller"
                                    name="controller"
                                    options={
                                      Array [
                                        Object {
                                          "label": "VirtualController",
                                          "value": "VirtualController",
                                        },
                                        Object {
                                          "label": "ParaVirtualController",
                                          "value": "ParaVirtualController",
                                        },
                                        Object {
                                          "label": "VirtualBusController",
                                          "value": "VirtualBusController",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                  >
                                    <Select
                                      component="select"
                                      disabled={false}
                                      id="controller"
                                      initialValue=""
                                      isReadOnly={false}
                                      label="Controller"
                                      loadingMessage="Loading..."
                                      name="controller"
                                      options={
                                        Array [
                                          Object {
                                            "label": "VirtualController",
                                            "value": "VirtualController",
                                          },
                                          Object {
                                            "label": "ParaVirtualController",
                                            "value": "ParaVirtualController",
                                          },
                                          Object {
                                            "label": "VirtualBusController",
                                            "value": "VirtualBusController",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        compareValues={[Function]}
                                        disabled={false}
                                        id="controller"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText="Controller"
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="controller"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "VirtualController",
                                              "value": "VirtualController",
                                            },
                                            Object {
                                              "label": "ParaVirtualController",
                                              "value": "ParaVirtualController",
                                            },
                                            Object {
                                              "label": "VirtualBusController",
                                              "value": "VirtualBusController",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        readOnly={false}
                                        simpleValue={false}
                                        value=""
                                      >
                                        <ClearedSelect
                                          className=""
                                          closeMenuOnSelect={true}
                                          disabled={false}
                                          hideSelectedOptions={false}
                                          id="controller"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText="Controller"
                                          name="controller"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "VirtualController",
                                                "value": "VirtualController",
                                              },
                                              Object {
                                                "label": "ParaVirtualController",
                                                "value": "ParaVirtualController",
                                              },
                                              Object {
                                                "label": "VirtualBusController",
                                                "value": "VirtualBusController",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          readOnly={false}
                                          value=""
                                        >
                                          <Select
                                            className=""
                                            disabled={false}
                                            helperText=""
                                            id="controller"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText="Controller"
                                            light={false}
                                            name="controller"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            readOnly={false}
                                            value=""
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select"
                                              >
                                                <label
                                                  className="bx--label"
                                                  htmlFor="controller"
                                                >
                                                  Controller
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    className="bx--select-input"
                                                    id="controller"
                                                    name="controller"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    readOnly={false}
                                                    value=""
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="VirtualController"
                                                      label="VirtualController"
                                                      text="VirtualController"
                                                      value="VirtualController"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="VirtualController"
                                                        value="VirtualController"
                                                      >
                                                        VirtualController
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="ParaVirtualController"
                                                      label="ParaVirtualController"
                                                      text="ParaVirtualController"
                                                      value="ParaVirtualController"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="ParaVirtualController"
                                                        value="ParaVirtualController"
                                                      >
                                                        ParaVirtualController
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="VirtualBusController"
                                                      label="VirtualBusController"
                                                      text="VirtualBusController"
                                                      value="VirtualBusController"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="VirtualBusController"
                                                        value="VirtualBusController"
                                                      >
                                                        VirtualBusController
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="switch"
                              disabled={false}
                              hideField={false}
                              id="dependent"
                              initialValue=""
                              key="dependent"
                              label="Dependent"
                              name="dependent"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "disabled": false,
                                    "id": "dependent",
                                    "initialValue": "",
                                    "label": "Dependent",
                                    "name": "dependent",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    disabled={false}
                                    id="dependent"
                                    initialValue=""
                                    label="Dependent"
                                    name="dependent"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="dependent"
                                        key="dependent"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Dependent"
                                        name="dependent"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="dependent"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Dependent"
                                          name="dependent"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="dependent"
                                              name="dependent"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="dependent"
                                            >
                                              Dependent
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="switch"
                              hideField={false}
                              initialValue={false}
                              isReadOnly={false}
                              key="bootable"
                              label="Bootable"
                              name="bootable"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "initialValue": false,
                                    "isReadOnly": false,
                                    "label": "Bootable",
                                    "name": "bootable",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    initialValue={false}
                                    isReadOnly={false}
                                    label="Bootable"
                                    name="bootable"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        id="bootable"
                                        key="bootable"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Bootable"
                                        name="bootable"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        readOnly={false}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          id="bootable"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Bootable"
                                          name="bootable"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          readOnly={false}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              id="bootable"
                                              name="bootable"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              readOnly={false}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="bootable"
                                            >
                                              Bootable
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                          </div>
                        </SubForm>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <SingleField
                    component="spy-field"
                    key="spy-field"
                    name="spy-field"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SpyField
                          component="spy-field"
                          name="spy-field"
                        >
                          <FormSpy
                            onChange={[Function]}
                            subscription={
                              Object {
                                "pristine": true,
                                "valid": true,
                              }
                            }
                          />
                        </SpyField>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <div
                    className="bx--btn-set"
                  >
                    <button
                      alt="Save"
                      className="bx--btn bx--btn--primary"
                      disabled={true}
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      alt="Reset"
                      className="bx--btn bx--btn--secondary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Reset
                    </button>
                    <button
                      alt="Cancel"
                      className="bx--btn bx--btn--secondary"
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              </ReconfigureTemplate>
            </FormTemplate>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </ReconfigureVmForm>
</Provider>
`;

exports[`Reconfigure VM form component should render reconfigure form and show disk resize form 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReconfigureVmForm
    memory={
      Object {
        "max": 10,
        "min": 1024,
      }
    }
    options={
      Object {
        "avail_adapter_names": Array [],
        "controller_types": Array [
          "VirtualController",
          "ParaVirtualController",
          "VirtualBusController",
        ],
        "cores_options": Array [
          1,
          2,
          3,
          4,
        ],
        "host_file_options": Array [
          Array [
            "host file test 1.iso",
            "host file test 1.iso,18",
          ],
          Array [
            "host file test 2.iso",
            "host file test 2.iso,18",
          ],
          Array [
            "host file test 3.iso",
            "host file test 3.iso,18",
          ],
        ],
        "socket_options": Array [
          1,
          2,
          3,
          4,
        ],
        "vlan_options": Array [
          "vlan test 0",
          "vlan test 1",
          "vlan test 3",
        ],
      }
    }
    recordId={
      Array [
        12,
      ]
    }
    requestId="new"
    roles={
      Object {
        "allowCdromsChange": true,
        "allowCpuChange": true,
        "allowDiskChange": true,
        "allowDiskSizeChange": true,
        "allowMemoryChange": true,
        "allowNetworkChange": true,
        "isRedhat": true,
        "isVmwareCloud": false,
        "isVmwareInfra": true,
      }
    }
  >
    <Connect(MiqFormRenderer)
      FormTemplate={[Function]}
      clearOnUnmount={true}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "reconfigure-table": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "cb_memory": false,
          "cores_per_socket_count": "1",
          "mem_type": "GB",
          "memory": "2",
          "processor": false,
          "socket_count": "2",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "className": "disk_form",
              "component": "sub-form",
              "fields": Array [
                Array [
                  Object {
                    "component": "text-field",
                    "hideField": false,
                    "id": "name",
                    "initialValue": "disk test 2",
                    "isReadOnly": true,
                    "label": "Name",
                    "name": "name",
                  },
                  Object {
                    "autoFocus": true,
                    "component": "select",
                    "disabled": true,
                    "id": "type",
                    "includeEmpty": true,
                    "initialValue": "thin",
                    "isReadOnly": true,
                    "isRequired": true,
                    "label": "Type",
                    "name": "type",
                    "options": Array [
                      Object {
                        "label": "thin",
                        "value": "thin",
                      },
                      Object {
                        "label": "thick",
                        "value": "thick",
                      },
                    ],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "type": "required",
                      },
                    ],
                  },
                  Object {
                    "component": "text-field",
                    "id": "size",
                    "initialValue": "16",
                    "isRequired": true,
                    "label": "Size",
                    "name": "size",
                    "validate": Array [
                      Object {
                        "size": 17,
                        "type": "diskMemoryCheck",
                        "unit": "GB",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "id": "unit",
                    "initialValue": "GB",
                    "label": "Unit",
                    "name": "unit",
                    "options": Array [
                      Object {
                        "label": "GB",
                        "value": "GB",
                      },
                      Object {
                        "label": "MB",
                        "value": "MB",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "disabled": true,
                    "hideField": false,
                    "id": "mode",
                    "includeEmpty": true,
                    "initialValue": "persistent",
                    "isReadOnly": true,
                    "isRequired": true,
                    "label": "Mode",
                    "name": "mode",
                    "options": Array [
                      Object {
                        "label": "persistent",
                        "value": "persistent",
                      },
                      Object {
                        "label": "nonpersistent",
                        "value": "nonpersistent",
                      },
                    ],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "hideField": false,
                        "type": "customRequired",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "disabled": true,
                    "hideField": false,
                    "id": "controller",
                    "initialValue": "None",
                    "isReadOnly": true,
                    "label": "Controller",
                    "name": "controller",
                    "options": Array [
                      Object {
                        "label": "VirtualController",
                        "value": "VirtualController",
                      },
                      Object {
                        "label": "ParaVirtualController",
                        "value": "ParaVirtualController",
                      },
                      Object {
                        "label": "VirtualBusController",
                        "value": "VirtualBusController",
                      },
                    ],
                  },
                  Object {
                    "component": "switch",
                    "disabled": true,
                    "hideField": false,
                    "id": "dependent",
                    "initialValue": false,
                    "label": "Dependent",
                    "name": "dependent",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "component": "switch",
                    "hideField": false,
                    "initialValue": false,
                    "isReadOnly": true,
                    "label": "Bootable",
                    "name": "bootable",
                    "offText": "No",
                    "onText": "Yes",
                  },
                ],
              ],
              "name": "BasicInformation",
              "title": "Resize Disk",
            },
          ],
        }
      }
      validatorMapper={
        Object {
          "cpuCheck": [Function],
          "customRequired": [Function],
          "diskMemoryCheck": [Function],
          "memoryCheck": [Function],
        }
      }
    >
      <MiqFormRenderer
        FormTemplate={[Function]}
        buttonsLabels={Object {}}
        canReset={false}
        className="form-react"
        clearOnUnmount={true}
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "reconfigure-table": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "cb_memory": false,
            "cores_per_socket_count": "1",
            "mem_type": "GB",
            "memory": "2",
            "processor": false,
            "socket_count": "2",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "className": "disk_form",
                "component": "sub-form",
                "fields": Array [
                  Array [
                    Object {
                      "component": "text-field",
                      "hideField": false,
                      "id": "name",
                      "initialValue": "disk test 2",
                      "isReadOnly": true,
                      "label": "Name",
                      "name": "name",
                    },
                    Object {
                      "autoFocus": true,
                      "component": "select",
                      "disabled": true,
                      "id": "type",
                      "includeEmpty": true,
                      "initialValue": "thin",
                      "isReadOnly": true,
                      "isRequired": true,
                      "label": "Type",
                      "name": "type",
                      "options": Array [
                        Object {
                          "label": "thin",
                          "value": "thin",
                        },
                        Object {
                          "label": "thick",
                          "value": "thick",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "text-field",
                      "id": "size",
                      "initialValue": "16",
                      "isRequired": true,
                      "label": "Size",
                      "name": "size",
                      "validate": Array [
                        Object {
                          "size": 17,
                          "type": "diskMemoryCheck",
                          "unit": "GB",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "id": "unit",
                      "initialValue": "GB",
                      "label": "Unit",
                      "name": "unit",
                      "options": Array [
                        Object {
                          "label": "GB",
                          "value": "GB",
                        },
                        Object {
                          "label": "MB",
                          "value": "MB",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "disabled": true,
                      "hideField": false,
                      "id": "mode",
                      "includeEmpty": true,
                      "initialValue": "persistent",
                      "isReadOnly": true,
                      "isRequired": true,
                      "label": "Mode",
                      "name": "mode",
                      "options": Array [
                        Object {
                          "label": "persistent",
                          "value": "persistent",
                        },
                        Object {
                          "label": "nonpersistent",
                          "value": "nonpersistent",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "hideField": false,
                          "type": "customRequired",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "disabled": true,
                      "hideField": false,
                      "id": "controller",
                      "initialValue": "None",
                      "isReadOnly": true,
                      "label": "Controller",
                      "name": "controller",
                      "options": Array [
                        Object {
                          "label": "VirtualController",
                          "value": "VirtualController",
                        },
                        Object {
                          "label": "ParaVirtualController",
                          "value": "ParaVirtualController",
                        },
                        Object {
                          "label": "VirtualBusController",
                          "value": "VirtualBusController",
                        },
                      ],
                    },
                    Object {
                      "component": "switch",
                      "disabled": true,
                      "hideField": false,
                      "id": "dependent",
                      "initialValue": false,
                      "label": "Dependent",
                      "name": "dependent",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "component": "switch",
                      "hideField": false,
                      "initialValue": false,
                      "isReadOnly": true,
                      "label": "Bootable",
                      "name": "bootable",
                      "offText": "No",
                      "onText": "Yes",
                    },
                  ],
                ],
                "name": "BasicInformation",
                "title": "Resize Disk",
              },
            ],
          }
        }
        showFormControls={true}
        validatorMapper={
          Object {
            "cpuCheck": [Function],
            "customRequired": [Function],
            "diskMemoryCheck": [Function],
            "memoryCheck": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={true}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "reconfigure-table": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "cb_memory": false,
              "cores_per_socket_count": "1",
              "mem_type": "GB",
              "memory": "2",
              "processor": false,
              "socket_count": "2",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "className": "disk_form",
                  "component": "sub-form",
                  "fields": Array [
                    Array [
                      Object {
                        "component": "text-field",
                        "hideField": false,
                        "id": "name",
                        "initialValue": "disk test 2",
                        "isReadOnly": true,
                        "label": "Name",
                        "name": "name",
                      },
                      Object {
                        "autoFocus": true,
                        "component": "select",
                        "disabled": true,
                        "id": "type",
                        "includeEmpty": true,
                        "initialValue": "thin",
                        "isReadOnly": true,
                        "isRequired": true,
                        "label": "Type",
                        "name": "type",
                        "options": Array [
                          Object {
                            "label": "thin",
                            "value": "thin",
                          },
                          Object {
                            "label": "thick",
                            "value": "thick",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "size",
                        "initialValue": "16",
                        "isRequired": true,
                        "label": "Size",
                        "name": "size",
                        "validate": Array [
                          Object {
                            "size": 17,
                            "type": "diskMemoryCheck",
                            "unit": "GB",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "id": "unit",
                        "initialValue": "GB",
                        "label": "Unit",
                        "name": "unit",
                        "options": Array [
                          Object {
                            "label": "GB",
                            "value": "GB",
                          },
                          Object {
                            "label": "MB",
                            "value": "MB",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "disabled": true,
                        "hideField": false,
                        "id": "mode",
                        "includeEmpty": true,
                        "initialValue": "persistent",
                        "isReadOnly": true,
                        "isRequired": true,
                        "label": "Mode",
                        "name": "mode",
                        "options": Array [
                          Object {
                            "label": "persistent",
                            "value": "persistent",
                          },
                          Object {
                            "label": "nonpersistent",
                            "value": "nonpersistent",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "hideField": false,
                            "type": "customRequired",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "disabled": true,
                        "hideField": false,
                        "id": "controller",
                        "initialValue": "None",
                        "isReadOnly": true,
                        "label": "Controller",
                        "name": "controller",
                        "options": Array [
                          Object {
                            "label": "VirtualController",
                            "value": "VirtualController",
                          },
                          Object {
                            "label": "ParaVirtualController",
                            "value": "ParaVirtualController",
                          },
                          Object {
                            "label": "VirtualBusController",
                            "value": "VirtualBusController",
                          },
                        ],
                      },
                      Object {
                        "component": "switch",
                        "disabled": true,
                        "hideField": false,
                        "id": "dependent",
                        "initialValue": false,
                        "label": "Dependent",
                        "name": "dependent",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "component": "switch",
                        "hideField": false,
                        "initialValue": false,
                        "isReadOnly": true,
                        "label": "Bootable",
                        "name": "bootable",
                        "offText": "No",
                        "onText": "Yes",
                      },
                    ],
                  ],
                  "name": "BasicInformation",
                  "title": "Resize Disk",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validatorMapper={
            Object {
              "cpuCheck": [Function],
              "customRequired": [Function],
              "diskMemoryCheck": [Function],
              "memoryCheck": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "cb_memory": false,
                "cores_per_socket_count": "1",
                "mem_type": "GB",
                "memory": "2",
                "processor": false,
                "socket_count": "2",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <FormTemplate
              formFields={
                Array [
                  <SingleField
                    className="disk_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "text-field",
                            "hideField": false,
                            "id": "name",
                            "initialValue": "disk test 2",
                            "isReadOnly": true,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "autoFocus": true,
                            "component": "select",
                            "disabled": true,
                            "id": "type",
                            "includeEmpty": true,
                            "initialValue": "thin",
                            "isReadOnly": true,
                            "isRequired": true,
                            "label": "Type",
                            "name": "type",
                            "options": Array [
                              Object {
                                "label": "thin",
                                "value": "thin",
                              },
                              Object {
                                "label": "thick",
                                "value": "thick",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "size",
                            "initialValue": "16",
                            "isRequired": true,
                            "label": "Size",
                            "name": "size",
                            "validate": Array [
                              Object {
                                "size": 17,
                                "type": "diskMemoryCheck",
                                "unit": "GB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "id": "unit",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "unit",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": true,
                            "hideField": false,
                            "id": "mode",
                            "includeEmpty": true,
                            "initialValue": "persistent",
                            "isReadOnly": true,
                            "isRequired": true,
                            "label": "Mode",
                            "name": "mode",
                            "options": Array [
                              Object {
                                "label": "persistent",
                                "value": "persistent",
                              },
                              Object {
                                "label": "nonpersistent",
                                "value": "nonpersistent",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": false,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": true,
                            "hideField": false,
                            "id": "controller",
                            "initialValue": "None",
                            "isReadOnly": true,
                            "label": "Controller",
                            "name": "controller",
                            "options": Array [
                              Object {
                                "label": "VirtualController",
                                "value": "VirtualController",
                              },
                              Object {
                                "label": "ParaVirtualController",
                                "value": "ParaVirtualController",
                              },
                              Object {
                                "label": "VirtualBusController",
                                "value": "VirtualBusController",
                              },
                            ],
                          },
                          Object {
                            "component": "switch",
                            "disabled": true,
                            "hideField": false,
                            "id": "dependent",
                            "initialValue": false,
                            "label": "Dependent",
                            "name": "dependent",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "component": "switch",
                            "hideField": false,
                            "initialValue": false,
                            "isReadOnly": true,
                            "label": "Bootable",
                            "name": "bootable",
                            "offText": "No",
                            "onText": "Yes",
                          },
                        ],
                      ]
                    }
                    name="BasicInformation"
                    title="Resize Disk"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "className": "disk_form",
                      "component": "sub-form",
                      "fields": Array [
                        Array [
                          Object {
                            "component": "text-field",
                            "hideField": false,
                            "id": "name",
                            "initialValue": "disk test 2",
                            "isReadOnly": true,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "autoFocus": true,
                            "component": "select",
                            "disabled": true,
                            "id": "type",
                            "includeEmpty": true,
                            "initialValue": "thin",
                            "isReadOnly": true,
                            "isRequired": true,
                            "label": "Type",
                            "name": "type",
                            "options": Array [
                              Object {
                                "label": "thin",
                                "value": "thin",
                              },
                              Object {
                                "label": "thick",
                                "value": "thick",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "size",
                            "initialValue": "16",
                            "isRequired": true,
                            "label": "Size",
                            "name": "size",
                            "validate": Array [
                              Object {
                                "size": 17,
                                "type": "diskMemoryCheck",
                                "unit": "GB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "id": "unit",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "unit",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": true,
                            "hideField": false,
                            "id": "mode",
                            "includeEmpty": true,
                            "initialValue": "persistent",
                            "isReadOnly": true,
                            "isRequired": true,
                            "label": "Mode",
                            "name": "mode",
                            "options": Array [
                              Object {
                                "label": "persistent",
                                "value": "persistent",
                              },
                              Object {
                                "label": "nonpersistent",
                                "value": "nonpersistent",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": false,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": true,
                            "hideField": false,
                            "id": "controller",
                            "initialValue": "None",
                            "isReadOnly": true,
                            "label": "Controller",
                            "name": "controller",
                            "options": Array [
                              Object {
                                "label": "VirtualController",
                                "value": "VirtualController",
                              },
                              Object {
                                "label": "ParaVirtualController",
                                "value": "ParaVirtualController",
                              },
                              Object {
                                "label": "VirtualBusController",
                                "value": "VirtualBusController",
                              },
                            ],
                          },
                          Object {
                            "component": "switch",
                            "disabled": true,
                            "hideField": false,
                            "id": "dependent",
                            "initialValue": false,
                            "label": "Dependent",
                            "name": "dependent",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "component": "switch",
                            "hideField": false,
                            "initialValue": false,
                            "isReadOnly": true,
                            "label": "Bootable",
                            "name": "bootable",
                            "offText": "No",
                            "onText": "Yes",
                          },
                        ],
                      ],
                      "name": "BasicInformation",
                      "title": "Resize Disk",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <ReconfigureTemplate
                canSubmit={false}
                formFields={
                  Array [
                    <SingleField
                      className="disk_form"
                      component="sub-form"
                      fields={
                        Array [
                          Array [
                            Object {
                              "component": "text-field",
                              "hideField": false,
                              "id": "name",
                              "initialValue": "disk test 2",
                              "isReadOnly": true,
                              "label": "Name",
                              "name": "name",
                            },
                            Object {
                              "autoFocus": true,
                              "component": "select",
                              "disabled": true,
                              "id": "type",
                              "includeEmpty": true,
                              "initialValue": "thin",
                              "isReadOnly": true,
                              "isRequired": true,
                              "label": "Type",
                              "name": "type",
                              "options": Array [
                                Object {
                                  "label": "thin",
                                  "value": "thin",
                                },
                                Object {
                                  "label": "thick",
                                  "value": "thick",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "text-field",
                              "id": "size",
                              "initialValue": "16",
                              "isRequired": true,
                              "label": "Size",
                              "name": "size",
                              "validate": Array [
                                Object {
                                  "size": 17,
                                  "type": "diskMemoryCheck",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "id": "unit",
                              "initialValue": "GB",
                              "label": "Unit",
                              "name": "unit",
                              "options": Array [
                                Object {
                                  "label": "GB",
                                  "value": "GB",
                                },
                                Object {
                                  "label": "MB",
                                  "value": "MB",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "disabled": true,
                              "hideField": false,
                              "id": "mode",
                              "includeEmpty": true,
                              "initialValue": "persistent",
                              "isReadOnly": true,
                              "isRequired": true,
                              "label": "Mode",
                              "name": "mode",
                              "options": Array [
                                Object {
                                  "label": "persistent",
                                  "value": "persistent",
                                },
                                Object {
                                  "label": "nonpersistent",
                                  "value": "nonpersistent",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "hideField": false,
                                  "type": "customRequired",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "disabled": true,
                              "hideField": false,
                              "id": "controller",
                              "initialValue": "None",
                              "isReadOnly": true,
                              "label": "Controller",
                              "name": "controller",
                              "options": Array [
                                Object {
                                  "label": "VirtualController",
                                  "value": "VirtualController",
                                },
                                Object {
                                  "label": "ParaVirtualController",
                                  "value": "ParaVirtualController",
                                },
                                Object {
                                  "label": "VirtualBusController",
                                  "value": "VirtualBusController",
                                },
                              ],
                            },
                            Object {
                              "component": "switch",
                              "disabled": true,
                              "hideField": false,
                              "id": "dependent",
                              "initialValue": false,
                              "label": "Dependent",
                              "name": "dependent",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "component": "switch",
                              "hideField": false,
                              "initialValue": false,
                              "isReadOnly": true,
                              "label": "Bootable",
                              "name": "bootable",
                              "offText": "No",
                              "onText": "Yes",
                            },
                          ],
                        ]
                      }
                      name="BasicInformation"
                      title="Resize Disk"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                hideButtons={false}
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "className": "disk_form",
                        "component": "sub-form",
                        "fields": Array [
                          Array [
                            Object {
                              "component": "text-field",
                              "hideField": false,
                              "id": "name",
                              "initialValue": "disk test 2",
                              "isReadOnly": true,
                              "label": "Name",
                              "name": "name",
                            },
                            Object {
                              "autoFocus": true,
                              "component": "select",
                              "disabled": true,
                              "id": "type",
                              "includeEmpty": true,
                              "initialValue": "thin",
                              "isReadOnly": true,
                              "isRequired": true,
                              "label": "Type",
                              "name": "type",
                              "options": Array [
                                Object {
                                  "label": "thin",
                                  "value": "thin",
                                },
                                Object {
                                  "label": "thick",
                                  "value": "thick",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "text-field",
                              "id": "size",
                              "initialValue": "16",
                              "isRequired": true,
                              "label": "Size",
                              "name": "size",
                              "validate": Array [
                                Object {
                                  "size": 17,
                                  "type": "diskMemoryCheck",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "id": "unit",
                              "initialValue": "GB",
                              "label": "Unit",
                              "name": "unit",
                              "options": Array [
                                Object {
                                  "label": "GB",
                                  "value": "GB",
                                },
                                Object {
                                  "label": "MB",
                                  "value": "MB",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "disabled": true,
                              "hideField": false,
                              "id": "mode",
                              "includeEmpty": true,
                              "initialValue": "persistent",
                              "isReadOnly": true,
                              "isRequired": true,
                              "label": "Mode",
                              "name": "mode",
                              "options": Array [
                                Object {
                                  "label": "persistent",
                                  "value": "persistent",
                                },
                                Object {
                                  "label": "nonpersistent",
                                  "value": "nonpersistent",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "hideField": false,
                                  "type": "customRequired",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "disabled": true,
                              "hideField": false,
                              "id": "controller",
                              "initialValue": "None",
                              "isReadOnly": true,
                              "label": "Controller",
                              "name": "controller",
                              "options": Array [
                                Object {
                                  "label": "VirtualController",
                                  "value": "VirtualController",
                                },
                                Object {
                                  "label": "ParaVirtualController",
                                  "value": "ParaVirtualController",
                                },
                                Object {
                                  "label": "VirtualBusController",
                                  "value": "VirtualBusController",
                                },
                              ],
                            },
                            Object {
                              "component": "switch",
                              "disabled": true,
                              "hideField": false,
                              "id": "dependent",
                              "initialValue": false,
                              "label": "Dependent",
                              "name": "dependent",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "component": "switch",
                              "hideField": false,
                              "initialValue": false,
                              "isReadOnly": true,
                              "label": "Bootable",
                              "name": "bootable",
                              "offText": "No",
                              "onText": "Yes",
                            },
                          ],
                        ],
                        "name": "BasicInformation",
                        "title": "Resize Disk",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
              >
                <form
                  className="form-react reconfigure-form"
                  onSubmit={[Function]}
                >
                  <SingleField
                    className="disk_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "text-field",
                            "hideField": false,
                            "id": "name",
                            "initialValue": "disk test 2",
                            "isReadOnly": true,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "autoFocus": true,
                            "component": "select",
                            "disabled": true,
                            "id": "type",
                            "includeEmpty": true,
                            "initialValue": "thin",
                            "isReadOnly": true,
                            "isRequired": true,
                            "label": "Type",
                            "name": "type",
                            "options": Array [
                              Object {
                                "label": "thin",
                                "value": "thin",
                              },
                              Object {
                                "label": "thick",
                                "value": "thick",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "size",
                            "initialValue": "16",
                            "isRequired": true,
                            "label": "Size",
                            "name": "size",
                            "validate": Array [
                              Object {
                                "size": 17,
                                "type": "diskMemoryCheck",
                                "unit": "GB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "id": "unit",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "unit",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": true,
                            "hideField": false,
                            "id": "mode",
                            "includeEmpty": true,
                            "initialValue": "persistent",
                            "isReadOnly": true,
                            "isRequired": true,
                            "label": "Mode",
                            "name": "mode",
                            "options": Array [
                              Object {
                                "label": "persistent",
                                "value": "persistent",
                              },
                              Object {
                                "label": "nonpersistent",
                                "value": "nonpersistent",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": false,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "disabled": true,
                            "hideField": false,
                            "id": "controller",
                            "initialValue": "None",
                            "isReadOnly": true,
                            "label": "Controller",
                            "name": "controller",
                            "options": Array [
                              Object {
                                "label": "VirtualController",
                                "value": "VirtualController",
                              },
                              Object {
                                "label": "ParaVirtualController",
                                "value": "ParaVirtualController",
                              },
                              Object {
                                "label": "VirtualBusController",
                                "value": "VirtualBusController",
                              },
                            ],
                          },
                          Object {
                            "component": "switch",
                            "disabled": true,
                            "hideField": false,
                            "id": "dependent",
                            "initialValue": false,
                            "label": "Dependent",
                            "name": "dependent",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "component": "switch",
                            "hideField": false,
                            "initialValue": false,
                            "isReadOnly": true,
                            "label": "Bootable",
                            "name": "bootable",
                            "offText": "No",
                            "onText": "Yes",
                          },
                        ],
                      ]
                    }
                    key="BasicInformation"
                    name="BasicInformation"
                    title="Resize Disk"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "className": "disk_form",
                          "component": "sub-form",
                          "fields": Array [
                            Array [
                              Object {
                                "component": "text-field",
                                "hideField": false,
                                "id": "name",
                                "initialValue": "disk test 2",
                                "isReadOnly": true,
                                "label": "Name",
                                "name": "name",
                              },
                              Object {
                                "autoFocus": true,
                                "component": "select",
                                "disabled": true,
                                "id": "type",
                                "includeEmpty": true,
                                "initialValue": "thin",
                                "isReadOnly": true,
                                "isRequired": true,
                                "label": "Type",
                                "name": "type",
                                "options": Array [
                                  Object {
                                    "label": "thin",
                                    "value": "thin",
                                  },
                                  Object {
                                    "label": "thick",
                                    "value": "thick",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "size",
                                "initialValue": "16",
                                "isRequired": true,
                                "label": "Size",
                                "name": "size",
                                "validate": Array [
                                  Object {
                                    "size": 17,
                                    "type": "diskMemoryCheck",
                                    "unit": "GB",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "id": "unit",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "unit",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "disabled": true,
                                "hideField": false,
                                "id": "mode",
                                "includeEmpty": true,
                                "initialValue": "persistent",
                                "isReadOnly": true,
                                "isRequired": true,
                                "label": "Mode",
                                "name": "mode",
                                "options": Array [
                                  Object {
                                    "label": "persistent",
                                    "value": "persistent",
                                  },
                                  Object {
                                    "label": "nonpersistent",
                                    "value": "nonpersistent",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "hideField": false,
                                    "type": "customRequired",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "disabled": true,
                                "hideField": false,
                                "id": "controller",
                                "initialValue": "None",
                                "isReadOnly": true,
                                "label": "Controller",
                                "name": "controller",
                                "options": Array [
                                  Object {
                                    "label": "VirtualController",
                                    "value": "VirtualController",
                                  },
                                  Object {
                                    "label": "ParaVirtualController",
                                    "value": "ParaVirtualController",
                                  },
                                  Object {
                                    "label": "VirtualBusController",
                                    "value": "VirtualBusController",
                                  },
                                ],
                              },
                              Object {
                                "component": "switch",
                                "disabled": true,
                                "hideField": false,
                                "id": "dependent",
                                "initialValue": false,
                                "label": "Dependent",
                                "name": "dependent",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "component": "switch",
                                "hideField": false,
                                "initialValue": false,
                                "isReadOnly": true,
                                "label": "Bootable",
                                "name": "bootable",
                                "offText": "No",
                                "onText": "Yes",
                              },
                            ],
                          ],
                          "name": "BasicInformation",
                          "title": "Resize Disk",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SubForm
                          DescriptionElement="p"
                          TitleElement="h3"
                          className="disk_form"
                          component="sub-form"
                          fields={
                            Array [
                              Array [
                                Object {
                                  "component": "text-field",
                                  "hideField": false,
                                  "id": "name",
                                  "initialValue": "disk test 2",
                                  "isReadOnly": true,
                                  "label": "Name",
                                  "name": "name",
                                },
                                Object {
                                  "autoFocus": true,
                                  "component": "select",
                                  "disabled": true,
                                  "id": "type",
                                  "includeEmpty": true,
                                  "initialValue": "thin",
                                  "isReadOnly": true,
                                  "isRequired": true,
                                  "label": "Type",
                                  "name": "type",
                                  "options": Array [
                                    Object {
                                      "label": "thin",
                                      "value": "thin",
                                    },
                                    Object {
                                      "label": "thick",
                                      "value": "thick",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "size",
                                  "initialValue": "16",
                                  "isRequired": true,
                                  "label": "Size",
                                  "name": "size",
                                  "validate": Array [
                                    Object {
                                      "size": 17,
                                      "type": "diskMemoryCheck",
                                      "unit": "GB",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "id": "unit",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "unit",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "disabled": true,
                                  "hideField": false,
                                  "id": "mode",
                                  "includeEmpty": true,
                                  "initialValue": "persistent",
                                  "isReadOnly": true,
                                  "isRequired": true,
                                  "label": "Mode",
                                  "name": "mode",
                                  "options": Array [
                                    Object {
                                      "label": "persistent",
                                      "value": "persistent",
                                    },
                                    Object {
                                      "label": "nonpersistent",
                                      "value": "nonpersistent",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "hideField": false,
                                      "type": "customRequired",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "disabled": true,
                                  "hideField": false,
                                  "id": "controller",
                                  "initialValue": "None",
                                  "isReadOnly": true,
                                  "label": "Controller",
                                  "name": "controller",
                                  "options": Array [
                                    Object {
                                      "label": "VirtualController",
                                      "value": "VirtualController",
                                    },
                                    Object {
                                      "label": "ParaVirtualController",
                                      "value": "ParaVirtualController",
                                    },
                                    Object {
                                      "label": "VirtualBusController",
                                      "value": "VirtualBusController",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "switch",
                                  "disabled": true,
                                  "hideField": false,
                                  "id": "dependent",
                                  "initialValue": false,
                                  "label": "Dependent",
                                  "name": "dependent",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "component": "switch",
                                  "hideField": false,
                                  "initialValue": false,
                                  "isReadOnly": true,
                                  "label": "Bootable",
                                  "name": "bootable",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                              ],
                            ]
                          }
                          name="BasicInformation"
                          title="Resize Disk"
                        >
                          <div
                            className="disk_form"
                            name="BasicInformation"
                          >
                            <div>
                              <h3>
                                Resize Disk
                              </h3>
                            </div>
                            <SingleField
                              component="text-field"
                              hideField={false}
                              id="name"
                              initialValue="disk test 2"
                              isReadOnly={true}
                              key="name"
                              label="Name"
                              name="name"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "text-field",
                                    "id": "name",
                                    "initialValue": "disk test 2",
                                    "isReadOnly": true,
                                    "label": "Name",
                                    "name": "name",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <TextField
                                    component="text-field"
                                    id="name"
                                    initialValue="disk test 2"
                                    isReadOnly={true}
                                    label="Name"
                                    name="name"
                                  >
                                    <TextInput
                                      id="name"
                                      invalid={false}
                                      invalidText=""
                                      key="name"
                                      labelText="Name"
                                      name="name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      readOnly={true}
                                      value="disk test 2"
                                      warn={false}
                                      warnText=""
                                    >
                                      <div
                                        className="bx--form-item bx--text-input-wrapper bx--text-input-wrapper--readonly"
                                      >
                                        <label
                                          className="bx--label"
                                          htmlFor="name"
                                        >
                                          Name
                                        </label>
                                        <div
                                          className="bx--text-input__field-outer-wrapper"
                                        >
                                          <div
                                            className="bx--text-input__field-wrapper"
                                            data-invalid={null}
                                          >
                                            <ForwardRef(EditOff16)
                                              className="bx--text-input__readonly-icon"
                                            >
                                              <Icon
                                                className="bx--text-input__readonly-icon"
                                                fill="currentColor"
                                                height={16}
                                                preserveAspectRatio="xMidYMid meet"
                                                viewBox="0 0 32 32"
                                                width={16}
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="bx--text-input__readonly-icon"
                                                  fill="currentColor"
                                                  focusable="false"
                                                  height={16}
                                                  preserveAspectRatio="xMidYMid meet"
                                                  viewBox="0 0 32 32"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M30 28.6L3.4 2 2 3.4l10.1 10.1L4 21.6V28h6.4l8.1-8.1L28.6 30 30 28.6zM9.6 26H6v-3.6l7.5-7.5 3.6 3.6L9.6 26zM29.4 6.2L29.4 6.2l-3.6-3.6c-.8-.8-2-.8-2.8 0l0 0 0 0-8 8 1.4 1.4L20 8.4l3.6 3.6L20 15.6l1.4 1.4 8-8C30.2 8.2 30.2 7 29.4 6.2L29.4 6.2zM25 10.6L21.4 7l3-3L28 7.6 25 10.6z"
                                                  />
                                                </svg>
                                              </Icon>
                                            </ForwardRef(EditOff16)>
                                            <input
                                              className="bx--text-input bx--text-input--md"
                                              disabled={false}
                                              id="name"
                                              name="name"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              readOnly={true}
                                              type="text"
                                              value="disk test 2"
                                            />
                                          </div>
                                        </div>
                                      </div>
                                    </TextInput>
                                  </TextField>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              autoFocus={true}
                              component="select"
                              disabled={true}
                              id="type"
                              includeEmpty={true}
                              initialValue="thin"
                              isReadOnly={true}
                              isRequired={true}
                              key="type"
                              label="Type"
                              name="type"
                              options={
                                Array [
                                  Object {
                                    "label": "thin",
                                    "value": "thin",
                                  },
                                  Object {
                                    "label": "thick",
                                    "value": "thick",
                                  },
                                ]
                              }
                              placeholder="<Choose>"
                              validate={
                                Array [
                                  Object {
                                    "type": "required",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "autoFocus": true,
                                    "component": "select",
                                    "disabled": true,
                                    "id": "type",
                                    "includeEmpty": true,
                                    "initialValue": "thin",
                                    "isReadOnly": true,
                                    "isRequired": true,
                                    "label": "Type",
                                    "name": "type",
                                    "options": Array [
                                      Object {
                                        "label": "thin",
                                        "value": "thin",
                                      },
                                      Object {
                                        "label": "thick",
                                        "value": "thick",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    autoFocus={true}
                                    component="select"
                                    disabled={true}
                                    id="type"
                                    includeEmpty={true}
                                    initialValue="thin"
                                    isReadOnly={true}
                                    isRequired={true}
                                    label="Type"
                                    name="type"
                                    options={
                                      Array [
                                        Object {
                                          "label": "thin",
                                          "value": "thin",
                                        },
                                        Object {
                                          "label": "thick",
                                          "value": "thick",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                    validate={
                                      Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ]
                                    }
                                  >
                                    <Select
                                      autoFocus={true}
                                      component="select"
                                      disabled={true}
                                      id="type"
                                      initialValue="thin"
                                      isReadOnly={true}
                                      isRequired={true}
                                      label="Type"
                                      loadingMessage="Loading..."
                                      name="type"
                                      options={
                                        Array [
                                          Object {
                                            "label": "<Choose>",
                                            "value": undefined,
                                          },
                                          Object {
                                            "label": "thin",
                                            "value": "thin",
                                          },
                                          Object {
                                            "label": "thick",
                                            "value": "thick",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                      validate={
                                        Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ]
                                      }
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        autoFocus={true}
                                        compareValues={[Function]}
                                        disabled={true}
                                        id="type"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText={
                                          <IsRequired>
                                            Type
                                          </IsRequired>
                                        }
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "<Choose>",
                                              "value": undefined,
                                            },
                                            Object {
                                              "label": "thin",
                                              "value": "thin",
                                            },
                                            Object {
                                              "label": "thick",
                                              "value": "thick",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        readOnly={true}
                                        simpleValue={false}
                                        value="thin"
                                      >
                                        <ClearedSelect
                                          autoFocus={true}
                                          className=""
                                          closeMenuOnSelect={true}
                                          disabled={true}
                                          hideSelectedOptions={false}
                                          id="type"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText={
                                            <IsRequired>
                                              Type
                                            </IsRequired>
                                          }
                                          name="type"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "<Choose>",
                                                "value": undefined,
                                              },
                                              Object {
                                                "label": "thin",
                                                "value": "thin",
                                              },
                                              Object {
                                                "label": "thick",
                                                "value": "thick",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          readOnly={true}
                                          value="thin"
                                        >
                                          <Select
                                            autoFocus={true}
                                            className=""
                                            disabled={true}
                                            helperText=""
                                            id="type"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText={
                                              <IsRequired>
                                                Type
                                              </IsRequired>
                                            }
                                            light={false}
                                            name="type"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            readOnly={true}
                                            value="thin"
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select bx--select--disabled"
                                              >
                                                <label
                                                  className="bx--label bx--label--disabled"
                                                  htmlFor="type"
                                                >
                                                  <IsRequired>
                                                    <span
                                                      aria-hidden="true"
                                                      className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                                    >
                                                      *
                                                    </span>
                                                    Type
                                                  </IsRequired>
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    autoFocus={true}
                                                    className="bx--select-input"
                                                    disabled={true}
                                                    id="type"
                                                    name="type"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    readOnly={true}
                                                    value="thin"
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="0"
                                                      label="<Choose>"
                                                      text="<Choose>"
                                                      value=""
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="<Choose>"
                                                        value=""
                                                      >
                                                        &lt;Choose&gt;
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="thin"
                                                      label="thin"
                                                      text="thin"
                                                      value="thin"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="thin"
                                                        value="thin"
                                                      >
                                                        thin
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="thick"
                                                      label="thick"
                                                      text="thick"
                                                      value="thick"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="thick"
                                                        value="thick"
                                                      >
                                                        thick
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="text-field"
                              id="size"
                              initialValue="16"
                              isRequired={true}
                              key="size"
                              label="Size"
                              name="size"
                              validate={
                                Array [
                                  Object {
                                    "size": 17,
                                    "type": "diskMemoryCheck",
                                    "unit": "GB",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "text-field",
                                    "id": "size",
                                    "initialValue": "16",
                                    "isRequired": true,
                                    "label": "Size",
                                    "name": "size",
                                    "validate": Array [
                                      Object {
                                        "size": 17,
                                        "type": "diskMemoryCheck",
                                        "unit": "GB",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <TextField
                                    component="text-field"
                                    id="size"
                                    initialValue="16"
                                    isRequired={true}
                                    label="Size"
                                    name="size"
                                    validate={
                                      Array [
                                        Object {
                                          "size": 17,
                                          "type": "diskMemoryCheck",
                                          "unit": "GB",
                                        },
                                      ]
                                    }
                                  >
                                    <TextInput
                                      id="size"
                                      invalid={false}
                                      invalidText=""
                                      key="size"
                                      labelText={
                                        <IsRequired>
                                          Size
                                        </IsRequired>
                                      }
                                      name="size"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      value="16"
                                      warn={false}
                                      warnText=""
                                    >
                                      <div
                                        className="bx--form-item bx--text-input-wrapper"
                                      >
                                        <label
                                          className="bx--label"
                                          htmlFor="size"
                                        >
                                          <IsRequired>
                                            <span
                                              aria-hidden="true"
                                              className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                            >
                                              *
                                            </span>
                                            Size
                                          </IsRequired>
                                        </label>
                                        <div
                                          className="bx--text-input__field-outer-wrapper"
                                        >
                                          <div
                                            className="bx--text-input__field-wrapper"
                                            data-invalid={null}
                                          >
                                            <input
                                              className="bx--text-input bx--text-input--md"
                                              disabled={false}
                                              id="size"
                                              name="size"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              type="text"
                                              value="16"
                                            />
                                          </div>
                                        </div>
                                      </div>
                                    </TextInput>
                                  </TextField>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="select"
                              id="unit"
                              initialValue="GB"
                              key="unit"
                              label="Unit"
                              name="unit"
                              options={
                                Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "select",
                                    "id": "unit",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "unit",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    component="select"
                                    id="unit"
                                    initialValue="GB"
                                    label="Unit"
                                    name="unit"
                                    options={
                                      Array [
                                        Object {
                                          "label": "GB",
                                          "value": "GB",
                                        },
                                        Object {
                                          "label": "MB",
                                          "value": "MB",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                  >
                                    <Select
                                      component="select"
                                      id="unit"
                                      initialValue="GB"
                                      label="Unit"
                                      loadingMessage="Loading..."
                                      name="unit"
                                      options={
                                        Array [
                                          Object {
                                            "label": "GB",
                                            "value": "GB",
                                          },
                                          Object {
                                            "label": "MB",
                                            "value": "MB",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        compareValues={[Function]}
                                        id="unit"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText="Unit"
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="unit"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "GB",
                                              "value": "GB",
                                            },
                                            Object {
                                              "label": "MB",
                                              "value": "MB",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        simpleValue={false}
                                        value="GB"
                                      >
                                        <ClearedSelect
                                          className=""
                                          closeMenuOnSelect={true}
                                          hideSelectedOptions={false}
                                          id="unit"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText="Unit"
                                          name="unit"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "GB",
                                                "value": "GB",
                                              },
                                              Object {
                                                "label": "MB",
                                                "value": "MB",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          value="GB"
                                        >
                                          <Select
                                            className=""
                                            disabled={false}
                                            helperText=""
                                            id="unit"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText="Unit"
                                            light={false}
                                            name="unit"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="GB"
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select"
                                              >
                                                <label
                                                  className="bx--label"
                                                  htmlFor="unit"
                                                >
                                                  Unit
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    className="bx--select-input"
                                                    id="unit"
                                                    name="unit"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value="GB"
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="GB"
                                                      label="GB"
                                                      text="GB"
                                                      value="GB"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="GB"
                                                        value="GB"
                                                      >
                                                        GB
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="MB"
                                                      label="MB"
                                                      text="MB"
                                                      value="MB"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="MB"
                                                        value="MB"
                                                      >
                                                        MB
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="select"
                              disabled={true}
                              hideField={false}
                              id="mode"
                              includeEmpty={true}
                              initialValue="persistent"
                              isReadOnly={true}
                              isRequired={true}
                              key="mode"
                              label="Mode"
                              name="mode"
                              options={
                                Array [
                                  Object {
                                    "label": "persistent",
                                    "value": "persistent",
                                  },
                                  Object {
                                    "label": "nonpersistent",
                                    "value": "nonpersistent",
                                  },
                                ]
                              }
                              placeholder="<Choose>"
                              validate={
                                Array [
                                  Object {
                                    "hideField": false,
                                    "type": "customRequired",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "select",
                                    "disabled": true,
                                    "id": "mode",
                                    "includeEmpty": true,
                                    "initialValue": "persistent",
                                    "isReadOnly": true,
                                    "isRequired": true,
                                    "label": "Mode",
                                    "name": "mode",
                                    "options": Array [
                                      Object {
                                        "label": "persistent",
                                        "value": "persistent",
                                      },
                                      Object {
                                        "label": "nonpersistent",
                                        "value": "nonpersistent",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "hideField": false,
                                        "type": "customRequired",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    component="select"
                                    disabled={true}
                                    id="mode"
                                    includeEmpty={true}
                                    initialValue="persistent"
                                    isReadOnly={true}
                                    isRequired={true}
                                    label="Mode"
                                    name="mode"
                                    options={
                                      Array [
                                        Object {
                                          "label": "persistent",
                                          "value": "persistent",
                                        },
                                        Object {
                                          "label": "nonpersistent",
                                          "value": "nonpersistent",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                    validate={
                                      Array [
                                        Object {
                                          "hideField": false,
                                          "type": "customRequired",
                                        },
                                      ]
                                    }
                                  >
                                    <Select
                                      component="select"
                                      disabled={true}
                                      id="mode"
                                      initialValue="persistent"
                                      isReadOnly={true}
                                      isRequired={true}
                                      label="Mode"
                                      loadingMessage="Loading..."
                                      name="mode"
                                      options={
                                        Array [
                                          Object {
                                            "label": "<Choose>",
                                            "value": undefined,
                                          },
                                          Object {
                                            "label": "persistent",
                                            "value": "persistent",
                                          },
                                          Object {
                                            "label": "nonpersistent",
                                            "value": "nonpersistent",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                      validate={
                                        Array [
                                          Object {
                                            "hideField": false,
                                            "type": "customRequired",
                                          },
                                        ]
                                      }
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        compareValues={[Function]}
                                        disabled={true}
                                        id="mode"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText={
                                          <IsRequired>
                                            Mode
                                          </IsRequired>
                                        }
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="mode"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "<Choose>",
                                              "value": undefined,
                                            },
                                            Object {
                                              "label": "persistent",
                                              "value": "persistent",
                                            },
                                            Object {
                                              "label": "nonpersistent",
                                              "value": "nonpersistent",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        readOnly={true}
                                        simpleValue={false}
                                        value="persistent"
                                      >
                                        <ClearedSelect
                                          className=""
                                          closeMenuOnSelect={true}
                                          disabled={true}
                                          hideSelectedOptions={false}
                                          id="mode"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText={
                                            <IsRequired>
                                              Mode
                                            </IsRequired>
                                          }
                                          name="mode"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "<Choose>",
                                                "value": undefined,
                                              },
                                              Object {
                                                "label": "persistent",
                                                "value": "persistent",
                                              },
                                              Object {
                                                "label": "nonpersistent",
                                                "value": "nonpersistent",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          readOnly={true}
                                          value="persistent"
                                        >
                                          <Select
                                            className=""
                                            disabled={true}
                                            helperText=""
                                            id="mode"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText={
                                              <IsRequired>
                                                Mode
                                              </IsRequired>
                                            }
                                            light={false}
                                            name="mode"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            readOnly={true}
                                            value="persistent"
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select bx--select--disabled"
                                              >
                                                <label
                                                  className="bx--label bx--label--disabled"
                                                  htmlFor="mode"
                                                >
                                                  <IsRequired>
                                                    <span
                                                      aria-hidden="true"
                                                      className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                                    >
                                                      *
                                                    </span>
                                                    Mode
                                                  </IsRequired>
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    className="bx--select-input"
                                                    disabled={true}
                                                    id="mode"
                                                    name="mode"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    readOnly={true}
                                                    value="persistent"
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="0"
                                                      label="<Choose>"
                                                      text="<Choose>"
                                                      value=""
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="<Choose>"
                                                        value=""
                                                      >
                                                        &lt;Choose&gt;
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="persistent"
                                                      label="persistent"
                                                      text="persistent"
                                                      value="persistent"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="persistent"
                                                        value="persistent"
                                                      >
                                                        persistent
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="nonpersistent"
                                                      label="nonpersistent"
                                                      text="nonpersistent"
                                                      value="nonpersistent"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="nonpersistent"
                                                        value="nonpersistent"
                                                      >
                                                        nonpersistent
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="select"
                              disabled={true}
                              hideField={false}
                              id="controller"
                              initialValue="None"
                              isReadOnly={true}
                              key="controller"
                              label="Controller"
                              name="controller"
                              options={
                                Array [
                                  Object {
                                    "label": "VirtualController",
                                    "value": "VirtualController",
                                  },
                                  Object {
                                    "label": "ParaVirtualController",
                                    "value": "ParaVirtualController",
                                  },
                                  Object {
                                    "label": "VirtualBusController",
                                    "value": "VirtualBusController",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "select",
                                    "disabled": true,
                                    "id": "controller",
                                    "initialValue": "None",
                                    "isReadOnly": true,
                                    "label": "Controller",
                                    "name": "controller",
                                    "options": Array [
                                      Object {
                                        "label": "VirtualController",
                                        "value": "VirtualController",
                                      },
                                      Object {
                                        "label": "ParaVirtualController",
                                        "value": "ParaVirtualController",
                                      },
                                      Object {
                                        "label": "VirtualBusController",
                                        "value": "VirtualBusController",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    component="select"
                                    disabled={true}
                                    id="controller"
                                    initialValue="None"
                                    isReadOnly={true}
                                    label="Controller"
                                    name="controller"
                                    options={
                                      Array [
                                        Object {
                                          "label": "VirtualController",
                                          "value": "VirtualController",
                                        },
                                        Object {
                                          "label": "ParaVirtualController",
                                          "value": "ParaVirtualController",
                                        },
                                        Object {
                                          "label": "VirtualBusController",
                                          "value": "VirtualBusController",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                  >
                                    <Select
                                      component="select"
                                      disabled={true}
                                      id="controller"
                                      initialValue="None"
                                      isReadOnly={true}
                                      label="Controller"
                                      loadingMessage="Loading..."
                                      name="controller"
                                      options={
                                        Array [
                                          Object {
                                            "label": "VirtualController",
                                            "value": "VirtualController",
                                          },
                                          Object {
                                            "label": "ParaVirtualController",
                                            "value": "ParaVirtualController",
                                          },
                                          Object {
                                            "label": "VirtualBusController",
                                            "value": "VirtualBusController",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        compareValues={[Function]}
                                        disabled={true}
                                        id="controller"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText="Controller"
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="controller"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "VirtualController",
                                              "value": "VirtualController",
                                            },
                                            Object {
                                              "label": "ParaVirtualController",
                                              "value": "ParaVirtualController",
                                            },
                                            Object {
                                              "label": "VirtualBusController",
                                              "value": "VirtualBusController",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        readOnly={true}
                                        simpleValue={false}
                                        value="None"
                                      >
                                        <ClearedSelect
                                          className=""
                                          closeMenuOnSelect={true}
                                          disabled={true}
                                          hideSelectedOptions={false}
                                          id="controller"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText="Controller"
                                          name="controller"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "VirtualController",
                                                "value": "VirtualController",
                                              },
                                              Object {
                                                "label": "ParaVirtualController",
                                                "value": "ParaVirtualController",
                                              },
                                              Object {
                                                "label": "VirtualBusController",
                                                "value": "VirtualBusController",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          readOnly={true}
                                          value="None"
                                        >
                                          <Select
                                            className=""
                                            disabled={true}
                                            helperText=""
                                            id="controller"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText="Controller"
                                            light={false}
                                            name="controller"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            readOnly={true}
                                            value="None"
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select bx--select--disabled"
                                              >
                                                <label
                                                  className="bx--label bx--label--disabled"
                                                  htmlFor="controller"
                                                >
                                                  Controller
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    className="bx--select-input"
                                                    disabled={true}
                                                    id="controller"
                                                    name="controller"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    readOnly={true}
                                                    value="None"
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="VirtualController"
                                                      label="VirtualController"
                                                      text="VirtualController"
                                                      value="VirtualController"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="VirtualController"
                                                        value="VirtualController"
                                                      >
                                                        VirtualController
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="ParaVirtualController"
                                                      label="ParaVirtualController"
                                                      text="ParaVirtualController"
                                                      value="ParaVirtualController"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="ParaVirtualController"
                                                        value="ParaVirtualController"
                                                      >
                                                        ParaVirtualController
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="VirtualBusController"
                                                      label="VirtualBusController"
                                                      text="VirtualBusController"
                                                      value="VirtualBusController"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="VirtualBusController"
                                                        value="VirtualBusController"
                                                      >
                                                        VirtualBusController
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="switch"
                              disabled={true}
                              hideField={false}
                              id="dependent"
                              initialValue={false}
                              key="dependent"
                              label="Dependent"
                              name="dependent"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "disabled": true,
                                    "id": "dependent",
                                    "initialValue": false,
                                    "label": "Dependent",
                                    "name": "dependent",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    disabled={true}
                                    id="dependent"
                                    initialValue={false}
                                    label="Dependent"
                                    name="dependent"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={true}
                                        id="dependent"
                                        key="dependent"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Dependent"
                                        name="dependent"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={true}
                                          id="dependent"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Dependent"
                                          name="dependent"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              disabled={true}
                                              id="dependent"
                                              name="dependent"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="dependent"
                                            >
                                              Dependent
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="switch"
                              hideField={false}
                              initialValue={false}
                              isReadOnly={true}
                              key="bootable"
                              label="Bootable"
                              name="bootable"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "initialValue": false,
                                    "isReadOnly": true,
                                    "label": "Bootable",
                                    "name": "bootable",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    initialValue={false}
                                    isReadOnly={true}
                                    label="Bootable"
                                    name="bootable"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        id="bootable"
                                        key="bootable"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Bootable"
                                        name="bootable"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        readOnly={true}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          id="bootable"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Bootable"
                                          name="bootable"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          readOnly={true}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              id="bootable"
                                              name="bootable"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              readOnly={true}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="bootable"
                                            >
                                              Bootable
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                          </div>
                        </SubForm>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <SingleField
                    component="spy-field"
                    key="spy-field"
                    name="spy-field"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SpyField
                          component="spy-field"
                          name="spy-field"
                        >
                          <FormSpy
                            onChange={[Function]}
                            subscription={
                              Object {
                                "pristine": true,
                                "valid": true,
                              }
                            }
                          />
                        </SpyField>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <div
                    className="bx--btn-set"
                  >
                    <button
                      alt="Save"
                      className="bx--btn bx--btn--primary"
                      disabled={true}
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      alt="Reset"
                      className="bx--btn bx--btn--secondary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Reset
                    </button>
                    <button
                      alt="Cancel"
                      className="bx--btn bx--btn--secondary"
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              </ReconfigureTemplate>
            </FormTemplate>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </ReconfigureVmForm>
</Provider>
`;

exports[`Reconfigure VM form component should render reconfigure form and show hidden fields 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReconfigureVmForm
    memory={
      Object {
        "max": 10,
        "min": 1024,
      }
    }
    options={
      Object {
        "avail_adapter_names": Array [],
        "controller_types": Array [],
        "cores_options": Array [
          1,
          2,
          3,
          4,
        ],
        "host_file_options": Array [],
        "socket_options": Array [
          1,
          2,
          3,
          4,
        ],
        "vlan_options": Array [],
      }
    }
    recordId={
      Array [
        12,
        13,
      ]
    }
    requestId="new"
    roles={
      Object {
        "allowCdromsChange": true,
        "allowCpuChange": true,
        "allowDiskChange": true,
        "allowDiskSizeChange": true,
        "allowMemoryChange": true,
        "allowNetworkChange": true,
        "isRedhat": true,
        "isVmwareCloud": false,
        "isVmwareInfra": true,
      }
    }
  >
    <Connect(MiqFormRenderer)
      FormTemplate={[Function]}
      clearOnUnmount={false}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "reconfigure-table": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "cb_memory": true,
          "cores_per_socket_count": "1",
          "mem_type": "GB",
          "memory": "4",
          "processor": true,
          "socket_count": "3",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "className": "reconfigure_form",
              "component": "sub-form",
              "fields": Array [
                Array [
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Memory",
                    "name": "cb_memory",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "cb_memory",
                    },
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "initialValue": 16,
                        "isRequired": true,
                        "label": "Memory Size",
                        "name": "memory",
                        "validate": Array [
                          Object {
                            "type": "memoryCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "helperText": "Between 1024MB and 0.009765625GB",
                        "id": "memoryType",
                        "initialValue": "GB",
                        "label": "Unit",
                        "name": "mem_type",
                        "options": Array [
                          Object {
                            "label": "GB",
                            "value": "GB",
                          },
                          Object {
                            "label": "MB",
                            "value": "MB",
                          },
                        ],
                      },
                    ],
                    "id": "memory-sub-form",
                    "name": "memory-sub-form",
                  },
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Processor",
                    "name": "processor",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "processor",
                    },
                    "fields": Array [
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "socket",
                        "label": "Sockets",
                        "name": "socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "socket",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "cores",
                        "label": "Cores Per Socket",
                        "name": "cores_per_socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "cores",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "total_cpus",
                        "initialValue": 3,
                        "isReadOnly": true,
                        "label": "Total Processors",
                        "name": "total_cpus",
                        "type": "number",
                      },
                    ],
                    "id": "processor-sub-form",
                    "name": "processor-sub-form",
                  },
                ],
              ],
              "name": "BasicInformation",
              "title": "Options",
            },
          ],
        }
      }
      validatorMapper={
        Object {
          "cpuCheck": [Function],
          "customRequired": [Function],
          "diskMemoryCheck": [Function],
          "memoryCheck": [Function],
        }
      }
    >
      <MiqFormRenderer
        FormTemplate={[Function]}
        buttonsLabels={Object {}}
        canReset={false}
        className="form-react"
        clearOnUnmount={false}
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "reconfigure-table": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "cb_memory": true,
            "cores_per_socket_count": "1",
            "mem_type": "GB",
            "memory": "4",
            "processor": true,
            "socket_count": "3",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "className": "reconfigure_form",
                "component": "sub-form",
                "fields": Array [
                  Array [
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Memory",
                      "name": "cb_memory",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "cb_memory",
                      },
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "initialValue": 16,
                          "isRequired": true,
                          "label": "Memory Size",
                          "name": "memory",
                          "validate": Array [
                            Object {
                              "type": "memoryCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "helperText": "Between 1024MB and 0.009765625GB",
                          "id": "memoryType",
                          "initialValue": "GB",
                          "label": "Unit",
                          "name": "mem_type",
                          "options": Array [
                            Object {
                              "label": "GB",
                              "value": "GB",
                            },
                            Object {
                              "label": "MB",
                              "value": "MB",
                            },
                          ],
                        },
                      ],
                      "id": "memory-sub-form",
                      "name": "memory-sub-form",
                    },
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Processor",
                      "name": "processor",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "processor",
                      },
                      "fields": Array [
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "socket",
                          "label": "Sockets",
                          "name": "socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "socket",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "cores",
                          "label": "Cores Per Socket",
                          "name": "cores_per_socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "cores",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "text-field",
                          "id": "total_cpus",
                          "initialValue": 3,
                          "isReadOnly": true,
                          "label": "Total Processors",
                          "name": "total_cpus",
                          "type": "number",
                        },
                      ],
                      "id": "processor-sub-form",
                      "name": "processor-sub-form",
                    },
                  ],
                ],
                "name": "BasicInformation",
                "title": "Options",
              },
            ],
          }
        }
        showFormControls={true}
        validatorMapper={
          Object {
            "cpuCheck": [Function],
            "customRequired": [Function],
            "diskMemoryCheck": [Function],
            "memoryCheck": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "reconfigure-table": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "cb_memory": true,
              "cores_per_socket_count": "1",
              "mem_type": "GB",
              "memory": "4",
              "processor": true,
              "socket_count": "3",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "className": "reconfigure_form",
                  "component": "sub-form",
                  "fields": Array [
                    Array [
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Memory",
                        "name": "cb_memory",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "fields": Array [
                          Object {
                            "component": "text-field",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "initialValue": 16,
                            "isRequired": true,
                            "label": "Memory Size",
                            "name": "memory",
                            "validate": Array [
                              Object {
                                "type": "memoryCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "helperText": "Between 1024MB and 0.009765625GB",
                            "id": "memoryType",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "mem_type",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                        ],
                        "id": "memory-sub-form",
                        "name": "memory-sub-form",
                      },
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Processor",
                        "name": "processor",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "processor",
                        },
                        "fields": Array [
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "socket",
                            "label": "Sockets",
                            "name": "socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "socket",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "cores",
                            "label": "Cores Per Socket",
                            "name": "cores_per_socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "cores",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "total_cpus",
                            "initialValue": 3,
                            "isReadOnly": true,
                            "label": "Total Processors",
                            "name": "total_cpus",
                            "type": "number",
                          },
                        ],
                        "id": "processor-sub-form",
                        "name": "processor-sub-form",
                      },
                    ],
                  ],
                  "name": "BasicInformation",
                  "title": "Options",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validatorMapper={
            Object {
              "cpuCheck": [Function],
              "customRequired": [Function],
              "diskMemoryCheck": [Function],
              "memoryCheck": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "cb_memory": true,
                "cores_per_socket_count": "1",
                "mem_type": "GB",
                "memory": "4",
                "processor": true,
                "socket_count": "3",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <FormTemplate
              formFields={
                Array [
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 3,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                        ],
                      ]
                    }
                    name="BasicInformation"
                    title="Options"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "className": "reconfigure_form",
                      "component": "sub-form",
                      "fields": Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 3,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                        ],
                      ],
                      "name": "BasicInformation",
                      "title": "Options",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <ReconfigureTemplate
                canSubmit={false}
                formFields={
                  Array [
                    <SingleField
                      className="reconfigure_form"
                      component="sub-form"
                      fields={
                        Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 3,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                          ],
                        ]
                      }
                      name="BasicInformation"
                      title="Options"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                hideButtons={false}
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "className": "reconfigure_form",
                        "component": "sub-form",
                        "fields": Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 3,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                          ],
                        ],
                        "name": "BasicInformation",
                        "title": "Options",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
              >
                <form
                  className="form-react reconfigure-form"
                  onSubmit={[Function]}
                >
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 3,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                        ],
                      ]
                    }
                    key="BasicInformation"
                    name="BasicInformation"
                    title="Options"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "className": "reconfigure_form",
                          "component": "sub-form",
                          "fields": Array [
                            Array [
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Memory",
                                "name": "cb_memory",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ],
                                "id": "memory-sub-form",
                                "name": "memory-sub-form",
                              },
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Processor",
                                "name": "processor",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "processor",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 3,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ],
                                "id": "processor-sub-form",
                                "name": "processor-sub-form",
                              },
                            ],
                          ],
                          "name": "BasicInformation",
                          "title": "Options",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SubForm
                          DescriptionElement="p"
                          TitleElement="h3"
                          className="reconfigure_form"
                          component="sub-form"
                          fields={
                            Array [
                              Array [
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Memory",
                                  "name": "cb_memory",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "initialValue": 16,
                                      "isRequired": true,
                                      "label": "Memory Size",
                                      "name": "memory",
                                      "validate": Array [
                                        Object {
                                          "type": "memoryCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "helperText": "Between 1024MB and 0.009765625GB",
                                      "id": "memoryType",
                                      "initialValue": "GB",
                                      "label": "Unit",
                                      "name": "mem_type",
                                      "options": Array [
                                        Object {
                                          "label": "GB",
                                          "value": "GB",
                                        },
                                        Object {
                                          "label": "MB",
                                          "value": "MB",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "memory-sub-form",
                                  "name": "memory-sub-form",
                                },
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Processor",
                                  "name": "processor",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "processor",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "socket",
                                      "label": "Sockets",
                                      "name": "socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "socket",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "cores",
                                      "label": "Cores Per Socket",
                                      "name": "cores_per_socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "cores",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "text-field",
                                      "id": "total_cpus",
                                      "initialValue": 3,
                                      "isReadOnly": true,
                                      "label": "Total Processors",
                                      "name": "total_cpus",
                                      "type": "number",
                                    },
                                  ],
                                  "id": "processor-sub-form",
                                  "name": "processor-sub-form",
                                },
                              ],
                            ]
                          }
                          name="BasicInformation"
                          title="Options"
                        >
                          <div
                            className="reconfigure_form"
                            name="BasicInformation"
                          >
                            <div>
                              <h3>
                                Options
                              </h3>
                            </div>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="cb_memory"
                              label="Memory"
                              name="cb_memory"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Memory",
                                    "name": "cb_memory",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Memory"
                                    name="cb_memory"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="cb_memory"
                                        key="cb_memory"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Memory"
                                        name="cb_memory"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={true}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="cb_memory"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Memory"
                                          name="cb_memory"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={true}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={true}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="cb_memory"
                                              name="cb_memory"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="cb_memory"
                                            >
                                              Memory
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "cb_memory",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ]
                              }
                              id="memory-sub-form"
                              key="memory-sub-form"
                              name="memory-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "initialValue": 16,
                                        "isRequired": true,
                                        "label": "Memory Size",
                                        "name": "memory",
                                        "validate": Array [
                                          Object {
                                            "type": "memoryCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "helperText": "Between 1024MB and 0.009765625GB",
                                        "id": "memoryType",
                                        "initialValue": "GB",
                                        "label": "Unit",
                                        "name": "mem_type",
                                        "options": Array [
                                          Object {
                                            "label": "GB",
                                            "value": "GB",
                                          },
                                          Object {
                                            "label": "MB",
                                            "value": "MB",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "memory-sub-form",
                                    "name": "memory-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "initialValue": 16,
                                          "isRequired": true,
                                          "label": "Memory Size",
                                          "name": "memory",
                                          "validate": Array [
                                            Object {
                                              "type": "memoryCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "helperText": "Between 1024MB and 0.009765625GB",
                                          "id": "memoryType",
                                          "initialValue": "GB",
                                          "label": "Unit",
                                          "name": "mem_type",
                                          "options": Array [
                                            Object {
                                              "label": "GB",
                                              "value": "GB",
                                            },
                                            Object {
                                              "label": "MB",
                                              "value": "MB",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "memory-sub-form",
                                      "name": "memory-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "cb_memory",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="cb_memory"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "initialValue": 16,
                                              "isRequired": true,
                                              "label": "Memory Size",
                                              "name": "memory",
                                              "validate": Array [
                                                Object {
                                                  "type": "memoryCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "helperText": "Between 1024MB and 0.009765625GB",
                                              "id": "memoryType",
                                              "initialValue": "GB",
                                              "label": "Unit",
                                              "name": "mem_type",
                                              "options": Array [
                                                Object {
                                                  "label": "GB",
                                                  "value": "GB",
                                                },
                                                Object {
                                                  "label": "MB",
                                                  "value": "MB",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "memory-sub-form",
                                          "name": "memory-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "cb_memory": true,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "text-field",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "initialValue": 16,
                                                "isRequired": true,
                                                "label": "Memory Size",
                                                "name": "memory",
                                                "validate": Array [
                                                  Object {
                                                    "type": "memoryCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "helperText": "Between 1024MB and 0.009765625GB",
                                                "id": "memoryType",
                                                "initialValue": "GB",
                                                "label": "Unit",
                                                "name": "mem_type",
                                                "options": Array [
                                                  Object {
                                                    "label": "GB",
                                                    "value": "GB",
                                                  },
                                                  Object {
                                                    "label": "MB",
                                                    "value": "MB",
                                                  },
                                                ],
                                              },
                                            ],
                                            "id": "memory-sub-form",
                                            "name": "memory-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "cb_memory": true,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "cb_memory",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "initialValue": 16,
                                                  "isRequired": true,
                                                  "label": "Memory Size",
                                                  "name": "memory",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "memoryCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "helperText": "Between 1024MB and 0.009765625GB",
                                                  "id": "memoryType",
                                                  "initialValue": "GB",
                                                  "label": "Unit",
                                                  "name": "mem_type",
                                                  "options": Array [
                                                    Object {
                                                      "label": "GB",
                                                      "value": "GB",
                                                    },
                                                    Object {
                                                      "label": "MB",
                                                      "value": "MB",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "memory-sub-form",
                                              "name": "memory-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "cb_memory": true,
                                            }
                                          }
                                        >
                                          <FormFieldHideWrapper
                                            hideField={false}
                                          >
                                            <SubForm
                                              DescriptionElement="p"
                                              TitleElement="h3"
                                              className="reconfigure-sub-form"
                                              component="sub-form"
                                              fields={
                                                Array [
                                                  Object {
                                                    "component": "text-field",
                                                    "condition": Object {
                                                      "is": true,
                                                      "when": "cb_memory",
                                                    },
                                                    "initialValue": 16,
                                                    "isRequired": true,
                                                    "label": "Memory Size",
                                                    "name": "memory",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "memoryCheck",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "select",
                                                    "condition": Object {
                                                      "is": true,
                                                      "when": "cb_memory",
                                                    },
                                                    "helperText": "Between 1024MB and 0.009765625GB",
                                                    "id": "memoryType",
                                                    "initialValue": "GB",
                                                    "label": "Unit",
                                                    "name": "mem_type",
                                                    "options": Array [
                                                      Object {
                                                        "label": "GB",
                                                        "value": "GB",
                                                      },
                                                      Object {
                                                        "label": "MB",
                                                        "value": "MB",
                                                      },
                                                    ],
                                                  },
                                                ]
                                              }
                                              id="memory-sub-form"
                                              name="memory-sub-form"
                                            >
                                              <div
                                                className="reconfigure-sub-form"
                                                id="memory-sub-form"
                                                name="memory-sub-form"
                                              >
                                                <SingleField
                                                  component="text-field"
                                                  condition={
                                                    Object {
                                                      "is": true,
                                                      "when": "cb_memory",
                                                    }
                                                  }
                                                  initialValue={16}
                                                  isRequired={true}
                                                  key="memory"
                                                  label="Memory Size"
                                                  name="memory"
                                                  validate={
                                                    Array [
                                                      Object {
                                                        "type": "memoryCheck",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <FormConditionWrapper
                                                    condition={
                                                      Object {
                                                        "is": true,
                                                        "when": "cb_memory",
                                                      }
                                                    }
                                                    field={
                                                      Object {
                                                        "component": "text-field",
                                                        "initialValue": 16,
                                                        "isRequired": true,
                                                        "label": "Memory Size",
                                                        "name": "memory",
                                                        "validate": Array [
                                                          Object {
                                                            "type": "memoryCheck",
                                                          },
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <ConditionTriggerDetector
                                                      condition={
                                                        Object {
                                                          "is": true,
                                                          "when": "cb_memory",
                                                        }
                                                      }
                                                      field={
                                                        Object {
                                                          "component": "text-field",
                                                          "initialValue": 16,
                                                          "isRequired": true,
                                                          "label": "Memory Size",
                                                          "name": "memory",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "memoryCheck",
                                                            },
                                                          ],
                                                        }
                                                      }
                                                      triggers={
                                                        Array [
                                                          "cb_memory",
                                                        ]
                                                      }
                                                    >
                                                      <ForwardRef(Field)
                                                        name="cb_memory"
                                                        subscription={
                                                          Object {
                                                            "value": true,
                                                          }
                                                        }
                                                      >
                                                        <ConditionTriggerDetector
                                                          condition={
                                                            Object {
                                                              "is": true,
                                                              "when": "cb_memory",
                                                            }
                                                          }
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "initialValue": 16,
                                                              "isRequired": true,
                                                              "label": "Memory Size",
                                                              "name": "memory",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "memoryCheck",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                          triggers={Array []}
                                                          values={
                                                            Object {
                                                              "cb_memory": true,
                                                            }
                                                          }
                                                        >
                                                          <ConditionTriggerWrapper
                                                            condition={
                                                              Object {
                                                                "is": true,
                                                                "when": "cb_memory",
                                                              }
                                                            }
                                                            field={
                                                              Object {
                                                                "component": "text-field",
                                                                "initialValue": 16,
                                                                "isRequired": true,
                                                                "label": "Memory Size",
                                                                "name": "memory",
                                                                "validate": Array [
                                                                  Object {
                                                                    "type": "memoryCheck",
                                                                  },
                                                                ],
                                                              }
                                                            }
                                                            values={
                                                              Object {
                                                                "cb_memory": true,
                                                              }
                                                            }
                                                          >
                                                            <Component
                                                              condition={
                                                                Object {
                                                                  "is": true,
                                                                  "when": "cb_memory",
                                                                }
                                                              }
                                                              field={
                                                                Object {
                                                                  "component": "text-field",
                                                                  "initialValue": 16,
                                                                  "isRequired": true,
                                                                  "label": "Memory Size",
                                                                  "name": "memory",
                                                                  "validate": Array [
                                                                    Object {
                                                                      "type": "memoryCheck",
                                                                    },
                                                                  ],
                                                                }
                                                              }
                                                              values={
                                                                Object {
                                                                  "cb_memory": true,
                                                                }
                                                              }
                                                            >
                                                              <FormFieldHideWrapper
                                                                hideField={false}
                                                              >
                                                                <TextField
                                                                  component="text-field"
                                                                  initialValue={16}
                                                                  isRequired={true}
                                                                  label="Memory Size"
                                                                  name="memory"
                                                                  validate={
                                                                    Array [
                                                                      Object {
                                                                        "type": "memoryCheck",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <TextInput
                                                                    id="memory"
                                                                    invalid={false}
                                                                    invalidText=""
                                                                    key="memory"
                                                                    labelText={
                                                                      <IsRequired>
                                                                        Memory Size
                                                                      </IsRequired>
                                                                    }
                                                                    name="memory"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    value="4"
                                                                    warn={false}
                                                                    warnText=""
                                                                  >
                                                                    <div
                                                                      className="bx--form-item bx--text-input-wrapper"
                                                                    >
                                                                      <label
                                                                        className="bx--label"
                                                                        htmlFor="memory"
                                                                      >
                                                                        <IsRequired>
                                                                          <span
                                                                            aria-hidden="true"
                                                                            className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                                                          >
                                                                            *
                                                                          </span>
                                                                          Memory Size
                                                                        </IsRequired>
                                                                      </label>
                                                                      <div
                                                                        className="bx--text-input__field-outer-wrapper"
                                                                      >
                                                                        <div
                                                                          className="bx--text-input__field-wrapper"
                                                                          data-invalid={null}
                                                                        >
                                                                          <input
                                                                            className="bx--text-input bx--text-input--md"
                                                                            disabled={false}
                                                                            id="memory"
                                                                            name="memory"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onClick={[Function]}
                                                                            onFocus={[Function]}
                                                                            type="text"
                                                                            value="4"
                                                                          />
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </TextInput>
                                                                </TextField>
                                                              </FormFieldHideWrapper>
                                                            </Component>
                                                          </ConditionTriggerWrapper>
                                                        </ConditionTriggerDetector>
                                                      </ForwardRef(Field)>
                                                    </ConditionTriggerDetector>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                                <SingleField
                                                  component="select"
                                                  condition={
                                                    Object {
                                                      "is": true,
                                                      "when": "cb_memory",
                                                    }
                                                  }
                                                  helperText="Between 1024MB and 0.009765625GB"
                                                  id="memoryType"
                                                  initialValue="GB"
                                                  key="mem_type"
                                                  label="Unit"
                                                  name="mem_type"
                                                  options={
                                                    Array [
                                                      Object {
                                                        "label": "GB",
                                                        "value": "GB",
                                                      },
                                                      Object {
                                                        "label": "MB",
                                                        "value": "MB",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <FormConditionWrapper
                                                    condition={
                                                      Object {
                                                        "is": true,
                                                        "when": "cb_memory",
                                                      }
                                                    }
                                                    field={
                                                      Object {
                                                        "component": "select",
                                                        "helperText": "Between 1024MB and 0.009765625GB",
                                                        "id": "memoryType",
                                                        "initialValue": "GB",
                                                        "label": "Unit",
                                                        "name": "mem_type",
                                                        "options": Array [
                                                          Object {
                                                            "label": "GB",
                                                            "value": "GB",
                                                          },
                                                          Object {
                                                            "label": "MB",
                                                            "value": "MB",
                                                          },
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <ConditionTriggerDetector
                                                      condition={
                                                        Object {
                                                          "is": true,
                                                          "when": "cb_memory",
                                                        }
                                                      }
                                                      field={
                                                        Object {
                                                          "component": "select",
                                                          "helperText": "Between 1024MB and 0.009765625GB",
                                                          "id": "memoryType",
                                                          "initialValue": "GB",
                                                          "label": "Unit",
                                                          "name": "mem_type",
                                                          "options": Array [
                                                            Object {
                                                              "label": "GB",
                                                              "value": "GB",
                                                            },
                                                            Object {
                                                              "label": "MB",
                                                              "value": "MB",
                                                            },
                                                          ],
                                                        }
                                                      }
                                                      triggers={
                                                        Array [
                                                          "cb_memory",
                                                        ]
                                                      }
                                                    >
                                                      <ForwardRef(Field)
                                                        name="cb_memory"
                                                        subscription={
                                                          Object {
                                                            "value": true,
                                                          }
                                                        }
                                                      >
                                                        <ConditionTriggerDetector
                                                          condition={
                                                            Object {
                                                              "is": true,
                                                              "when": "cb_memory",
                                                            }
                                                          }
                                                          field={
                                                            Object {
                                                              "component": "select",
                                                              "helperText": "Between 1024MB and 0.009765625GB",
                                                              "id": "memoryType",
                                                              "initialValue": "GB",
                                                              "label": "Unit",
                                                              "name": "mem_type",
                                                              "options": Array [
                                                                Object {
                                                                  "label": "GB",
                                                                  "value": "GB",
                                                                },
                                                                Object {
                                                                  "label": "MB",
                                                                  "value": "MB",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                          triggers={Array []}
                                                          values={
                                                            Object {
                                                              "cb_memory": true,
                                                            }
                                                          }
                                                        >
                                                          <ConditionTriggerWrapper
                                                            condition={
                                                              Object {
                                                                "is": true,
                                                                "when": "cb_memory",
                                                              }
                                                            }
                                                            field={
                                                              Object {
                                                                "component": "select",
                                                                "helperText": "Between 1024MB and 0.009765625GB",
                                                                "id": "memoryType",
                                                                "initialValue": "GB",
                                                                "label": "Unit",
                                                                "name": "mem_type",
                                                                "options": Array [
                                                                  Object {
                                                                    "label": "GB",
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "label": "MB",
                                                                    "value": "MB",
                                                                  },
                                                                ],
                                                              }
                                                            }
                                                            values={
                                                              Object {
                                                                "cb_memory": true,
                                                              }
                                                            }
                                                          >
                                                            <Component
                                                              condition={
                                                                Object {
                                                                  "is": true,
                                                                  "when": "cb_memory",
                                                                }
                                                              }
                                                              field={
                                                                Object {
                                                                  "component": "select",
                                                                  "helperText": "Between 1024MB and 0.009765625GB",
                                                                  "id": "memoryType",
                                                                  "initialValue": "GB",
                                                                  "label": "Unit",
                                                                  "name": "mem_type",
                                                                  "options": Array [
                                                                    Object {
                                                                      "label": "GB",
                                                                      "value": "GB",
                                                                    },
                                                                    Object {
                                                                      "label": "MB",
                                                                      "value": "MB",
                                                                    },
                                                                  ],
                                                                }
                                                              }
                                                              values={
                                                                Object {
                                                                  "cb_memory": true,
                                                                }
                                                              }
                                                            >
                                                              <FormFieldHideWrapper
                                                                hideField={false}
                                                              >
                                                                <SelectWithOnChange
                                                                  component="select"
                                                                  helperText="Between 1024MB and 0.009765625GB"
                                                                  id="memoryType"
                                                                  initialValue="GB"
                                                                  label="Unit"
                                                                  name="mem_type"
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "GB",
                                                                        "value": "GB",
                                                                      },
                                                                      Object {
                                                                        "label": "MB",
                                                                        "value": "MB",
                                                                      },
                                                                    ]
                                                                  }
                                                                  placeholder="<Choose>"
                                                                >
                                                                  <Select
                                                                    component="select"
                                                                    helperText="Between 1024MB and 0.009765625GB"
                                                                    id="memoryType"
                                                                    initialValue="GB"
                                                                    label="Unit"
                                                                    loadingMessage="Loading..."
                                                                    name="mem_type"
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "GB",
                                                                          "value": "GB",
                                                                        },
                                                                        Object {
                                                                          "label": "MB",
                                                                          "value": "MB",
                                                                        },
                                                                      ]
                                                                    }
                                                                    placeholder="<Choose>"
                                                                  >
                                                                    <Select
                                                                      SelectComponent={[Function]}
                                                                      compareValues={[Function]}
                                                                      helperText="Between 1024MB and 0.009765625GB"
                                                                      id="memoryType"
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      isClearable={false}
                                                                      isSearchable={false}
                                                                      labelText="Unit"
                                                                      loadOptionsChangeCounter={1}
                                                                      loadingMessage="Loading..."
                                                                      name="mem_type"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "label": "GB",
                                                                            "value": "GB",
                                                                          },
                                                                          Object {
                                                                            "label": "MB",
                                                                            "value": "MB",
                                                                          },
                                                                        ]
                                                                      }
                                                                      placeholder="<Choose>"
                                                                      pluckSingleValue={true}
                                                                      simpleValue={false}
                                                                      value="GB"
                                                                    >
                                                                      <ClearedSelect
                                                                        className=""
                                                                        closeMenuOnSelect={true}
                                                                        helperText="Between 1024MB and 0.009765625GB"
                                                                        hideSelectedOptions={false}
                                                                        id="memoryType"
                                                                        invalidText=""
                                                                        isClearable={false}
                                                                        isFetching={false}
                                                                        isSearchable={false}
                                                                        labelText="Unit"
                                                                        name="mem_type"
                                                                        noOptionsMessage={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onInputChange={[Function]}
                                                                        options={
                                                                          Array [
                                                                            Object {
                                                                              "label": "GB",
                                                                              "value": "GB",
                                                                            },
                                                                            Object {
                                                                              "label": "MB",
                                                                              "value": "MB",
                                                                            },
                                                                          ]
                                                                        }
                                                                        placeholder="<Choose>"
                                                                        value="GB"
                                                                      >
                                                                        <Select
                                                                          className=""
                                                                          disabled={false}
                                                                          helperText="Between 1024MB and 0.009765625GB"
                                                                          id="mem_type"
                                                                          inline={false}
                                                                          invalid={false}
                                                                          invalidText=""
                                                                          labelText="Unit"
                                                                          light={false}
                                                                          name="mem_type"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          value="GB"
                                                                        >
                                                                          <div
                                                                            className="bx--form-item"
                                                                          >
                                                                            <div
                                                                              className="bx--select"
                                                                            >
                                                                              <label
                                                                                className="bx--label"
                                                                                htmlFor="mem_type"
                                                                              >
                                                                                Unit
                                                                              </label>
                                                                              <div
                                                                                className="bx--select-input__wrapper"
                                                                                data-invalid={null}
                                                                              >
                                                                                <select
                                                                                  aria-describedby="select-helper-text-7"
                                                                                  className="bx--select-input"
                                                                                  id="mem_type"
                                                                                  name="mem_type"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  value="GB"
                                                                                >
                                                                                  <SelectItem
                                                                                    disabled={false}
                                                                                    hidden={false}
                                                                                    key="GB"
                                                                                    label="GB"
                                                                                    text="GB"
                                                                                    value="GB"
                                                                                  >
                                                                                    <option
                                                                                      className="bx--select-option"
                                                                                      disabled={false}
                                                                                      hidden={false}
                                                                                      label="GB"
                                                                                      value="GB"
                                                                                    >
                                                                                      GB
                                                                                    </option>
                                                                                  </SelectItem>
                                                                                  <SelectItem
                                                                                    disabled={false}
                                                                                    hidden={false}
                                                                                    key="MB"
                                                                                    label="MB"
                                                                                    text="MB"
                                                                                    value="MB"
                                                                                  >
                                                                                    <option
                                                                                      className="bx--select-option"
                                                                                      disabled={false}
                                                                                      hidden={false}
                                                                                      label="MB"
                                                                                      value="MB"
                                                                                    >
                                                                                      MB
                                                                                    </option>
                                                                                  </SelectItem>
                                                                                </select>
                                                                                <ForwardRef(ChevronDown16)
                                                                                  className="bx--select__arrow"
                                                                                >
                                                                                  <Icon
                                                                                    className="bx--select__arrow"
                                                                                    fill="currentColor"
                                                                                    height={16}
                                                                                    preserveAspectRatio="xMidYMid meet"
                                                                                    viewBox="0 0 16 16"
                                                                                    width={16}
                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden={true}
                                                                                      className="bx--select__arrow"
                                                                                      fill="currentColor"
                                                                                      focusable="false"
                                                                                      height={16}
                                                                                      preserveAspectRatio="xMidYMid meet"
                                                                                      viewBox="0 0 16 16"
                                                                                      width={16}
                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                    >
                                                                                      <path
                                                                                        d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                                      />
                                                                                    </svg>
                                                                                  </Icon>
                                                                                </ForwardRef(ChevronDown16)>
                                                                              </div>
                                                                              <div
                                                                                className="bx--form__helper-text"
                                                                                id="select-helper-text-7"
                                                                              >
                                                                                Between 1024MB and 0.009765625GB
                                                                              </div>
                                                                            </div>
                                                                          </div>
                                                                        </Select>
                                                                      </ClearedSelect>
                                                                    </Select>
                                                                  </Select>
                                                                </SelectWithOnChange>
                                                              </FormFieldHideWrapper>
                                                            </Component>
                                                          </ConditionTriggerWrapper>
                                                        </ConditionTriggerDetector>
                                                      </ForwardRef(Field)>
                                                    </ConditionTriggerDetector>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                              </div>
                                            </SubForm>
                                          </FormFieldHideWrapper>
                                        </Component>
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="processor"
                              label="Processor"
                              name="processor"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Processor",
                                    "name": "processor",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Processor"
                                    name="processor"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="processor"
                                        key="processor"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Processor"
                                        name="processor"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={true}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="processor"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Processor"
                                          name="processor"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={true}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={true}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="processor"
                                              name="processor"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="processor"
                                            >
                                              Processor
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "processor",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 3,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ]
                              }
                              id="processor-sub-form"
                              key="processor-sub-form"
                              name="processor-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "processor",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "socket",
                                        "label": "Sockets",
                                        "name": "socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "socket",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "cores",
                                        "label": "Cores Per Socket",
                                        "name": "cores_per_socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "cores",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "text-field",
                                        "id": "total_cpus",
                                        "initialValue": 3,
                                        "isReadOnly": true,
                                        "label": "Total Processors",
                                        "name": "total_cpus",
                                        "type": "number",
                                      },
                                    ],
                                    "id": "processor-sub-form",
                                    "name": "processor-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "processor",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "socket",
                                          "label": "Sockets",
                                          "name": "socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "socket",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "cores",
                                          "label": "Cores Per Socket",
                                          "name": "cores_per_socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "cores",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "text-field",
                                          "id": "total_cpus",
                                          "initialValue": 3,
                                          "isReadOnly": true,
                                          "label": "Total Processors",
                                          "name": "total_cpus",
                                          "type": "number",
                                        },
                                      ],
                                      "id": "processor-sub-form",
                                      "name": "processor-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "processor",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="processor"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "processor",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "socket",
                                              "label": "Sockets",
                                              "name": "socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "socket",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "cores",
                                              "label": "Cores Per Socket",
                                              "name": "cores_per_socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "cores",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "text-field",
                                              "id": "total_cpus",
                                              "initialValue": 3,
                                              "isReadOnly": true,
                                              "label": "Total Processors",
                                              "name": "total_cpus",
                                              "type": "number",
                                            },
                                          ],
                                          "id": "processor-sub-form",
                                          "name": "processor-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "processor": true,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "processor",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "socket",
                                                "label": "Sockets",
                                                "name": "socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "socket",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "cores",
                                                "label": "Cores Per Socket",
                                                "name": "cores_per_socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "cores",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "text-field",
                                                "id": "total_cpus",
                                                "initialValue": 3,
                                                "isReadOnly": true,
                                                "label": "Total Processors",
                                                "name": "total_cpus",
                                                "type": "number",
                                              },
                                            ],
                                            "id": "processor-sub-form",
                                            "name": "processor-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "processor": true,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "processor",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "socket",
                                                  "label": "Sockets",
                                                  "name": "socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "socket",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "cores",
                                                  "label": "Cores Per Socket",
                                                  "name": "cores_per_socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "cores",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "text-field",
                                                  "id": "total_cpus",
                                                  "initialValue": 3,
                                                  "isReadOnly": true,
                                                  "label": "Total Processors",
                                                  "name": "total_cpus",
                                                  "type": "number",
                                                },
                                              ],
                                              "id": "processor-sub-form",
                                              "name": "processor-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "processor": true,
                                            }
                                          }
                                        >
                                          <FormFieldHideWrapper
                                            hideField={false}
                                          >
                                            <SubForm
                                              DescriptionElement="p"
                                              TitleElement="h3"
                                              className="reconfigure-sub-form"
                                              component="sub-form"
                                              fields={
                                                Array [
                                                  Object {
                                                    "component": "select",
                                                    "hideField": false,
                                                    "id": "socket",
                                                    "label": "Sockets",
                                                    "name": "socket_count",
                                                    "onChange": [Function],
                                                    "options": Array [
                                                      Object {
                                                        "label": "1",
                                                        "value": 1,
                                                      },
                                                      Object {
                                                        "label": "2",
                                                        "value": 2,
                                                      },
                                                      Object {
                                                        "label": "3",
                                                        "value": 3,
                                                      },
                                                      Object {
                                                        "label": "4",
                                                        "value": 4,
                                                      },
                                                    ],
                                                    "validate": Array [
                                                      Object {
                                                        "field": "socket",
                                                        "type": "cpuCheck",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "select",
                                                    "hideField": false,
                                                    "id": "cores",
                                                    "label": "Cores Per Socket",
                                                    "name": "cores_per_socket_count",
                                                    "onChange": [Function],
                                                    "options": Array [
                                                      Object {
                                                        "label": "1",
                                                        "value": 1,
                                                      },
                                                      Object {
                                                        "label": "2",
                                                        "value": 2,
                                                      },
                                                      Object {
                                                        "label": "3",
                                                        "value": 3,
                                                      },
                                                      Object {
                                                        "label": "4",
                                                        "value": 4,
                                                      },
                                                    ],
                                                    "validate": Array [
                                                      Object {
                                                        "field": "cores",
                                                        "type": "cpuCheck",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "text-field",
                                                    "id": "total_cpus",
                                                    "initialValue": 3,
                                                    "isReadOnly": true,
                                                    "label": "Total Processors",
                                                    "name": "total_cpus",
                                                    "type": "number",
                                                  },
                                                ]
                                              }
                                              id="processor-sub-form"
                                              name="processor-sub-form"
                                            >
                                              <div
                                                className="reconfigure-sub-form"
                                                id="processor-sub-form"
                                                name="processor-sub-form"
                                              >
                                                <SingleField
                                                  component="select"
                                                  hideField={false}
                                                  id="socket"
                                                  key="socket_count"
                                                  label="Sockets"
                                                  name="socket_count"
                                                  onChange={[Function]}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "label": "1",
                                                        "value": 1,
                                                      },
                                                      Object {
                                                        "label": "2",
                                                        "value": 2,
                                                      },
                                                      Object {
                                                        "label": "3",
                                                        "value": 3,
                                                      },
                                                      Object {
                                                        "label": "4",
                                                        "value": 4,
                                                      },
                                                    ]
                                                  }
                                                  validate={
                                                    Array [
                                                      Object {
                                                        "field": "socket",
                                                        "type": "cpuCheck",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <FormConditionWrapper
                                                    field={
                                                      Object {
                                                        "component": "select",
                                                        "id": "socket",
                                                        "label": "Sockets",
                                                        "name": "socket_count",
                                                        "onChange": [Function],
                                                        "options": Array [
                                                          Object {
                                                            "label": "1",
                                                            "value": 1,
                                                          },
                                                          Object {
                                                            "label": "2",
                                                            "value": 2,
                                                          },
                                                          Object {
                                                            "label": "3",
                                                            "value": 3,
                                                          },
                                                          Object {
                                                            "label": "4",
                                                            "value": 4,
                                                          },
                                                        ],
                                                        "validate": Array [
                                                          Object {
                                                            "field": "socket",
                                                            "type": "cpuCheck",
                                                          },
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <FormFieldHideWrapper
                                                      hideField={false}
                                                    >
                                                      <SelectWithOnChange
                                                        component="select"
                                                        id="socket"
                                                        label="Sockets"
                                                        name="socket_count"
                                                        onChange={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "1",
                                                              "value": 1,
                                                            },
                                                            Object {
                                                              "label": "2",
                                                              "value": 2,
                                                            },
                                                            Object {
                                                              "label": "3",
                                                              "value": 3,
                                                            },
                                                            Object {
                                                              "label": "4",
                                                              "value": 4,
                                                            },
                                                          ]
                                                        }
                                                        placeholder="<Choose>"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "field": "socket",
                                                              "type": "cpuCheck",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <Select
                                                          component="select"
                                                          id="socket"
                                                          label="Sockets"
                                                          loadingMessage="Loading..."
                                                          name="socket_count"
                                                          options={
                                                            Array [
                                                              Object {
                                                                "label": "1",
                                                                "value": 1,
                                                              },
                                                              Object {
                                                                "label": "2",
                                                                "value": 2,
                                                              },
                                                              Object {
                                                                "label": "3",
                                                                "value": 3,
                                                              },
                                                              Object {
                                                                "label": "4",
                                                                "value": 4,
                                                              },
                                                            ]
                                                          }
                                                          placeholder="<Choose>"
                                                          validate={
                                                            Array [
                                                              Object {
                                                                "field": "socket",
                                                                "type": "cpuCheck",
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <Select
                                                            SelectComponent={[Function]}
                                                            compareValues={[Function]}
                                                            id="socket"
                                                            invalid={false}
                                                            invalidText=""
                                                            isClearable={false}
                                                            isSearchable={false}
                                                            labelText="Sockets"
                                                            loadOptionsChangeCounter={1}
                                                            loadingMessage="Loading..."
                                                            name="socket_count"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "label": "1",
                                                                  "value": 1,
                                                                },
                                                                Object {
                                                                  "label": "2",
                                                                  "value": 2,
                                                                },
                                                                Object {
                                                                  "label": "3",
                                                                  "value": 3,
                                                                },
                                                                Object {
                                                                  "label": "4",
                                                                  "value": 4,
                                                                },
                                                              ]
                                                            }
                                                            placeholder="<Choose>"
                                                            pluckSingleValue={true}
                                                            simpleValue={false}
                                                            value="3"
                                                          >
                                                            <ClearedSelect
                                                              className=""
                                                              closeMenuOnSelect={true}
                                                              hideSelectedOptions={false}
                                                              id="socket"
                                                              invalidText=""
                                                              isClearable={false}
                                                              isFetching={false}
                                                              isSearchable={false}
                                                              labelText="Sockets"
                                                              name="socket_count"
                                                              noOptionsMessage={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onInputChange={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "label": "1",
                                                                    "value": 1,
                                                                  },
                                                                  Object {
                                                                    "label": "2",
                                                                    "value": 2,
                                                                  },
                                                                  Object {
                                                                    "label": "3",
                                                                    "value": 3,
                                                                  },
                                                                  Object {
                                                                    "label": "4",
                                                                    "value": 4,
                                                                  },
                                                                ]
                                                              }
                                                              placeholder="<Choose>"
                                                              value="3"
                                                            >
                                                              <Select
                                                                className=""
                                                                disabled={false}
                                                                helperText=""
                                                                id="socket_count"
                                                                inline={false}
                                                                invalid={false}
                                                                invalidText=""
                                                                labelText="Sockets"
                                                                light={false}
                                                                name="socket_count"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="3"
                                                              >
                                                                <div
                                                                  className="bx--form-item"
                                                                >
                                                                  <div
                                                                    className="bx--select"
                                                                  >
                                                                    <label
                                                                      className="bx--label"
                                                                      htmlFor="socket_count"
                                                                    >
                                                                      Sockets
                                                                    </label>
                                                                    <div
                                                                      className="bx--select-input__wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <select
                                                                        className="bx--select-input"
                                                                        id="socket_count"
                                                                        name="socket_count"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="3"
                                                                      >
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="1"
                                                                          label="1"
                                                                          text="1"
                                                                          value={1}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="1"
                                                                            value={1}
                                                                          >
                                                                            1
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="2"
                                                                          label="2"
                                                                          text="2"
                                                                          value={2}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="2"
                                                                            value={2}
                                                                          >
                                                                            2
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="3"
                                                                          label="3"
                                                                          text="3"
                                                                          value={3}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="3"
                                                                            value={3}
                                                                          >
                                                                            3
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="4"
                                                                          label="4"
                                                                          text="4"
                                                                          value={4}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="4"
                                                                            value={4}
                                                                          >
                                                                            4
                                                                          </option>
                                                                        </SelectItem>
                                                                      </select>
                                                                      <ForwardRef(ChevronDown16)
                                                                        className="bx--select__arrow"
                                                                      >
                                                                        <Icon
                                                                          className="bx--select__arrow"
                                                                          fill="currentColor"
                                                                          height={16}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 16 16"
                                                                          width={16}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="bx--select__arrow"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height={16}
                                                                            preserveAspectRatio="xMidYMid meet"
                                                                            viewBox="0 0 16 16"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                            />
                                                                          </svg>
                                                                        </Icon>
                                                                      </ForwardRef(ChevronDown16)>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </Select>
                                                            </ClearedSelect>
                                                          </Select>
                                                        </Select>
                                                      </SelectWithOnChange>
                                                    </FormFieldHideWrapper>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                                <SingleField
                                                  component="select"
                                                  hideField={false}
                                                  id="cores"
                                                  key="cores_per_socket_count"
                                                  label="Cores Per Socket"
                                                  name="cores_per_socket_count"
                                                  onChange={[Function]}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "label": "1",
                                                        "value": 1,
                                                      },
                                                      Object {
                                                        "label": "2",
                                                        "value": 2,
                                                      },
                                                      Object {
                                                        "label": "3",
                                                        "value": 3,
                                                      },
                                                      Object {
                                                        "label": "4",
                                                        "value": 4,
                                                      },
                                                    ]
                                                  }
                                                  validate={
                                                    Array [
                                                      Object {
                                                        "field": "cores",
                                                        "type": "cpuCheck",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <FormConditionWrapper
                                                    field={
                                                      Object {
                                                        "component": "select",
                                                        "id": "cores",
                                                        "label": "Cores Per Socket",
                                                        "name": "cores_per_socket_count",
                                                        "onChange": [Function],
                                                        "options": Array [
                                                          Object {
                                                            "label": "1",
                                                            "value": 1,
                                                          },
                                                          Object {
                                                            "label": "2",
                                                            "value": 2,
                                                          },
                                                          Object {
                                                            "label": "3",
                                                            "value": 3,
                                                          },
                                                          Object {
                                                            "label": "4",
                                                            "value": 4,
                                                          },
                                                        ],
                                                        "validate": Array [
                                                          Object {
                                                            "field": "cores",
                                                            "type": "cpuCheck",
                                                          },
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <FormFieldHideWrapper
                                                      hideField={false}
                                                    >
                                                      <SelectWithOnChange
                                                        component="select"
                                                        id="cores"
                                                        label="Cores Per Socket"
                                                        name="cores_per_socket_count"
                                                        onChange={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "1",
                                                              "value": 1,
                                                            },
                                                            Object {
                                                              "label": "2",
                                                              "value": 2,
                                                            },
                                                            Object {
                                                              "label": "3",
                                                              "value": 3,
                                                            },
                                                            Object {
                                                              "label": "4",
                                                              "value": 4,
                                                            },
                                                          ]
                                                        }
                                                        placeholder="<Choose>"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "field": "cores",
                                                              "type": "cpuCheck",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <Select
                                                          component="select"
                                                          id="cores"
                                                          label="Cores Per Socket"
                                                          loadingMessage="Loading..."
                                                          name="cores_per_socket_count"
                                                          options={
                                                            Array [
                                                              Object {
                                                                "label": "1",
                                                                "value": 1,
                                                              },
                                                              Object {
                                                                "label": "2",
                                                                "value": 2,
                                                              },
                                                              Object {
                                                                "label": "3",
                                                                "value": 3,
                                                              },
                                                              Object {
                                                                "label": "4",
                                                                "value": 4,
                                                              },
                                                            ]
                                                          }
                                                          placeholder="<Choose>"
                                                          validate={
                                                            Array [
                                                              Object {
                                                                "field": "cores",
                                                                "type": "cpuCheck",
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <Select
                                                            SelectComponent={[Function]}
                                                            compareValues={[Function]}
                                                            id="cores"
                                                            invalid={false}
                                                            invalidText=""
                                                            isClearable={false}
                                                            isSearchable={false}
                                                            labelText="Cores Per Socket"
                                                            loadOptionsChangeCounter={1}
                                                            loadingMessage="Loading..."
                                                            name="cores_per_socket_count"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "label": "1",
                                                                  "value": 1,
                                                                },
                                                                Object {
                                                                  "label": "2",
                                                                  "value": 2,
                                                                },
                                                                Object {
                                                                  "label": "3",
                                                                  "value": 3,
                                                                },
                                                                Object {
                                                                  "label": "4",
                                                                  "value": 4,
                                                                },
                                                              ]
                                                            }
                                                            placeholder="<Choose>"
                                                            pluckSingleValue={true}
                                                            simpleValue={false}
                                                            value="1"
                                                          >
                                                            <ClearedSelect
                                                              className=""
                                                              closeMenuOnSelect={true}
                                                              hideSelectedOptions={false}
                                                              id="cores"
                                                              invalidText=""
                                                              isClearable={false}
                                                              isFetching={false}
                                                              isSearchable={false}
                                                              labelText="Cores Per Socket"
                                                              name="cores_per_socket_count"
                                                              noOptionsMessage={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onInputChange={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "label": "1",
                                                                    "value": 1,
                                                                  },
                                                                  Object {
                                                                    "label": "2",
                                                                    "value": 2,
                                                                  },
                                                                  Object {
                                                                    "label": "3",
                                                                    "value": 3,
                                                                  },
                                                                  Object {
                                                                    "label": "4",
                                                                    "value": 4,
                                                                  },
                                                                ]
                                                              }
                                                              placeholder="<Choose>"
                                                              value="1"
                                                            >
                                                              <Select
                                                                className=""
                                                                disabled={false}
                                                                helperText=""
                                                                id="cores_per_socket_count"
                                                                inline={false}
                                                                invalid={false}
                                                                invalidText=""
                                                                labelText="Cores Per Socket"
                                                                light={false}
                                                                name="cores_per_socket_count"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="1"
                                                              >
                                                                <div
                                                                  className="bx--form-item"
                                                                >
                                                                  <div
                                                                    className="bx--select"
                                                                  >
                                                                    <label
                                                                      className="bx--label"
                                                                      htmlFor="cores_per_socket_count"
                                                                    >
                                                                      Cores Per Socket
                                                                    </label>
                                                                    <div
                                                                      className="bx--select-input__wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <select
                                                                        className="bx--select-input"
                                                                        id="cores_per_socket_count"
                                                                        name="cores_per_socket_count"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="1"
                                                                      >
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="1"
                                                                          label="1"
                                                                          text="1"
                                                                          value={1}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="1"
                                                                            value={1}
                                                                          >
                                                                            1
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="2"
                                                                          label="2"
                                                                          text="2"
                                                                          value={2}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="2"
                                                                            value={2}
                                                                          >
                                                                            2
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="3"
                                                                          label="3"
                                                                          text="3"
                                                                          value={3}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="3"
                                                                            value={3}
                                                                          >
                                                                            3
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="4"
                                                                          label="4"
                                                                          text="4"
                                                                          value={4}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="4"
                                                                            value={4}
                                                                          >
                                                                            4
                                                                          </option>
                                                                        </SelectItem>
                                                                      </select>
                                                                      <ForwardRef(ChevronDown16)
                                                                        className="bx--select__arrow"
                                                                      >
                                                                        <Icon
                                                                          className="bx--select__arrow"
                                                                          fill="currentColor"
                                                                          height={16}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 16 16"
                                                                          width={16}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="bx--select__arrow"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height={16}
                                                                            preserveAspectRatio="xMidYMid meet"
                                                                            viewBox="0 0 16 16"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                            />
                                                                          </svg>
                                                                        </Icon>
                                                                      </ForwardRef(ChevronDown16)>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </Select>
                                                            </ClearedSelect>
                                                          </Select>
                                                        </Select>
                                                      </SelectWithOnChange>
                                                    </FormFieldHideWrapper>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                                <SingleField
                                                  component="text-field"
                                                  id="total_cpus"
                                                  initialValue={3}
                                                  isReadOnly={true}
                                                  key="total_cpus"
                                                  label="Total Processors"
                                                  name="total_cpus"
                                                  type="number"
                                                >
                                                  <FormConditionWrapper
                                                    field={
                                                      Object {
                                                        "component": "text-field",
                                                        "id": "total_cpus",
                                                        "initialValue": 3,
                                                        "isReadOnly": true,
                                                        "label": "Total Processors",
                                                        "name": "total_cpus",
                                                        "type": "number",
                                                      }
                                                    }
                                                  >
                                                    <FormFieldHideWrapper
                                                      hideField={false}
                                                    >
                                                      <TextField
                                                        component="text-field"
                                                        id="total_cpus"
                                                        initialValue={3}
                                                        isReadOnly={true}
                                                        label="Total Processors"
                                                        name="total_cpus"
                                                        type="number"
                                                      >
                                                        <ForwardRef(NumberInput)
                                                          id="total_cpus"
                                                          invalid={false}
                                                          invalidText=""
                                                          key="total_cpus"
                                                          label="Total Processors"
                                                          name="total_cpus"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          readOnly={true}
                                                          type="number"
                                                          value={3}
                                                          warn={false}
                                                          warnText=""
                                                        >
                                                          <NumberInput
                                                            allowEmpty={false}
                                                            ariaLabel="Numeric input field with increment and decrement buttons"
                                                            disabled={false}
                                                            helperText=""
                                                            hideLabel={false}
                                                            iconDescription="choose a number"
                                                            id="total_cpus"
                                                            innerRef={null}
                                                            invalid={false}
                                                            invalidText=""
                                                            label="Total Processors"
                                                            light={false}
                                                            name="total_cpus"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            readOnly={true}
                                                            step={1}
                                                            translateWithId={[Function]}
                                                            type="number"
                                                            value={3}
                                                            warn={false}
                                                            warnText=""
                                                          >
                                                            <div
                                                              className="bx--form-item"
                                                            >
                                                              <div
                                                                className="bx--number bx--number--helpertext bx--number--readonly"
                                                              >
                                                                <label
                                                                  className="bx--label"
                                                                  htmlFor="total_cpus"
                                                                >
                                                                  Total Processors
                                                                </label>
                                                                <div
                                                                  className="bx--number__input-wrapper"
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    aria-label={null}
                                                                    data-invalid={false}
                                                                    disabled={false}
                                                                    id="total_cpus"
                                                                    name="total_cpus"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    pattern="[0-9]*"
                                                                    readOnly={true}
                                                                    step={1}
                                                                    type="number"
                                                                    value={3}
                                                                  />
                                                                  <ForwardRef(EditOff16)
                                                                    className="bx--number__readonly-icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--number__readonly-icon"
                                                                      fill="currentColor"
                                                                      height={16}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={16}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--number__readonly-icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={16}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={16}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M30 28.6L3.4 2 2 3.4l10.1 10.1L4 21.6V28h6.4l8.1-8.1L28.6 30 30 28.6zM9.6 26H6v-3.6l7.5-7.5 3.6 3.6L9.6 26zM29.4 6.2L29.4 6.2l-3.6-3.6c-.8-.8-2-.8-2.8 0l0 0 0 0-8 8 1.4 1.4L20 8.4l3.6 3.6L20 15.6l1.4 1.4 8-8C30.2 8.2 30.2 7 29.4 6.2L29.4 6.2zM25 10.6L21.4 7l3-3L28 7.6 25 10.6z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(EditOff16)>
                                                                  <div
                                                                    className="bx--number__controls"
                                                                  >
                                                                    <button
                                                                      aria-label="Decrement number"
                                                                      className="bx--number__control-btn down-icon"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      tabIndex="-1"
                                                                      title="Decrement number"
                                                                      type="button"
                                                                    >
                                                                      <ForwardRef(Subtract16)
                                                                        className="down-icon"
                                                                      >
                                                                        <Icon
                                                                          className="down-icon"
                                                                          fill="currentColor"
                                                                          height={16}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={16}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="down-icon"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height={16}
                                                                            preserveAspectRatio="xMidYMid meet"
                                                                            viewBox="0 0 32 32"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M8 15H24V17H8z"
                                                                            />
                                                                          </svg>
                                                                        </Icon>
                                                                      </ForwardRef(Subtract16)>
                                                                    </button>
                                                                    <div
                                                                      className="bx--number__rule-divider"
                                                                    />
                                                                    <button
                                                                      aria-label="Increment number"
                                                                      className="bx--number__control-btn up-icon"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      tabIndex="-1"
                                                                      title="Increment number"
                                                                      type="button"
                                                                    >
                                                                      <ForwardRef(Add16)
                                                                        className="up-icon"
                                                                      >
                                                                        <Icon
                                                                          className="up-icon"
                                                                          fill="currentColor"
                                                                          height={16}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={16}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="up-icon"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height={16}
                                                                            preserveAspectRatio="xMidYMid meet"
                                                                            viewBox="0 0 32 32"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                                            />
                                                                          </svg>
                                                                        </Icon>
                                                                      </ForwardRef(Add16)>
                                                                    </button>
                                                                    <div
                                                                      className="bx--number__rule-divider"
                                                                    />
                                                                  </div>
                                                                </div>
                                                              </div>
                                                            </div>
                                                          </NumberInput>
                                                        </ForwardRef(NumberInput)>
                                                      </TextField>
                                                    </FormFieldHideWrapper>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                              </div>
                                            </SubForm>
                                          </FormFieldHideWrapper>
                                        </Component>
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                          </div>
                        </SubForm>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <SingleField
                    component="spy-field"
                    key="spy-field"
                    name="spy-field"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SpyField
                          component="spy-field"
                          name="spy-field"
                        >
                          <FormSpy
                            onChange={[Function]}
                            subscription={
                              Object {
                                "pristine": true,
                                "valid": true,
                              }
                            }
                          />
                        </SpyField>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <div
                    className="bx--btn-set"
                  >
                    <button
                      alt="Save"
                      className="bx--btn bx--btn--primary"
                      disabled={true}
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      alt="Reset"
                      className="bx--btn bx--btn--secondary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Reset
                    </button>
                    <button
                      alt="Cancel"
                      className="bx--btn bx--btn--secondary"
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              </ReconfigureTemplate>
            </FormTemplate>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </ReconfigureVmForm>
</Provider>
`;

exports[`Reconfigure VM form component should render reconfigure form and show network add form 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReconfigureVmForm
    memory={
      Object {
        "max": 10,
        "min": 1024,
      }
    }
    options={
      Object {
        "avail_adapter_names": Array [],
        "controller_types": Array [
          "VirtualController",
          "ParaVirtualController",
          "VirtualBusController",
        ],
        "cores_options": Array [
          1,
          2,
          3,
          4,
        ],
        "host_file_options": Array [
          Array [
            "host file test 1.iso",
            "host file test 1.iso,18",
          ],
          Array [
            "host file test 2.iso",
            "host file test 2.iso,18",
          ],
          Array [
            "host file test 3.iso",
            "host file test 3.iso,18",
          ],
        ],
        "socket_options": Array [
          1,
          2,
          3,
          4,
        ],
        "vlan_options": Array [
          "vlan test 0",
          "vlan test 1",
          "vlan test 3",
        ],
      }
    }
    recordId={
      Array [
        12,
      ]
    }
    requestId="new"
    roles={
      Object {
        "allowCdromsChange": true,
        "allowCpuChange": true,
        "allowDiskChange": true,
        "allowDiskSizeChange": true,
        "allowMemoryChange": true,
        "allowNetworkChange": true,
        "isRedhat": true,
        "isVmwareCloud": false,
        "isVmwareInfra": true,
      }
    }
  >
    <Connect(MiqFormRenderer)
      FormTemplate={[Function]}
      clearOnUnmount={true}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "reconfigure-table": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "cb_memory": false,
          "cores_per_socket_count": "1",
          "mem_type": "GB",
          "memory": "16",
          "processor": false,
          "socket_count": "4",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "className": "network_form",
              "component": "sub-form",
              "fields": Array [
                Array [
                  Object {
                    "autoFocus": true,
                    "component": "text-field",
                    "hideField": true,
                    "id": "name",
                    "initialValue": "",
                    "isReadOnly": false,
                    "label": "Name",
                    "name": "name",
                  },
                  Object {
                    "component": "select",
                    "hideField": false,
                    "id": "vlan",
                    "includeEmpty": true,
                    "initialValue": "",
                    "isRequired": true,
                    "label": "vLan",
                    "name": "vlan",
                    "options": Array [
                      Object {
                        "label": "vlan test 0",
                        "value": "vlan test 0",
                      },
                      Object {
                        "label": "vlan test 1",
                        "value": "vlan test 1",
                      },
                      Object {
                        "label": "vlan test 3",
                        "value": "vlan test 3",
                      },
                    ],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "hideField": false,
                        "type": "customRequired",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "hideField": true,
                    "id": "network",
                    "includeEmpty": true,
                    "initialValue": "",
                    "isRequired": true,
                    "label": "Network",
                    "name": "network",
                    "options": Array [],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "hideField": true,
                        "type": "customRequired",
                      },
                    ],
                  },
                  Object {
                    "component": "text-field",
                    "hideField": true,
                    "id": "mac",
                    "initialValue": "",
                    "isReadOnly": false,
                    "label": "MAC Address",
                    "name": "mac",
                  },
                ],
              ],
              "name": "BasicInformation",
              "title": "Add Network Adapters",
            },
          ],
        }
      }
      validatorMapper={
        Object {
          "cpuCheck": [Function],
          "customRequired": [Function],
          "diskMemoryCheck": [Function],
          "memoryCheck": [Function],
        }
      }
    >
      <MiqFormRenderer
        FormTemplate={[Function]}
        buttonsLabels={Object {}}
        canReset={false}
        className="form-react"
        clearOnUnmount={true}
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "reconfigure-table": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "cb_memory": false,
            "cores_per_socket_count": "1",
            "mem_type": "GB",
            "memory": "16",
            "processor": false,
            "socket_count": "4",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "className": "network_form",
                "component": "sub-form",
                "fields": Array [
                  Array [
                    Object {
                      "autoFocus": true,
                      "component": "text-field",
                      "hideField": true,
                      "id": "name",
                      "initialValue": "",
                      "isReadOnly": false,
                      "label": "Name",
                      "name": "name",
                    },
                    Object {
                      "component": "select",
                      "hideField": false,
                      "id": "vlan",
                      "includeEmpty": true,
                      "initialValue": "",
                      "isRequired": true,
                      "label": "vLan",
                      "name": "vlan",
                      "options": Array [
                        Object {
                          "label": "vlan test 0",
                          "value": "vlan test 0",
                        },
                        Object {
                          "label": "vlan test 1",
                          "value": "vlan test 1",
                        },
                        Object {
                          "label": "vlan test 3",
                          "value": "vlan test 3",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "hideField": false,
                          "type": "customRequired",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "hideField": true,
                      "id": "network",
                      "includeEmpty": true,
                      "initialValue": "",
                      "isRequired": true,
                      "label": "Network",
                      "name": "network",
                      "options": Array [],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "hideField": true,
                          "type": "customRequired",
                        },
                      ],
                    },
                    Object {
                      "component": "text-field",
                      "hideField": true,
                      "id": "mac",
                      "initialValue": "",
                      "isReadOnly": false,
                      "label": "MAC Address",
                      "name": "mac",
                    },
                  ],
                ],
                "name": "BasicInformation",
                "title": "Add Network Adapters",
              },
            ],
          }
        }
        showFormControls={true}
        validatorMapper={
          Object {
            "cpuCheck": [Function],
            "customRequired": [Function],
            "diskMemoryCheck": [Function],
            "memoryCheck": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={true}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "reconfigure-table": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "cb_memory": false,
              "cores_per_socket_count": "1",
              "mem_type": "GB",
              "memory": "16",
              "processor": false,
              "socket_count": "4",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "className": "network_form",
                  "component": "sub-form",
                  "fields": Array [
                    Array [
                      Object {
                        "autoFocus": true,
                        "component": "text-field",
                        "hideField": true,
                        "id": "name",
                        "initialValue": "",
                        "isReadOnly": false,
                        "label": "Name",
                        "name": "name",
                      },
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "vlan",
                        "includeEmpty": true,
                        "initialValue": "",
                        "isRequired": true,
                        "label": "vLan",
                        "name": "vlan",
                        "options": Array [
                          Object {
                            "label": "vlan test 0",
                            "value": "vlan test 0",
                          },
                          Object {
                            "label": "vlan test 1",
                            "value": "vlan test 1",
                          },
                          Object {
                            "label": "vlan test 3",
                            "value": "vlan test 3",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "hideField": false,
                            "type": "customRequired",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "hideField": true,
                        "id": "network",
                        "includeEmpty": true,
                        "initialValue": "",
                        "isRequired": true,
                        "label": "Network",
                        "name": "network",
                        "options": Array [],
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "hideField": true,
                            "type": "customRequired",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "hideField": true,
                        "id": "mac",
                        "initialValue": "",
                        "isReadOnly": false,
                        "label": "MAC Address",
                        "name": "mac",
                      },
                    ],
                  ],
                  "name": "BasicInformation",
                  "title": "Add Network Adapters",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validatorMapper={
            Object {
              "cpuCheck": [Function],
              "customRequired": [Function],
              "diskMemoryCheck": [Function],
              "memoryCheck": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "cb_memory": false,
                "cores_per_socket_count": "1",
                "mem_type": "GB",
                "memory": "16",
                "processor": false,
                "socket_count": "4",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <FormTemplate
              formFields={
                Array [
                  <SingleField
                    className="network_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "autoFocus": true,
                            "component": "text-field",
                            "hideField": true,
                            "id": "name",
                            "initialValue": "",
                            "isReadOnly": false,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "vlan",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isRequired": true,
                            "label": "vLan",
                            "name": "vlan",
                            "options": Array [
                              Object {
                                "label": "vlan test 0",
                                "value": "vlan test 0",
                              },
                              Object {
                                "label": "vlan test 1",
                                "value": "vlan test 1",
                              },
                              Object {
                                "label": "vlan test 3",
                                "value": "vlan test 3",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": false,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "hideField": true,
                            "id": "network",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isRequired": true,
                            "label": "Network",
                            "name": "network",
                            "options": Array [],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": true,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "hideField": true,
                            "id": "mac",
                            "initialValue": "",
                            "isReadOnly": false,
                            "label": "MAC Address",
                            "name": "mac",
                          },
                        ],
                      ]
                    }
                    name="BasicInformation"
                    title="Add Network Adapters"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "className": "network_form",
                      "component": "sub-form",
                      "fields": Array [
                        Array [
                          Object {
                            "autoFocus": true,
                            "component": "text-field",
                            "hideField": true,
                            "id": "name",
                            "initialValue": "",
                            "isReadOnly": false,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "vlan",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isRequired": true,
                            "label": "vLan",
                            "name": "vlan",
                            "options": Array [
                              Object {
                                "label": "vlan test 0",
                                "value": "vlan test 0",
                              },
                              Object {
                                "label": "vlan test 1",
                                "value": "vlan test 1",
                              },
                              Object {
                                "label": "vlan test 3",
                                "value": "vlan test 3",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": false,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "hideField": true,
                            "id": "network",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isRequired": true,
                            "label": "Network",
                            "name": "network",
                            "options": Array [],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": true,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "hideField": true,
                            "id": "mac",
                            "initialValue": "",
                            "isReadOnly": false,
                            "label": "MAC Address",
                            "name": "mac",
                          },
                        ],
                      ],
                      "name": "BasicInformation",
                      "title": "Add Network Adapters",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <ReconfigureTemplate
                canSubmit={false}
                formFields={
                  Array [
                    <SingleField
                      className="network_form"
                      component="sub-form"
                      fields={
                        Array [
                          Array [
                            Object {
                              "autoFocus": true,
                              "component": "text-field",
                              "hideField": true,
                              "id": "name",
                              "initialValue": "",
                              "isReadOnly": false,
                              "label": "Name",
                              "name": "name",
                            },
                            Object {
                              "component": "select",
                              "hideField": false,
                              "id": "vlan",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isRequired": true,
                              "label": "vLan",
                              "name": "vlan",
                              "options": Array [
                                Object {
                                  "label": "vlan test 0",
                                  "value": "vlan test 0",
                                },
                                Object {
                                  "label": "vlan test 1",
                                  "value": "vlan test 1",
                                },
                                Object {
                                  "label": "vlan test 3",
                                  "value": "vlan test 3",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "hideField": false,
                                  "type": "customRequired",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "hideField": true,
                              "id": "network",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isRequired": true,
                              "label": "Network",
                              "name": "network",
                              "options": Array [],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "hideField": true,
                                  "type": "customRequired",
                                },
                              ],
                            },
                            Object {
                              "component": "text-field",
                              "hideField": true,
                              "id": "mac",
                              "initialValue": "",
                              "isReadOnly": false,
                              "label": "MAC Address",
                              "name": "mac",
                            },
                          ],
                        ]
                      }
                      name="BasicInformation"
                      title="Add Network Adapters"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                hideButtons={false}
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "className": "network_form",
                        "component": "sub-form",
                        "fields": Array [
                          Array [
                            Object {
                              "autoFocus": true,
                              "component": "text-field",
                              "hideField": true,
                              "id": "name",
                              "initialValue": "",
                              "isReadOnly": false,
                              "label": "Name",
                              "name": "name",
                            },
                            Object {
                              "component": "select",
                              "hideField": false,
                              "id": "vlan",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isRequired": true,
                              "label": "vLan",
                              "name": "vlan",
                              "options": Array [
                                Object {
                                  "label": "vlan test 0",
                                  "value": "vlan test 0",
                                },
                                Object {
                                  "label": "vlan test 1",
                                  "value": "vlan test 1",
                                },
                                Object {
                                  "label": "vlan test 3",
                                  "value": "vlan test 3",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "hideField": false,
                                  "type": "customRequired",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "hideField": true,
                              "id": "network",
                              "includeEmpty": true,
                              "initialValue": "",
                              "isRequired": true,
                              "label": "Network",
                              "name": "network",
                              "options": Array [],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "hideField": true,
                                  "type": "customRequired",
                                },
                              ],
                            },
                            Object {
                              "component": "text-field",
                              "hideField": true,
                              "id": "mac",
                              "initialValue": "",
                              "isReadOnly": false,
                              "label": "MAC Address",
                              "name": "mac",
                            },
                          ],
                        ],
                        "name": "BasicInformation",
                        "title": "Add Network Adapters",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
              >
                <form
                  className="form-react reconfigure-form"
                  onSubmit={[Function]}
                >
                  <SingleField
                    className="network_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "autoFocus": true,
                            "component": "text-field",
                            "hideField": true,
                            "id": "name",
                            "initialValue": "",
                            "isReadOnly": false,
                            "label": "Name",
                            "name": "name",
                          },
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "vlan",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isRequired": true,
                            "label": "vLan",
                            "name": "vlan",
                            "options": Array [
                              Object {
                                "label": "vlan test 0",
                                "value": "vlan test 0",
                              },
                              Object {
                                "label": "vlan test 1",
                                "value": "vlan test 1",
                              },
                              Object {
                                "label": "vlan test 3",
                                "value": "vlan test 3",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": false,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "hideField": true,
                            "id": "network",
                            "includeEmpty": true,
                            "initialValue": "",
                            "isRequired": true,
                            "label": "Network",
                            "name": "network",
                            "options": Array [],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "hideField": true,
                                "type": "customRequired",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "hideField": true,
                            "id": "mac",
                            "initialValue": "",
                            "isReadOnly": false,
                            "label": "MAC Address",
                            "name": "mac",
                          },
                        ],
                      ]
                    }
                    key="BasicInformation"
                    name="BasicInformation"
                    title="Add Network Adapters"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "className": "network_form",
                          "component": "sub-form",
                          "fields": Array [
                            Array [
                              Object {
                                "autoFocus": true,
                                "component": "text-field",
                                "hideField": true,
                                "id": "name",
                                "initialValue": "",
                                "isReadOnly": false,
                                "label": "Name",
                                "name": "name",
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "vlan",
                                "includeEmpty": true,
                                "initialValue": "",
                                "isRequired": true,
                                "label": "vLan",
                                "name": "vlan",
                                "options": Array [
                                  Object {
                                    "label": "vlan test 0",
                                    "value": "vlan test 0",
                                  },
                                  Object {
                                    "label": "vlan test 1",
                                    "value": "vlan test 1",
                                  },
                                  Object {
                                    "label": "vlan test 3",
                                    "value": "vlan test 3",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "hideField": false,
                                    "type": "customRequired",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": true,
                                "id": "network",
                                "includeEmpty": true,
                                "initialValue": "",
                                "isRequired": true,
                                "label": "Network",
                                "name": "network",
                                "options": Array [],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "hideField": true,
                                    "type": "customRequired",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "hideField": true,
                                "id": "mac",
                                "initialValue": "",
                                "isReadOnly": false,
                                "label": "MAC Address",
                                "name": "mac",
                              },
                            ],
                          ],
                          "name": "BasicInformation",
                          "title": "Add Network Adapters",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SubForm
                          DescriptionElement="p"
                          TitleElement="h3"
                          className="network_form"
                          component="sub-form"
                          fields={
                            Array [
                              Array [
                                Object {
                                  "autoFocus": true,
                                  "component": "text-field",
                                  "hideField": true,
                                  "id": "name",
                                  "initialValue": "",
                                  "isReadOnly": false,
                                  "label": "Name",
                                  "name": "name",
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "vlan",
                                  "includeEmpty": true,
                                  "initialValue": "",
                                  "isRequired": true,
                                  "label": "vLan",
                                  "name": "vlan",
                                  "options": Array [
                                    Object {
                                      "label": "vlan test 0",
                                      "value": "vlan test 0",
                                    },
                                    Object {
                                      "label": "vlan test 1",
                                      "value": "vlan test 1",
                                    },
                                    Object {
                                      "label": "vlan test 3",
                                      "value": "vlan test 3",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "hideField": false,
                                      "type": "customRequired",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": true,
                                  "id": "network",
                                  "includeEmpty": true,
                                  "initialValue": "",
                                  "isRequired": true,
                                  "label": "Network",
                                  "name": "network",
                                  "options": Array [],
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "hideField": true,
                                      "type": "customRequired",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "hideField": true,
                                  "id": "mac",
                                  "initialValue": "",
                                  "isReadOnly": false,
                                  "label": "MAC Address",
                                  "name": "mac",
                                },
                              ],
                            ]
                          }
                          name="BasicInformation"
                          title="Add Network Adapters"
                        >
                          <div
                            className="network_form"
                            name="BasicInformation"
                          >
                            <div>
                              <h3>
                                Add Network Adapters
                              </h3>
                            </div>
                            <SingleField
                              autoFocus={true}
                              component="text-field"
                              hideField={true}
                              id="name"
                              initialValue=""
                              isReadOnly={false}
                              key="name"
                              label="Name"
                              name="name"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "autoFocus": true,
                                    "component": "text-field",
                                    "id": "name",
                                    "initialValue": "",
                                    "isReadOnly": false,
                                    "label": "Name",
                                    "name": "name",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={true}
                                >
                                  <div
                                    hidden={true}
                                  >
                                    <TextField
                                      autoFocus={true}
                                      component="text-field"
                                      id="name"
                                      initialValue=""
                                      isReadOnly={false}
                                      label="Name"
                                      name="name"
                                    >
                                      <TextInput
                                        autoFocus={true}
                                        id="name"
                                        invalid={false}
                                        invalidText=""
                                        key="name"
                                        labelText="Name"
                                        name="name"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        readOnly={false}
                                        value=""
                                        warn={false}
                                        warnText=""
                                      >
                                        <div
                                          className="bx--form-item bx--text-input-wrapper"
                                        >
                                          <label
                                            className="bx--label"
                                            htmlFor="name"
                                          >
                                            Name
                                          </label>
                                          <div
                                            className="bx--text-input__field-outer-wrapper"
                                          >
                                            <div
                                              className="bx--text-input__field-wrapper"
                                              data-invalid={null}
                                            >
                                              <input
                                                autoFocus={true}
                                                className="bx--text-input bx--text-input--md"
                                                disabled={false}
                                                id="name"
                                                name="name"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                readOnly={false}
                                                type="text"
                                                value=""
                                              />
                                            </div>
                                          </div>
                                        </div>
                                      </TextInput>
                                    </TextField>
                                  </div>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="select"
                              hideField={false}
                              id="vlan"
                              includeEmpty={true}
                              initialValue=""
                              isRequired={true}
                              key="vlan"
                              label="vLan"
                              name="vlan"
                              options={
                                Array [
                                  Object {
                                    "label": "vlan test 0",
                                    "value": "vlan test 0",
                                  },
                                  Object {
                                    "label": "vlan test 1",
                                    "value": "vlan test 1",
                                  },
                                  Object {
                                    "label": "vlan test 3",
                                    "value": "vlan test 3",
                                  },
                                ]
                              }
                              placeholder="<Choose>"
                              validate={
                                Array [
                                  Object {
                                    "hideField": false,
                                    "type": "customRequired",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "select",
                                    "id": "vlan",
                                    "includeEmpty": true,
                                    "initialValue": "",
                                    "isRequired": true,
                                    "label": "vLan",
                                    "name": "vlan",
                                    "options": Array [
                                      Object {
                                        "label": "vlan test 0",
                                        "value": "vlan test 0",
                                      },
                                      Object {
                                        "label": "vlan test 1",
                                        "value": "vlan test 1",
                                      },
                                      Object {
                                        "label": "vlan test 3",
                                        "value": "vlan test 3",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "hideField": false,
                                        "type": "customRequired",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <SelectWithOnChange
                                    component="select"
                                    id="vlan"
                                    includeEmpty={true}
                                    initialValue=""
                                    isRequired={true}
                                    label="vLan"
                                    name="vlan"
                                    options={
                                      Array [
                                        Object {
                                          "label": "vlan test 0",
                                          "value": "vlan test 0",
                                        },
                                        Object {
                                          "label": "vlan test 1",
                                          "value": "vlan test 1",
                                        },
                                        Object {
                                          "label": "vlan test 3",
                                          "value": "vlan test 3",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                    validate={
                                      Array [
                                        Object {
                                          "hideField": false,
                                          "type": "customRequired",
                                        },
                                      ]
                                    }
                                  >
                                    <Select
                                      component="select"
                                      id="vlan"
                                      initialValue=""
                                      isRequired={true}
                                      label="vLan"
                                      loadingMessage="Loading..."
                                      name="vlan"
                                      options={
                                        Array [
                                          Object {
                                            "label": "<Choose>",
                                            "value": undefined,
                                          },
                                          Object {
                                            "label": "vlan test 0",
                                            "value": "vlan test 0",
                                          },
                                          Object {
                                            "label": "vlan test 1",
                                            "value": "vlan test 1",
                                          },
                                          Object {
                                            "label": "vlan test 3",
                                            "value": "vlan test 3",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                      validate={
                                        Array [
                                          Object {
                                            "hideField": false,
                                            "type": "customRequired",
                                          },
                                        ]
                                      }
                                    >
                                      <Select
                                        SelectComponent={[Function]}
                                        compareValues={[Function]}
                                        id="vlan"
                                        invalid={false}
                                        invalidText=""
                                        isClearable={false}
                                        isSearchable={false}
                                        labelText={
                                          <IsRequired>
                                            vLan
                                          </IsRequired>
                                        }
                                        loadOptionsChangeCounter={1}
                                        loadingMessage="Loading..."
                                        name="vlan"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "<Choose>",
                                              "value": undefined,
                                            },
                                            Object {
                                              "label": "vlan test 0",
                                              "value": "vlan test 0",
                                            },
                                            Object {
                                              "label": "vlan test 1",
                                              "value": "vlan test 1",
                                            },
                                            Object {
                                              "label": "vlan test 3",
                                              "value": "vlan test 3",
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        pluckSingleValue={true}
                                        simpleValue={false}
                                        value=""
                                      >
                                        <ClearedSelect
                                          className=""
                                          closeMenuOnSelect={true}
                                          hideSelectedOptions={false}
                                          id="vlan"
                                          invalidText=""
                                          isClearable={false}
                                          isFetching={false}
                                          isSearchable={false}
                                          labelText={
                                            <IsRequired>
                                              vLan
                                            </IsRequired>
                                          }
                                          name="vlan"
                                          noOptionsMessage={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onInputChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "<Choose>",
                                                "value": undefined,
                                              },
                                              Object {
                                                "label": "vlan test 0",
                                                "value": "vlan test 0",
                                              },
                                              Object {
                                                "label": "vlan test 1",
                                                "value": "vlan test 1",
                                              },
                                              Object {
                                                "label": "vlan test 3",
                                                "value": "vlan test 3",
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          value=""
                                        >
                                          <Select
                                            className=""
                                            disabled={false}
                                            helperText=""
                                            id="vlan"
                                            inline={false}
                                            invalid={false}
                                            invalidText=""
                                            labelText={
                                              <IsRequired>
                                                vLan
                                              </IsRequired>
                                            }
                                            light={false}
                                            name="vlan"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value=""
                                          >
                                            <div
                                              className="bx--form-item"
                                            >
                                              <div
                                                className="bx--select"
                                              >
                                                <label
                                                  className="bx--label"
                                                  htmlFor="vlan"
                                                >
                                                  <IsRequired>
                                                    <span
                                                      aria-hidden="true"
                                                      className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                                    >
                                                      *
                                                    </span>
                                                    vLan
                                                  </IsRequired>
                                                </label>
                                                <div
                                                  className="bx--select-input__wrapper"
                                                  data-invalid={null}
                                                >
                                                  <select
                                                    className="bx--select-input"
                                                    id="vlan"
                                                    name="vlan"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value=""
                                                  >
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="0"
                                                      label="<Choose>"
                                                      text="<Choose>"
                                                      value=""
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="<Choose>"
                                                        value=""
                                                      >
                                                        &lt;Choose&gt;
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="vlan test 0"
                                                      label="vlan test 0"
                                                      text="vlan test 0"
                                                      value="vlan test 0"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="vlan test 0"
                                                        value="vlan test 0"
                                                      >
                                                        vlan test 0
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="vlan test 1"
                                                      label="vlan test 1"
                                                      text="vlan test 1"
                                                      value="vlan test 1"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="vlan test 1"
                                                        value="vlan test 1"
                                                      >
                                                        vlan test 1
                                                      </option>
                                                    </SelectItem>
                                                    <SelectItem
                                                      disabled={false}
                                                      hidden={false}
                                                      key="vlan test 3"
                                                      label="vlan test 3"
                                                      text="vlan test 3"
                                                      value="vlan test 3"
                                                    >
                                                      <option
                                                        className="bx--select-option"
                                                        disabled={false}
                                                        hidden={false}
                                                        label="vlan test 3"
                                                        value="vlan test 3"
                                                      >
                                                        vlan test 3
                                                      </option>
                                                    </SelectItem>
                                                  </select>
                                                  <ForwardRef(ChevronDown16)
                                                    className="bx--select__arrow"
                                                  >
                                                    <Icon
                                                      className="bx--select__arrow"
                                                      fill="currentColor"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                        />
                                                      </svg>
                                                    </Icon>
                                                  </ForwardRef(ChevronDown16)>
                                                </div>
                                              </div>
                                            </div>
                                          </Select>
                                        </ClearedSelect>
                                      </Select>
                                    </Select>
                                  </SelectWithOnChange>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="select"
                              hideField={true}
                              id="network"
                              includeEmpty={true}
                              initialValue=""
                              isRequired={true}
                              key="network"
                              label="Network"
                              name="network"
                              options={Array []}
                              placeholder="<Choose>"
                              validate={
                                Array [
                                  Object {
                                    "hideField": true,
                                    "type": "customRequired",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "select",
                                    "id": "network",
                                    "includeEmpty": true,
                                    "initialValue": "",
                                    "isRequired": true,
                                    "label": "Network",
                                    "name": "network",
                                    "options": Array [],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "hideField": true,
                                        "type": "customRequired",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={true}
                                >
                                  <div
                                    hidden={true}
                                  >
                                    <SelectWithOnChange
                                      component="select"
                                      id="network"
                                      includeEmpty={true}
                                      initialValue=""
                                      isRequired={true}
                                      label="Network"
                                      name="network"
                                      options={Array []}
                                      placeholder="<Choose>"
                                      validate={
                                        Array [
                                          Object {
                                            "hideField": true,
                                            "type": "customRequired",
                                          },
                                        ]
                                      }
                                    >
                                      <Select
                                        component="select"
                                        id="network"
                                        initialValue=""
                                        isRequired={true}
                                        label="Network"
                                        loadingMessage="Loading..."
                                        name="network"
                                        options={
                                          Array [
                                            Object {
                                              "label": "<Choose>",
                                              "value": undefined,
                                            },
                                          ]
                                        }
                                        placeholder="<Choose>"
                                        validate={
                                          Array [
                                            Object {
                                              "hideField": true,
                                              "type": "customRequired",
                                            },
                                          ]
                                        }
                                      >
                                        <Select
                                          SelectComponent={[Function]}
                                          compareValues={[Function]}
                                          id="network"
                                          invalid={false}
                                          invalidText=""
                                          isClearable={false}
                                          isSearchable={false}
                                          labelText={
                                            <IsRequired>
                                              Network
                                            </IsRequired>
                                          }
                                          loadOptionsChangeCounter={1}
                                          loadingMessage="Loading..."
                                          name="network"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "<Choose>",
                                                "value": undefined,
                                              },
                                            ]
                                          }
                                          placeholder="<Choose>"
                                          pluckSingleValue={true}
                                          simpleValue={false}
                                          value=""
                                        >
                                          <ClearedSelect
                                            className=""
                                            closeMenuOnSelect={true}
                                            hideSelectedOptions={false}
                                            id="network"
                                            invalidText=""
                                            isClearable={false}
                                            isFetching={false}
                                            isSearchable={false}
                                            labelText={
                                              <IsRequired>
                                                Network
                                              </IsRequired>
                                            }
                                            name="network"
                                            noOptionsMessage={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onInputChange={[Function]}
                                            options={
                                              Array [
                                                Object {
                                                  "label": "<Choose>",
                                                  "value": undefined,
                                                },
                                              ]
                                            }
                                            placeholder="<Choose>"
                                            value=""
                                          >
                                            <Select
                                              className=""
                                              disabled={false}
                                              helperText=""
                                              id="network"
                                              inline={false}
                                              invalid={false}
                                              invalidText=""
                                              labelText={
                                                <IsRequired>
                                                  Network
                                                </IsRequired>
                                              }
                                              light={false}
                                              name="network"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              value=""
                                            >
                                              <div
                                                className="bx--form-item"
                                              >
                                                <div
                                                  className="bx--select"
                                                >
                                                  <label
                                                    className="bx--label"
                                                    htmlFor="network"
                                                  >
                                                    <IsRequired>
                                                      <span
                                                        aria-hidden="true"
                                                        className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                                      >
                                                        *
                                                      </span>
                                                      Network
                                                    </IsRequired>
                                                  </label>
                                                  <div
                                                    className="bx--select-input__wrapper"
                                                    data-invalid={null}
                                                  >
                                                    <select
                                                      className="bx--select-input"
                                                      id="network"
                                                      name="network"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value=""
                                                    >
                                                      <SelectItem
                                                        disabled={false}
                                                        hidden={false}
                                                        key="0"
                                                        label="<Choose>"
                                                        text="<Choose>"
                                                        value=""
                                                      >
                                                        <option
                                                          className="bx--select-option"
                                                          disabled={false}
                                                          hidden={false}
                                                          label="<Choose>"
                                                          value=""
                                                        >
                                                          &lt;Choose&gt;
                                                        </option>
                                                      </SelectItem>
                                                    </select>
                                                    <ForwardRef(ChevronDown16)
                                                      className="bx--select__arrow"
                                                    >
                                                      <Icon
                                                        className="bx--select__arrow"
                                                        fill="currentColor"
                                                        height={16}
                                                        preserveAspectRatio="xMidYMid meet"
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="bx--select__arrow"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height={16}
                                                          preserveAspectRatio="xMidYMid meet"
                                                          viewBox="0 0 16 16"
                                                          width={16}
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                          />
                                                        </svg>
                                                      </Icon>
                                                    </ForwardRef(ChevronDown16)>
                                                  </div>
                                                </div>
                                              </div>
                                            </Select>
                                          </ClearedSelect>
                                        </Select>
                                      </Select>
                                    </SelectWithOnChange>
                                  </div>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="text-field"
                              hideField={true}
                              id="mac"
                              initialValue=""
                              isReadOnly={false}
                              key="mac"
                              label="MAC Address"
                              name="mac"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "text-field",
                                    "id": "mac",
                                    "initialValue": "",
                                    "isReadOnly": false,
                                    "label": "MAC Address",
                                    "name": "mac",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={true}
                                >
                                  <div
                                    hidden={true}
                                  >
                                    <TextField
                                      component="text-field"
                                      id="mac"
                                      initialValue=""
                                      isReadOnly={false}
                                      label="MAC Address"
                                      name="mac"
                                    >
                                      <TextInput
                                        id="mac"
                                        invalid={false}
                                        invalidText=""
                                        key="mac"
                                        labelText="MAC Address"
                                        name="mac"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        readOnly={false}
                                        value=""
                                        warn={false}
                                        warnText=""
                                      >
                                        <div
                                          className="bx--form-item bx--text-input-wrapper"
                                        >
                                          <label
                                            className="bx--label"
                                            htmlFor="mac"
                                          >
                                            MAC Address
                                          </label>
                                          <div
                                            className="bx--text-input__field-outer-wrapper"
                                          >
                                            <div
                                              className="bx--text-input__field-wrapper"
                                              data-invalid={null}
                                            >
                                              <input
                                                className="bx--text-input bx--text-input--md"
                                                disabled={false}
                                                id="mac"
                                                name="mac"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                readOnly={false}
                                                type="text"
                                                value=""
                                              />
                                            </div>
                                          </div>
                                        </div>
                                      </TextInput>
                                    </TextField>
                                  </div>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                          </div>
                        </SubForm>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <SingleField
                    component="spy-field"
                    key="spy-field"
                    name="spy-field"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SpyField
                          component="spy-field"
                          name="spy-field"
                        >
                          <FormSpy
                            onChange={[Function]}
                            subscription={
                              Object {
                                "pristine": true,
                                "valid": true,
                              }
                            }
                          />
                        </SpyField>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <div
                    className="bx--btn-set"
                  >
                    <button
                      alt="Save"
                      className="bx--btn bx--btn--primary"
                      disabled={true}
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      alt="Reset"
                      className="bx--btn bx--btn--secondary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Reset
                    </button>
                    <button
                      alt="Cancel"
                      className="bx--btn bx--btn--secondary"
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              </ReconfigureTemplate>
            </FormTemplate>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </ReconfigureVmForm>
</Provider>
`;

exports[`Reconfigure VM form component should render reconfigure form with datatables 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReconfigureVmForm
    memory={
      Object {
        "max": 10,
        "min": 1024,
      }
    }
    options={
      Object {
        "avail_adapter_names": Array [],
        "controller_types": Array [
          "VirtualController",
          "ParaVirtualController",
          "VirtualBusController",
        ],
        "cores_options": Array [
          1,
          2,
          3,
          4,
        ],
        "host_file_options": Array [
          Array [
            "host file test 1.iso",
            "host file test 1.iso,18",
          ],
          Array [
            "host file test 2.iso",
            "host file test 2.iso,18",
          ],
          Array [
            "host file test 3.iso",
            "host file test 3.iso,18",
          ],
        ],
        "socket_options": Array [
          1,
          2,
          3,
          4,
        ],
        "vlan_options": Array [
          "vlan test 0",
          "vlan test 1",
          "vlan test 3",
        ],
      }
    }
    recordId={
      Array [
        12,
      ]
    }
    requestId="new"
    roles={
      Object {
        "allowCdromsChange": true,
        "allowCpuChange": true,
        "allowDiskChange": true,
        "allowDiskSizeChange": true,
        "allowMemoryChange": true,
        "allowNetworkChange": true,
        "isRedhat": true,
        "isVmwareCloud": false,
        "isVmwareInfra": true,
      }
    }
  >
    <Connect(MiqFormRenderer)
      FormTemplate={[Function]}
      clearOnUnmount={false}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "reconfigure-table": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "cb_memory": false,
          "cores_per_socket_count": "1",
          "mem_type": "GB",
          "memory": "16",
          "processor": false,
          "socket_count": "4",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "className": "reconfigure_form",
              "component": "sub-form",
              "fields": Array [
                Array [
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Memory",
                    "name": "cb_memory",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "cb_memory",
                    },
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "initialValue": 16,
                        "isRequired": true,
                        "label": "Memory Size",
                        "name": "memory",
                        "validate": Array [
                          Object {
                            "type": "memoryCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "helperText": "Between 1024MB and 0.009765625GB",
                        "id": "memoryType",
                        "initialValue": "GB",
                        "label": "Unit",
                        "name": "mem_type",
                        "options": Array [
                          Object {
                            "label": "GB",
                            "value": "GB",
                          },
                          Object {
                            "label": "MB",
                            "value": "MB",
                          },
                        ],
                      },
                    ],
                    "id": "memory-sub-form",
                    "name": "memory-sub-form",
                  },
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Processor",
                    "name": "processor",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "processor",
                    },
                    "fields": Array [
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "socket",
                        "label": "Sockets",
                        "name": "socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "socket",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "cores",
                        "label": "Cores Per Socket",
                        "name": "cores_per_socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "cores",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "total_cpus",
                        "initialValue": 4,
                        "isReadOnly": true,
                        "label": "Total Processors",
                        "name": "total_cpus",
                        "type": "number",
                      },
                    ],
                    "id": "processor-sub-form",
                    "name": "processor-sub-form",
                  },
                  Array [
                    Object {
                      "addButtonLabel": "Add Disk",
                      "buttonClick": [Function],
                      "component": "reconfigure-table",
                      "formType": "disk",
                      "headers": Array [
                        Object {
                          "header": "Name",
                          "key": "name",
                        },
                        Object {
                          "header": "Type",
                          "key": "type",
                        },
                        Object {
                          "header": "Size",
                          "key": "size",
                        },
                        Object {
                          "header": "Unit",
                          "key": "unit",
                        },
                        Object {
                          "header": "Mode",
                          "key": "mode",
                        },
                        Object {
                          "header": "Controller Type",
                          "key": "controller",
                        },
                        Object {
                          "header": "Dependent",
                          "key": "dependent",
                        },
                        Object {
                          "header": "Delete Backing",
                          "key": "backing",
                        },
                        Object {
                          "header": "Bootable",
                          "key": "bootable",
                        },
                        Object {
                          "header": "Resize",
                          "key": "resize",
                        },
                        Object {
                          "contentButton": true,
                          "header": "Action",
                          "key": "action",
                        },
                      ],
                      "label": "Disks",
                      "name": "disk",
                      "onCellClick": [Function],
                      "rows": Array [
                        Object {
                          "action": Object {
                            "alt": "Delete",
                            "callback": "deleteDisk",
                            "disabled": false,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Delete",
                            "title": "Delete",
                          },
                          "backing": Object {
                            "disabled": false,
                            "is_toggle": true,
                            "labelA": "Yes",
                            "labelB": "No",
                            "labelText": "Delete Backing",
                            "ontoggle": [Function],
                            "toggled": false,
                          },
                          "bootable": "Yes",
                          "controller": "None",
                          "dependent": "No",
                          "id": "disk0",
                          "mode": "persistent",
                          "name": "disk-test-file",
                          "resize": Object {
                            "alt": "Resize",
                            "callback": "resizeDisk",
                            "disabled": false,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Resize",
                            "title": "Resize",
                          },
                          "size": "90",
                          "type": "thin",
                          "unit": "GB",
                        },
                      ],
                    },
                    Object {
                      "addButtonLabel": "Add Network Adapter",
                      "buttonClick": [Function],
                      "component": "reconfigure-table",
                      "formType": "network",
                      "headers": Array [
                        Object {
                          "header": "Name",
                          "key": "name",
                        },
                        Object {
                          "header": "MAC address",
                          "key": "mac",
                        },
                        Object {
                          "header": "vLan",
                          "key": "vlan",
                        },
                        Object {
                          "contentButton": true,
                          "header": "Edit",
                          "key": "edit",
                        },
                        Object {
                          "contentButton": true,
                          "header": "Action",
                          "key": "action",
                        },
                      ],
                      "label": "Network Adapters",
                      "name": "network",
                      "onCellClick": [Function],
                      "rows": Array [
                        Object {
                          "action": Object {
                            "alt": "Delete",
                            "callback": "deleteNetwork",
                            "disabled": false,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Delete",
                            "title": "Delete",
                          },
                          "edit": Object {
                            "alt": "Edit",
                            "callback": "editNetwork",
                            "disabled": false,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Edit",
                            "title": "Edit",
                          },
                          "id": "network0",
                          "mac": "00:1a:4a:16:01:bc",
                          "name": "nic1",
                          "vlan": "vm_network2",
                        },
                      ],
                    },
                    Object {
                      "addButton": false,
                      "component": "reconfigure-table",
                      "formType": "drive",
                      "headers": Array [
                        Object {
                          "header": "Name",
                          "key": "name",
                        },
                        Object {
                          "header": "Host File",
                          "key": "hostFile",
                        },
                        Object {
                          "header": "Disconnect",
                          "key": "disconnect",
                        },
                        Object {
                          "header": "Actions",
                          "key": "action",
                        },
                      ],
                      "hideField": true,
                      "label": "CD/DVD Drives",
                      "name": "drive",
                      "onCellClick": [Function],
                      "rows": Array [],
                    },
                  ],
                ],
              ],
              "name": "BasicInformation",
              "title": "Options",
            },
          ],
        }
      }
      validatorMapper={
        Object {
          "cpuCheck": [Function],
          "customRequired": [Function],
          "diskMemoryCheck": [Function],
          "memoryCheck": [Function],
        }
      }
    >
      <MiqFormRenderer
        FormTemplate={[Function]}
        buttonsLabels={Object {}}
        canReset={false}
        className="form-react"
        clearOnUnmount={false}
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "reconfigure-table": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "cb_memory": false,
            "cores_per_socket_count": "1",
            "mem_type": "GB",
            "memory": "16",
            "processor": false,
            "socket_count": "4",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "className": "reconfigure_form",
                "component": "sub-form",
                "fields": Array [
                  Array [
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Memory",
                      "name": "cb_memory",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "cb_memory",
                      },
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "initialValue": 16,
                          "isRequired": true,
                          "label": "Memory Size",
                          "name": "memory",
                          "validate": Array [
                            Object {
                              "type": "memoryCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "helperText": "Between 1024MB and 0.009765625GB",
                          "id": "memoryType",
                          "initialValue": "GB",
                          "label": "Unit",
                          "name": "mem_type",
                          "options": Array [
                            Object {
                              "label": "GB",
                              "value": "GB",
                            },
                            Object {
                              "label": "MB",
                              "value": "MB",
                            },
                          ],
                        },
                      ],
                      "id": "memory-sub-form",
                      "name": "memory-sub-form",
                    },
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Processor",
                      "name": "processor",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "processor",
                      },
                      "fields": Array [
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "socket",
                          "label": "Sockets",
                          "name": "socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "socket",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "cores",
                          "label": "Cores Per Socket",
                          "name": "cores_per_socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "cores",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "text-field",
                          "id": "total_cpus",
                          "initialValue": 4,
                          "isReadOnly": true,
                          "label": "Total Processors",
                          "name": "total_cpus",
                          "type": "number",
                        },
                      ],
                      "id": "processor-sub-form",
                      "name": "processor-sub-form",
                    },
                    Array [
                      Object {
                        "addButtonLabel": "Add Disk",
                        "buttonClick": [Function],
                        "component": "reconfigure-table",
                        "formType": "disk",
                        "headers": Array [
                          Object {
                            "header": "Name",
                            "key": "name",
                          },
                          Object {
                            "header": "Type",
                            "key": "type",
                          },
                          Object {
                            "header": "Size",
                            "key": "size",
                          },
                          Object {
                            "header": "Unit",
                            "key": "unit",
                          },
                          Object {
                            "header": "Mode",
                            "key": "mode",
                          },
                          Object {
                            "header": "Controller Type",
                            "key": "controller",
                          },
                          Object {
                            "header": "Dependent",
                            "key": "dependent",
                          },
                          Object {
                            "header": "Delete Backing",
                            "key": "backing",
                          },
                          Object {
                            "header": "Bootable",
                            "key": "bootable",
                          },
                          Object {
                            "header": "Resize",
                            "key": "resize",
                          },
                          Object {
                            "contentButton": true,
                            "header": "Action",
                            "key": "action",
                          },
                        ],
                        "label": "Disks",
                        "name": "disk",
                        "onCellClick": [Function],
                        "rows": Array [
                          Object {
                            "action": Object {
                              "alt": "Delete",
                              "callback": "deleteDisk",
                              "disabled": false,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Delete",
                              "title": "Delete",
                            },
                            "backing": Object {
                              "disabled": false,
                              "is_toggle": true,
                              "labelA": "Yes",
                              "labelB": "No",
                              "labelText": "Delete Backing",
                              "ontoggle": [Function],
                              "toggled": false,
                            },
                            "bootable": "Yes",
                            "controller": "None",
                            "dependent": "No",
                            "id": "disk0",
                            "mode": "persistent",
                            "name": "disk-test-file",
                            "resize": Object {
                              "alt": "Resize",
                              "callback": "resizeDisk",
                              "disabled": false,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Resize",
                              "title": "Resize",
                            },
                            "size": "90",
                            "type": "thin",
                            "unit": "GB",
                          },
                        ],
                      },
                      Object {
                        "addButtonLabel": "Add Network Adapter",
                        "buttonClick": [Function],
                        "component": "reconfigure-table",
                        "formType": "network",
                        "headers": Array [
                          Object {
                            "header": "Name",
                            "key": "name",
                          },
                          Object {
                            "header": "MAC address",
                            "key": "mac",
                          },
                          Object {
                            "header": "vLan",
                            "key": "vlan",
                          },
                          Object {
                            "contentButton": true,
                            "header": "Edit",
                            "key": "edit",
                          },
                          Object {
                            "contentButton": true,
                            "header": "Action",
                            "key": "action",
                          },
                        ],
                        "label": "Network Adapters",
                        "name": "network",
                        "onCellClick": [Function],
                        "rows": Array [
                          Object {
                            "action": Object {
                              "alt": "Delete",
                              "callback": "deleteNetwork",
                              "disabled": false,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Delete",
                              "title": "Delete",
                            },
                            "edit": Object {
                              "alt": "Edit",
                              "callback": "editNetwork",
                              "disabled": false,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Edit",
                              "title": "Edit",
                            },
                            "id": "network0",
                            "mac": "00:1a:4a:16:01:bc",
                            "name": "nic1",
                            "vlan": "vm_network2",
                          },
                        ],
                      },
                      Object {
                        "addButton": false,
                        "component": "reconfigure-table",
                        "formType": "drive",
                        "headers": Array [
                          Object {
                            "header": "Name",
                            "key": "name",
                          },
                          Object {
                            "header": "Host File",
                            "key": "hostFile",
                          },
                          Object {
                            "header": "Disconnect",
                            "key": "disconnect",
                          },
                          Object {
                            "header": "Actions",
                            "key": "action",
                          },
                        ],
                        "hideField": true,
                        "label": "CD/DVD Drives",
                        "name": "drive",
                        "onCellClick": [Function],
                        "rows": Array [],
                      },
                    ],
                  ],
                ],
                "name": "BasicInformation",
                "title": "Options",
              },
            ],
          }
        }
        showFormControls={true}
        validatorMapper={
          Object {
            "cpuCheck": [Function],
            "customRequired": [Function],
            "diskMemoryCheck": [Function],
            "memoryCheck": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "reconfigure-table": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "cb_memory": false,
              "cores_per_socket_count": "1",
              "mem_type": "GB",
              "memory": "16",
              "processor": false,
              "socket_count": "4",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "className": "reconfigure_form",
                  "component": "sub-form",
                  "fields": Array [
                    Array [
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Memory",
                        "name": "cb_memory",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "fields": Array [
                          Object {
                            "component": "text-field",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "initialValue": 16,
                            "isRequired": true,
                            "label": "Memory Size",
                            "name": "memory",
                            "validate": Array [
                              Object {
                                "type": "memoryCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "helperText": "Between 1024MB and 0.009765625GB",
                            "id": "memoryType",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "mem_type",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                        ],
                        "id": "memory-sub-form",
                        "name": "memory-sub-form",
                      },
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Processor",
                        "name": "processor",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "processor",
                        },
                        "fields": Array [
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "socket",
                            "label": "Sockets",
                            "name": "socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "socket",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "cores",
                            "label": "Cores Per Socket",
                            "name": "cores_per_socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "cores",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "total_cpus",
                            "initialValue": 4,
                            "isReadOnly": true,
                            "label": "Total Processors",
                            "name": "total_cpus",
                            "type": "number",
                          },
                        ],
                        "id": "processor-sub-form",
                        "name": "processor-sub-form",
                      },
                      Array [
                        Object {
                          "addButtonLabel": "Add Disk",
                          "buttonClick": [Function],
                          "component": "reconfigure-table",
                          "formType": "disk",
                          "headers": Array [
                            Object {
                              "header": "Name",
                              "key": "name",
                            },
                            Object {
                              "header": "Type",
                              "key": "type",
                            },
                            Object {
                              "header": "Size",
                              "key": "size",
                            },
                            Object {
                              "header": "Unit",
                              "key": "unit",
                            },
                            Object {
                              "header": "Mode",
                              "key": "mode",
                            },
                            Object {
                              "header": "Controller Type",
                              "key": "controller",
                            },
                            Object {
                              "header": "Dependent",
                              "key": "dependent",
                            },
                            Object {
                              "header": "Delete Backing",
                              "key": "backing",
                            },
                            Object {
                              "header": "Bootable",
                              "key": "bootable",
                            },
                            Object {
                              "header": "Resize",
                              "key": "resize",
                            },
                            Object {
                              "contentButton": true,
                              "header": "Action",
                              "key": "action",
                            },
                          ],
                          "label": "Disks",
                          "name": "disk",
                          "onCellClick": [Function],
                          "rows": Array [
                            Object {
                              "action": Object {
                                "alt": "Delete",
                                "callback": "deleteDisk",
                                "disabled": false,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Delete",
                                "title": "Delete",
                              },
                              "backing": Object {
                                "disabled": false,
                                "is_toggle": true,
                                "labelA": "Yes",
                                "labelB": "No",
                                "labelText": "Delete Backing",
                                "ontoggle": [Function],
                                "toggled": false,
                              },
                              "bootable": "Yes",
                              "controller": "None",
                              "dependent": "No",
                              "id": "disk0",
                              "mode": "persistent",
                              "name": "disk-test-file",
                              "resize": Object {
                                "alt": "Resize",
                                "callback": "resizeDisk",
                                "disabled": false,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Resize",
                                "title": "Resize",
                              },
                              "size": "90",
                              "type": "thin",
                              "unit": "GB",
                            },
                          ],
                        },
                        Object {
                          "addButtonLabel": "Add Network Adapter",
                          "buttonClick": [Function],
                          "component": "reconfigure-table",
                          "formType": "network",
                          "headers": Array [
                            Object {
                              "header": "Name",
                              "key": "name",
                            },
                            Object {
                              "header": "MAC address",
                              "key": "mac",
                            },
                            Object {
                              "header": "vLan",
                              "key": "vlan",
                            },
                            Object {
                              "contentButton": true,
                              "header": "Edit",
                              "key": "edit",
                            },
                            Object {
                              "contentButton": true,
                              "header": "Action",
                              "key": "action",
                            },
                          ],
                          "label": "Network Adapters",
                          "name": "network",
                          "onCellClick": [Function],
                          "rows": Array [
                            Object {
                              "action": Object {
                                "alt": "Delete",
                                "callback": "deleteNetwork",
                                "disabled": false,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Delete",
                                "title": "Delete",
                              },
                              "edit": Object {
                                "alt": "Edit",
                                "callback": "editNetwork",
                                "disabled": false,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Edit",
                                "title": "Edit",
                              },
                              "id": "network0",
                              "mac": "00:1a:4a:16:01:bc",
                              "name": "nic1",
                              "vlan": "vm_network2",
                            },
                          ],
                        },
                        Object {
                          "addButton": false,
                          "component": "reconfigure-table",
                          "formType": "drive",
                          "headers": Array [
                            Object {
                              "header": "Name",
                              "key": "name",
                            },
                            Object {
                              "header": "Host File",
                              "key": "hostFile",
                            },
                            Object {
                              "header": "Disconnect",
                              "key": "disconnect",
                            },
                            Object {
                              "header": "Actions",
                              "key": "action",
                            },
                          ],
                          "hideField": true,
                          "label": "CD/DVD Drives",
                          "name": "drive",
                          "onCellClick": [Function],
                          "rows": Array [],
                        },
                      ],
                    ],
                  ],
                  "name": "BasicInformation",
                  "title": "Options",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validatorMapper={
            Object {
              "cpuCheck": [Function],
              "customRequired": [Function],
              "diskMemoryCheck": [Function],
              "memoryCheck": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "cb_memory": false,
                "cores_per_socket_count": "1",
                "mem_type": "GB",
                "memory": "16",
                "processor": false,
                "socket_count": "4",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <FormTemplate
              formFields={
                Array [
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 4,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                          Array [
                            Object {
                              "addButtonLabel": "Add Disk",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "disk",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Type",
                                  "key": "type",
                                },
                                Object {
                                  "header": "Size",
                                  "key": "size",
                                },
                                Object {
                                  "header": "Unit",
                                  "key": "unit",
                                },
                                Object {
                                  "header": "Mode",
                                  "key": "mode",
                                },
                                Object {
                                  "header": "Controller Type",
                                  "key": "controller",
                                },
                                Object {
                                  "header": "Dependent",
                                  "key": "dependent",
                                },
                                Object {
                                  "header": "Delete Backing",
                                  "key": "backing",
                                },
                                Object {
                                  "header": "Bootable",
                                  "key": "bootable",
                                },
                                Object {
                                  "header": "Resize",
                                  "key": "resize",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Disks",
                              "name": "disk",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Delete",
                                    "callback": "deleteDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Delete",
                                    "title": "Delete",
                                  },
                                  "backing": Object {
                                    "disabled": false,
                                    "is_toggle": true,
                                    "labelA": "Yes",
                                    "labelB": "No",
                                    "labelText": "Delete Backing",
                                    "ontoggle": [Function],
                                    "toggled": false,
                                  },
                                  "bootable": "Yes",
                                  "controller": "None",
                                  "dependent": "No",
                                  "id": "disk0",
                                  "mode": "persistent",
                                  "name": "disk-test-file",
                                  "resize": Object {
                                    "alt": "Resize",
                                    "callback": "resizeDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Resize",
                                    "title": "Resize",
                                  },
                                  "size": "90",
                                  "type": "thin",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "addButtonLabel": "Add Network Adapter",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "network",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "MAC address",
                                  "key": "mac",
                                },
                                Object {
                                  "header": "vLan",
                                  "key": "vlan",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Edit",
                                  "key": "edit",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Network Adapters",
                              "name": "network",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Delete",
                                    "callback": "deleteNetwork",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Delete",
                                    "title": "Delete",
                                  },
                                  "edit": Object {
                                    "alt": "Edit",
                                    "callback": "editNetwork",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Edit",
                                    "title": "Edit",
                                  },
                                  "id": "network0",
                                  "mac": "00:1a:4a:16:01:bc",
                                  "name": "nic1",
                                  "vlan": "vm_network2",
                                },
                              ],
                            },
                            Object {
                              "addButton": false,
                              "component": "reconfigure-table",
                              "formType": "drive",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Host File",
                                  "key": "hostFile",
                                },
                                Object {
                                  "header": "Disconnect",
                                  "key": "disconnect",
                                },
                                Object {
                                  "header": "Actions",
                                  "key": "action",
                                },
                              ],
                              "hideField": true,
                              "label": "CD/DVD Drives",
                              "name": "drive",
                              "onCellClick": [Function],
                              "rows": Array [],
                            },
                          ],
                        ],
                      ]
                    }
                    name="BasicInformation"
                    title="Options"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "className": "reconfigure_form",
                      "component": "sub-form",
                      "fields": Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 4,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                          Array [
                            Object {
                              "addButtonLabel": "Add Disk",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "disk",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Type",
                                  "key": "type",
                                },
                                Object {
                                  "header": "Size",
                                  "key": "size",
                                },
                                Object {
                                  "header": "Unit",
                                  "key": "unit",
                                },
                                Object {
                                  "header": "Mode",
                                  "key": "mode",
                                },
                                Object {
                                  "header": "Controller Type",
                                  "key": "controller",
                                },
                                Object {
                                  "header": "Dependent",
                                  "key": "dependent",
                                },
                                Object {
                                  "header": "Delete Backing",
                                  "key": "backing",
                                },
                                Object {
                                  "header": "Bootable",
                                  "key": "bootable",
                                },
                                Object {
                                  "header": "Resize",
                                  "key": "resize",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Disks",
                              "name": "disk",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Delete",
                                    "callback": "deleteDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Delete",
                                    "title": "Delete",
                                  },
                                  "backing": Object {
                                    "disabled": false,
                                    "is_toggle": true,
                                    "labelA": "Yes",
                                    "labelB": "No",
                                    "labelText": "Delete Backing",
                                    "ontoggle": [Function],
                                    "toggled": false,
                                  },
                                  "bootable": "Yes",
                                  "controller": "None",
                                  "dependent": "No",
                                  "id": "disk0",
                                  "mode": "persistent",
                                  "name": "disk-test-file",
                                  "resize": Object {
                                    "alt": "Resize",
                                    "callback": "resizeDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Resize",
                                    "title": "Resize",
                                  },
                                  "size": "90",
                                  "type": "thin",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "addButtonLabel": "Add Network Adapter",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "network",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "MAC address",
                                  "key": "mac",
                                },
                                Object {
                                  "header": "vLan",
                                  "key": "vlan",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Edit",
                                  "key": "edit",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Network Adapters",
                              "name": "network",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Delete",
                                    "callback": "deleteNetwork",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Delete",
                                    "title": "Delete",
                                  },
                                  "edit": Object {
                                    "alt": "Edit",
                                    "callback": "editNetwork",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Edit",
                                    "title": "Edit",
                                  },
                                  "id": "network0",
                                  "mac": "00:1a:4a:16:01:bc",
                                  "name": "nic1",
                                  "vlan": "vm_network2",
                                },
                              ],
                            },
                            Object {
                              "addButton": false,
                              "component": "reconfigure-table",
                              "formType": "drive",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Host File",
                                  "key": "hostFile",
                                },
                                Object {
                                  "header": "Disconnect",
                                  "key": "disconnect",
                                },
                                Object {
                                  "header": "Actions",
                                  "key": "action",
                                },
                              ],
                              "hideField": true,
                              "label": "CD/DVD Drives",
                              "name": "drive",
                              "onCellClick": [Function],
                              "rows": Array [],
                            },
                          ],
                        ],
                      ],
                      "name": "BasicInformation",
                      "title": "Options",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <ReconfigureTemplate
                canSubmit={false}
                formFields={
                  Array [
                    <SingleField
                      className="reconfigure_form"
                      component="sub-form"
                      fields={
                        Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 4,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                            Array [
                              Object {
                                "addButtonLabel": "Add Disk",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "disk",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Type",
                                    "key": "type",
                                  },
                                  Object {
                                    "header": "Size",
                                    "key": "size",
                                  },
                                  Object {
                                    "header": "Unit",
                                    "key": "unit",
                                  },
                                  Object {
                                    "header": "Mode",
                                    "key": "mode",
                                  },
                                  Object {
                                    "header": "Controller Type",
                                    "key": "controller",
                                  },
                                  Object {
                                    "header": "Dependent",
                                    "key": "dependent",
                                  },
                                  Object {
                                    "header": "Delete Backing",
                                    "key": "backing",
                                  },
                                  Object {
                                    "header": "Bootable",
                                    "key": "bootable",
                                  },
                                  Object {
                                    "header": "Resize",
                                    "key": "resize",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Disks",
                                "name": "disk",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Delete",
                                      "callback": "deleteDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Delete",
                                      "title": "Delete",
                                    },
                                    "backing": Object {
                                      "disabled": false,
                                      "is_toggle": true,
                                      "labelA": "Yes",
                                      "labelB": "No",
                                      "labelText": "Delete Backing",
                                      "ontoggle": [Function],
                                      "toggled": false,
                                    },
                                    "bootable": "Yes",
                                    "controller": "None",
                                    "dependent": "No",
                                    "id": "disk0",
                                    "mode": "persistent",
                                    "name": "disk-test-file",
                                    "resize": Object {
                                      "alt": "Resize",
                                      "callback": "resizeDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Resize",
                                      "title": "Resize",
                                    },
                                    "size": "90",
                                    "type": "thin",
                                    "unit": "GB",
                                  },
                                ],
                              },
                              Object {
                                "addButtonLabel": "Add Network Adapter",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "network",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "MAC address",
                                    "key": "mac",
                                  },
                                  Object {
                                    "header": "vLan",
                                    "key": "vlan",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Edit",
                                    "key": "edit",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Network Adapters",
                                "name": "network",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Delete",
                                      "callback": "deleteNetwork",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Delete",
                                      "title": "Delete",
                                    },
                                    "edit": Object {
                                      "alt": "Edit",
                                      "callback": "editNetwork",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Edit",
                                      "title": "Edit",
                                    },
                                    "id": "network0",
                                    "mac": "00:1a:4a:16:01:bc",
                                    "name": "nic1",
                                    "vlan": "vm_network2",
                                  },
                                ],
                              },
                              Object {
                                "addButton": false,
                                "component": "reconfigure-table",
                                "formType": "drive",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Host File",
                                    "key": "hostFile",
                                  },
                                  Object {
                                    "header": "Disconnect",
                                    "key": "disconnect",
                                  },
                                  Object {
                                    "header": "Actions",
                                    "key": "action",
                                  },
                                ],
                                "hideField": true,
                                "label": "CD/DVD Drives",
                                "name": "drive",
                                "onCellClick": [Function],
                                "rows": Array [],
                              },
                            ],
                          ],
                        ]
                      }
                      name="BasicInformation"
                      title="Options"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                hideButtons={false}
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "className": "reconfigure_form",
                        "component": "sub-form",
                        "fields": Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 4,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                            Array [
                              Object {
                                "addButtonLabel": "Add Disk",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "disk",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Type",
                                    "key": "type",
                                  },
                                  Object {
                                    "header": "Size",
                                    "key": "size",
                                  },
                                  Object {
                                    "header": "Unit",
                                    "key": "unit",
                                  },
                                  Object {
                                    "header": "Mode",
                                    "key": "mode",
                                  },
                                  Object {
                                    "header": "Controller Type",
                                    "key": "controller",
                                  },
                                  Object {
                                    "header": "Dependent",
                                    "key": "dependent",
                                  },
                                  Object {
                                    "header": "Delete Backing",
                                    "key": "backing",
                                  },
                                  Object {
                                    "header": "Bootable",
                                    "key": "bootable",
                                  },
                                  Object {
                                    "header": "Resize",
                                    "key": "resize",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Disks",
                                "name": "disk",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Delete",
                                      "callback": "deleteDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Delete",
                                      "title": "Delete",
                                    },
                                    "backing": Object {
                                      "disabled": false,
                                      "is_toggle": true,
                                      "labelA": "Yes",
                                      "labelB": "No",
                                      "labelText": "Delete Backing",
                                      "ontoggle": [Function],
                                      "toggled": false,
                                    },
                                    "bootable": "Yes",
                                    "controller": "None",
                                    "dependent": "No",
                                    "id": "disk0",
                                    "mode": "persistent",
                                    "name": "disk-test-file",
                                    "resize": Object {
                                      "alt": "Resize",
                                      "callback": "resizeDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Resize",
                                      "title": "Resize",
                                    },
                                    "size": "90",
                                    "type": "thin",
                                    "unit": "GB",
                                  },
                                ],
                              },
                              Object {
                                "addButtonLabel": "Add Network Adapter",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "network",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "MAC address",
                                    "key": "mac",
                                  },
                                  Object {
                                    "header": "vLan",
                                    "key": "vlan",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Edit",
                                    "key": "edit",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Network Adapters",
                                "name": "network",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Delete",
                                      "callback": "deleteNetwork",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Delete",
                                      "title": "Delete",
                                    },
                                    "edit": Object {
                                      "alt": "Edit",
                                      "callback": "editNetwork",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Edit",
                                      "title": "Edit",
                                    },
                                    "id": "network0",
                                    "mac": "00:1a:4a:16:01:bc",
                                    "name": "nic1",
                                    "vlan": "vm_network2",
                                  },
                                ],
                              },
                              Object {
                                "addButton": false,
                                "component": "reconfigure-table",
                                "formType": "drive",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Host File",
                                    "key": "hostFile",
                                  },
                                  Object {
                                    "header": "Disconnect",
                                    "key": "disconnect",
                                  },
                                  Object {
                                    "header": "Actions",
                                    "key": "action",
                                  },
                                ],
                                "hideField": true,
                                "label": "CD/DVD Drives",
                                "name": "drive",
                                "onCellClick": [Function],
                                "rows": Array [],
                              },
                            ],
                          ],
                        ],
                        "name": "BasicInformation",
                        "title": "Options",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
              >
                <form
                  className="form-react reconfigure-form"
                  onSubmit={[Function]}
                >
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 4,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                          Array [
                            Object {
                              "addButtonLabel": "Add Disk",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "disk",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Type",
                                  "key": "type",
                                },
                                Object {
                                  "header": "Size",
                                  "key": "size",
                                },
                                Object {
                                  "header": "Unit",
                                  "key": "unit",
                                },
                                Object {
                                  "header": "Mode",
                                  "key": "mode",
                                },
                                Object {
                                  "header": "Controller Type",
                                  "key": "controller",
                                },
                                Object {
                                  "header": "Dependent",
                                  "key": "dependent",
                                },
                                Object {
                                  "header": "Delete Backing",
                                  "key": "backing",
                                },
                                Object {
                                  "header": "Bootable",
                                  "key": "bootable",
                                },
                                Object {
                                  "header": "Resize",
                                  "key": "resize",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Disks",
                              "name": "disk",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Delete",
                                    "callback": "deleteDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Delete",
                                    "title": "Delete",
                                  },
                                  "backing": Object {
                                    "disabled": false,
                                    "is_toggle": true,
                                    "labelA": "Yes",
                                    "labelB": "No",
                                    "labelText": "Delete Backing",
                                    "ontoggle": [Function],
                                    "toggled": false,
                                  },
                                  "bootable": "Yes",
                                  "controller": "None",
                                  "dependent": "No",
                                  "id": "disk0",
                                  "mode": "persistent",
                                  "name": "disk-test-file",
                                  "resize": Object {
                                    "alt": "Resize",
                                    "callback": "resizeDisk",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Resize",
                                    "title": "Resize",
                                  },
                                  "size": "90",
                                  "type": "thin",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "addButtonLabel": "Add Network Adapter",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "network",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "MAC address",
                                  "key": "mac",
                                },
                                Object {
                                  "header": "vLan",
                                  "key": "vlan",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Edit",
                                  "key": "edit",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Network Adapters",
                              "name": "network",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Delete",
                                    "callback": "deleteNetwork",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Delete",
                                    "title": "Delete",
                                  },
                                  "edit": Object {
                                    "alt": "Edit",
                                    "callback": "editNetwork",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Edit",
                                    "title": "Edit",
                                  },
                                  "id": "network0",
                                  "mac": "00:1a:4a:16:01:bc",
                                  "name": "nic1",
                                  "vlan": "vm_network2",
                                },
                              ],
                            },
                            Object {
                              "addButton": false,
                              "component": "reconfigure-table",
                              "formType": "drive",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Host File",
                                  "key": "hostFile",
                                },
                                Object {
                                  "header": "Disconnect",
                                  "key": "disconnect",
                                },
                                Object {
                                  "header": "Actions",
                                  "key": "action",
                                },
                              ],
                              "hideField": true,
                              "label": "CD/DVD Drives",
                              "name": "drive",
                              "onCellClick": [Function],
                              "rows": Array [],
                            },
                          ],
                        ],
                      ]
                    }
                    key="BasicInformation"
                    name="BasicInformation"
                    title="Options"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "className": "reconfigure_form",
                          "component": "sub-form",
                          "fields": Array [
                            Array [
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Memory",
                                "name": "cb_memory",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ],
                                "id": "memory-sub-form",
                                "name": "memory-sub-form",
                              },
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Processor",
                                "name": "processor",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "processor",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 4,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ],
                                "id": "processor-sub-form",
                                "name": "processor-sub-form",
                              },
                              Array [
                                Object {
                                  "addButtonLabel": "Add Disk",
                                  "buttonClick": [Function],
                                  "component": "reconfigure-table",
                                  "formType": "disk",
                                  "headers": Array [
                                    Object {
                                      "header": "Name",
                                      "key": "name",
                                    },
                                    Object {
                                      "header": "Type",
                                      "key": "type",
                                    },
                                    Object {
                                      "header": "Size",
                                      "key": "size",
                                    },
                                    Object {
                                      "header": "Unit",
                                      "key": "unit",
                                    },
                                    Object {
                                      "header": "Mode",
                                      "key": "mode",
                                    },
                                    Object {
                                      "header": "Controller Type",
                                      "key": "controller",
                                    },
                                    Object {
                                      "header": "Dependent",
                                      "key": "dependent",
                                    },
                                    Object {
                                      "header": "Delete Backing",
                                      "key": "backing",
                                    },
                                    Object {
                                      "header": "Bootable",
                                      "key": "bootable",
                                    },
                                    Object {
                                      "header": "Resize",
                                      "key": "resize",
                                    },
                                    Object {
                                      "contentButton": true,
                                      "header": "Action",
                                      "key": "action",
                                    },
                                  ],
                                  "label": "Disks",
                                  "name": "disk",
                                  "onCellClick": [Function],
                                  "rows": Array [
                                    Object {
                                      "action": Object {
                                        "alt": "Delete",
                                        "callback": "deleteDisk",
                                        "disabled": false,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Delete",
                                        "title": "Delete",
                                      },
                                      "backing": Object {
                                        "disabled": false,
                                        "is_toggle": true,
                                        "labelA": "Yes",
                                        "labelB": "No",
                                        "labelText": "Delete Backing",
                                        "ontoggle": [Function],
                                        "toggled": false,
                                      },
                                      "bootable": "Yes",
                                      "controller": "None",
                                      "dependent": "No",
                                      "id": "disk0",
                                      "mode": "persistent",
                                      "name": "disk-test-file",
                                      "resize": Object {
                                        "alt": "Resize",
                                        "callback": "resizeDisk",
                                        "disabled": false,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Resize",
                                        "title": "Resize",
                                      },
                                      "size": "90",
                                      "type": "thin",
                                      "unit": "GB",
                                    },
                                  ],
                                },
                                Object {
                                  "addButtonLabel": "Add Network Adapter",
                                  "buttonClick": [Function],
                                  "component": "reconfigure-table",
                                  "formType": "network",
                                  "headers": Array [
                                    Object {
                                      "header": "Name",
                                      "key": "name",
                                    },
                                    Object {
                                      "header": "MAC address",
                                      "key": "mac",
                                    },
                                    Object {
                                      "header": "vLan",
                                      "key": "vlan",
                                    },
                                    Object {
                                      "contentButton": true,
                                      "header": "Edit",
                                      "key": "edit",
                                    },
                                    Object {
                                      "contentButton": true,
                                      "header": "Action",
                                      "key": "action",
                                    },
                                  ],
                                  "label": "Network Adapters",
                                  "name": "network",
                                  "onCellClick": [Function],
                                  "rows": Array [
                                    Object {
                                      "action": Object {
                                        "alt": "Delete",
                                        "callback": "deleteNetwork",
                                        "disabled": false,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Delete",
                                        "title": "Delete",
                                      },
                                      "edit": Object {
                                        "alt": "Edit",
                                        "callback": "editNetwork",
                                        "disabled": false,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Edit",
                                        "title": "Edit",
                                      },
                                      "id": "network0",
                                      "mac": "00:1a:4a:16:01:bc",
                                      "name": "nic1",
                                      "vlan": "vm_network2",
                                    },
                                  ],
                                },
                                Object {
                                  "addButton": false,
                                  "component": "reconfigure-table",
                                  "formType": "drive",
                                  "headers": Array [
                                    Object {
                                      "header": "Name",
                                      "key": "name",
                                    },
                                    Object {
                                      "header": "Host File",
                                      "key": "hostFile",
                                    },
                                    Object {
                                      "header": "Disconnect",
                                      "key": "disconnect",
                                    },
                                    Object {
                                      "header": "Actions",
                                      "key": "action",
                                    },
                                  ],
                                  "hideField": true,
                                  "label": "CD/DVD Drives",
                                  "name": "drive",
                                  "onCellClick": [Function],
                                  "rows": Array [],
                                },
                              ],
                            ],
                          ],
                          "name": "BasicInformation",
                          "title": "Options",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SubForm
                          DescriptionElement="p"
                          TitleElement="h3"
                          className="reconfigure_form"
                          component="sub-form"
                          fields={
                            Array [
                              Array [
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Memory",
                                  "name": "cb_memory",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "initialValue": 16,
                                      "isRequired": true,
                                      "label": "Memory Size",
                                      "name": "memory",
                                      "validate": Array [
                                        Object {
                                          "type": "memoryCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "helperText": "Between 1024MB and 0.009765625GB",
                                      "id": "memoryType",
                                      "initialValue": "GB",
                                      "label": "Unit",
                                      "name": "mem_type",
                                      "options": Array [
                                        Object {
                                          "label": "GB",
                                          "value": "GB",
                                        },
                                        Object {
                                          "label": "MB",
                                          "value": "MB",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "memory-sub-form",
                                  "name": "memory-sub-form",
                                },
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Processor",
                                  "name": "processor",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "processor",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "socket",
                                      "label": "Sockets",
                                      "name": "socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "socket",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "cores",
                                      "label": "Cores Per Socket",
                                      "name": "cores_per_socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "cores",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "text-field",
                                      "id": "total_cpus",
                                      "initialValue": 4,
                                      "isReadOnly": true,
                                      "label": "Total Processors",
                                      "name": "total_cpus",
                                      "type": "number",
                                    },
                                  ],
                                  "id": "processor-sub-form",
                                  "name": "processor-sub-form",
                                },
                                Array [
                                  Object {
                                    "addButtonLabel": "Add Disk",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "disk",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Type",
                                        "key": "type",
                                      },
                                      Object {
                                        "header": "Size",
                                        "key": "size",
                                      },
                                      Object {
                                        "header": "Unit",
                                        "key": "unit",
                                      },
                                      Object {
                                        "header": "Mode",
                                        "key": "mode",
                                      },
                                      Object {
                                        "header": "Controller Type",
                                        "key": "controller",
                                      },
                                      Object {
                                        "header": "Dependent",
                                        "key": "dependent",
                                      },
                                      Object {
                                        "header": "Delete Backing",
                                        "key": "backing",
                                      },
                                      Object {
                                        "header": "Bootable",
                                        "key": "bootable",
                                      },
                                      Object {
                                        "header": "Resize",
                                        "key": "resize",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Disks",
                                    "name": "disk",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Delete",
                                          "callback": "deleteDisk",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Delete",
                                          "title": "Delete",
                                        },
                                        "backing": Object {
                                          "disabled": false,
                                          "is_toggle": true,
                                          "labelA": "Yes",
                                          "labelB": "No",
                                          "labelText": "Delete Backing",
                                          "ontoggle": [Function],
                                          "toggled": false,
                                        },
                                        "bootable": "Yes",
                                        "controller": "None",
                                        "dependent": "No",
                                        "id": "disk0",
                                        "mode": "persistent",
                                        "name": "disk-test-file",
                                        "resize": Object {
                                          "alt": "Resize",
                                          "callback": "resizeDisk",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Resize",
                                          "title": "Resize",
                                        },
                                        "size": "90",
                                        "type": "thin",
                                        "unit": "GB",
                                      },
                                    ],
                                  },
                                  Object {
                                    "addButtonLabel": "Add Network Adapter",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "network",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "MAC address",
                                        "key": "mac",
                                      },
                                      Object {
                                        "header": "vLan",
                                        "key": "vlan",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Edit",
                                        "key": "edit",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Network Adapters",
                                    "name": "network",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Delete",
                                          "callback": "deleteNetwork",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Delete",
                                          "title": "Delete",
                                        },
                                        "edit": Object {
                                          "alt": "Edit",
                                          "callback": "editNetwork",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Edit",
                                          "title": "Edit",
                                        },
                                        "id": "network0",
                                        "mac": "00:1a:4a:16:01:bc",
                                        "name": "nic1",
                                        "vlan": "vm_network2",
                                      },
                                    ],
                                  },
                                  Object {
                                    "addButton": false,
                                    "component": "reconfigure-table",
                                    "formType": "drive",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Host File",
                                        "key": "hostFile",
                                      },
                                      Object {
                                        "header": "Disconnect",
                                        "key": "disconnect",
                                      },
                                      Object {
                                        "header": "Actions",
                                        "key": "action",
                                      },
                                    ],
                                    "hideField": true,
                                    "label": "CD/DVD Drives",
                                    "name": "drive",
                                    "onCellClick": [Function],
                                    "rows": Array [],
                                  },
                                ],
                              ],
                            ]
                          }
                          name="BasicInformation"
                          title="Options"
                        >
                          <div
                            className="reconfigure_form"
                            name="BasicInformation"
                          >
                            <div>
                              <h3>
                                Options
                              </h3>
                            </div>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="cb_memory"
                              label="Memory"
                              name="cb_memory"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Memory",
                                    "name": "cb_memory",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Memory"
                                    name="cb_memory"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="cb_memory"
                                        key="cb_memory"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Memory"
                                        name="cb_memory"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="cb_memory"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Memory"
                                          name="cb_memory"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="cb_memory"
                                              name="cb_memory"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="cb_memory"
                                            >
                                              Memory
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "cb_memory",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ]
                              }
                              id="memory-sub-form"
                              key="memory-sub-form"
                              name="memory-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "initialValue": 16,
                                        "isRequired": true,
                                        "label": "Memory Size",
                                        "name": "memory",
                                        "validate": Array [
                                          Object {
                                            "type": "memoryCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "helperText": "Between 1024MB and 0.009765625GB",
                                        "id": "memoryType",
                                        "initialValue": "GB",
                                        "label": "Unit",
                                        "name": "mem_type",
                                        "options": Array [
                                          Object {
                                            "label": "GB",
                                            "value": "GB",
                                          },
                                          Object {
                                            "label": "MB",
                                            "value": "MB",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "memory-sub-form",
                                    "name": "memory-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "initialValue": 16,
                                          "isRequired": true,
                                          "label": "Memory Size",
                                          "name": "memory",
                                          "validate": Array [
                                            Object {
                                              "type": "memoryCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "helperText": "Between 1024MB and 0.009765625GB",
                                          "id": "memoryType",
                                          "initialValue": "GB",
                                          "label": "Unit",
                                          "name": "mem_type",
                                          "options": Array [
                                            Object {
                                              "label": "GB",
                                              "value": "GB",
                                            },
                                            Object {
                                              "label": "MB",
                                              "value": "MB",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "memory-sub-form",
                                      "name": "memory-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "cb_memory",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="cb_memory"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "initialValue": 16,
                                              "isRequired": true,
                                              "label": "Memory Size",
                                              "name": "memory",
                                              "validate": Array [
                                                Object {
                                                  "type": "memoryCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "helperText": "Between 1024MB and 0.009765625GB",
                                              "id": "memoryType",
                                              "initialValue": "GB",
                                              "label": "Unit",
                                              "name": "mem_type",
                                              "options": Array [
                                                Object {
                                                  "label": "GB",
                                                  "value": "GB",
                                                },
                                                Object {
                                                  "label": "MB",
                                                  "value": "MB",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "memory-sub-form",
                                          "name": "memory-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "cb_memory": false,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "text-field",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "initialValue": 16,
                                                "isRequired": true,
                                                "label": "Memory Size",
                                                "name": "memory",
                                                "validate": Array [
                                                  Object {
                                                    "type": "memoryCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "helperText": "Between 1024MB and 0.009765625GB",
                                                "id": "memoryType",
                                                "initialValue": "GB",
                                                "label": "Unit",
                                                "name": "mem_type",
                                                "options": Array [
                                                  Object {
                                                    "label": "GB",
                                                    "value": "GB",
                                                  },
                                                  Object {
                                                    "label": "MB",
                                                    "value": "MB",
                                                  },
                                                ],
                                              },
                                            ],
                                            "id": "memory-sub-form",
                                            "name": "memory-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "cb_memory": false,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "cb_memory",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "initialValue": 16,
                                                  "isRequired": true,
                                                  "label": "Memory Size",
                                                  "name": "memory",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "memoryCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "helperText": "Between 1024MB and 0.009765625GB",
                                                  "id": "memoryType",
                                                  "initialValue": "GB",
                                                  "label": "Unit",
                                                  "name": "mem_type",
                                                  "options": Array [
                                                    Object {
                                                      "label": "GB",
                                                      "value": "GB",
                                                    },
                                                    Object {
                                                      "label": "MB",
                                                      "value": "MB",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "memory-sub-form",
                                              "name": "memory-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "cb_memory": false,
                                            }
                                          }
                                        />
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="processor"
                              label="Processor"
                              name="processor"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Processor",
                                    "name": "processor",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Processor"
                                    name="processor"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="processor"
                                        key="processor"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Processor"
                                        name="processor"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="processor"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Processor"
                                          name="processor"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="processor"
                                              name="processor"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="processor"
                                            >
                                              Processor
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "processor",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 4,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ]
                              }
                              id="processor-sub-form"
                              key="processor-sub-form"
                              name="processor-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "processor",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "socket",
                                        "label": "Sockets",
                                        "name": "socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "socket",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "cores",
                                        "label": "Cores Per Socket",
                                        "name": "cores_per_socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "cores",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "text-field",
                                        "id": "total_cpus",
                                        "initialValue": 4,
                                        "isReadOnly": true,
                                        "label": "Total Processors",
                                        "name": "total_cpus",
                                        "type": "number",
                                      },
                                    ],
                                    "id": "processor-sub-form",
                                    "name": "processor-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "processor",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "socket",
                                          "label": "Sockets",
                                          "name": "socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "socket",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "cores",
                                          "label": "Cores Per Socket",
                                          "name": "cores_per_socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "cores",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "text-field",
                                          "id": "total_cpus",
                                          "initialValue": 4,
                                          "isReadOnly": true,
                                          "label": "Total Processors",
                                          "name": "total_cpus",
                                          "type": "number",
                                        },
                                      ],
                                      "id": "processor-sub-form",
                                      "name": "processor-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "processor",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="processor"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "processor",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "socket",
                                              "label": "Sockets",
                                              "name": "socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "socket",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "cores",
                                              "label": "Cores Per Socket",
                                              "name": "cores_per_socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "cores",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "text-field",
                                              "id": "total_cpus",
                                              "initialValue": 4,
                                              "isReadOnly": true,
                                              "label": "Total Processors",
                                              "name": "total_cpus",
                                              "type": "number",
                                            },
                                          ],
                                          "id": "processor-sub-form",
                                          "name": "processor-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "processor": false,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "processor",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "socket",
                                                "label": "Sockets",
                                                "name": "socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "socket",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "cores",
                                                "label": "Cores Per Socket",
                                                "name": "cores_per_socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "cores",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "text-field",
                                                "id": "total_cpus",
                                                "initialValue": 4,
                                                "isReadOnly": true,
                                                "label": "Total Processors",
                                                "name": "total_cpus",
                                                "type": "number",
                                              },
                                            ],
                                            "id": "processor-sub-form",
                                            "name": "processor-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "processor": false,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "processor",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "socket",
                                                  "label": "Sockets",
                                                  "name": "socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "socket",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "cores",
                                                  "label": "Cores Per Socket",
                                                  "name": "cores_per_socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "cores",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "text-field",
                                                  "id": "total_cpus",
                                                  "initialValue": 4,
                                                  "isReadOnly": true,
                                                  "label": "Total Processors",
                                                  "name": "total_cpus",
                                                  "type": "number",
                                                },
                                              ],
                                              "id": "processor-sub-form",
                                              "name": "processor-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "processor": false,
                                            }
                                          }
                                        />
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              addButtonLabel="Add Disk"
                              buttonClick={[Function]}
                              component="reconfigure-table"
                              formType="disk"
                              headers={
                                Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Type",
                                    "key": "type",
                                  },
                                  Object {
                                    "header": "Size",
                                    "key": "size",
                                  },
                                  Object {
                                    "header": "Unit",
                                    "key": "unit",
                                  },
                                  Object {
                                    "header": "Mode",
                                    "key": "mode",
                                  },
                                  Object {
                                    "header": "Controller Type",
                                    "key": "controller",
                                  },
                                  Object {
                                    "header": "Dependent",
                                    "key": "dependent",
                                  },
                                  Object {
                                    "header": "Delete Backing",
                                    "key": "backing",
                                  },
                                  Object {
                                    "header": "Bootable",
                                    "key": "bootable",
                                  },
                                  Object {
                                    "header": "Resize",
                                    "key": "resize",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ]
                              }
                              key="disk"
                              label="Disks"
                              name="disk"
                              onCellClick={[Function]}
                              rows={
                                Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Delete",
                                      "callback": "deleteDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Delete",
                                      "title": "Delete",
                                    },
                                    "backing": Object {
                                      "disabled": false,
                                      "is_toggle": true,
                                      "labelA": "Yes",
                                      "labelB": "No",
                                      "labelText": "Delete Backing",
                                      "ontoggle": [Function],
                                      "toggled": false,
                                    },
                                    "bootable": "Yes",
                                    "controller": "None",
                                    "dependent": "No",
                                    "id": "disk0",
                                    "mode": "persistent",
                                    "name": "disk-test-file",
                                    "resize": Object {
                                      "alt": "Resize",
                                      "callback": "resizeDisk",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Resize",
                                      "title": "Resize",
                                    },
                                    "size": "90",
                                    "type": "thin",
                                    "unit": "GB",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "addButtonLabel": "Add Disk",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "disk",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Type",
                                        "key": "type",
                                      },
                                      Object {
                                        "header": "Size",
                                        "key": "size",
                                      },
                                      Object {
                                        "header": "Unit",
                                        "key": "unit",
                                      },
                                      Object {
                                        "header": "Mode",
                                        "key": "mode",
                                      },
                                      Object {
                                        "header": "Controller Type",
                                        "key": "controller",
                                      },
                                      Object {
                                        "header": "Dependent",
                                        "key": "dependent",
                                      },
                                      Object {
                                        "header": "Delete Backing",
                                        "key": "backing",
                                      },
                                      Object {
                                        "header": "Bootable",
                                        "key": "bootable",
                                      },
                                      Object {
                                        "header": "Resize",
                                        "key": "resize",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Disks",
                                    "name": "disk",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Delete",
                                          "callback": "deleteDisk",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Delete",
                                          "title": "Delete",
                                        },
                                        "backing": Object {
                                          "disabled": false,
                                          "is_toggle": true,
                                          "labelA": "Yes",
                                          "labelB": "No",
                                          "labelText": "Delete Backing",
                                          "ontoggle": [Function],
                                          "toggled": false,
                                        },
                                        "bootable": "Yes",
                                        "controller": "None",
                                        "dependent": "No",
                                        "id": "disk0",
                                        "mode": "persistent",
                                        "name": "disk-test-file",
                                        "resize": Object {
                                          "alt": "Resize",
                                          "callback": "resizeDisk",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Resize",
                                          "title": "Resize",
                                        },
                                        "size": "90",
                                        "type": "thin",
                                        "unit": "GB",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <ReconfigureTable
                                    addButtonLabel="Add Disk"
                                    buttonClick={[Function]}
                                    component="reconfigure-table"
                                    formType="disk"
                                    headers={
                                      Array [
                                        Object {
                                          "header": "Name",
                                          "key": "name",
                                        },
                                        Object {
                                          "header": "Type",
                                          "key": "type",
                                        },
                                        Object {
                                          "header": "Size",
                                          "key": "size",
                                        },
                                        Object {
                                          "header": "Unit",
                                          "key": "unit",
                                        },
                                        Object {
                                          "header": "Mode",
                                          "key": "mode",
                                        },
                                        Object {
                                          "header": "Controller Type",
                                          "key": "controller",
                                        },
                                        Object {
                                          "header": "Dependent",
                                          "key": "dependent",
                                        },
                                        Object {
                                          "header": "Delete Backing",
                                          "key": "backing",
                                        },
                                        Object {
                                          "header": "Bootable",
                                          "key": "bootable",
                                        },
                                        Object {
                                          "header": "Resize",
                                          "key": "resize",
                                        },
                                        Object {
                                          "contentButton": true,
                                          "header": "Action",
                                          "key": "action",
                                        },
                                      ]
                                    }
                                    label="Disks"
                                    name="disk"
                                    onCellClick={[Function]}
                                    rows={
                                      Array [
                                        Object {
                                          "action": Object {
                                            "alt": "Delete",
                                            "callback": "deleteDisk",
                                            "disabled": false,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Delete",
                                            "title": "Delete",
                                          },
                                          "backing": Object {
                                            "disabled": false,
                                            "is_toggle": true,
                                            "labelA": "Yes",
                                            "labelB": "No",
                                            "labelText": "Delete Backing",
                                            "ontoggle": [Function],
                                            "toggled": false,
                                          },
                                          "bootable": "Yes",
                                          "controller": "None",
                                          "dependent": "No",
                                          "id": "disk0",
                                          "mode": "persistent",
                                          "name": "disk-test-file",
                                          "resize": Object {
                                            "alt": "Resize",
                                            "callback": "resizeDisk",
                                            "disabled": false,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Resize",
                                            "title": "Resize",
                                          },
                                          "size": "90",
                                          "type": "thin",
                                          "unit": "GB",
                                        },
                                      ]
                                    }
                                  >
                                    <div
                                      className="disk-table reconfigure-form-table"
                                    >
                                      <div
                                        className="form-section-title"
                                      >
                                        <h3>
                                          Disks
                                        </h3>
                                        <Button
                                          className="disk-add bx--btn bx--btn--primary pull-right reconfigure-add-button"
                                          kind="primary"
                                          onClick={[Function]}
                                          type="button"
                                          variant="contained"
                                        >
                                          <button
                                            aria-describedby={null}
                                            aria-pressed={null}
                                            className="disk-add bx--btn bx--btn--primary pull-right reconfigure-add-button bx--btn bx--btn--primary"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            tabIndex={0}
                                            type="button"
                                            variant="contained"
                                          >
                                            Add Disk
                                          </button>
                                        </Button>
                                      </div>
                                      <MiqDataTable
                                        gridChecks={Array []}
                                        headers={
                                          Array [
                                            Object {
                                              "header": "Name",
                                              "key": "name",
                                            },
                                            Object {
                                              "header": "Type",
                                              "key": "type",
                                            },
                                            Object {
                                              "header": "Size",
                                              "key": "size",
                                            },
                                            Object {
                                              "header": "Unit",
                                              "key": "unit",
                                            },
                                            Object {
                                              "header": "Mode",
                                              "key": "mode",
                                            },
                                            Object {
                                              "header": "Controller Type",
                                              "key": "controller",
                                            },
                                            Object {
                                              "header": "Dependent",
                                              "key": "dependent",
                                            },
                                            Object {
                                              "header": "Delete Backing",
                                              "key": "backing",
                                            },
                                            Object {
                                              "header": "Bootable",
                                              "key": "bootable",
                                            },
                                            Object {
                                              "header": "Resize",
                                              "key": "resize",
                                            },
                                            Object {
                                              "contentButton": true,
                                              "header": "Action",
                                              "key": "action",
                                            },
                                          ]
                                        }
                                        mode="disk-table-list"
                                        onCellClick={[Function]}
                                        pageOptions={
                                          Object {
                                            "page": 1,
                                            "pageSize": 20,
                                            "pageSizes": Array [
                                              5,
                                              10,
                                              20,
                                              50,
                                              100,
                                              200,
                                            ],
                                            "totalItems": 10,
                                          }
                                        }
                                        rowCheckBox={false}
                                        rows={
                                          Array [
                                            Object {
                                              "action": Object {
                                                "alt": "Delete",
                                                "callback": "deleteDisk",
                                                "disabled": false,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Delete",
                                                "title": "Delete",
                                              },
                                              "backing": Object {
                                                "disabled": false,
                                                "is_toggle": true,
                                                "labelA": "Yes",
                                                "labelB": "No",
                                                "labelText": "Delete Backing",
                                                "ontoggle": [Function],
                                                "toggled": false,
                                              },
                                              "bootable": "Yes",
                                              "controller": "None",
                                              "dependent": "No",
                                              "id": "disk0",
                                              "mode": "persistent",
                                              "name": "disk-test-file",
                                              "resize": Object {
                                                "alt": "Resize",
                                                "callback": "resizeDisk",
                                                "disabled": false,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Resize",
                                                "title": "Resize",
                                              },
                                              "size": "90",
                                              "type": "thin",
                                              "unit": "GB",
                                            },
                                          ]
                                        }
                                        showPagination={false}
                                        size="lg"
                                        sortable={false}
                                        stickyHeader={false}
                                        truncateText={true}
                                      >
                                        <div
                                          className="miq-data-table disk-table-list"
                                        >
                                          <DataTable
                                            filterRows={[Function]}
                                            headers={
                                              Array [
                                                Object {
                                                  "header": "Name",
                                                  "key": "name",
                                                },
                                                Object {
                                                  "header": "Type",
                                                  "key": "type",
                                                },
                                                Object {
                                                  "header": "Size",
                                                  "key": "size",
                                                },
                                                Object {
                                                  "header": "Unit",
                                                  "key": "unit",
                                                },
                                                Object {
                                                  "header": "Mode",
                                                  "key": "mode",
                                                },
                                                Object {
                                                  "header": "Controller Type",
                                                  "key": "controller",
                                                },
                                                Object {
                                                  "header": "Dependent",
                                                  "key": "dependent",
                                                },
                                                Object {
                                                  "header": "Delete Backing",
                                                  "key": "backing",
                                                },
                                                Object {
                                                  "header": "Bootable",
                                                  "key": "bootable",
                                                },
                                                Object {
                                                  "header": "Resize",
                                                  "key": "resize",
                                                },
                                                Object {
                                                  "contentButton": true,
                                                  "header": "Action",
                                                  "key": "action",
                                                },
                                              ]
                                            }
                                            isSortable={false}
                                            locale="en"
                                            overflowMenuOnHover={true}
                                            rows={
                                              Array [
                                                Object {
                                                  "action": Object {
                                                    "alt": "Delete",
                                                    "callback": "deleteDisk",
                                                    "disabled": false,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Delete",
                                                    "title": "Delete",
                                                  },
                                                  "backing": Object {
                                                    "disabled": false,
                                                    "is_toggle": true,
                                                    "labelA": "Yes",
                                                    "labelB": "No",
                                                    "labelText": "Delete Backing",
                                                    "ontoggle": [Function],
                                                    "toggled": false,
                                                  },
                                                  "bootable": "Yes",
                                                  "controller": "None",
                                                  "dependent": "No",
                                                  "id": "disk0",
                                                  "mode": "persistent",
                                                  "name": "disk-test-file",
                                                  "resize": Object {
                                                    "alt": "Resize",
                                                    "callback": "resizeDisk",
                                                    "disabled": false,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Resize",
                                                    "title": "Resize",
                                                  },
                                                  "size": "90",
                                                  "type": "thin",
                                                  "unit": "GB",
                                                },
                                              ]
                                            }
                                            size="lg"
                                            sortDirection="ASC"
                                            sortRow={[Function]}
                                            stickyHeader={false}
                                            translateWithId={[Function]}
                                          >
                                            <Table
                                              isSortable={false}
                                              overflowMenuOnHover={true}
                                              size="lg"
                                              stickyHeader={false}
                                            >
                                              <div
                                                className="bx--data-table-content"
                                              >
                                                <table
                                                  className="bx--data-table bx--data-table--lg bx--data-table--no-border"
                                                >
                                                  <TableHead>
                                                    <thead>
                                                      <TableRow>
                                                        <tr>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="name"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-2"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Name header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-2"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Name
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="type"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-3"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Type header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-3"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Type
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="size"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-4"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Size header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-4"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Size
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="unit"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-5"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Unit header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-5"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Unit
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="mode"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-6"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Mode header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-6"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Mode
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="controller"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-7"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Controller Type header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-7"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Controller Type
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="dependent"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-8"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Dependent header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-8"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Dependent
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="backing"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-9"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Delete Backing header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-9"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Delete Backing
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="bootable"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-10"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Bootable header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-10"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Bootable
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="resize"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-11"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Resize header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-11"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Resize
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header header-button"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="action"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header header-button"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-12"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Action header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-12"
                                                                className="miq-data-table-header header-button bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Action
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                        </tr>
                                                      </TableRow>
                                                    </thead>
                                                  </TableHead>
                                                  <TableBody
                                                    aria-live="polite"
                                                  >
                                                    <tbody
                                                      aria-live="polite"
                                                    >
                                                      <TableRow
                                                        ariaLabel="Expand current row"
                                                        className=""
                                                        disabled={false}
                                                        isExpanded={false}
                                                        isSelected={false}
                                                        key="disk0"
                                                        onExpand={[Function]}
                                                        onKeyPress={[Function]}
                                                        tabIndex="0"
                                                        title=""
                                                      >
                                                        <tr
                                                          disabled={false}
                                                          onKeyPress={[Function]}
                                                          tabIndex="0"
                                                          title=""
                                                        >
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "disk-test-file",
                                                                "errors": null,
                                                                "id": "disk0:name",
                                                                "info": Object {
                                                                  "header": "name",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "disk-test-file",
                                                              }
                                                            }
                                                            key="0-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:name"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="disk-test-file"
                                                                  >
                                                                    disk-test-file
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "thin",
                                                                "errors": null,
                                                                "id": "disk0:type",
                                                                "info": Object {
                                                                  "header": "type",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "thin",
                                                              }
                                                            }
                                                            key="1-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:type"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="thin"
                                                                  >
                                                                    thin
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "90",
                                                                "errors": null,
                                                                "id": "disk0:size",
                                                                "info": Object {
                                                                  "header": "size",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "90",
                                                              }
                                                            }
                                                            key="2-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:size"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="90"
                                                                  >
                                                                    90
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "GB",
                                                                "errors": null,
                                                                "id": "disk0:unit",
                                                                "info": Object {
                                                                  "header": "unit",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "GB",
                                                              }
                                                            }
                                                            key="3-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:unit"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="GB"
                                                                  >
                                                                    GB
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "persistent",
                                                                "errors": null,
                                                                "id": "disk0:mode",
                                                                "info": Object {
                                                                  "header": "mode",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "persistent",
                                                              }
                                                            }
                                                            key="4-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:mode"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="persistent"
                                                                  >
                                                                    persistent
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "None",
                                                                "errors": null,
                                                                "id": "disk0:controller",
                                                                "info": Object {
                                                                  "header": "controller",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "None",
                                                              }
                                                            }
                                                            key="5-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:controller"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="None"
                                                                  >
                                                                    None
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "No",
                                                                "errors": null,
                                                                "id": "disk0:dependent",
                                                                "info": Object {
                                                                  "header": "dependent",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "No",
                                                              }
                                                            }
                                                            key="6-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:dependent"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="No"
                                                                  >
                                                                    No
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "disabled": false,
                                                                  "is_toggle": true,
                                                                  "labelA": "Yes",
                                                                  "labelB": "No",
                                                                  "labelText": "Delete Backing",
                                                                  "ontoggle": [Function],
                                                                  "toggled": false,
                                                                },
                                                                "errors": null,
                                                                "id": "disk0:backing",
                                                                "info": Object {
                                                                  "header": "backing",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            key="7-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:backing"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <FeatureToggle(Toggle)
                                                                    disabled={false}
                                                                    id="disk0:backing"
                                                                    labelA="Yes"
                                                                    labelB="No"
                                                                    labelText={
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title=""
                                                                      >
                                                                        
                                                                      </span>
                                                                    }
                                                                    onToggle={[Function]}
                                                                    tabIndex={0}
                                                                    toggled={false}
                                                                  >
                                                                    <Toggle
                                                                      aria-label="Toggle"
                                                                      defaultToggled={false}
                                                                      disabled={false}
                                                                      id="disk0:backing"
                                                                      labelA="Yes"
                                                                      labelB="No"
                                                                      labelText={
                                                                        <span
                                                                          className="bx--front-line"
                                                                          title=""
                                                                        >
                                                                          
                                                                        </span>
                                                                      }
                                                                      onToggle={[Function]}
                                                                      tabIndex={0}
                                                                      toggled={false}
                                                                    >
                                                                      <div
                                                                        className="bx--form-item"
                                                                      >
                                                                        <input
                                                                          aria-label={null}
                                                                          checked={false}
                                                                          className="bx--toggle-input"
                                                                          disabled={false}
                                                                          id="disk0:backing"
                                                                          onChange={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          tabIndex={0}
                                                                          type="checkbox"
                                                                        />
                                                                        <label
                                                                          aria-label="Toggle"
                                                                          className="bx--toggle-input__label"
                                                                          htmlFor="disk0:backing"
                                                                        >
                                                                          <span
                                                                            className="bx--front-line"
                                                                            title=""
                                                                          />
                                                                          <span
                                                                            className="bx--toggle__switch"
                                                                          >
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="bx--toggle__text--off"
                                                                            >
                                                                              Yes
                                                                            </span>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="bx--toggle__text--on"
                                                                            >
                                                                              No
                                                                            </span>
                                                                          </span>
                                                                        </label>
                                                                      </div>
                                                                    </Toggle>
                                                                  </FeatureToggle(Toggle)>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "Yes",
                                                                "errors": null,
                                                                "id": "disk0:bootable",
                                                                "info": Object {
                                                                  "header": "bootable",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Yes",
                                                              }
                                                            }
                                                            key="8-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:bootable"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="Yes"
                                                                  >
                                                                    Yes
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Resize",
                                                                  "callback": "resizeDisk",
                                                                  "disabled": false,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Resize",
                                                                  "title": "Resize",
                                                                },
                                                                "errors": null,
                                                                "id": "disk0:resize",
                                                                "info": Object {
                                                                  "header": "resize",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Resize",
                                                              }
                                                            }
                                                            key="9-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:resize"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={false}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Resize"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Resize"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Resize"
                                                                      >
                                                                        Resize
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Delete",
                                                                  "callback": "deleteDisk",
                                                                  "disabled": false,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Delete",
                                                                  "title": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "disk0:action",
                                                                "info": Object {
                                                                  "header": "action",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              }
                                                            }
                                                            key="10-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk-test-file",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk-test-file",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "90",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "90",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": false,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "Yes",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Yes",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteDisk",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:action"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={false}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Delete"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Delete"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Delete"
                                                                      >
                                                                        Delete
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                        </tr>
                                                      </TableRow>
                                                    </tbody>
                                                  </TableBody>
                                                </table>
                                              </div>
                                            </Table>
                                          </DataTable>
                                        </div>
                                      </MiqDataTable>
                                    </div>
                                  </ReconfigureTable>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              addButtonLabel="Add Network Adapter"
                              buttonClick={[Function]}
                              component="reconfigure-table"
                              formType="network"
                              headers={
                                Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "MAC address",
                                    "key": "mac",
                                  },
                                  Object {
                                    "header": "vLan",
                                    "key": "vlan",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Edit",
                                    "key": "edit",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ]
                              }
                              key="network"
                              label="Network Adapters"
                              name="network"
                              onCellClick={[Function]}
                              rows={
                                Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Delete",
                                      "callback": "deleteNetwork",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Delete",
                                      "title": "Delete",
                                    },
                                    "edit": Object {
                                      "alt": "Edit",
                                      "callback": "editNetwork",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Edit",
                                      "title": "Edit",
                                    },
                                    "id": "network0",
                                    "mac": "00:1a:4a:16:01:bc",
                                    "name": "nic1",
                                    "vlan": "vm_network2",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "addButtonLabel": "Add Network Adapter",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "network",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "MAC address",
                                        "key": "mac",
                                      },
                                      Object {
                                        "header": "vLan",
                                        "key": "vlan",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Edit",
                                        "key": "edit",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Network Adapters",
                                    "name": "network",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Delete",
                                          "callback": "deleteNetwork",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Delete",
                                          "title": "Delete",
                                        },
                                        "edit": Object {
                                          "alt": "Edit",
                                          "callback": "editNetwork",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Edit",
                                          "title": "Edit",
                                        },
                                        "id": "network0",
                                        "mac": "00:1a:4a:16:01:bc",
                                        "name": "nic1",
                                        "vlan": "vm_network2",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <ReconfigureTable
                                    addButtonLabel="Add Network Adapter"
                                    buttonClick={[Function]}
                                    component="reconfigure-table"
                                    formType="network"
                                    headers={
                                      Array [
                                        Object {
                                          "header": "Name",
                                          "key": "name",
                                        },
                                        Object {
                                          "header": "MAC address",
                                          "key": "mac",
                                        },
                                        Object {
                                          "header": "vLan",
                                          "key": "vlan",
                                        },
                                        Object {
                                          "contentButton": true,
                                          "header": "Edit",
                                          "key": "edit",
                                        },
                                        Object {
                                          "contentButton": true,
                                          "header": "Action",
                                          "key": "action",
                                        },
                                      ]
                                    }
                                    label="Network Adapters"
                                    name="network"
                                    onCellClick={[Function]}
                                    rows={
                                      Array [
                                        Object {
                                          "action": Object {
                                            "alt": "Delete",
                                            "callback": "deleteNetwork",
                                            "disabled": false,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Delete",
                                            "title": "Delete",
                                          },
                                          "edit": Object {
                                            "alt": "Edit",
                                            "callback": "editNetwork",
                                            "disabled": false,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Edit",
                                            "title": "Edit",
                                          },
                                          "id": "network0",
                                          "mac": "00:1a:4a:16:01:bc",
                                          "name": "nic1",
                                          "vlan": "vm_network2",
                                        },
                                      ]
                                    }
                                  >
                                    <div
                                      className="network-table reconfigure-form-table"
                                    >
                                      <div
                                        className="form-section-title"
                                      >
                                        <h3>
                                          Network Adapters
                                        </h3>
                                        <Button
                                          className="network-add bx--btn bx--btn--primary pull-right reconfigure-add-button"
                                          kind="primary"
                                          onClick={[Function]}
                                          type="button"
                                          variant="contained"
                                        >
                                          <button
                                            aria-describedby={null}
                                            aria-pressed={null}
                                            className="network-add bx--btn bx--btn--primary pull-right reconfigure-add-button bx--btn bx--btn--primary"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            tabIndex={0}
                                            type="button"
                                            variant="contained"
                                          >
                                            Add Network Adapter
                                          </button>
                                        </Button>
                                      </div>
                                      <MiqDataTable
                                        gridChecks={Array []}
                                        headers={
                                          Array [
                                            Object {
                                              "header": "Name",
                                              "key": "name",
                                            },
                                            Object {
                                              "header": "MAC address",
                                              "key": "mac",
                                            },
                                            Object {
                                              "header": "vLan",
                                              "key": "vlan",
                                            },
                                            Object {
                                              "contentButton": true,
                                              "header": "Edit",
                                              "key": "edit",
                                            },
                                            Object {
                                              "contentButton": true,
                                              "header": "Action",
                                              "key": "action",
                                            },
                                          ]
                                        }
                                        mode="network-table-list"
                                        onCellClick={[Function]}
                                        pageOptions={
                                          Object {
                                            "page": 1,
                                            "pageSize": 20,
                                            "pageSizes": Array [
                                              5,
                                              10,
                                              20,
                                              50,
                                              100,
                                              200,
                                            ],
                                            "totalItems": 10,
                                          }
                                        }
                                        rowCheckBox={false}
                                        rows={
                                          Array [
                                            Object {
                                              "action": Object {
                                                "alt": "Delete",
                                                "callback": "deleteNetwork",
                                                "disabled": false,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Delete",
                                                "title": "Delete",
                                              },
                                              "edit": Object {
                                                "alt": "Edit",
                                                "callback": "editNetwork",
                                                "disabled": false,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Edit",
                                                "title": "Edit",
                                              },
                                              "id": "network0",
                                              "mac": "00:1a:4a:16:01:bc",
                                              "name": "nic1",
                                              "vlan": "vm_network2",
                                            },
                                          ]
                                        }
                                        showPagination={false}
                                        size="lg"
                                        sortable={false}
                                        stickyHeader={false}
                                        truncateText={true}
                                      >
                                        <div
                                          className="miq-data-table network-table-list"
                                        >
                                          <DataTable
                                            filterRows={[Function]}
                                            headers={
                                              Array [
                                                Object {
                                                  "header": "Name",
                                                  "key": "name",
                                                },
                                                Object {
                                                  "header": "MAC address",
                                                  "key": "mac",
                                                },
                                                Object {
                                                  "header": "vLan",
                                                  "key": "vlan",
                                                },
                                                Object {
                                                  "contentButton": true,
                                                  "header": "Edit",
                                                  "key": "edit",
                                                },
                                                Object {
                                                  "contentButton": true,
                                                  "header": "Action",
                                                  "key": "action",
                                                },
                                              ]
                                            }
                                            isSortable={false}
                                            locale="en"
                                            overflowMenuOnHover={true}
                                            rows={
                                              Array [
                                                Object {
                                                  "action": Object {
                                                    "alt": "Delete",
                                                    "callback": "deleteNetwork",
                                                    "disabled": false,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Delete",
                                                    "title": "Delete",
                                                  },
                                                  "edit": Object {
                                                    "alt": "Edit",
                                                    "callback": "editNetwork",
                                                    "disabled": false,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Edit",
                                                    "title": "Edit",
                                                  },
                                                  "id": "network0",
                                                  "mac": "00:1a:4a:16:01:bc",
                                                  "name": "nic1",
                                                  "vlan": "vm_network2",
                                                },
                                              ]
                                            }
                                            size="lg"
                                            sortDirection="ASC"
                                            sortRow={[Function]}
                                            stickyHeader={false}
                                            translateWithId={[Function]}
                                          >
                                            <Table
                                              isSortable={false}
                                              overflowMenuOnHover={true}
                                              size="lg"
                                              stickyHeader={false}
                                            >
                                              <div
                                                className="bx--data-table-content"
                                              >
                                                <table
                                                  className="bx--data-table bx--data-table--lg bx--data-table--no-border"
                                                >
                                                  <TableHead>
                                                    <thead>
                                                      <TableRow>
                                                        <tr>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="name"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-16"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Name header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-16"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Name
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="mac"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-17"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by MAC address header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-17"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    MAC address
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="vlan"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-18"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by vLan header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-18"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    vLan
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header header-button"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="edit"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header header-button"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-19"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Edit header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-19"
                                                                className="miq-data-table-header header-button bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Edit
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header header-button"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="action"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header header-button"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-20"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Action header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-20"
                                                                className="miq-data-table-header header-button bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Action
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                        </tr>
                                                      </TableRow>
                                                    </thead>
                                                  </TableHead>
                                                  <TableBody
                                                    aria-live="polite"
                                                  >
                                                    <tbody
                                                      aria-live="polite"
                                                    >
                                                      <TableRow
                                                        ariaLabel="Expand current row"
                                                        className=""
                                                        disabled={false}
                                                        isExpanded={false}
                                                        isSelected={false}
                                                        key="network0"
                                                        onExpand={[Function]}
                                                        onKeyPress={[Function]}
                                                        tabIndex="0"
                                                        title=""
                                                      >
                                                        <tr
                                                          disabled={false}
                                                          onKeyPress={[Function]}
                                                          tabIndex="0"
                                                          title=""
                                                        >
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "nic1",
                                                                "errors": null,
                                                                "id": "network0:name",
                                                                "info": Object {
                                                                  "header": "name",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "nic1",
                                                              }
                                                            }
                                                            key="0-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "nic1",
                                                                    "errors": null,
                                                                    "id": "network0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "nic1",
                                                                  },
                                                                  Object {
                                                                    "data": "00:1a:4a:16:01:bc",
                                                                    "errors": null,
                                                                    "id": "network0:mac",
                                                                    "info": Object {
                                                                      "header": "mac",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "00:1a:4a:16:01:bc",
                                                                  },
                                                                  Object {
                                                                    "data": "vm_network2",
                                                                    "errors": null,
                                                                    "id": "network0:vlan",
                                                                    "info": Object {
                                                                      "header": "vlan",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "vm_network2",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Edit",
                                                                      "callback": "editNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Edit",
                                                                      "title": "Edit",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:edit",
                                                                    "info": Object {
                                                                      "header": "edit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Edit",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "network0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="network0:name"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="nic1"
                                                                  >
                                                                    nic1
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "00:1a:4a:16:01:bc",
                                                                "errors": null,
                                                                "id": "network0:mac",
                                                                "info": Object {
                                                                  "header": "mac",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "00:1a:4a:16:01:bc",
                                                              }
                                                            }
                                                            key="1-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "nic1",
                                                                    "errors": null,
                                                                    "id": "network0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "nic1",
                                                                  },
                                                                  Object {
                                                                    "data": "00:1a:4a:16:01:bc",
                                                                    "errors": null,
                                                                    "id": "network0:mac",
                                                                    "info": Object {
                                                                      "header": "mac",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "00:1a:4a:16:01:bc",
                                                                  },
                                                                  Object {
                                                                    "data": "vm_network2",
                                                                    "errors": null,
                                                                    "id": "network0:vlan",
                                                                    "info": Object {
                                                                      "header": "vlan",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "vm_network2",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Edit",
                                                                      "callback": "editNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Edit",
                                                                      "title": "Edit",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:edit",
                                                                    "info": Object {
                                                                      "header": "edit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Edit",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "network0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="network0:mac"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="00:1a:4a:16:01:bc"
                                                                  >
                                                                    00:1a:4a:16:01:bc
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "vm_network2",
                                                                "errors": null,
                                                                "id": "network0:vlan",
                                                                "info": Object {
                                                                  "header": "vlan",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "vm_network2",
                                                              }
                                                            }
                                                            key="2-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "nic1",
                                                                    "errors": null,
                                                                    "id": "network0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "nic1",
                                                                  },
                                                                  Object {
                                                                    "data": "00:1a:4a:16:01:bc",
                                                                    "errors": null,
                                                                    "id": "network0:mac",
                                                                    "info": Object {
                                                                      "header": "mac",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "00:1a:4a:16:01:bc",
                                                                  },
                                                                  Object {
                                                                    "data": "vm_network2",
                                                                    "errors": null,
                                                                    "id": "network0:vlan",
                                                                    "info": Object {
                                                                      "header": "vlan",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "vm_network2",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Edit",
                                                                      "callback": "editNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Edit",
                                                                      "title": "Edit",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:edit",
                                                                    "info": Object {
                                                                      "header": "edit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Edit",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "network0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="network0:vlan"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="vm_network2"
                                                                  >
                                                                    vm_network2
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Edit",
                                                                  "callback": "editNetwork",
                                                                  "disabled": false,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Edit",
                                                                  "title": "Edit",
                                                                },
                                                                "errors": null,
                                                                "id": "network0:edit",
                                                                "info": Object {
                                                                  "header": "edit",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Edit",
                                                              }
                                                            }
                                                            key="3-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "nic1",
                                                                    "errors": null,
                                                                    "id": "network0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "nic1",
                                                                  },
                                                                  Object {
                                                                    "data": "00:1a:4a:16:01:bc",
                                                                    "errors": null,
                                                                    "id": "network0:mac",
                                                                    "info": Object {
                                                                      "header": "mac",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "00:1a:4a:16:01:bc",
                                                                  },
                                                                  Object {
                                                                    "data": "vm_network2",
                                                                    "errors": null,
                                                                    "id": "network0:vlan",
                                                                    "info": Object {
                                                                      "header": "vlan",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "vm_network2",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Edit",
                                                                      "callback": "editNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Edit",
                                                                      "title": "Edit",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:edit",
                                                                    "info": Object {
                                                                      "header": "edit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Edit",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "network0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="network0:edit"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={false}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Edit"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Edit"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Edit"
                                                                      >
                                                                        Edit
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Delete",
                                                                  "callback": "deleteNetwork",
                                                                  "disabled": false,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Delete",
                                                                  "title": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "network0:action",
                                                                "info": Object {
                                                                  "header": "action",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              }
                                                            }
                                                            key="4-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "nic1",
                                                                    "errors": null,
                                                                    "id": "network0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "nic1",
                                                                  },
                                                                  Object {
                                                                    "data": "00:1a:4a:16:01:bc",
                                                                    "errors": null,
                                                                    "id": "network0:mac",
                                                                    "info": Object {
                                                                      "header": "mac",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "00:1a:4a:16:01:bc",
                                                                  },
                                                                  Object {
                                                                    "data": "vm_network2",
                                                                    "errors": null,
                                                                    "id": "network0:vlan",
                                                                    "info": Object {
                                                                      "header": "vlan",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "vm_network2",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Edit",
                                                                      "callback": "editNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Edit",
                                                                      "title": "Edit",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:edit",
                                                                    "info": Object {
                                                                      "header": "edit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Edit",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Delete",
                                                                      "callback": "deleteNetwork",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Delete",
                                                                      "title": "Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "network0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "network0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="network0:action"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={false}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Delete"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Delete"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Delete"
                                                                      >
                                                                        Delete
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                        </tr>
                                                      </TableRow>
                                                    </tbody>
                                                  </TableBody>
                                                </table>
                                              </div>
                                            </Table>
                                          </DataTable>
                                        </div>
                                      </MiqDataTable>
                                    </div>
                                  </ReconfigureTable>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              addButton={false}
                              component="reconfigure-table"
                              formType="drive"
                              headers={
                                Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Host File",
                                    "key": "hostFile",
                                  },
                                  Object {
                                    "header": "Disconnect",
                                    "key": "disconnect",
                                  },
                                  Object {
                                    "header": "Actions",
                                    "key": "action",
                                  },
                                ]
                              }
                              hideField={true}
                              key="drive"
                              label="CD/DVD Drives"
                              name="drive"
                              onCellClick={[Function]}
                              rows={Array []}
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "addButton": false,
                                    "component": "reconfigure-table",
                                    "formType": "drive",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Host File",
                                        "key": "hostFile",
                                      },
                                      Object {
                                        "header": "Disconnect",
                                        "key": "disconnect",
                                      },
                                      Object {
                                        "header": "Actions",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "CD/DVD Drives",
                                    "name": "drive",
                                    "onCellClick": [Function],
                                    "rows": Array [],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={true}
                                >
                                  <div
                                    hidden={true}
                                  >
                                    <ReconfigureTable
                                      addButton={false}
                                      addButtonLabel=""
                                      component="reconfigure-table"
                                      formType="drive"
                                      headers={
                                        Array [
                                          Object {
                                            "header": "Name",
                                            "key": "name",
                                          },
                                          Object {
                                            "header": "Host File",
                                            "key": "hostFile",
                                          },
                                          Object {
                                            "header": "Disconnect",
                                            "key": "disconnect",
                                          },
                                          Object {
                                            "header": "Actions",
                                            "key": "action",
                                          },
                                        ]
                                      }
                                      label="CD/DVD Drives"
                                      name="drive"
                                      onCellClick={[Function]}
                                      rows={Array []}
                                    >
                                      <div
                                        className="drive-table reconfigure-form-table"
                                      >
                                        <div
                                          className="form-section-title"
                                        >
                                          <h3>
                                            CD/DVD Drives
                                          </h3>
                                        </div>
                                        <MiqDataTable
                                          gridChecks={Array []}
                                          headers={
                                            Array [
                                              Object {
                                                "header": "Name",
                                                "key": "name",
                                              },
                                              Object {
                                                "header": "Host File",
                                                "key": "hostFile",
                                              },
                                              Object {
                                                "header": "Disconnect",
                                                "key": "disconnect",
                                              },
                                              Object {
                                                "header": "Actions",
                                                "key": "action",
                                              },
                                            ]
                                          }
                                          mode="drive-table-list"
                                          onCellClick={[Function]}
                                          pageOptions={
                                            Object {
                                              "page": 1,
                                              "pageSize": 20,
                                              "pageSizes": Array [
                                                5,
                                                10,
                                                20,
                                                50,
                                                100,
                                                200,
                                              ],
                                              "totalItems": 10,
                                            }
                                          }
                                          rowCheckBox={false}
                                          rows={Array []}
                                          showPagination={false}
                                          size="lg"
                                          sortable={false}
                                          stickyHeader={false}
                                          truncateText={true}
                                        >
                                          <div
                                            className="miq-data-table drive-table-list"
                                          >
                                            <DataTable
                                              filterRows={[Function]}
                                              headers={
                                                Array [
                                                  Object {
                                                    "header": "Name",
                                                    "key": "name",
                                                  },
                                                  Object {
                                                    "header": "Host File",
                                                    "key": "hostFile",
                                                  },
                                                  Object {
                                                    "header": "Disconnect",
                                                    "key": "disconnect",
                                                  },
                                                  Object {
                                                    "header": "Actions",
                                                    "key": "action",
                                                  },
                                                ]
                                              }
                                              isSortable={false}
                                              locale="en"
                                              overflowMenuOnHover={true}
                                              rows={Array []}
                                              size="lg"
                                              sortDirection="ASC"
                                              sortRow={[Function]}
                                              stickyHeader={false}
                                              translateWithId={[Function]}
                                            >
                                              <Table
                                                isSortable={false}
                                                overflowMenuOnHover={true}
                                                size="lg"
                                                stickyHeader={false}
                                              >
                                                <div
                                                  className="bx--data-table-content"
                                                >
                                                  <table
                                                    className="bx--data-table bx--data-table--lg bx--data-table--no-border"
                                                  >
                                                    <TableHead>
                                                      <thead>
                                                        <TableRow>
                                                          <tr>
                                                            <TableHeader
                                                              className="miq-data-table-header"
                                                              isSortHeader={false}
                                                              isSortable={true}
                                                              key="name"
                                                              onClick={[Function]}
                                                              scope="col"
                                                              sortDirection="NONE"
                                                              translateWithId={[Function]}
                                                            >
                                                              <th
                                                                aria-sort="none"
                                                                className="miq-data-table-header"
                                                                scope="col"
                                                              >
                                                                <div
                                                                  id="table-sort-23"
                                                                  style={
                                                                    Object {
                                                                      "display": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  Click to sort rows by Name header in ascending order
                                                                </div>
                                                                <button
                                                                  aria-describedby="table-sort-23"
                                                                  className="miq-data-table-header bx--table-sort"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="bx--table-sort__flex"
                                                                  >
                                                                    <div
                                                                      className="bx--table-header-label"
                                                                    >
                                                                      Name
                                                                    </div>
                                                                    <ForwardRef(ArrowUp20)
                                                                      className="bx--table-sort__icon"
                                                                    >
                                                                      <Icon
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="bx--table-sort__icon"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height={20}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={20}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                          />
                                                                        </svg>
                                                                      </Icon>
                                                                    </ForwardRef(ArrowUp20)>
                                                                    <ForwardRef(ArrowsVertical20)
                                                                      className="bx--table-sort__icon-unsorted"
                                                                    >
                                                                      <Icon
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="bx--table-sort__icon-unsorted"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height={20}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={20}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                          />
                                                                        </svg>
                                                                      </Icon>
                                                                    </ForwardRef(ArrowsVertical20)>
                                                                  </span>
                                                                </button>
                                                              </th>
                                                            </TableHeader>
                                                            <TableHeader
                                                              className="miq-data-table-header"
                                                              isSortHeader={false}
                                                              isSortable={true}
                                                              key="hostFile"
                                                              onClick={[Function]}
                                                              scope="col"
                                                              sortDirection="NONE"
                                                              translateWithId={[Function]}
                                                            >
                                                              <th
                                                                aria-sort="none"
                                                                className="miq-data-table-header"
                                                                scope="col"
                                                              >
                                                                <div
                                                                  id="table-sort-24"
                                                                  style={
                                                                    Object {
                                                                      "display": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  Click to sort rows by Host File header in ascending order
                                                                </div>
                                                                <button
                                                                  aria-describedby="table-sort-24"
                                                                  className="miq-data-table-header bx--table-sort"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="bx--table-sort__flex"
                                                                  >
                                                                    <div
                                                                      className="bx--table-header-label"
                                                                    >
                                                                      Host File
                                                                    </div>
                                                                    <ForwardRef(ArrowUp20)
                                                                      className="bx--table-sort__icon"
                                                                    >
                                                                      <Icon
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="bx--table-sort__icon"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height={20}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={20}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                          />
                                                                        </svg>
                                                                      </Icon>
                                                                    </ForwardRef(ArrowUp20)>
                                                                    <ForwardRef(ArrowsVertical20)
                                                                      className="bx--table-sort__icon-unsorted"
                                                                    >
                                                                      <Icon
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="bx--table-sort__icon-unsorted"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height={20}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={20}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                          />
                                                                        </svg>
                                                                      </Icon>
                                                                    </ForwardRef(ArrowsVertical20)>
                                                                  </span>
                                                                </button>
                                                              </th>
                                                            </TableHeader>
                                                            <TableHeader
                                                              className="miq-data-table-header"
                                                              isSortHeader={false}
                                                              isSortable={true}
                                                              key="disconnect"
                                                              onClick={[Function]}
                                                              scope="col"
                                                              sortDirection="NONE"
                                                              translateWithId={[Function]}
                                                            >
                                                              <th
                                                                aria-sort="none"
                                                                className="miq-data-table-header"
                                                                scope="col"
                                                              >
                                                                <div
                                                                  id="table-sort-25"
                                                                  style={
                                                                    Object {
                                                                      "display": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  Click to sort rows by Disconnect header in ascending order
                                                                </div>
                                                                <button
                                                                  aria-describedby="table-sort-25"
                                                                  className="miq-data-table-header bx--table-sort"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="bx--table-sort__flex"
                                                                  >
                                                                    <div
                                                                      className="bx--table-header-label"
                                                                    >
                                                                      Disconnect
                                                                    </div>
                                                                    <ForwardRef(ArrowUp20)
                                                                      className="bx--table-sort__icon"
                                                                    >
                                                                      <Icon
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="bx--table-sort__icon"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height={20}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={20}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                          />
                                                                        </svg>
                                                                      </Icon>
                                                                    </ForwardRef(ArrowUp20)>
                                                                    <ForwardRef(ArrowsVertical20)
                                                                      className="bx--table-sort__icon-unsorted"
                                                                    >
                                                                      <Icon
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="bx--table-sort__icon-unsorted"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height={20}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={20}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                          />
                                                                        </svg>
                                                                      </Icon>
                                                                    </ForwardRef(ArrowsVertical20)>
                                                                  </span>
                                                                </button>
                                                              </th>
                                                            </TableHeader>
                                                            <TableHeader
                                                              className="miq-data-table-header"
                                                              isSortHeader={false}
                                                              isSortable={true}
                                                              key="action"
                                                              onClick={[Function]}
                                                              scope="col"
                                                              sortDirection="NONE"
                                                              translateWithId={[Function]}
                                                            >
                                                              <th
                                                                aria-sort="none"
                                                                className="miq-data-table-header"
                                                                scope="col"
                                                              >
                                                                <div
                                                                  id="table-sort-26"
                                                                  style={
                                                                    Object {
                                                                      "display": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  Click to sort rows by Actions header in ascending order
                                                                </div>
                                                                <button
                                                                  aria-describedby="table-sort-26"
                                                                  className="miq-data-table-header bx--table-sort"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="bx--table-sort__flex"
                                                                  >
                                                                    <div
                                                                      className="bx--table-header-label"
                                                                    >
                                                                      Actions
                                                                    </div>
                                                                    <ForwardRef(ArrowUp20)
                                                                      className="bx--table-sort__icon"
                                                                    >
                                                                      <Icon
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="bx--table-sort__icon"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height={20}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={20}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                          />
                                                                        </svg>
                                                                      </Icon>
                                                                    </ForwardRef(ArrowUp20)>
                                                                    <ForwardRef(ArrowsVertical20)
                                                                      className="bx--table-sort__icon-unsorted"
                                                                    >
                                                                      <Icon
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="bx--table-sort__icon-unsorted"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height={20}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={20}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                          />
                                                                        </svg>
                                                                      </Icon>
                                                                    </ForwardRef(ArrowsVertical20)>
                                                                  </span>
                                                                </button>
                                                              </th>
                                                            </TableHeader>
                                                          </tr>
                                                        </TableRow>
                                                      </thead>
                                                    </TableHead>
                                                    <TableBody
                                                      aria-live="polite"
                                                    >
                                                      <tbody
                                                        aria-live="polite"
                                                      />
                                                    </TableBody>
                                                  </table>
                                                </div>
                                              </Table>
                                            </DataTable>
                                          </div>
                                        </MiqDataTable>
                                      </div>
                                    </ReconfigureTable>
                                  </div>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                          </div>
                        </SubForm>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <SingleField
                    component="spy-field"
                    key="spy-field"
                    name="spy-field"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SpyField
                          component="spy-field"
                          name="spy-field"
                        >
                          <FormSpy
                            onChange={[Function]}
                            subscription={
                              Object {
                                "pristine": true,
                                "valid": true,
                              }
                            }
                          />
                        </SpyField>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <div
                    className="bx--btn-set"
                  >
                    <button
                      alt="Save"
                      className="bx--btn bx--btn--primary"
                      disabled={true}
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      alt="Reset"
                      className="bx--btn bx--btn--secondary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Reset
                    </button>
                    <button
                      alt="Cancel"
                      className="bx--btn bx--btn--secondary"
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              </ReconfigureTemplate>
            </FormTemplate>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </ReconfigureVmForm>
</Provider>
`;

exports[`Reconfigure VM form component should render reconfigure form without datatables 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReconfigureVmForm
    memory={
      Object {
        "max": 10,
        "min": 1024,
      }
    }
    options={
      Object {
        "avail_adapter_names": Array [],
        "controller_types": Array [],
        "cores_options": Array [
          1,
          2,
          3,
          4,
        ],
        "host_file_options": Array [],
        "socket_options": Array [
          1,
          2,
          3,
          4,
        ],
        "vlan_options": Array [],
      }
    }
    recordId={
      Array [
        12,
        13,
      ]
    }
    requestId="new"
    roles={
      Object {
        "allowCdromsChange": true,
        "allowCpuChange": true,
        "allowDiskChange": true,
        "allowDiskSizeChange": true,
        "allowMemoryChange": true,
        "allowNetworkChange": true,
        "isRedhat": true,
        "isVmwareCloud": false,
        "isVmwareInfra": true,
      }
    }
  >
    <Connect(MiqFormRenderer)
      FormTemplate={[Function]}
      clearOnUnmount={false}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "reconfigure-table": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "cb_memory": true,
          "cores_per_socket_count": "1",
          "mem_type": "GB",
          "memory": "4",
          "processor": true,
          "socket_count": "3",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "className": "reconfigure_form",
              "component": "sub-form",
              "fields": Array [
                Array [
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Memory",
                    "name": "cb_memory",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "cb_memory",
                    },
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "initialValue": 16,
                        "isRequired": true,
                        "label": "Memory Size",
                        "name": "memory",
                        "validate": Array [
                          Object {
                            "type": "memoryCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "helperText": "Between 1024MB and 0.009765625GB",
                        "id": "memoryType",
                        "initialValue": "GB",
                        "label": "Unit",
                        "name": "mem_type",
                        "options": Array [
                          Object {
                            "label": "GB",
                            "value": "GB",
                          },
                          Object {
                            "label": "MB",
                            "value": "MB",
                          },
                        ],
                      },
                    ],
                    "id": "memory-sub-form",
                    "name": "memory-sub-form",
                  },
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Processor",
                    "name": "processor",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "processor",
                    },
                    "fields": Array [
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "socket",
                        "label": "Sockets",
                        "name": "socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "socket",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "cores",
                        "label": "Cores Per Socket",
                        "name": "cores_per_socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "cores",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "total_cpus",
                        "initialValue": 3,
                        "isReadOnly": true,
                        "label": "Total Processors",
                        "name": "total_cpus",
                        "type": "number",
                      },
                    ],
                    "id": "processor-sub-form",
                    "name": "processor-sub-form",
                  },
                ],
              ],
              "name": "BasicInformation",
              "title": "Options",
            },
          ],
        }
      }
      validatorMapper={
        Object {
          "cpuCheck": [Function],
          "customRequired": [Function],
          "diskMemoryCheck": [Function],
          "memoryCheck": [Function],
        }
      }
    >
      <MiqFormRenderer
        FormTemplate={[Function]}
        buttonsLabels={Object {}}
        canReset={false}
        className="form-react"
        clearOnUnmount={false}
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "reconfigure-table": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "cb_memory": true,
            "cores_per_socket_count": "1",
            "mem_type": "GB",
            "memory": "4",
            "processor": true,
            "socket_count": "3",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "className": "reconfigure_form",
                "component": "sub-form",
                "fields": Array [
                  Array [
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Memory",
                      "name": "cb_memory",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "cb_memory",
                      },
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "initialValue": 16,
                          "isRequired": true,
                          "label": "Memory Size",
                          "name": "memory",
                          "validate": Array [
                            Object {
                              "type": "memoryCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "helperText": "Between 1024MB and 0.009765625GB",
                          "id": "memoryType",
                          "initialValue": "GB",
                          "label": "Unit",
                          "name": "mem_type",
                          "options": Array [
                            Object {
                              "label": "GB",
                              "value": "GB",
                            },
                            Object {
                              "label": "MB",
                              "value": "MB",
                            },
                          ],
                        },
                      ],
                      "id": "memory-sub-form",
                      "name": "memory-sub-form",
                    },
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Processor",
                      "name": "processor",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "processor",
                      },
                      "fields": Array [
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "socket",
                          "label": "Sockets",
                          "name": "socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "socket",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "cores",
                          "label": "Cores Per Socket",
                          "name": "cores_per_socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "cores",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "text-field",
                          "id": "total_cpus",
                          "initialValue": 3,
                          "isReadOnly": true,
                          "label": "Total Processors",
                          "name": "total_cpus",
                          "type": "number",
                        },
                      ],
                      "id": "processor-sub-form",
                      "name": "processor-sub-form",
                    },
                  ],
                ],
                "name": "BasicInformation",
                "title": "Options",
              },
            ],
          }
        }
        showFormControls={true}
        validatorMapper={
          Object {
            "cpuCheck": [Function],
            "customRequired": [Function],
            "diskMemoryCheck": [Function],
            "memoryCheck": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "reconfigure-table": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "cb_memory": true,
              "cores_per_socket_count": "1",
              "mem_type": "GB",
              "memory": "4",
              "processor": true,
              "socket_count": "3",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "className": "reconfigure_form",
                  "component": "sub-form",
                  "fields": Array [
                    Array [
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Memory",
                        "name": "cb_memory",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "fields": Array [
                          Object {
                            "component": "text-field",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "initialValue": 16,
                            "isRequired": true,
                            "label": "Memory Size",
                            "name": "memory",
                            "validate": Array [
                              Object {
                                "type": "memoryCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "helperText": "Between 1024MB and 0.009765625GB",
                            "id": "memoryType",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "mem_type",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                        ],
                        "id": "memory-sub-form",
                        "name": "memory-sub-form",
                      },
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Processor",
                        "name": "processor",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "processor",
                        },
                        "fields": Array [
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "socket",
                            "label": "Sockets",
                            "name": "socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "socket",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "cores",
                            "label": "Cores Per Socket",
                            "name": "cores_per_socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "cores",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "total_cpus",
                            "initialValue": 3,
                            "isReadOnly": true,
                            "label": "Total Processors",
                            "name": "total_cpus",
                            "type": "number",
                          },
                        ],
                        "id": "processor-sub-form",
                        "name": "processor-sub-form",
                      },
                    ],
                  ],
                  "name": "BasicInformation",
                  "title": "Options",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validatorMapper={
            Object {
              "cpuCheck": [Function],
              "customRequired": [Function],
              "diskMemoryCheck": [Function],
              "memoryCheck": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "cb_memory": true,
                "cores_per_socket_count": "1",
                "mem_type": "GB",
                "memory": "4",
                "processor": true,
                "socket_count": "3",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <FormTemplate
              formFields={
                Array [
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 3,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                        ],
                      ]
                    }
                    name="BasicInformation"
                    title="Options"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "className": "reconfigure_form",
                      "component": "sub-form",
                      "fields": Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 3,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                        ],
                      ],
                      "name": "BasicInformation",
                      "title": "Options",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <ReconfigureTemplate
                canSubmit={false}
                formFields={
                  Array [
                    <SingleField
                      className="reconfigure_form"
                      component="sub-form"
                      fields={
                        Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 3,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                          ],
                        ]
                      }
                      name="BasicInformation"
                      title="Options"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                hideButtons={false}
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "className": "reconfigure_form",
                        "component": "sub-form",
                        "fields": Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 3,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                          ],
                        ],
                        "name": "BasicInformation",
                        "title": "Options",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
              >
                <form
                  className="form-react reconfigure-form"
                  onSubmit={[Function]}
                >
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 3,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                        ],
                      ]
                    }
                    key="BasicInformation"
                    name="BasicInformation"
                    title="Options"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "className": "reconfigure_form",
                          "component": "sub-form",
                          "fields": Array [
                            Array [
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Memory",
                                "name": "cb_memory",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ],
                                "id": "memory-sub-form",
                                "name": "memory-sub-form",
                              },
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Processor",
                                "name": "processor",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "processor",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 3,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ],
                                "id": "processor-sub-form",
                                "name": "processor-sub-form",
                              },
                            ],
                          ],
                          "name": "BasicInformation",
                          "title": "Options",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SubForm
                          DescriptionElement="p"
                          TitleElement="h3"
                          className="reconfigure_form"
                          component="sub-form"
                          fields={
                            Array [
                              Array [
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Memory",
                                  "name": "cb_memory",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "initialValue": 16,
                                      "isRequired": true,
                                      "label": "Memory Size",
                                      "name": "memory",
                                      "validate": Array [
                                        Object {
                                          "type": "memoryCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "helperText": "Between 1024MB and 0.009765625GB",
                                      "id": "memoryType",
                                      "initialValue": "GB",
                                      "label": "Unit",
                                      "name": "mem_type",
                                      "options": Array [
                                        Object {
                                          "label": "GB",
                                          "value": "GB",
                                        },
                                        Object {
                                          "label": "MB",
                                          "value": "MB",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "memory-sub-form",
                                  "name": "memory-sub-form",
                                },
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Processor",
                                  "name": "processor",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "processor",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "socket",
                                      "label": "Sockets",
                                      "name": "socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "socket",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "cores",
                                      "label": "Cores Per Socket",
                                      "name": "cores_per_socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "cores",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "text-field",
                                      "id": "total_cpus",
                                      "initialValue": 3,
                                      "isReadOnly": true,
                                      "label": "Total Processors",
                                      "name": "total_cpus",
                                      "type": "number",
                                    },
                                  ],
                                  "id": "processor-sub-form",
                                  "name": "processor-sub-form",
                                },
                              ],
                            ]
                          }
                          name="BasicInformation"
                          title="Options"
                        >
                          <div
                            className="reconfigure_form"
                            name="BasicInformation"
                          >
                            <div>
                              <h3>
                                Options
                              </h3>
                            </div>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="cb_memory"
                              label="Memory"
                              name="cb_memory"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Memory",
                                    "name": "cb_memory",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Memory"
                                    name="cb_memory"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="cb_memory"
                                        key="cb_memory"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Memory"
                                        name="cb_memory"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={true}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="cb_memory"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Memory"
                                          name="cb_memory"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={true}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={true}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="cb_memory"
                                              name="cb_memory"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="cb_memory"
                                            >
                                              Memory
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "cb_memory",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ]
                              }
                              id="memory-sub-form"
                              key="memory-sub-form"
                              name="memory-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "initialValue": 16,
                                        "isRequired": true,
                                        "label": "Memory Size",
                                        "name": "memory",
                                        "validate": Array [
                                          Object {
                                            "type": "memoryCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "helperText": "Between 1024MB and 0.009765625GB",
                                        "id": "memoryType",
                                        "initialValue": "GB",
                                        "label": "Unit",
                                        "name": "mem_type",
                                        "options": Array [
                                          Object {
                                            "label": "GB",
                                            "value": "GB",
                                          },
                                          Object {
                                            "label": "MB",
                                            "value": "MB",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "memory-sub-form",
                                    "name": "memory-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "initialValue": 16,
                                          "isRequired": true,
                                          "label": "Memory Size",
                                          "name": "memory",
                                          "validate": Array [
                                            Object {
                                              "type": "memoryCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "helperText": "Between 1024MB and 0.009765625GB",
                                          "id": "memoryType",
                                          "initialValue": "GB",
                                          "label": "Unit",
                                          "name": "mem_type",
                                          "options": Array [
                                            Object {
                                              "label": "GB",
                                              "value": "GB",
                                            },
                                            Object {
                                              "label": "MB",
                                              "value": "MB",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "memory-sub-form",
                                      "name": "memory-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "cb_memory",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="cb_memory"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "initialValue": 16,
                                              "isRequired": true,
                                              "label": "Memory Size",
                                              "name": "memory",
                                              "validate": Array [
                                                Object {
                                                  "type": "memoryCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "helperText": "Between 1024MB and 0.009765625GB",
                                              "id": "memoryType",
                                              "initialValue": "GB",
                                              "label": "Unit",
                                              "name": "mem_type",
                                              "options": Array [
                                                Object {
                                                  "label": "GB",
                                                  "value": "GB",
                                                },
                                                Object {
                                                  "label": "MB",
                                                  "value": "MB",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "memory-sub-form",
                                          "name": "memory-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "cb_memory": true,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "text-field",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "initialValue": 16,
                                                "isRequired": true,
                                                "label": "Memory Size",
                                                "name": "memory",
                                                "validate": Array [
                                                  Object {
                                                    "type": "memoryCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "helperText": "Between 1024MB and 0.009765625GB",
                                                "id": "memoryType",
                                                "initialValue": "GB",
                                                "label": "Unit",
                                                "name": "mem_type",
                                                "options": Array [
                                                  Object {
                                                    "label": "GB",
                                                    "value": "GB",
                                                  },
                                                  Object {
                                                    "label": "MB",
                                                    "value": "MB",
                                                  },
                                                ],
                                              },
                                            ],
                                            "id": "memory-sub-form",
                                            "name": "memory-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "cb_memory": true,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "cb_memory",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "initialValue": 16,
                                                  "isRequired": true,
                                                  "label": "Memory Size",
                                                  "name": "memory",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "memoryCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "helperText": "Between 1024MB and 0.009765625GB",
                                                  "id": "memoryType",
                                                  "initialValue": "GB",
                                                  "label": "Unit",
                                                  "name": "mem_type",
                                                  "options": Array [
                                                    Object {
                                                      "label": "GB",
                                                      "value": "GB",
                                                    },
                                                    Object {
                                                      "label": "MB",
                                                      "value": "MB",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "memory-sub-form",
                                              "name": "memory-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "cb_memory": true,
                                            }
                                          }
                                        >
                                          <FormFieldHideWrapper
                                            hideField={false}
                                          >
                                            <SubForm
                                              DescriptionElement="p"
                                              TitleElement="h3"
                                              className="reconfigure-sub-form"
                                              component="sub-form"
                                              fields={
                                                Array [
                                                  Object {
                                                    "component": "text-field",
                                                    "condition": Object {
                                                      "is": true,
                                                      "when": "cb_memory",
                                                    },
                                                    "initialValue": 16,
                                                    "isRequired": true,
                                                    "label": "Memory Size",
                                                    "name": "memory",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "memoryCheck",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "select",
                                                    "condition": Object {
                                                      "is": true,
                                                      "when": "cb_memory",
                                                    },
                                                    "helperText": "Between 1024MB and 0.009765625GB",
                                                    "id": "memoryType",
                                                    "initialValue": "GB",
                                                    "label": "Unit",
                                                    "name": "mem_type",
                                                    "options": Array [
                                                      Object {
                                                        "label": "GB",
                                                        "value": "GB",
                                                      },
                                                      Object {
                                                        "label": "MB",
                                                        "value": "MB",
                                                      },
                                                    ],
                                                  },
                                                ]
                                              }
                                              id="memory-sub-form"
                                              name="memory-sub-form"
                                            >
                                              <div
                                                className="reconfigure-sub-form"
                                                id="memory-sub-form"
                                                name="memory-sub-form"
                                              >
                                                <SingleField
                                                  component="text-field"
                                                  condition={
                                                    Object {
                                                      "is": true,
                                                      "when": "cb_memory",
                                                    }
                                                  }
                                                  initialValue={16}
                                                  isRequired={true}
                                                  key="memory"
                                                  label="Memory Size"
                                                  name="memory"
                                                  validate={
                                                    Array [
                                                      Object {
                                                        "type": "memoryCheck",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <FormConditionWrapper
                                                    condition={
                                                      Object {
                                                        "is": true,
                                                        "when": "cb_memory",
                                                      }
                                                    }
                                                    field={
                                                      Object {
                                                        "component": "text-field",
                                                        "initialValue": 16,
                                                        "isRequired": true,
                                                        "label": "Memory Size",
                                                        "name": "memory",
                                                        "validate": Array [
                                                          Object {
                                                            "type": "memoryCheck",
                                                          },
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <ConditionTriggerDetector
                                                      condition={
                                                        Object {
                                                          "is": true,
                                                          "when": "cb_memory",
                                                        }
                                                      }
                                                      field={
                                                        Object {
                                                          "component": "text-field",
                                                          "initialValue": 16,
                                                          "isRequired": true,
                                                          "label": "Memory Size",
                                                          "name": "memory",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "memoryCheck",
                                                            },
                                                          ],
                                                        }
                                                      }
                                                      triggers={
                                                        Array [
                                                          "cb_memory",
                                                        ]
                                                      }
                                                    >
                                                      <ForwardRef(Field)
                                                        name="cb_memory"
                                                        subscription={
                                                          Object {
                                                            "value": true,
                                                          }
                                                        }
                                                      >
                                                        <ConditionTriggerDetector
                                                          condition={
                                                            Object {
                                                              "is": true,
                                                              "when": "cb_memory",
                                                            }
                                                          }
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "initialValue": 16,
                                                              "isRequired": true,
                                                              "label": "Memory Size",
                                                              "name": "memory",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "memoryCheck",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                          triggers={Array []}
                                                          values={
                                                            Object {
                                                              "cb_memory": true,
                                                            }
                                                          }
                                                        >
                                                          <ConditionTriggerWrapper
                                                            condition={
                                                              Object {
                                                                "is": true,
                                                                "when": "cb_memory",
                                                              }
                                                            }
                                                            field={
                                                              Object {
                                                                "component": "text-field",
                                                                "initialValue": 16,
                                                                "isRequired": true,
                                                                "label": "Memory Size",
                                                                "name": "memory",
                                                                "validate": Array [
                                                                  Object {
                                                                    "type": "memoryCheck",
                                                                  },
                                                                ],
                                                              }
                                                            }
                                                            values={
                                                              Object {
                                                                "cb_memory": true,
                                                              }
                                                            }
                                                          >
                                                            <Component
                                                              condition={
                                                                Object {
                                                                  "is": true,
                                                                  "when": "cb_memory",
                                                                }
                                                              }
                                                              field={
                                                                Object {
                                                                  "component": "text-field",
                                                                  "initialValue": 16,
                                                                  "isRequired": true,
                                                                  "label": "Memory Size",
                                                                  "name": "memory",
                                                                  "validate": Array [
                                                                    Object {
                                                                      "type": "memoryCheck",
                                                                    },
                                                                  ],
                                                                }
                                                              }
                                                              values={
                                                                Object {
                                                                  "cb_memory": true,
                                                                }
                                                              }
                                                            >
                                                              <FormFieldHideWrapper
                                                                hideField={false}
                                                              >
                                                                <TextField
                                                                  component="text-field"
                                                                  initialValue={16}
                                                                  isRequired={true}
                                                                  label="Memory Size"
                                                                  name="memory"
                                                                  validate={
                                                                    Array [
                                                                      Object {
                                                                        "type": "memoryCheck",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <TextInput
                                                                    id="memory"
                                                                    invalid={false}
                                                                    invalidText=""
                                                                    key="memory"
                                                                    labelText={
                                                                      <IsRequired>
                                                                        Memory Size
                                                                      </IsRequired>
                                                                    }
                                                                    name="memory"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    value="4"
                                                                    warn={false}
                                                                    warnText=""
                                                                  >
                                                                    <div
                                                                      className="bx--form-item bx--text-input-wrapper"
                                                                    >
                                                                      <label
                                                                        className="bx--label"
                                                                        htmlFor="memory"
                                                                      >
                                                                        <IsRequired>
                                                                          <span
                                                                            aria-hidden="true"
                                                                            className="ddorg__carbon-component-mapper_is-required isRequired-0-2-3"
                                                                          >
                                                                            *
                                                                          </span>
                                                                          Memory Size
                                                                        </IsRequired>
                                                                      </label>
                                                                      <div
                                                                        className="bx--text-input__field-outer-wrapper"
                                                                      >
                                                                        <div
                                                                          className="bx--text-input__field-wrapper"
                                                                          data-invalid={null}
                                                                        >
                                                                          <input
                                                                            className="bx--text-input bx--text-input--md"
                                                                            disabled={false}
                                                                            id="memory"
                                                                            name="memory"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onClick={[Function]}
                                                                            onFocus={[Function]}
                                                                            type="text"
                                                                            value="4"
                                                                          />
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </TextInput>
                                                                </TextField>
                                                              </FormFieldHideWrapper>
                                                            </Component>
                                                          </ConditionTriggerWrapper>
                                                        </ConditionTriggerDetector>
                                                      </ForwardRef(Field)>
                                                    </ConditionTriggerDetector>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                                <SingleField
                                                  component="select"
                                                  condition={
                                                    Object {
                                                      "is": true,
                                                      "when": "cb_memory",
                                                    }
                                                  }
                                                  helperText="Between 1024MB and 0.009765625GB"
                                                  id="memoryType"
                                                  initialValue="GB"
                                                  key="mem_type"
                                                  label="Unit"
                                                  name="mem_type"
                                                  options={
                                                    Array [
                                                      Object {
                                                        "label": "GB",
                                                        "value": "GB",
                                                      },
                                                      Object {
                                                        "label": "MB",
                                                        "value": "MB",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <FormConditionWrapper
                                                    condition={
                                                      Object {
                                                        "is": true,
                                                        "when": "cb_memory",
                                                      }
                                                    }
                                                    field={
                                                      Object {
                                                        "component": "select",
                                                        "helperText": "Between 1024MB and 0.009765625GB",
                                                        "id": "memoryType",
                                                        "initialValue": "GB",
                                                        "label": "Unit",
                                                        "name": "mem_type",
                                                        "options": Array [
                                                          Object {
                                                            "label": "GB",
                                                            "value": "GB",
                                                          },
                                                          Object {
                                                            "label": "MB",
                                                            "value": "MB",
                                                          },
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <ConditionTriggerDetector
                                                      condition={
                                                        Object {
                                                          "is": true,
                                                          "when": "cb_memory",
                                                        }
                                                      }
                                                      field={
                                                        Object {
                                                          "component": "select",
                                                          "helperText": "Between 1024MB and 0.009765625GB",
                                                          "id": "memoryType",
                                                          "initialValue": "GB",
                                                          "label": "Unit",
                                                          "name": "mem_type",
                                                          "options": Array [
                                                            Object {
                                                              "label": "GB",
                                                              "value": "GB",
                                                            },
                                                            Object {
                                                              "label": "MB",
                                                              "value": "MB",
                                                            },
                                                          ],
                                                        }
                                                      }
                                                      triggers={
                                                        Array [
                                                          "cb_memory",
                                                        ]
                                                      }
                                                    >
                                                      <ForwardRef(Field)
                                                        name="cb_memory"
                                                        subscription={
                                                          Object {
                                                            "value": true,
                                                          }
                                                        }
                                                      >
                                                        <ConditionTriggerDetector
                                                          condition={
                                                            Object {
                                                              "is": true,
                                                              "when": "cb_memory",
                                                            }
                                                          }
                                                          field={
                                                            Object {
                                                              "component": "select",
                                                              "helperText": "Between 1024MB and 0.009765625GB",
                                                              "id": "memoryType",
                                                              "initialValue": "GB",
                                                              "label": "Unit",
                                                              "name": "mem_type",
                                                              "options": Array [
                                                                Object {
                                                                  "label": "GB",
                                                                  "value": "GB",
                                                                },
                                                                Object {
                                                                  "label": "MB",
                                                                  "value": "MB",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                          triggers={Array []}
                                                          values={
                                                            Object {
                                                              "cb_memory": true,
                                                            }
                                                          }
                                                        >
                                                          <ConditionTriggerWrapper
                                                            condition={
                                                              Object {
                                                                "is": true,
                                                                "when": "cb_memory",
                                                              }
                                                            }
                                                            field={
                                                              Object {
                                                                "component": "select",
                                                                "helperText": "Between 1024MB and 0.009765625GB",
                                                                "id": "memoryType",
                                                                "initialValue": "GB",
                                                                "label": "Unit",
                                                                "name": "mem_type",
                                                                "options": Array [
                                                                  Object {
                                                                    "label": "GB",
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "label": "MB",
                                                                    "value": "MB",
                                                                  },
                                                                ],
                                                              }
                                                            }
                                                            values={
                                                              Object {
                                                                "cb_memory": true,
                                                              }
                                                            }
                                                          >
                                                            <Component
                                                              condition={
                                                                Object {
                                                                  "is": true,
                                                                  "when": "cb_memory",
                                                                }
                                                              }
                                                              field={
                                                                Object {
                                                                  "component": "select",
                                                                  "helperText": "Between 1024MB and 0.009765625GB",
                                                                  "id": "memoryType",
                                                                  "initialValue": "GB",
                                                                  "label": "Unit",
                                                                  "name": "mem_type",
                                                                  "options": Array [
                                                                    Object {
                                                                      "label": "GB",
                                                                      "value": "GB",
                                                                    },
                                                                    Object {
                                                                      "label": "MB",
                                                                      "value": "MB",
                                                                    },
                                                                  ],
                                                                }
                                                              }
                                                              values={
                                                                Object {
                                                                  "cb_memory": true,
                                                                }
                                                              }
                                                            >
                                                              <FormFieldHideWrapper
                                                                hideField={false}
                                                              >
                                                                <SelectWithOnChange
                                                                  component="select"
                                                                  helperText="Between 1024MB and 0.009765625GB"
                                                                  id="memoryType"
                                                                  initialValue="GB"
                                                                  label="Unit"
                                                                  name="mem_type"
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "GB",
                                                                        "value": "GB",
                                                                      },
                                                                      Object {
                                                                        "label": "MB",
                                                                        "value": "MB",
                                                                      },
                                                                    ]
                                                                  }
                                                                  placeholder="<Choose>"
                                                                >
                                                                  <Select
                                                                    component="select"
                                                                    helperText="Between 1024MB and 0.009765625GB"
                                                                    id="memoryType"
                                                                    initialValue="GB"
                                                                    label="Unit"
                                                                    loadingMessage="Loading..."
                                                                    name="mem_type"
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "GB",
                                                                          "value": "GB",
                                                                        },
                                                                        Object {
                                                                          "label": "MB",
                                                                          "value": "MB",
                                                                        },
                                                                      ]
                                                                    }
                                                                    placeholder="<Choose>"
                                                                  >
                                                                    <Select
                                                                      SelectComponent={[Function]}
                                                                      compareValues={[Function]}
                                                                      helperText="Between 1024MB and 0.009765625GB"
                                                                      id="memoryType"
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      isClearable={false}
                                                                      isSearchable={false}
                                                                      labelText="Unit"
                                                                      loadOptionsChangeCounter={1}
                                                                      loadingMessage="Loading..."
                                                                      name="mem_type"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "label": "GB",
                                                                            "value": "GB",
                                                                          },
                                                                          Object {
                                                                            "label": "MB",
                                                                            "value": "MB",
                                                                          },
                                                                        ]
                                                                      }
                                                                      placeholder="<Choose>"
                                                                      pluckSingleValue={true}
                                                                      simpleValue={false}
                                                                      value="GB"
                                                                    >
                                                                      <ClearedSelect
                                                                        className=""
                                                                        closeMenuOnSelect={true}
                                                                        helperText="Between 1024MB and 0.009765625GB"
                                                                        hideSelectedOptions={false}
                                                                        id="memoryType"
                                                                        invalidText=""
                                                                        isClearable={false}
                                                                        isFetching={false}
                                                                        isSearchable={false}
                                                                        labelText="Unit"
                                                                        name="mem_type"
                                                                        noOptionsMessage={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onInputChange={[Function]}
                                                                        options={
                                                                          Array [
                                                                            Object {
                                                                              "label": "GB",
                                                                              "value": "GB",
                                                                            },
                                                                            Object {
                                                                              "label": "MB",
                                                                              "value": "MB",
                                                                            },
                                                                          ]
                                                                        }
                                                                        placeholder="<Choose>"
                                                                        value="GB"
                                                                      >
                                                                        <Select
                                                                          className=""
                                                                          disabled={false}
                                                                          helperText="Between 1024MB and 0.009765625GB"
                                                                          id="mem_type"
                                                                          inline={false}
                                                                          invalid={false}
                                                                          invalidText=""
                                                                          labelText="Unit"
                                                                          light={false}
                                                                          name="mem_type"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          value="GB"
                                                                        >
                                                                          <div
                                                                            className="bx--form-item"
                                                                          >
                                                                            <div
                                                                              className="bx--select"
                                                                            >
                                                                              <label
                                                                                className="bx--label"
                                                                                htmlFor="mem_type"
                                                                              >
                                                                                Unit
                                                                              </label>
                                                                              <div
                                                                                className="bx--select-input__wrapper"
                                                                                data-invalid={null}
                                                                              >
                                                                                <select
                                                                                  aria-describedby="select-helper-text-1"
                                                                                  className="bx--select-input"
                                                                                  id="mem_type"
                                                                                  name="mem_type"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  value="GB"
                                                                                >
                                                                                  <SelectItem
                                                                                    disabled={false}
                                                                                    hidden={false}
                                                                                    key="GB"
                                                                                    label="GB"
                                                                                    text="GB"
                                                                                    value="GB"
                                                                                  >
                                                                                    <option
                                                                                      className="bx--select-option"
                                                                                      disabled={false}
                                                                                      hidden={false}
                                                                                      label="GB"
                                                                                      value="GB"
                                                                                    >
                                                                                      GB
                                                                                    </option>
                                                                                  </SelectItem>
                                                                                  <SelectItem
                                                                                    disabled={false}
                                                                                    hidden={false}
                                                                                    key="MB"
                                                                                    label="MB"
                                                                                    text="MB"
                                                                                    value="MB"
                                                                                  >
                                                                                    <option
                                                                                      className="bx--select-option"
                                                                                      disabled={false}
                                                                                      hidden={false}
                                                                                      label="MB"
                                                                                      value="MB"
                                                                                    >
                                                                                      MB
                                                                                    </option>
                                                                                  </SelectItem>
                                                                                </select>
                                                                                <ForwardRef(ChevronDown16)
                                                                                  className="bx--select__arrow"
                                                                                >
                                                                                  <Icon
                                                                                    className="bx--select__arrow"
                                                                                    fill="currentColor"
                                                                                    height={16}
                                                                                    preserveAspectRatio="xMidYMid meet"
                                                                                    viewBox="0 0 16 16"
                                                                                    width={16}
                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden={true}
                                                                                      className="bx--select__arrow"
                                                                                      fill="currentColor"
                                                                                      focusable="false"
                                                                                      height={16}
                                                                                      preserveAspectRatio="xMidYMid meet"
                                                                                      viewBox="0 0 16 16"
                                                                                      width={16}
                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                    >
                                                                                      <path
                                                                                        d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                                      />
                                                                                    </svg>
                                                                                  </Icon>
                                                                                </ForwardRef(ChevronDown16)>
                                                                              </div>
                                                                              <div
                                                                                className="bx--form__helper-text"
                                                                                id="select-helper-text-1"
                                                                              >
                                                                                Between 1024MB and 0.009765625GB
                                                                              </div>
                                                                            </div>
                                                                          </div>
                                                                        </Select>
                                                                      </ClearedSelect>
                                                                    </Select>
                                                                  </Select>
                                                                </SelectWithOnChange>
                                                              </FormFieldHideWrapper>
                                                            </Component>
                                                          </ConditionTriggerWrapper>
                                                        </ConditionTriggerDetector>
                                                      </ForwardRef(Field)>
                                                    </ConditionTriggerDetector>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                              </div>
                                            </SubForm>
                                          </FormFieldHideWrapper>
                                        </Component>
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="processor"
                              label="Processor"
                              name="processor"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Processor",
                                    "name": "processor",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Processor"
                                    name="processor"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="processor"
                                        key="processor"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Processor"
                                        name="processor"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={true}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="processor"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Processor"
                                          name="processor"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={true}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={true}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="processor"
                                              name="processor"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="processor"
                                            >
                                              Processor
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "processor",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 3,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ]
                              }
                              id="processor-sub-form"
                              key="processor-sub-form"
                              name="processor-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "processor",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "socket",
                                        "label": "Sockets",
                                        "name": "socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "socket",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "cores",
                                        "label": "Cores Per Socket",
                                        "name": "cores_per_socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "cores",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "text-field",
                                        "id": "total_cpus",
                                        "initialValue": 3,
                                        "isReadOnly": true,
                                        "label": "Total Processors",
                                        "name": "total_cpus",
                                        "type": "number",
                                      },
                                    ],
                                    "id": "processor-sub-form",
                                    "name": "processor-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "processor",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "socket",
                                          "label": "Sockets",
                                          "name": "socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "socket",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "cores",
                                          "label": "Cores Per Socket",
                                          "name": "cores_per_socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "cores",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "text-field",
                                          "id": "total_cpus",
                                          "initialValue": 3,
                                          "isReadOnly": true,
                                          "label": "Total Processors",
                                          "name": "total_cpus",
                                          "type": "number",
                                        },
                                      ],
                                      "id": "processor-sub-form",
                                      "name": "processor-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "processor",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="processor"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "processor",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "socket",
                                              "label": "Sockets",
                                              "name": "socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "socket",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "cores",
                                              "label": "Cores Per Socket",
                                              "name": "cores_per_socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "cores",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "text-field",
                                              "id": "total_cpus",
                                              "initialValue": 3,
                                              "isReadOnly": true,
                                              "label": "Total Processors",
                                              "name": "total_cpus",
                                              "type": "number",
                                            },
                                          ],
                                          "id": "processor-sub-form",
                                          "name": "processor-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "processor": true,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "processor",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "socket",
                                                "label": "Sockets",
                                                "name": "socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "socket",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "cores",
                                                "label": "Cores Per Socket",
                                                "name": "cores_per_socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "cores",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "text-field",
                                                "id": "total_cpus",
                                                "initialValue": 3,
                                                "isReadOnly": true,
                                                "label": "Total Processors",
                                                "name": "total_cpus",
                                                "type": "number",
                                              },
                                            ],
                                            "id": "processor-sub-form",
                                            "name": "processor-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "processor": true,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "processor",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "socket",
                                                  "label": "Sockets",
                                                  "name": "socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "socket",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "cores",
                                                  "label": "Cores Per Socket",
                                                  "name": "cores_per_socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "cores",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "text-field",
                                                  "id": "total_cpus",
                                                  "initialValue": 3,
                                                  "isReadOnly": true,
                                                  "label": "Total Processors",
                                                  "name": "total_cpus",
                                                  "type": "number",
                                                },
                                              ],
                                              "id": "processor-sub-form",
                                              "name": "processor-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "processor": true,
                                            }
                                          }
                                        >
                                          <FormFieldHideWrapper
                                            hideField={false}
                                          >
                                            <SubForm
                                              DescriptionElement="p"
                                              TitleElement="h3"
                                              className="reconfigure-sub-form"
                                              component="sub-form"
                                              fields={
                                                Array [
                                                  Object {
                                                    "component": "select",
                                                    "hideField": false,
                                                    "id": "socket",
                                                    "label": "Sockets",
                                                    "name": "socket_count",
                                                    "onChange": [Function],
                                                    "options": Array [
                                                      Object {
                                                        "label": "1",
                                                        "value": 1,
                                                      },
                                                      Object {
                                                        "label": "2",
                                                        "value": 2,
                                                      },
                                                      Object {
                                                        "label": "3",
                                                        "value": 3,
                                                      },
                                                      Object {
                                                        "label": "4",
                                                        "value": 4,
                                                      },
                                                    ],
                                                    "validate": Array [
                                                      Object {
                                                        "field": "socket",
                                                        "type": "cpuCheck",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "select",
                                                    "hideField": false,
                                                    "id": "cores",
                                                    "label": "Cores Per Socket",
                                                    "name": "cores_per_socket_count",
                                                    "onChange": [Function],
                                                    "options": Array [
                                                      Object {
                                                        "label": "1",
                                                        "value": 1,
                                                      },
                                                      Object {
                                                        "label": "2",
                                                        "value": 2,
                                                      },
                                                      Object {
                                                        "label": "3",
                                                        "value": 3,
                                                      },
                                                      Object {
                                                        "label": "4",
                                                        "value": 4,
                                                      },
                                                    ],
                                                    "validate": Array [
                                                      Object {
                                                        "field": "cores",
                                                        "type": "cpuCheck",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "text-field",
                                                    "id": "total_cpus",
                                                    "initialValue": 3,
                                                    "isReadOnly": true,
                                                    "label": "Total Processors",
                                                    "name": "total_cpus",
                                                    "type": "number",
                                                  },
                                                ]
                                              }
                                              id="processor-sub-form"
                                              name="processor-sub-form"
                                            >
                                              <div
                                                className="reconfigure-sub-form"
                                                id="processor-sub-form"
                                                name="processor-sub-form"
                                              >
                                                <SingleField
                                                  component="select"
                                                  hideField={false}
                                                  id="socket"
                                                  key="socket_count"
                                                  label="Sockets"
                                                  name="socket_count"
                                                  onChange={[Function]}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "label": "1",
                                                        "value": 1,
                                                      },
                                                      Object {
                                                        "label": "2",
                                                        "value": 2,
                                                      },
                                                      Object {
                                                        "label": "3",
                                                        "value": 3,
                                                      },
                                                      Object {
                                                        "label": "4",
                                                        "value": 4,
                                                      },
                                                    ]
                                                  }
                                                  validate={
                                                    Array [
                                                      Object {
                                                        "field": "socket",
                                                        "type": "cpuCheck",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <FormConditionWrapper
                                                    field={
                                                      Object {
                                                        "component": "select",
                                                        "id": "socket",
                                                        "label": "Sockets",
                                                        "name": "socket_count",
                                                        "onChange": [Function],
                                                        "options": Array [
                                                          Object {
                                                            "label": "1",
                                                            "value": 1,
                                                          },
                                                          Object {
                                                            "label": "2",
                                                            "value": 2,
                                                          },
                                                          Object {
                                                            "label": "3",
                                                            "value": 3,
                                                          },
                                                          Object {
                                                            "label": "4",
                                                            "value": 4,
                                                          },
                                                        ],
                                                        "validate": Array [
                                                          Object {
                                                            "field": "socket",
                                                            "type": "cpuCheck",
                                                          },
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <FormFieldHideWrapper
                                                      hideField={false}
                                                    >
                                                      <SelectWithOnChange
                                                        component="select"
                                                        id="socket"
                                                        label="Sockets"
                                                        name="socket_count"
                                                        onChange={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "1",
                                                              "value": 1,
                                                            },
                                                            Object {
                                                              "label": "2",
                                                              "value": 2,
                                                            },
                                                            Object {
                                                              "label": "3",
                                                              "value": 3,
                                                            },
                                                            Object {
                                                              "label": "4",
                                                              "value": 4,
                                                            },
                                                          ]
                                                        }
                                                        placeholder="<Choose>"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "field": "socket",
                                                              "type": "cpuCheck",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <Select
                                                          component="select"
                                                          id="socket"
                                                          label="Sockets"
                                                          loadingMessage="Loading..."
                                                          name="socket_count"
                                                          options={
                                                            Array [
                                                              Object {
                                                                "label": "1",
                                                                "value": 1,
                                                              },
                                                              Object {
                                                                "label": "2",
                                                                "value": 2,
                                                              },
                                                              Object {
                                                                "label": "3",
                                                                "value": 3,
                                                              },
                                                              Object {
                                                                "label": "4",
                                                                "value": 4,
                                                              },
                                                            ]
                                                          }
                                                          placeholder="<Choose>"
                                                          validate={
                                                            Array [
                                                              Object {
                                                                "field": "socket",
                                                                "type": "cpuCheck",
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <Select
                                                            SelectComponent={[Function]}
                                                            compareValues={[Function]}
                                                            id="socket"
                                                            invalid={false}
                                                            invalidText=""
                                                            isClearable={false}
                                                            isSearchable={false}
                                                            labelText="Sockets"
                                                            loadOptionsChangeCounter={1}
                                                            loadingMessage="Loading..."
                                                            name="socket_count"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "label": "1",
                                                                  "value": 1,
                                                                },
                                                                Object {
                                                                  "label": "2",
                                                                  "value": 2,
                                                                },
                                                                Object {
                                                                  "label": "3",
                                                                  "value": 3,
                                                                },
                                                                Object {
                                                                  "label": "4",
                                                                  "value": 4,
                                                                },
                                                              ]
                                                            }
                                                            placeholder="<Choose>"
                                                            pluckSingleValue={true}
                                                            simpleValue={false}
                                                            value="3"
                                                          >
                                                            <ClearedSelect
                                                              className=""
                                                              closeMenuOnSelect={true}
                                                              hideSelectedOptions={false}
                                                              id="socket"
                                                              invalidText=""
                                                              isClearable={false}
                                                              isFetching={false}
                                                              isSearchable={false}
                                                              labelText="Sockets"
                                                              name="socket_count"
                                                              noOptionsMessage={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onInputChange={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "label": "1",
                                                                    "value": 1,
                                                                  },
                                                                  Object {
                                                                    "label": "2",
                                                                    "value": 2,
                                                                  },
                                                                  Object {
                                                                    "label": "3",
                                                                    "value": 3,
                                                                  },
                                                                  Object {
                                                                    "label": "4",
                                                                    "value": 4,
                                                                  },
                                                                ]
                                                              }
                                                              placeholder="<Choose>"
                                                              value="3"
                                                            >
                                                              <Select
                                                                className=""
                                                                disabled={false}
                                                                helperText=""
                                                                id="socket_count"
                                                                inline={false}
                                                                invalid={false}
                                                                invalidText=""
                                                                labelText="Sockets"
                                                                light={false}
                                                                name="socket_count"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="3"
                                                              >
                                                                <div
                                                                  className="bx--form-item"
                                                                >
                                                                  <div
                                                                    className="bx--select"
                                                                  >
                                                                    <label
                                                                      className="bx--label"
                                                                      htmlFor="socket_count"
                                                                    >
                                                                      Sockets
                                                                    </label>
                                                                    <div
                                                                      className="bx--select-input__wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <select
                                                                        className="bx--select-input"
                                                                        id="socket_count"
                                                                        name="socket_count"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="3"
                                                                      >
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="1"
                                                                          label="1"
                                                                          text="1"
                                                                          value={1}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="1"
                                                                            value={1}
                                                                          >
                                                                            1
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="2"
                                                                          label="2"
                                                                          text="2"
                                                                          value={2}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="2"
                                                                            value={2}
                                                                          >
                                                                            2
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="3"
                                                                          label="3"
                                                                          text="3"
                                                                          value={3}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="3"
                                                                            value={3}
                                                                          >
                                                                            3
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="4"
                                                                          label="4"
                                                                          text="4"
                                                                          value={4}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="4"
                                                                            value={4}
                                                                          >
                                                                            4
                                                                          </option>
                                                                        </SelectItem>
                                                                      </select>
                                                                      <ForwardRef(ChevronDown16)
                                                                        className="bx--select__arrow"
                                                                      >
                                                                        <Icon
                                                                          className="bx--select__arrow"
                                                                          fill="currentColor"
                                                                          height={16}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 16 16"
                                                                          width={16}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="bx--select__arrow"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height={16}
                                                                            preserveAspectRatio="xMidYMid meet"
                                                                            viewBox="0 0 16 16"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                            />
                                                                          </svg>
                                                                        </Icon>
                                                                      </ForwardRef(ChevronDown16)>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </Select>
                                                            </ClearedSelect>
                                                          </Select>
                                                        </Select>
                                                      </SelectWithOnChange>
                                                    </FormFieldHideWrapper>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                                <SingleField
                                                  component="select"
                                                  hideField={false}
                                                  id="cores"
                                                  key="cores_per_socket_count"
                                                  label="Cores Per Socket"
                                                  name="cores_per_socket_count"
                                                  onChange={[Function]}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "label": "1",
                                                        "value": 1,
                                                      },
                                                      Object {
                                                        "label": "2",
                                                        "value": 2,
                                                      },
                                                      Object {
                                                        "label": "3",
                                                        "value": 3,
                                                      },
                                                      Object {
                                                        "label": "4",
                                                        "value": 4,
                                                      },
                                                    ]
                                                  }
                                                  validate={
                                                    Array [
                                                      Object {
                                                        "field": "cores",
                                                        "type": "cpuCheck",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <FormConditionWrapper
                                                    field={
                                                      Object {
                                                        "component": "select",
                                                        "id": "cores",
                                                        "label": "Cores Per Socket",
                                                        "name": "cores_per_socket_count",
                                                        "onChange": [Function],
                                                        "options": Array [
                                                          Object {
                                                            "label": "1",
                                                            "value": 1,
                                                          },
                                                          Object {
                                                            "label": "2",
                                                            "value": 2,
                                                          },
                                                          Object {
                                                            "label": "3",
                                                            "value": 3,
                                                          },
                                                          Object {
                                                            "label": "4",
                                                            "value": 4,
                                                          },
                                                        ],
                                                        "validate": Array [
                                                          Object {
                                                            "field": "cores",
                                                            "type": "cpuCheck",
                                                          },
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <FormFieldHideWrapper
                                                      hideField={false}
                                                    >
                                                      <SelectWithOnChange
                                                        component="select"
                                                        id="cores"
                                                        label="Cores Per Socket"
                                                        name="cores_per_socket_count"
                                                        onChange={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "1",
                                                              "value": 1,
                                                            },
                                                            Object {
                                                              "label": "2",
                                                              "value": 2,
                                                            },
                                                            Object {
                                                              "label": "3",
                                                              "value": 3,
                                                            },
                                                            Object {
                                                              "label": "4",
                                                              "value": 4,
                                                            },
                                                          ]
                                                        }
                                                        placeholder="<Choose>"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "field": "cores",
                                                              "type": "cpuCheck",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <Select
                                                          component="select"
                                                          id="cores"
                                                          label="Cores Per Socket"
                                                          loadingMessage="Loading..."
                                                          name="cores_per_socket_count"
                                                          options={
                                                            Array [
                                                              Object {
                                                                "label": "1",
                                                                "value": 1,
                                                              },
                                                              Object {
                                                                "label": "2",
                                                                "value": 2,
                                                              },
                                                              Object {
                                                                "label": "3",
                                                                "value": 3,
                                                              },
                                                              Object {
                                                                "label": "4",
                                                                "value": 4,
                                                              },
                                                            ]
                                                          }
                                                          placeholder="<Choose>"
                                                          validate={
                                                            Array [
                                                              Object {
                                                                "field": "cores",
                                                                "type": "cpuCheck",
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <Select
                                                            SelectComponent={[Function]}
                                                            compareValues={[Function]}
                                                            id="cores"
                                                            invalid={false}
                                                            invalidText=""
                                                            isClearable={false}
                                                            isSearchable={false}
                                                            labelText="Cores Per Socket"
                                                            loadOptionsChangeCounter={1}
                                                            loadingMessage="Loading..."
                                                            name="cores_per_socket_count"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "label": "1",
                                                                  "value": 1,
                                                                },
                                                                Object {
                                                                  "label": "2",
                                                                  "value": 2,
                                                                },
                                                                Object {
                                                                  "label": "3",
                                                                  "value": 3,
                                                                },
                                                                Object {
                                                                  "label": "4",
                                                                  "value": 4,
                                                                },
                                                              ]
                                                            }
                                                            placeholder="<Choose>"
                                                            pluckSingleValue={true}
                                                            simpleValue={false}
                                                            value="1"
                                                          >
                                                            <ClearedSelect
                                                              className=""
                                                              closeMenuOnSelect={true}
                                                              hideSelectedOptions={false}
                                                              id="cores"
                                                              invalidText=""
                                                              isClearable={false}
                                                              isFetching={false}
                                                              isSearchable={false}
                                                              labelText="Cores Per Socket"
                                                              name="cores_per_socket_count"
                                                              noOptionsMessage={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onInputChange={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "label": "1",
                                                                    "value": 1,
                                                                  },
                                                                  Object {
                                                                    "label": "2",
                                                                    "value": 2,
                                                                  },
                                                                  Object {
                                                                    "label": "3",
                                                                    "value": 3,
                                                                  },
                                                                  Object {
                                                                    "label": "4",
                                                                    "value": 4,
                                                                  },
                                                                ]
                                                              }
                                                              placeholder="<Choose>"
                                                              value="1"
                                                            >
                                                              <Select
                                                                className=""
                                                                disabled={false}
                                                                helperText=""
                                                                id="cores_per_socket_count"
                                                                inline={false}
                                                                invalid={false}
                                                                invalidText=""
                                                                labelText="Cores Per Socket"
                                                                light={false}
                                                                name="cores_per_socket_count"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="1"
                                                              >
                                                                <div
                                                                  className="bx--form-item"
                                                                >
                                                                  <div
                                                                    className="bx--select"
                                                                  >
                                                                    <label
                                                                      className="bx--label"
                                                                      htmlFor="cores_per_socket_count"
                                                                    >
                                                                      Cores Per Socket
                                                                    </label>
                                                                    <div
                                                                      className="bx--select-input__wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <select
                                                                        className="bx--select-input"
                                                                        id="cores_per_socket_count"
                                                                        name="cores_per_socket_count"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="1"
                                                                      >
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="1"
                                                                          label="1"
                                                                          text="1"
                                                                          value={1}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="1"
                                                                            value={1}
                                                                          >
                                                                            1
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="2"
                                                                          label="2"
                                                                          text="2"
                                                                          value={2}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="2"
                                                                            value={2}
                                                                          >
                                                                            2
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="3"
                                                                          label="3"
                                                                          text="3"
                                                                          value={3}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="3"
                                                                            value={3}
                                                                          >
                                                                            3
                                                                          </option>
                                                                        </SelectItem>
                                                                        <SelectItem
                                                                          disabled={false}
                                                                          hidden={false}
                                                                          key="4"
                                                                          label="4"
                                                                          text="4"
                                                                          value={4}
                                                                        >
                                                                          <option
                                                                            className="bx--select-option"
                                                                            disabled={false}
                                                                            hidden={false}
                                                                            label="4"
                                                                            value={4}
                                                                          >
                                                                            4
                                                                          </option>
                                                                        </SelectItem>
                                                                      </select>
                                                                      <ForwardRef(ChevronDown16)
                                                                        className="bx--select__arrow"
                                                                      >
                                                                        <Icon
                                                                          className="bx--select__arrow"
                                                                          fill="currentColor"
                                                                          height={16}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 16 16"
                                                                          width={16}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="bx--select__arrow"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height={16}
                                                                            preserveAspectRatio="xMidYMid meet"
                                                                            viewBox="0 0 16 16"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                            />
                                                                          </svg>
                                                                        </Icon>
                                                                      </ForwardRef(ChevronDown16)>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </Select>
                                                            </ClearedSelect>
                                                          </Select>
                                                        </Select>
                                                      </SelectWithOnChange>
                                                    </FormFieldHideWrapper>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                                <SingleField
                                                  component="text-field"
                                                  id="total_cpus"
                                                  initialValue={3}
                                                  isReadOnly={true}
                                                  key="total_cpus"
                                                  label="Total Processors"
                                                  name="total_cpus"
                                                  type="number"
                                                >
                                                  <FormConditionWrapper
                                                    field={
                                                      Object {
                                                        "component": "text-field",
                                                        "id": "total_cpus",
                                                        "initialValue": 3,
                                                        "isReadOnly": true,
                                                        "label": "Total Processors",
                                                        "name": "total_cpus",
                                                        "type": "number",
                                                      }
                                                    }
                                                  >
                                                    <FormFieldHideWrapper
                                                      hideField={false}
                                                    >
                                                      <TextField
                                                        component="text-field"
                                                        id="total_cpus"
                                                        initialValue={3}
                                                        isReadOnly={true}
                                                        label="Total Processors"
                                                        name="total_cpus"
                                                        type="number"
                                                      >
                                                        <ForwardRef(NumberInput)
                                                          id="total_cpus"
                                                          invalid={false}
                                                          invalidText=""
                                                          key="total_cpus"
                                                          label="Total Processors"
                                                          name="total_cpus"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          readOnly={true}
                                                          type="number"
                                                          value={3}
                                                          warn={false}
                                                          warnText=""
                                                        >
                                                          <NumberInput
                                                            allowEmpty={false}
                                                            ariaLabel="Numeric input field with increment and decrement buttons"
                                                            disabled={false}
                                                            helperText=""
                                                            hideLabel={false}
                                                            iconDescription="choose a number"
                                                            id="total_cpus"
                                                            innerRef={null}
                                                            invalid={false}
                                                            invalidText=""
                                                            label="Total Processors"
                                                            light={false}
                                                            name="total_cpus"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            readOnly={true}
                                                            step={1}
                                                            translateWithId={[Function]}
                                                            type="number"
                                                            value={3}
                                                            warn={false}
                                                            warnText=""
                                                          >
                                                            <div
                                                              className="bx--form-item"
                                                            >
                                                              <div
                                                                className="bx--number bx--number--helpertext bx--number--readonly"
                                                              >
                                                                <label
                                                                  className="bx--label"
                                                                  htmlFor="total_cpus"
                                                                >
                                                                  Total Processors
                                                                </label>
                                                                <div
                                                                  className="bx--number__input-wrapper"
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    aria-label={null}
                                                                    data-invalid={false}
                                                                    disabled={false}
                                                                    id="total_cpus"
                                                                    name="total_cpus"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    pattern="[0-9]*"
                                                                    readOnly={true}
                                                                    step={1}
                                                                    type="number"
                                                                    value={3}
                                                                  />
                                                                  <ForwardRef(EditOff16)
                                                                    className="bx--number__readonly-icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--number__readonly-icon"
                                                                      fill="currentColor"
                                                                      height={16}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={16}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--number__readonly-icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={16}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={16}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M30 28.6L3.4 2 2 3.4l10.1 10.1L4 21.6V28h6.4l8.1-8.1L28.6 30 30 28.6zM9.6 26H6v-3.6l7.5-7.5 3.6 3.6L9.6 26zM29.4 6.2L29.4 6.2l-3.6-3.6c-.8-.8-2-.8-2.8 0l0 0 0 0-8 8 1.4 1.4L20 8.4l3.6 3.6L20 15.6l1.4 1.4 8-8C30.2 8.2 30.2 7 29.4 6.2L29.4 6.2zM25 10.6L21.4 7l3-3L28 7.6 25 10.6z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(EditOff16)>
                                                                  <div
                                                                    className="bx--number__controls"
                                                                  >
                                                                    <button
                                                                      aria-label="Decrement number"
                                                                      className="bx--number__control-btn down-icon"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      tabIndex="-1"
                                                                      title="Decrement number"
                                                                      type="button"
                                                                    >
                                                                      <ForwardRef(Subtract16)
                                                                        className="down-icon"
                                                                      >
                                                                        <Icon
                                                                          className="down-icon"
                                                                          fill="currentColor"
                                                                          height={16}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={16}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="down-icon"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height={16}
                                                                            preserveAspectRatio="xMidYMid meet"
                                                                            viewBox="0 0 32 32"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M8 15H24V17H8z"
                                                                            />
                                                                          </svg>
                                                                        </Icon>
                                                                      </ForwardRef(Subtract16)>
                                                                    </button>
                                                                    <div
                                                                      className="bx--number__rule-divider"
                                                                    />
                                                                    <button
                                                                      aria-label="Increment number"
                                                                      className="bx--number__control-btn up-icon"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      tabIndex="-1"
                                                                      title="Increment number"
                                                                      type="button"
                                                                    >
                                                                      <ForwardRef(Add16)
                                                                        className="up-icon"
                                                                      >
                                                                        <Icon
                                                                          className="up-icon"
                                                                          fill="currentColor"
                                                                          height={16}
                                                                          preserveAspectRatio="xMidYMid meet"
                                                                          viewBox="0 0 32 32"
                                                                          width={16}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="up-icon"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height={16}
                                                                            preserveAspectRatio="xMidYMid meet"
                                                                            viewBox="0 0 32 32"
                                                                            width={16}
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"
                                                                            />
                                                                          </svg>
                                                                        </Icon>
                                                                      </ForwardRef(Add16)>
                                                                    </button>
                                                                    <div
                                                                      className="bx--number__rule-divider"
                                                                    />
                                                                  </div>
                                                                </div>
                                                              </div>
                                                            </div>
                                                          </NumberInput>
                                                        </ForwardRef(NumberInput)>
                                                      </TextField>
                                                    </FormFieldHideWrapper>
                                                  </FormConditionWrapper>
                                                </SingleField>
                                              </div>
                                            </SubForm>
                                          </FormFieldHideWrapper>
                                        </Component>
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                          </div>
                        </SubForm>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <SingleField
                    component="spy-field"
                    key="spy-field"
                    name="spy-field"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SpyField
                          component="spy-field"
                          name="spy-field"
                        >
                          <FormSpy
                            onChange={[Function]}
                            subscription={
                              Object {
                                "pristine": true,
                                "valid": true,
                              }
                            }
                          />
                        </SpyField>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <div
                    className="bx--btn-set"
                  >
                    <button
                      alt="Save"
                      className="bx--btn bx--btn--primary"
                      disabled={true}
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      alt="Reset"
                      className="bx--btn bx--btn--secondary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Reset
                    </button>
                    <button
                      alt="Cancel"
                      className="bx--btn bx--btn--secondary"
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              </ReconfigureTemplate>
            </FormTemplate>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </ReconfigureVmForm>
</Provider>
`;

exports[`Reconfigure VM form component should render reconfigure sub form and click delete button 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReconfigureVmForm
    memory={
      Object {
        "max": 10,
        "min": 1024,
      }
    }
    options={
      Object {
        "avail_adapter_names": Array [],
        "controller_types": Array [
          "VirtualController",
          "ParaVirtualController",
          "VirtualBusController",
        ],
        "cores_options": Array [
          1,
          2,
          3,
          4,
        ],
        "host_file_options": Array [
          Array [
            "host file test 1.iso",
            "host file test 1.iso,18",
          ],
          Array [
            "host file test 2.iso",
            "host file test 2.iso,18",
          ],
          Array [
            "host file test 3.iso",
            "host file test 3.iso,18",
          ],
        ],
        "socket_options": Array [
          1,
          2,
          3,
          4,
        ],
        "vlan_options": Array [
          "vlan test 0",
          "vlan test 1",
          "vlan test 3",
        ],
      }
    }
    recordId={
      Array [
        12,
      ]
    }
    requestId="new"
    roles={
      Object {
        "allowCdromsChange": true,
        "allowCpuChange": true,
        "allowDiskChange": true,
        "allowDiskSizeChange": true,
        "allowMemoryChange": true,
        "allowNetworkChange": true,
        "isRedhat": true,
        "isVmwareCloud": false,
        "isVmwareInfra": true,
      }
    }
  >
    <Connect(MiqFormRenderer)
      FormTemplate={[Function]}
      clearOnUnmount={false}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "reconfigure-table": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "cb_memory": false,
          "cores_per_socket_count": "1",
          "mem_type": "GB",
          "memory": "2",
          "processor": false,
          "socket_count": "2",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "className": "reconfigure_form",
              "component": "sub-form",
              "fields": Array [
                Array [
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Memory",
                    "name": "cb_memory",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "cb_memory",
                    },
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "initialValue": 16,
                        "isRequired": true,
                        "label": "Memory Size",
                        "name": "memory",
                        "validate": Array [
                          Object {
                            "type": "memoryCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "helperText": "Between 1024MB and 0.009765625GB",
                        "id": "memoryType",
                        "initialValue": "GB",
                        "label": "Unit",
                        "name": "mem_type",
                        "options": Array [
                          Object {
                            "label": "GB",
                            "value": "GB",
                          },
                          Object {
                            "label": "MB",
                            "value": "MB",
                          },
                        ],
                      },
                    ],
                    "id": "memory-sub-form",
                    "name": "memory-sub-form",
                  },
                  Object {
                    "component": "switch",
                    "isDisabled": false,
                    "label": "Processor",
                    "name": "processor",
                    "offText": "No",
                    "onText": "Yes",
                  },
                  Object {
                    "className": "reconfigure-sub-form",
                    "component": "sub-form",
                    "condition": Object {
                      "is": true,
                      "when": "processor",
                    },
                    "fields": Array [
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "socket",
                        "label": "Sockets",
                        "name": "socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "socket",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "hideField": false,
                        "id": "cores",
                        "label": "Cores Per Socket",
                        "name": "cores_per_socket_count",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "1",
                            "value": 1,
                          },
                          Object {
                            "label": "2",
                            "value": 2,
                          },
                          Object {
                            "label": "3",
                            "value": 3,
                          },
                          Object {
                            "label": "4",
                            "value": 4,
                          },
                        ],
                        "validate": Array [
                          Object {
                            "field": "cores",
                            "type": "cpuCheck",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "total_cpus",
                        "initialValue": 2,
                        "isReadOnly": true,
                        "label": "Total Processors",
                        "name": "total_cpus",
                        "type": "number",
                      },
                    ],
                    "id": "processor-sub-form",
                    "name": "processor-sub-form",
                  },
                  Array [
                    Object {
                      "addButtonLabel": "Add Disk",
                      "buttonClick": [Function],
                      "component": "reconfigure-table",
                      "formType": "disk",
                      "headers": Array [
                        Object {
                          "header": "Name",
                          "key": "name",
                        },
                        Object {
                          "header": "Type",
                          "key": "type",
                        },
                        Object {
                          "header": "Size",
                          "key": "size",
                        },
                        Object {
                          "header": "Unit",
                          "key": "unit",
                        },
                        Object {
                          "header": "Mode",
                          "key": "mode",
                        },
                        Object {
                          "header": "Controller Type",
                          "key": "controller",
                        },
                        Object {
                          "header": "Dependent",
                          "key": "dependent",
                        },
                        Object {
                          "header": "Delete Backing",
                          "key": "backing",
                        },
                        Object {
                          "header": "Bootable",
                          "key": "bootable",
                        },
                        Object {
                          "header": "Resize",
                          "key": "resize",
                        },
                        Object {
                          "contentButton": true,
                          "header": "Action",
                          "key": "action",
                        },
                      ],
                      "label": "Disks",
                      "name": "disk",
                      "onCellClick": [Function],
                      "rows": Array [
                        Object {
                          "action": Object {
                            "alt": "Cancel Delete",
                            "callback": "cancelDeleteDisk",
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Cancel Delete",
                            "title": "Cancel Delete",
                          },
                          "backing": Object {
                            "disabled": true,
                            "is_toggle": true,
                            "labelA": "Yes",
                            "labelB": "No",
                            "labelText": "Delete Backing",
                            "ontoggle": [Function],
                            "toggled": false,
                          },
                          "bootable": "No",
                          "controller": "None",
                          "dependent": "No",
                          "id": "disk0",
                          "mode": "persistent",
                          "name": "disk test 2",
                          "resize": Object {
                            "alt": "Resize",
                            "callback": "resizeDisk",
                            "disabled": true,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Resize",
                            "title": "Resize",
                          },
                          "size": "16",
                          "type": "thin",
                          "unit": "GB",
                        },
                      ],
                    },
                    Object {
                      "addButtonLabel": "Add Network Adapter",
                      "buttonClick": [Function],
                      "component": "reconfigure-table",
                      "formType": "network",
                      "headers": Array [
                        Object {
                          "header": "Name",
                          "key": "name",
                        },
                        Object {
                          "header": "MAC address",
                          "key": "mac",
                        },
                        Object {
                          "header": "vLan",
                          "key": "vlan",
                        },
                        Object {
                          "contentButton": true,
                          "header": "Edit",
                          "key": "edit",
                        },
                        Object {
                          "contentButton": true,
                          "header": "Action",
                          "key": "action",
                        },
                      ],
                      "label": "Network Adapters",
                      "name": "network",
                      "onCellClick": [Function],
                      "rows": Array [],
                    },
                    Object {
                      "addButton": false,
                      "component": "reconfigure-table",
                      "formType": "drive",
                      "headers": Array [
                        Object {
                          "header": "Name",
                          "key": "name",
                        },
                        Object {
                          "header": "Host File",
                          "key": "hostFile",
                        },
                        Object {
                          "header": "Disconnect",
                          "key": "disconnect",
                        },
                        Object {
                          "header": "Actions",
                          "key": "action",
                        },
                      ],
                      "hideField": false,
                      "label": "CD/DVD Drives",
                      "name": "drive",
                      "onCellClick": [Function],
                      "rows": Array [
                        Object {
                          "action": Object {
                            "alt": "Connect",
                            "callback": "connectDrives",
                            "disabled": true,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Connect",
                            "title": "Connect",
                          },
                          "disconnect": Object {
                            "alt": "Disconnect",
                            "callback": "disconnectDrives",
                            "disabled": false,
                            "is_button": true,
                            "kind": "ghost",
                            "text": "Disconnect",
                            "title": "Disconnect",
                          },
                          "hostFile": "teset",
                          "id": "drive0",
                          "name": "CD/DVD drive 1",
                        },
                      ],
                    },
                  ],
                ],
              ],
              "name": "BasicInformation",
              "title": "Options",
            },
          ],
        }
      }
      validatorMapper={
        Object {
          "cpuCheck": [Function],
          "customRequired": [Function],
          "diskMemoryCheck": [Function],
          "memoryCheck": [Function],
        }
      }
    >
      <MiqFormRenderer
        FormTemplate={[Function]}
        buttonsLabels={Object {}}
        canReset={false}
        className="form-react"
        clearOnUnmount={false}
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "reconfigure-table": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "cb_memory": false,
            "cores_per_socket_count": "1",
            "mem_type": "GB",
            "memory": "2",
            "processor": false,
            "socket_count": "2",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "className": "reconfigure_form",
                "component": "sub-form",
                "fields": Array [
                  Array [
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Memory",
                      "name": "cb_memory",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "cb_memory",
                      },
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "initialValue": 16,
                          "isRequired": true,
                          "label": "Memory Size",
                          "name": "memory",
                          "validate": Array [
                            Object {
                              "type": "memoryCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": true,
                            "when": "cb_memory",
                          },
                          "helperText": "Between 1024MB and 0.009765625GB",
                          "id": "memoryType",
                          "initialValue": "GB",
                          "label": "Unit",
                          "name": "mem_type",
                          "options": Array [
                            Object {
                              "label": "GB",
                              "value": "GB",
                            },
                            Object {
                              "label": "MB",
                              "value": "MB",
                            },
                          ],
                        },
                      ],
                      "id": "memory-sub-form",
                      "name": "memory-sub-form",
                    },
                    Object {
                      "component": "switch",
                      "isDisabled": false,
                      "label": "Processor",
                      "name": "processor",
                      "offText": "No",
                      "onText": "Yes",
                    },
                    Object {
                      "className": "reconfigure-sub-form",
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "processor",
                      },
                      "fields": Array [
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "socket",
                          "label": "Sockets",
                          "name": "socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "socket",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "hideField": false,
                          "id": "cores",
                          "label": "Cores Per Socket",
                          "name": "cores_per_socket_count",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "1",
                              "value": 1,
                            },
                            Object {
                              "label": "2",
                              "value": 2,
                            },
                            Object {
                              "label": "3",
                              "value": 3,
                            },
                            Object {
                              "label": "4",
                              "value": 4,
                            },
                          ],
                          "validate": Array [
                            Object {
                              "field": "cores",
                              "type": "cpuCheck",
                            },
                          ],
                        },
                        Object {
                          "component": "text-field",
                          "id": "total_cpus",
                          "initialValue": 2,
                          "isReadOnly": true,
                          "label": "Total Processors",
                          "name": "total_cpus",
                          "type": "number",
                        },
                      ],
                      "id": "processor-sub-form",
                      "name": "processor-sub-form",
                    },
                    Array [
                      Object {
                        "addButtonLabel": "Add Disk",
                        "buttonClick": [Function],
                        "component": "reconfigure-table",
                        "formType": "disk",
                        "headers": Array [
                          Object {
                            "header": "Name",
                            "key": "name",
                          },
                          Object {
                            "header": "Type",
                            "key": "type",
                          },
                          Object {
                            "header": "Size",
                            "key": "size",
                          },
                          Object {
                            "header": "Unit",
                            "key": "unit",
                          },
                          Object {
                            "header": "Mode",
                            "key": "mode",
                          },
                          Object {
                            "header": "Controller Type",
                            "key": "controller",
                          },
                          Object {
                            "header": "Dependent",
                            "key": "dependent",
                          },
                          Object {
                            "header": "Delete Backing",
                            "key": "backing",
                          },
                          Object {
                            "header": "Bootable",
                            "key": "bootable",
                          },
                          Object {
                            "header": "Resize",
                            "key": "resize",
                          },
                          Object {
                            "contentButton": true,
                            "header": "Action",
                            "key": "action",
                          },
                        ],
                        "label": "Disks",
                        "name": "disk",
                        "onCellClick": [Function],
                        "rows": Array [
                          Object {
                            "action": Object {
                              "alt": "Cancel Delete",
                              "callback": "cancelDeleteDisk",
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Cancel Delete",
                              "title": "Cancel Delete",
                            },
                            "backing": Object {
                              "disabled": true,
                              "is_toggle": true,
                              "labelA": "Yes",
                              "labelB": "No",
                              "labelText": "Delete Backing",
                              "ontoggle": [Function],
                              "toggled": false,
                            },
                            "bootable": "No",
                            "controller": "None",
                            "dependent": "No",
                            "id": "disk0",
                            "mode": "persistent",
                            "name": "disk test 2",
                            "resize": Object {
                              "alt": "Resize",
                              "callback": "resizeDisk",
                              "disabled": true,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Resize",
                              "title": "Resize",
                            },
                            "size": "16",
                            "type": "thin",
                            "unit": "GB",
                          },
                        ],
                      },
                      Object {
                        "addButtonLabel": "Add Network Adapter",
                        "buttonClick": [Function],
                        "component": "reconfigure-table",
                        "formType": "network",
                        "headers": Array [
                          Object {
                            "header": "Name",
                            "key": "name",
                          },
                          Object {
                            "header": "MAC address",
                            "key": "mac",
                          },
                          Object {
                            "header": "vLan",
                            "key": "vlan",
                          },
                          Object {
                            "contentButton": true,
                            "header": "Edit",
                            "key": "edit",
                          },
                          Object {
                            "contentButton": true,
                            "header": "Action",
                            "key": "action",
                          },
                        ],
                        "label": "Network Adapters",
                        "name": "network",
                        "onCellClick": [Function],
                        "rows": Array [],
                      },
                      Object {
                        "addButton": false,
                        "component": "reconfigure-table",
                        "formType": "drive",
                        "headers": Array [
                          Object {
                            "header": "Name",
                            "key": "name",
                          },
                          Object {
                            "header": "Host File",
                            "key": "hostFile",
                          },
                          Object {
                            "header": "Disconnect",
                            "key": "disconnect",
                          },
                          Object {
                            "header": "Actions",
                            "key": "action",
                          },
                        ],
                        "hideField": false,
                        "label": "CD/DVD Drives",
                        "name": "drive",
                        "onCellClick": [Function],
                        "rows": Array [
                          Object {
                            "action": Object {
                              "alt": "Connect",
                              "callback": "connectDrives",
                              "disabled": true,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Connect",
                              "title": "Connect",
                            },
                            "disconnect": Object {
                              "alt": "Disconnect",
                              "callback": "disconnectDrives",
                              "disabled": false,
                              "is_button": true,
                              "kind": "ghost",
                              "text": "Disconnect",
                              "title": "Disconnect",
                            },
                            "hostFile": "teset",
                            "id": "drive0",
                            "name": "CD/DVD drive 1",
                          },
                        ],
                      },
                    ],
                  ],
                ],
                "name": "BasicInformation",
                "title": "Options",
              },
            ],
          }
        }
        showFormControls={true}
        validatorMapper={
          Object {
            "cpuCheck": [Function],
            "customRequired": [Function],
            "diskMemoryCheck": [Function],
            "memoryCheck": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "reconfigure-table": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "cb_memory": false,
              "cores_per_socket_count": "1",
              "mem_type": "GB",
              "memory": "2",
              "processor": false,
              "socket_count": "2",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "className": "reconfigure_form",
                  "component": "sub-form",
                  "fields": Array [
                    Array [
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Memory",
                        "name": "cb_memory",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "cb_memory",
                        },
                        "fields": Array [
                          Object {
                            "component": "text-field",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "initialValue": 16,
                            "isRequired": true,
                            "label": "Memory Size",
                            "name": "memory",
                            "validate": Array [
                              Object {
                                "type": "memoryCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "helperText": "Between 1024MB and 0.009765625GB",
                            "id": "memoryType",
                            "initialValue": "GB",
                            "label": "Unit",
                            "name": "mem_type",
                            "options": Array [
                              Object {
                                "label": "GB",
                                "value": "GB",
                              },
                              Object {
                                "label": "MB",
                                "value": "MB",
                              },
                            ],
                          },
                        ],
                        "id": "memory-sub-form",
                        "name": "memory-sub-form",
                      },
                      Object {
                        "component": "switch",
                        "isDisabled": false,
                        "label": "Processor",
                        "name": "processor",
                        "offText": "No",
                        "onText": "Yes",
                      },
                      Object {
                        "className": "reconfigure-sub-form",
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "processor",
                        },
                        "fields": Array [
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "socket",
                            "label": "Sockets",
                            "name": "socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "socket",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "hideField": false,
                            "id": "cores",
                            "label": "Cores Per Socket",
                            "name": "cores_per_socket_count",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "1",
                                "value": 1,
                              },
                              Object {
                                "label": "2",
                                "value": 2,
                              },
                              Object {
                                "label": "3",
                                "value": 3,
                              },
                              Object {
                                "label": "4",
                                "value": 4,
                              },
                            ],
                            "validate": Array [
                              Object {
                                "field": "cores",
                                "type": "cpuCheck",
                              },
                            ],
                          },
                          Object {
                            "component": "text-field",
                            "id": "total_cpus",
                            "initialValue": 2,
                            "isReadOnly": true,
                            "label": "Total Processors",
                            "name": "total_cpus",
                            "type": "number",
                          },
                        ],
                        "id": "processor-sub-form",
                        "name": "processor-sub-form",
                      },
                      Array [
                        Object {
                          "addButtonLabel": "Add Disk",
                          "buttonClick": [Function],
                          "component": "reconfigure-table",
                          "formType": "disk",
                          "headers": Array [
                            Object {
                              "header": "Name",
                              "key": "name",
                            },
                            Object {
                              "header": "Type",
                              "key": "type",
                            },
                            Object {
                              "header": "Size",
                              "key": "size",
                            },
                            Object {
                              "header": "Unit",
                              "key": "unit",
                            },
                            Object {
                              "header": "Mode",
                              "key": "mode",
                            },
                            Object {
                              "header": "Controller Type",
                              "key": "controller",
                            },
                            Object {
                              "header": "Dependent",
                              "key": "dependent",
                            },
                            Object {
                              "header": "Delete Backing",
                              "key": "backing",
                            },
                            Object {
                              "header": "Bootable",
                              "key": "bootable",
                            },
                            Object {
                              "header": "Resize",
                              "key": "resize",
                            },
                            Object {
                              "contentButton": true,
                              "header": "Action",
                              "key": "action",
                            },
                          ],
                          "label": "Disks",
                          "name": "disk",
                          "onCellClick": [Function],
                          "rows": Array [
                            Object {
                              "action": Object {
                                "alt": "Cancel Delete",
                                "callback": "cancelDeleteDisk",
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Cancel Delete",
                                "title": "Cancel Delete",
                              },
                              "backing": Object {
                                "disabled": true,
                                "is_toggle": true,
                                "labelA": "Yes",
                                "labelB": "No",
                                "labelText": "Delete Backing",
                                "ontoggle": [Function],
                                "toggled": false,
                              },
                              "bootable": "No",
                              "controller": "None",
                              "dependent": "No",
                              "id": "disk0",
                              "mode": "persistent",
                              "name": "disk test 2",
                              "resize": Object {
                                "alt": "Resize",
                                "callback": "resizeDisk",
                                "disabled": true,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Resize",
                                "title": "Resize",
                              },
                              "size": "16",
                              "type": "thin",
                              "unit": "GB",
                            },
                          ],
                        },
                        Object {
                          "addButtonLabel": "Add Network Adapter",
                          "buttonClick": [Function],
                          "component": "reconfigure-table",
                          "formType": "network",
                          "headers": Array [
                            Object {
                              "header": "Name",
                              "key": "name",
                            },
                            Object {
                              "header": "MAC address",
                              "key": "mac",
                            },
                            Object {
                              "header": "vLan",
                              "key": "vlan",
                            },
                            Object {
                              "contentButton": true,
                              "header": "Edit",
                              "key": "edit",
                            },
                            Object {
                              "contentButton": true,
                              "header": "Action",
                              "key": "action",
                            },
                          ],
                          "label": "Network Adapters",
                          "name": "network",
                          "onCellClick": [Function],
                          "rows": Array [],
                        },
                        Object {
                          "addButton": false,
                          "component": "reconfigure-table",
                          "formType": "drive",
                          "headers": Array [
                            Object {
                              "header": "Name",
                              "key": "name",
                            },
                            Object {
                              "header": "Host File",
                              "key": "hostFile",
                            },
                            Object {
                              "header": "Disconnect",
                              "key": "disconnect",
                            },
                            Object {
                              "header": "Actions",
                              "key": "action",
                            },
                          ],
                          "hideField": false,
                          "label": "CD/DVD Drives",
                          "name": "drive",
                          "onCellClick": [Function],
                          "rows": Array [
                            Object {
                              "action": Object {
                                "alt": "Connect",
                                "callback": "connectDrives",
                                "disabled": true,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Connect",
                                "title": "Connect",
                              },
                              "disconnect": Object {
                                "alt": "Disconnect",
                                "callback": "disconnectDrives",
                                "disabled": false,
                                "is_button": true,
                                "kind": "ghost",
                                "text": "Disconnect",
                                "title": "Disconnect",
                              },
                              "hostFile": "teset",
                              "id": "drive0",
                              "name": "CD/DVD drive 1",
                            },
                          ],
                        },
                      ],
                    ],
                  ],
                  "name": "BasicInformation",
                  "title": "Options",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validatorMapper={
            Object {
              "cpuCheck": [Function],
              "customRequired": [Function],
              "diskMemoryCheck": [Function],
              "memoryCheck": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "cb_memory": false,
                "cores_per_socket_count": "1",
                "mem_type": "GB",
                "memory": "2",
                "processor": false,
                "socket_count": "2",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <FormTemplate
              formFields={
                Array [
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 2,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                          Array [
                            Object {
                              "addButtonLabel": "Add Disk",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "disk",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Type",
                                  "key": "type",
                                },
                                Object {
                                  "header": "Size",
                                  "key": "size",
                                },
                                Object {
                                  "header": "Unit",
                                  "key": "unit",
                                },
                                Object {
                                  "header": "Mode",
                                  "key": "mode",
                                },
                                Object {
                                  "header": "Controller Type",
                                  "key": "controller",
                                },
                                Object {
                                  "header": "Dependent",
                                  "key": "dependent",
                                },
                                Object {
                                  "header": "Delete Backing",
                                  "key": "backing",
                                },
                                Object {
                                  "header": "Bootable",
                                  "key": "bootable",
                                },
                                Object {
                                  "header": "Resize",
                                  "key": "resize",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Disks",
                              "name": "disk",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Cancel Delete",
                                    "callback": "cancelDeleteDisk",
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Cancel Delete",
                                    "title": "Cancel Delete",
                                  },
                                  "backing": Object {
                                    "disabled": true,
                                    "is_toggle": true,
                                    "labelA": "Yes",
                                    "labelB": "No",
                                    "labelText": "Delete Backing",
                                    "ontoggle": [Function],
                                    "toggled": false,
                                  },
                                  "bootable": "No",
                                  "controller": "None",
                                  "dependent": "No",
                                  "id": "disk0",
                                  "mode": "persistent",
                                  "name": "disk test 2",
                                  "resize": Object {
                                    "alt": "Resize",
                                    "callback": "resizeDisk",
                                    "disabled": true,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Resize",
                                    "title": "Resize",
                                  },
                                  "size": "16",
                                  "type": "thin",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "addButtonLabel": "Add Network Adapter",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "network",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "MAC address",
                                  "key": "mac",
                                },
                                Object {
                                  "header": "vLan",
                                  "key": "vlan",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Edit",
                                  "key": "edit",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Network Adapters",
                              "name": "network",
                              "onCellClick": [Function],
                              "rows": Array [],
                            },
                            Object {
                              "addButton": false,
                              "component": "reconfigure-table",
                              "formType": "drive",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Host File",
                                  "key": "hostFile",
                                },
                                Object {
                                  "header": "Disconnect",
                                  "key": "disconnect",
                                },
                                Object {
                                  "header": "Actions",
                                  "key": "action",
                                },
                              ],
                              "hideField": false,
                              "label": "CD/DVD Drives",
                              "name": "drive",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Connect",
                                    "callback": "connectDrives",
                                    "disabled": true,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Connect",
                                    "title": "Connect",
                                  },
                                  "disconnect": Object {
                                    "alt": "Disconnect",
                                    "callback": "disconnectDrives",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Disconnect",
                                    "title": "Disconnect",
                                  },
                                  "hostFile": "teset",
                                  "id": "drive0",
                                  "name": "CD/DVD drive 1",
                                },
                              ],
                            },
                          ],
                        ],
                      ]
                    }
                    name="BasicInformation"
                    title="Options"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "className": "reconfigure_form",
                      "component": "sub-form",
                      "fields": Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 2,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                          Array [
                            Object {
                              "addButtonLabel": "Add Disk",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "disk",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Type",
                                  "key": "type",
                                },
                                Object {
                                  "header": "Size",
                                  "key": "size",
                                },
                                Object {
                                  "header": "Unit",
                                  "key": "unit",
                                },
                                Object {
                                  "header": "Mode",
                                  "key": "mode",
                                },
                                Object {
                                  "header": "Controller Type",
                                  "key": "controller",
                                },
                                Object {
                                  "header": "Dependent",
                                  "key": "dependent",
                                },
                                Object {
                                  "header": "Delete Backing",
                                  "key": "backing",
                                },
                                Object {
                                  "header": "Bootable",
                                  "key": "bootable",
                                },
                                Object {
                                  "header": "Resize",
                                  "key": "resize",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Disks",
                              "name": "disk",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Cancel Delete",
                                    "callback": "cancelDeleteDisk",
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Cancel Delete",
                                    "title": "Cancel Delete",
                                  },
                                  "backing": Object {
                                    "disabled": true,
                                    "is_toggle": true,
                                    "labelA": "Yes",
                                    "labelB": "No",
                                    "labelText": "Delete Backing",
                                    "ontoggle": [Function],
                                    "toggled": false,
                                  },
                                  "bootable": "No",
                                  "controller": "None",
                                  "dependent": "No",
                                  "id": "disk0",
                                  "mode": "persistent",
                                  "name": "disk test 2",
                                  "resize": Object {
                                    "alt": "Resize",
                                    "callback": "resizeDisk",
                                    "disabled": true,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Resize",
                                    "title": "Resize",
                                  },
                                  "size": "16",
                                  "type": "thin",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "addButtonLabel": "Add Network Adapter",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "network",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "MAC address",
                                  "key": "mac",
                                },
                                Object {
                                  "header": "vLan",
                                  "key": "vlan",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Edit",
                                  "key": "edit",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Network Adapters",
                              "name": "network",
                              "onCellClick": [Function],
                              "rows": Array [],
                            },
                            Object {
                              "addButton": false,
                              "component": "reconfigure-table",
                              "formType": "drive",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Host File",
                                  "key": "hostFile",
                                },
                                Object {
                                  "header": "Disconnect",
                                  "key": "disconnect",
                                },
                                Object {
                                  "header": "Actions",
                                  "key": "action",
                                },
                              ],
                              "hideField": false,
                              "label": "CD/DVD Drives",
                              "name": "drive",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Connect",
                                    "callback": "connectDrives",
                                    "disabled": true,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Connect",
                                    "title": "Connect",
                                  },
                                  "disconnect": Object {
                                    "alt": "Disconnect",
                                    "callback": "disconnectDrives",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Disconnect",
                                    "title": "Disconnect",
                                  },
                                  "hostFile": "teset",
                                  "id": "drive0",
                                  "name": "CD/DVD drive 1",
                                },
                              ],
                            },
                          ],
                        ],
                      ],
                      "name": "BasicInformation",
                      "title": "Options",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <ReconfigureTemplate
                canSubmit={true}
                formFields={
                  Array [
                    <SingleField
                      className="reconfigure_form"
                      component="sub-form"
                      fields={
                        Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 2,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                            Array [
                              Object {
                                "addButtonLabel": "Add Disk",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "disk",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Type",
                                    "key": "type",
                                  },
                                  Object {
                                    "header": "Size",
                                    "key": "size",
                                  },
                                  Object {
                                    "header": "Unit",
                                    "key": "unit",
                                  },
                                  Object {
                                    "header": "Mode",
                                    "key": "mode",
                                  },
                                  Object {
                                    "header": "Controller Type",
                                    "key": "controller",
                                  },
                                  Object {
                                    "header": "Dependent",
                                    "key": "dependent",
                                  },
                                  Object {
                                    "header": "Delete Backing",
                                    "key": "backing",
                                  },
                                  Object {
                                    "header": "Bootable",
                                    "key": "bootable",
                                  },
                                  Object {
                                    "header": "Resize",
                                    "key": "resize",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Disks",
                                "name": "disk",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Cancel Delete",
                                      "callback": "cancelDeleteDisk",
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Cancel Delete",
                                      "title": "Cancel Delete",
                                    },
                                    "backing": Object {
                                      "disabled": true,
                                      "is_toggle": true,
                                      "labelA": "Yes",
                                      "labelB": "No",
                                      "labelText": "Delete Backing",
                                      "ontoggle": [Function],
                                      "toggled": false,
                                    },
                                    "bootable": "No",
                                    "controller": "None",
                                    "dependent": "No",
                                    "id": "disk0",
                                    "mode": "persistent",
                                    "name": "disk test 2",
                                    "resize": Object {
                                      "alt": "Resize",
                                      "callback": "resizeDisk",
                                      "disabled": true,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Resize",
                                      "title": "Resize",
                                    },
                                    "size": "16",
                                    "type": "thin",
                                    "unit": "GB",
                                  },
                                ],
                              },
                              Object {
                                "addButtonLabel": "Add Network Adapter",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "network",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "MAC address",
                                    "key": "mac",
                                  },
                                  Object {
                                    "header": "vLan",
                                    "key": "vlan",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Edit",
                                    "key": "edit",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Network Adapters",
                                "name": "network",
                                "onCellClick": [Function],
                                "rows": Array [],
                              },
                              Object {
                                "addButton": false,
                                "component": "reconfigure-table",
                                "formType": "drive",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Host File",
                                    "key": "hostFile",
                                  },
                                  Object {
                                    "header": "Disconnect",
                                    "key": "disconnect",
                                  },
                                  Object {
                                    "header": "Actions",
                                    "key": "action",
                                  },
                                ],
                                "hideField": false,
                                "label": "CD/DVD Drives",
                                "name": "drive",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Connect",
                                      "callback": "connectDrives",
                                      "disabled": true,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Connect",
                                      "title": "Connect",
                                    },
                                    "disconnect": Object {
                                      "alt": "Disconnect",
                                      "callback": "disconnectDrives",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Disconnect",
                                      "title": "Disconnect",
                                    },
                                    "hostFile": "teset",
                                    "id": "drive0",
                                    "name": "CD/DVD drive 1",
                                  },
                                ],
                              },
                            ],
                          ],
                        ]
                      }
                      name="BasicInformation"
                      title="Options"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                hideButtons={false}
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "className": "reconfigure_form",
                        "component": "sub-form",
                        "fields": Array [
                          Array [
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Memory",
                              "name": "cb_memory",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "cb_memory",
                              },
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "initialValue": 16,
                                  "isRequired": true,
                                  "label": "Memory Size",
                                  "name": "memory",
                                  "validate": Array [
                                    Object {
                                      "type": "memoryCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "helperText": "Between 1024MB and 0.009765625GB",
                                  "id": "memoryType",
                                  "initialValue": "GB",
                                  "label": "Unit",
                                  "name": "mem_type",
                                  "options": Array [
                                    Object {
                                      "label": "GB",
                                      "value": "GB",
                                    },
                                    Object {
                                      "label": "MB",
                                      "value": "MB",
                                    },
                                  ],
                                },
                              ],
                              "id": "memory-sub-form",
                              "name": "memory-sub-form",
                            },
                            Object {
                              "component": "switch",
                              "isDisabled": false,
                              "label": "Processor",
                              "name": "processor",
                              "offText": "No",
                              "onText": "Yes",
                            },
                            Object {
                              "className": "reconfigure-sub-form",
                              "component": "sub-form",
                              "condition": Object {
                                "is": true,
                                "when": "processor",
                              },
                              "fields": Array [
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "socket",
                                  "label": "Sockets",
                                  "name": "socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "socket",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "hideField": false,
                                  "id": "cores",
                                  "label": "Cores Per Socket",
                                  "name": "cores_per_socket_count",
                                  "onChange": [Function],
                                  "options": Array [
                                    Object {
                                      "label": "1",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "2",
                                      "value": 2,
                                    },
                                    Object {
                                      "label": "3",
                                      "value": 3,
                                    },
                                    Object {
                                      "label": "4",
                                      "value": 4,
                                    },
                                  ],
                                  "validate": Array [
                                    Object {
                                      "field": "cores",
                                      "type": "cpuCheck",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "text-field",
                                  "id": "total_cpus",
                                  "initialValue": 2,
                                  "isReadOnly": true,
                                  "label": "Total Processors",
                                  "name": "total_cpus",
                                  "type": "number",
                                },
                              ],
                              "id": "processor-sub-form",
                              "name": "processor-sub-form",
                            },
                            Array [
                              Object {
                                "addButtonLabel": "Add Disk",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "disk",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Type",
                                    "key": "type",
                                  },
                                  Object {
                                    "header": "Size",
                                    "key": "size",
                                  },
                                  Object {
                                    "header": "Unit",
                                    "key": "unit",
                                  },
                                  Object {
                                    "header": "Mode",
                                    "key": "mode",
                                  },
                                  Object {
                                    "header": "Controller Type",
                                    "key": "controller",
                                  },
                                  Object {
                                    "header": "Dependent",
                                    "key": "dependent",
                                  },
                                  Object {
                                    "header": "Delete Backing",
                                    "key": "backing",
                                  },
                                  Object {
                                    "header": "Bootable",
                                    "key": "bootable",
                                  },
                                  Object {
                                    "header": "Resize",
                                    "key": "resize",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Disks",
                                "name": "disk",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Cancel Delete",
                                      "callback": "cancelDeleteDisk",
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Cancel Delete",
                                      "title": "Cancel Delete",
                                    },
                                    "backing": Object {
                                      "disabled": true,
                                      "is_toggle": true,
                                      "labelA": "Yes",
                                      "labelB": "No",
                                      "labelText": "Delete Backing",
                                      "ontoggle": [Function],
                                      "toggled": false,
                                    },
                                    "bootable": "No",
                                    "controller": "None",
                                    "dependent": "No",
                                    "id": "disk0",
                                    "mode": "persistent",
                                    "name": "disk test 2",
                                    "resize": Object {
                                      "alt": "Resize",
                                      "callback": "resizeDisk",
                                      "disabled": true,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Resize",
                                      "title": "Resize",
                                    },
                                    "size": "16",
                                    "type": "thin",
                                    "unit": "GB",
                                  },
                                ],
                              },
                              Object {
                                "addButtonLabel": "Add Network Adapter",
                                "buttonClick": [Function],
                                "component": "reconfigure-table",
                                "formType": "network",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "MAC address",
                                    "key": "mac",
                                  },
                                  Object {
                                    "header": "vLan",
                                    "key": "vlan",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Edit",
                                    "key": "edit",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ],
                                "label": "Network Adapters",
                                "name": "network",
                                "onCellClick": [Function],
                                "rows": Array [],
                              },
                              Object {
                                "addButton": false,
                                "component": "reconfigure-table",
                                "formType": "drive",
                                "headers": Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Host File",
                                    "key": "hostFile",
                                  },
                                  Object {
                                    "header": "Disconnect",
                                    "key": "disconnect",
                                  },
                                  Object {
                                    "header": "Actions",
                                    "key": "action",
                                  },
                                ],
                                "hideField": false,
                                "label": "CD/DVD Drives",
                                "name": "drive",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Connect",
                                      "callback": "connectDrives",
                                      "disabled": true,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Connect",
                                      "title": "Connect",
                                    },
                                    "disconnect": Object {
                                      "alt": "Disconnect",
                                      "callback": "disconnectDrives",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Disconnect",
                                      "title": "Disconnect",
                                    },
                                    "hostFile": "teset",
                                    "id": "drive0",
                                    "name": "CD/DVD drive 1",
                                  },
                                ],
                              },
                            ],
                          ],
                        ],
                        "name": "BasicInformation",
                        "title": "Options",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
              >
                <form
                  className="form-react reconfigure-form"
                  onSubmit={[Function]}
                >
                  <SingleField
                    className="reconfigure_form"
                    component="sub-form"
                    fields={
                      Array [
                        Array [
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Memory",
                            "name": "cb_memory",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "cb_memory",
                            },
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "initialValue": 16,
                                "isRequired": true,
                                "label": "Memory Size",
                                "name": "memory",
                                "validate": Array [
                                  Object {
                                    "type": "memoryCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "helperText": "Between 1024MB and 0.009765625GB",
                                "id": "memoryType",
                                "initialValue": "GB",
                                "label": "Unit",
                                "name": "mem_type",
                                "options": Array [
                                  Object {
                                    "label": "GB",
                                    "value": "GB",
                                  },
                                  Object {
                                    "label": "MB",
                                    "value": "MB",
                                  },
                                ],
                              },
                            ],
                            "id": "memory-sub-form",
                            "name": "memory-sub-form",
                          },
                          Object {
                            "component": "switch",
                            "isDisabled": false,
                            "label": "Processor",
                            "name": "processor",
                            "offText": "No",
                            "onText": "Yes",
                          },
                          Object {
                            "className": "reconfigure-sub-form",
                            "component": "sub-form",
                            "condition": Object {
                              "is": true,
                              "when": "processor",
                            },
                            "fields": Array [
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "socket",
                                "label": "Sockets",
                                "name": "socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "socket",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "hideField": false,
                                "id": "cores",
                                "label": "Cores Per Socket",
                                "name": "cores_per_socket_count",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "1",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "2",
                                    "value": 2,
                                  },
                                  Object {
                                    "label": "3",
                                    "value": 3,
                                  },
                                  Object {
                                    "label": "4",
                                    "value": 4,
                                  },
                                ],
                                "validate": Array [
                                  Object {
                                    "field": "cores",
                                    "type": "cpuCheck",
                                  },
                                ],
                              },
                              Object {
                                "component": "text-field",
                                "id": "total_cpus",
                                "initialValue": 2,
                                "isReadOnly": true,
                                "label": "Total Processors",
                                "name": "total_cpus",
                                "type": "number",
                              },
                            ],
                            "id": "processor-sub-form",
                            "name": "processor-sub-form",
                          },
                          Array [
                            Object {
                              "addButtonLabel": "Add Disk",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "disk",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Type",
                                  "key": "type",
                                },
                                Object {
                                  "header": "Size",
                                  "key": "size",
                                },
                                Object {
                                  "header": "Unit",
                                  "key": "unit",
                                },
                                Object {
                                  "header": "Mode",
                                  "key": "mode",
                                },
                                Object {
                                  "header": "Controller Type",
                                  "key": "controller",
                                },
                                Object {
                                  "header": "Dependent",
                                  "key": "dependent",
                                },
                                Object {
                                  "header": "Delete Backing",
                                  "key": "backing",
                                },
                                Object {
                                  "header": "Bootable",
                                  "key": "bootable",
                                },
                                Object {
                                  "header": "Resize",
                                  "key": "resize",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Disks",
                              "name": "disk",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Cancel Delete",
                                    "callback": "cancelDeleteDisk",
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Cancel Delete",
                                    "title": "Cancel Delete",
                                  },
                                  "backing": Object {
                                    "disabled": true,
                                    "is_toggle": true,
                                    "labelA": "Yes",
                                    "labelB": "No",
                                    "labelText": "Delete Backing",
                                    "ontoggle": [Function],
                                    "toggled": false,
                                  },
                                  "bootable": "No",
                                  "controller": "None",
                                  "dependent": "No",
                                  "id": "disk0",
                                  "mode": "persistent",
                                  "name": "disk test 2",
                                  "resize": Object {
                                    "alt": "Resize",
                                    "callback": "resizeDisk",
                                    "disabled": true,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Resize",
                                    "title": "Resize",
                                  },
                                  "size": "16",
                                  "type": "thin",
                                  "unit": "GB",
                                },
                              ],
                            },
                            Object {
                              "addButtonLabel": "Add Network Adapter",
                              "buttonClick": [Function],
                              "component": "reconfigure-table",
                              "formType": "network",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "MAC address",
                                  "key": "mac",
                                },
                                Object {
                                  "header": "vLan",
                                  "key": "vlan",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Edit",
                                  "key": "edit",
                                },
                                Object {
                                  "contentButton": true,
                                  "header": "Action",
                                  "key": "action",
                                },
                              ],
                              "label": "Network Adapters",
                              "name": "network",
                              "onCellClick": [Function],
                              "rows": Array [],
                            },
                            Object {
                              "addButton": false,
                              "component": "reconfigure-table",
                              "formType": "drive",
                              "headers": Array [
                                Object {
                                  "header": "Name",
                                  "key": "name",
                                },
                                Object {
                                  "header": "Host File",
                                  "key": "hostFile",
                                },
                                Object {
                                  "header": "Disconnect",
                                  "key": "disconnect",
                                },
                                Object {
                                  "header": "Actions",
                                  "key": "action",
                                },
                              ],
                              "hideField": false,
                              "label": "CD/DVD Drives",
                              "name": "drive",
                              "onCellClick": [Function],
                              "rows": Array [
                                Object {
                                  "action": Object {
                                    "alt": "Connect",
                                    "callback": "connectDrives",
                                    "disabled": true,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Connect",
                                    "title": "Connect",
                                  },
                                  "disconnect": Object {
                                    "alt": "Disconnect",
                                    "callback": "disconnectDrives",
                                    "disabled": false,
                                    "is_button": true,
                                    "kind": "ghost",
                                    "text": "Disconnect",
                                    "title": "Disconnect",
                                  },
                                  "hostFile": "teset",
                                  "id": "drive0",
                                  "name": "CD/DVD drive 1",
                                },
                              ],
                            },
                          ],
                        ],
                      ]
                    }
                    key="BasicInformation"
                    name="BasicInformation"
                    title="Options"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "className": "reconfigure_form",
                          "component": "sub-form",
                          "fields": Array [
                            Array [
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Memory",
                                "name": "cb_memory",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "cb_memory",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ],
                                "id": "memory-sub-form",
                                "name": "memory-sub-form",
                              },
                              Object {
                                "component": "switch",
                                "isDisabled": false,
                                "label": "Processor",
                                "name": "processor",
                                "offText": "No",
                                "onText": "Yes",
                              },
                              Object {
                                "className": "reconfigure-sub-form",
                                "component": "sub-form",
                                "condition": Object {
                                  "is": true,
                                  "when": "processor",
                                },
                                "fields": Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 2,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ],
                                "id": "processor-sub-form",
                                "name": "processor-sub-form",
                              },
                              Array [
                                Object {
                                  "addButtonLabel": "Add Disk",
                                  "buttonClick": [Function],
                                  "component": "reconfigure-table",
                                  "formType": "disk",
                                  "headers": Array [
                                    Object {
                                      "header": "Name",
                                      "key": "name",
                                    },
                                    Object {
                                      "header": "Type",
                                      "key": "type",
                                    },
                                    Object {
                                      "header": "Size",
                                      "key": "size",
                                    },
                                    Object {
                                      "header": "Unit",
                                      "key": "unit",
                                    },
                                    Object {
                                      "header": "Mode",
                                      "key": "mode",
                                    },
                                    Object {
                                      "header": "Controller Type",
                                      "key": "controller",
                                    },
                                    Object {
                                      "header": "Dependent",
                                      "key": "dependent",
                                    },
                                    Object {
                                      "header": "Delete Backing",
                                      "key": "backing",
                                    },
                                    Object {
                                      "header": "Bootable",
                                      "key": "bootable",
                                    },
                                    Object {
                                      "header": "Resize",
                                      "key": "resize",
                                    },
                                    Object {
                                      "contentButton": true,
                                      "header": "Action",
                                      "key": "action",
                                    },
                                  ],
                                  "label": "Disks",
                                  "name": "disk",
                                  "onCellClick": [Function],
                                  "rows": Array [
                                    Object {
                                      "action": Object {
                                        "alt": "Cancel Delete",
                                        "callback": "cancelDeleteDisk",
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Cancel Delete",
                                        "title": "Cancel Delete",
                                      },
                                      "backing": Object {
                                        "disabled": true,
                                        "is_toggle": true,
                                        "labelA": "Yes",
                                        "labelB": "No",
                                        "labelText": "Delete Backing",
                                        "ontoggle": [Function],
                                        "toggled": false,
                                      },
                                      "bootable": "No",
                                      "controller": "None",
                                      "dependent": "No",
                                      "id": "disk0",
                                      "mode": "persistent",
                                      "name": "disk test 2",
                                      "resize": Object {
                                        "alt": "Resize",
                                        "callback": "resizeDisk",
                                        "disabled": true,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Resize",
                                        "title": "Resize",
                                      },
                                      "size": "16",
                                      "type": "thin",
                                      "unit": "GB",
                                    },
                                  ],
                                },
                                Object {
                                  "addButtonLabel": "Add Network Adapter",
                                  "buttonClick": [Function],
                                  "component": "reconfigure-table",
                                  "formType": "network",
                                  "headers": Array [
                                    Object {
                                      "header": "Name",
                                      "key": "name",
                                    },
                                    Object {
                                      "header": "MAC address",
                                      "key": "mac",
                                    },
                                    Object {
                                      "header": "vLan",
                                      "key": "vlan",
                                    },
                                    Object {
                                      "contentButton": true,
                                      "header": "Edit",
                                      "key": "edit",
                                    },
                                    Object {
                                      "contentButton": true,
                                      "header": "Action",
                                      "key": "action",
                                    },
                                  ],
                                  "label": "Network Adapters",
                                  "name": "network",
                                  "onCellClick": [Function],
                                  "rows": Array [],
                                },
                                Object {
                                  "addButton": false,
                                  "component": "reconfigure-table",
                                  "formType": "drive",
                                  "headers": Array [
                                    Object {
                                      "header": "Name",
                                      "key": "name",
                                    },
                                    Object {
                                      "header": "Host File",
                                      "key": "hostFile",
                                    },
                                    Object {
                                      "header": "Disconnect",
                                      "key": "disconnect",
                                    },
                                    Object {
                                      "header": "Actions",
                                      "key": "action",
                                    },
                                  ],
                                  "hideField": false,
                                  "label": "CD/DVD Drives",
                                  "name": "drive",
                                  "onCellClick": [Function],
                                  "rows": Array [
                                    Object {
                                      "action": Object {
                                        "alt": "Connect",
                                        "callback": "connectDrives",
                                        "disabled": true,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Connect",
                                        "title": "Connect",
                                      },
                                      "disconnect": Object {
                                        "alt": "Disconnect",
                                        "callback": "disconnectDrives",
                                        "disabled": false,
                                        "is_button": true,
                                        "kind": "ghost",
                                        "text": "Disconnect",
                                        "title": "Disconnect",
                                      },
                                      "hostFile": "teset",
                                      "id": "drive0",
                                      "name": "CD/DVD drive 1",
                                    },
                                  ],
                                },
                              ],
                            ],
                          ],
                          "name": "BasicInformation",
                          "title": "Options",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SubForm
                          DescriptionElement="p"
                          TitleElement="h3"
                          className="reconfigure_form"
                          component="sub-form"
                          fields={
                            Array [
                              Array [
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Memory",
                                  "name": "cb_memory",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "initialValue": 16,
                                      "isRequired": true,
                                      "label": "Memory Size",
                                      "name": "memory",
                                      "validate": Array [
                                        Object {
                                          "type": "memoryCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "condition": Object {
                                        "is": true,
                                        "when": "cb_memory",
                                      },
                                      "helperText": "Between 1024MB and 0.009765625GB",
                                      "id": "memoryType",
                                      "initialValue": "GB",
                                      "label": "Unit",
                                      "name": "mem_type",
                                      "options": Array [
                                        Object {
                                          "label": "GB",
                                          "value": "GB",
                                        },
                                        Object {
                                          "label": "MB",
                                          "value": "MB",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "memory-sub-form",
                                  "name": "memory-sub-form",
                                },
                                Object {
                                  "component": "switch",
                                  "isDisabled": false,
                                  "label": "Processor",
                                  "name": "processor",
                                  "offText": "No",
                                  "onText": "Yes",
                                },
                                Object {
                                  "className": "reconfigure-sub-form",
                                  "component": "sub-form",
                                  "condition": Object {
                                    "is": true,
                                    "when": "processor",
                                  },
                                  "fields": Array [
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "socket",
                                      "label": "Sockets",
                                      "name": "socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "socket",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "hideField": false,
                                      "id": "cores",
                                      "label": "Cores Per Socket",
                                      "name": "cores_per_socket_count",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "1",
                                          "value": 1,
                                        },
                                        Object {
                                          "label": "2",
                                          "value": 2,
                                        },
                                        Object {
                                          "label": "3",
                                          "value": 3,
                                        },
                                        Object {
                                          "label": "4",
                                          "value": 4,
                                        },
                                      ],
                                      "validate": Array [
                                        Object {
                                          "field": "cores",
                                          "type": "cpuCheck",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "text-field",
                                      "id": "total_cpus",
                                      "initialValue": 2,
                                      "isReadOnly": true,
                                      "label": "Total Processors",
                                      "name": "total_cpus",
                                      "type": "number",
                                    },
                                  ],
                                  "id": "processor-sub-form",
                                  "name": "processor-sub-form",
                                },
                                Array [
                                  Object {
                                    "addButtonLabel": "Add Disk",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "disk",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Type",
                                        "key": "type",
                                      },
                                      Object {
                                        "header": "Size",
                                        "key": "size",
                                      },
                                      Object {
                                        "header": "Unit",
                                        "key": "unit",
                                      },
                                      Object {
                                        "header": "Mode",
                                        "key": "mode",
                                      },
                                      Object {
                                        "header": "Controller Type",
                                        "key": "controller",
                                      },
                                      Object {
                                        "header": "Dependent",
                                        "key": "dependent",
                                      },
                                      Object {
                                        "header": "Delete Backing",
                                        "key": "backing",
                                      },
                                      Object {
                                        "header": "Bootable",
                                        "key": "bootable",
                                      },
                                      Object {
                                        "header": "Resize",
                                        "key": "resize",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Disks",
                                    "name": "disk",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Cancel Delete",
                                          "callback": "cancelDeleteDisk",
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Cancel Delete",
                                          "title": "Cancel Delete",
                                        },
                                        "backing": Object {
                                          "disabled": true,
                                          "is_toggle": true,
                                          "labelA": "Yes",
                                          "labelB": "No",
                                          "labelText": "Delete Backing",
                                          "ontoggle": [Function],
                                          "toggled": false,
                                        },
                                        "bootable": "No",
                                        "controller": "None",
                                        "dependent": "No",
                                        "id": "disk0",
                                        "mode": "persistent",
                                        "name": "disk test 2",
                                        "resize": Object {
                                          "alt": "Resize",
                                          "callback": "resizeDisk",
                                          "disabled": true,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Resize",
                                          "title": "Resize",
                                        },
                                        "size": "16",
                                        "type": "thin",
                                        "unit": "GB",
                                      },
                                    ],
                                  },
                                  Object {
                                    "addButtonLabel": "Add Network Adapter",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "network",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "MAC address",
                                        "key": "mac",
                                      },
                                      Object {
                                        "header": "vLan",
                                        "key": "vlan",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Edit",
                                        "key": "edit",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Network Adapters",
                                    "name": "network",
                                    "onCellClick": [Function],
                                    "rows": Array [],
                                  },
                                  Object {
                                    "addButton": false,
                                    "component": "reconfigure-table",
                                    "formType": "drive",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Host File",
                                        "key": "hostFile",
                                      },
                                      Object {
                                        "header": "Disconnect",
                                        "key": "disconnect",
                                      },
                                      Object {
                                        "header": "Actions",
                                        "key": "action",
                                      },
                                    ],
                                    "hideField": false,
                                    "label": "CD/DVD Drives",
                                    "name": "drive",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Connect",
                                          "callback": "connectDrives",
                                          "disabled": true,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Connect",
                                          "title": "Connect",
                                        },
                                        "disconnect": Object {
                                          "alt": "Disconnect",
                                          "callback": "disconnectDrives",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Disconnect",
                                          "title": "Disconnect",
                                        },
                                        "hostFile": "teset",
                                        "id": "drive0",
                                        "name": "CD/DVD drive 1",
                                      },
                                    ],
                                  },
                                ],
                              ],
                            ]
                          }
                          name="BasicInformation"
                          title="Options"
                        >
                          <div
                            className="reconfigure_form"
                            name="BasicInformation"
                          >
                            <div>
                              <h3>
                                Options
                              </h3>
                            </div>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="cb_memory"
                              label="Memory"
                              name="cb_memory"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Memory",
                                    "name": "cb_memory",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Memory"
                                    name="cb_memory"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="cb_memory"
                                        key="cb_memory"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Memory"
                                        name="cb_memory"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="cb_memory"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Memory"
                                          name="cb_memory"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="cb_memory"
                                              name="cb_memory"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="cb_memory"
                                            >
                                              Memory
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "cb_memory",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "text-field",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "initialValue": 16,
                                    "isRequired": true,
                                    "label": "Memory Size",
                                    "name": "memory",
                                    "validate": Array [
                                      Object {
                                        "type": "memoryCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    },
                                    "helperText": "Between 1024MB and 0.009765625GB",
                                    "id": "memoryType",
                                    "initialValue": "GB",
                                    "label": "Unit",
                                    "name": "mem_type",
                                    "options": Array [
                                      Object {
                                        "label": "GB",
                                        "value": "GB",
                                      },
                                      Object {
                                        "label": "MB",
                                        "value": "MB",
                                      },
                                    ],
                                  },
                                ]
                              }
                              id="memory-sub-form"
                              key="memory-sub-form"
                              name="memory-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "cb_memory",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "initialValue": 16,
                                        "isRequired": true,
                                        "label": "Memory Size",
                                        "name": "memory",
                                        "validate": Array [
                                          Object {
                                            "type": "memoryCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        },
                                        "helperText": "Between 1024MB and 0.009765625GB",
                                        "id": "memoryType",
                                        "initialValue": "GB",
                                        "label": "Unit",
                                        "name": "mem_type",
                                        "options": Array [
                                          Object {
                                            "label": "GB",
                                            "value": "GB",
                                          },
                                          Object {
                                            "label": "MB",
                                            "value": "MB",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "memory-sub-form",
                                    "name": "memory-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "cb_memory",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "initialValue": 16,
                                          "isRequired": true,
                                          "label": "Memory Size",
                                          "name": "memory",
                                          "validate": Array [
                                            Object {
                                              "type": "memoryCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "condition": Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          },
                                          "helperText": "Between 1024MB and 0.009765625GB",
                                          "id": "memoryType",
                                          "initialValue": "GB",
                                          "label": "Unit",
                                          "name": "mem_type",
                                          "options": Array [
                                            Object {
                                              "label": "GB",
                                              "value": "GB",
                                            },
                                            Object {
                                              "label": "MB",
                                              "value": "MB",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "memory-sub-form",
                                      "name": "memory-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "cb_memory",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="cb_memory"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "cb_memory",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "initialValue": 16,
                                              "isRequired": true,
                                              "label": "Memory Size",
                                              "name": "memory",
                                              "validate": Array [
                                                Object {
                                                  "type": "memoryCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "condition": Object {
                                                "is": true,
                                                "when": "cb_memory",
                                              },
                                              "helperText": "Between 1024MB and 0.009765625GB",
                                              "id": "memoryType",
                                              "initialValue": "GB",
                                              "label": "Unit",
                                              "name": "mem_type",
                                              "options": Array [
                                                Object {
                                                  "label": "GB",
                                                  "value": "GB",
                                                },
                                                Object {
                                                  "label": "MB",
                                                  "value": "MB",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "memory-sub-form",
                                          "name": "memory-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "cb_memory": false,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "cb_memory",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "text-field",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "initialValue": 16,
                                                "isRequired": true,
                                                "label": "Memory Size",
                                                "name": "memory",
                                                "validate": Array [
                                                  Object {
                                                    "type": "memoryCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "condition": Object {
                                                  "is": true,
                                                  "when": "cb_memory",
                                                },
                                                "helperText": "Between 1024MB and 0.009765625GB",
                                                "id": "memoryType",
                                                "initialValue": "GB",
                                                "label": "Unit",
                                                "name": "mem_type",
                                                "options": Array [
                                                  Object {
                                                    "label": "GB",
                                                    "value": "GB",
                                                  },
                                                  Object {
                                                    "label": "MB",
                                                    "value": "MB",
                                                  },
                                                ],
                                              },
                                            ],
                                            "id": "memory-sub-form",
                                            "name": "memory-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "cb_memory": false,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "cb_memory",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "initialValue": 16,
                                                  "isRequired": true,
                                                  "label": "Memory Size",
                                                  "name": "memory",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "memoryCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "condition": Object {
                                                    "is": true,
                                                    "when": "cb_memory",
                                                  },
                                                  "helperText": "Between 1024MB and 0.009765625GB",
                                                  "id": "memoryType",
                                                  "initialValue": "GB",
                                                  "label": "Unit",
                                                  "name": "mem_type",
                                                  "options": Array [
                                                    Object {
                                                      "label": "GB",
                                                      "value": "GB",
                                                    },
                                                    Object {
                                                      "label": "MB",
                                                      "value": "MB",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "memory-sub-form",
                                              "name": "memory-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "cb_memory": false,
                                            }
                                          }
                                        />
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              component="switch"
                              isDisabled={false}
                              key="processor"
                              label="Processor"
                              name="processor"
                              offText="No"
                              onText="Yes"
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "component": "switch",
                                    "isDisabled": false,
                                    "label": "Processor",
                                    "name": "processor",
                                    "offText": "No",
                                    "onText": "Yes",
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <Switch
                                    component="switch"
                                    isDisabled={false}
                                    label="Processor"
                                    name="processor"
                                    offText="No"
                                    onText="Yes"
                                  >
                                    <div>
                                      <FeatureToggle(Toggle)
                                        disabled={false}
                                        id="processor"
                                        key="processor"
                                        labelA="No"
                                        labelB="Yes"
                                        labelText="Processor"
                                        name="processor"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <Toggle
                                          aria-label="Toggle"
                                          defaultToggled={false}
                                          disabled={false}
                                          id="processor"
                                          labelA="No"
                                          labelB="Yes"
                                          labelText="Processor"
                                          name="processor"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onToggle={[Function]}
                                          toggled={false}
                                          type="checkbox"
                                        >
                                          <div
                                            className="bx--form-item"
                                          >
                                            <input
                                              aria-label={null}
                                              checked={false}
                                              className="bx--toggle-input"
                                              disabled={false}
                                              id="processor"
                                              name="processor"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              type="checkbox"
                                            />
                                            <label
                                              aria-label={null}
                                              className="bx--toggle-input__label"
                                              htmlFor="processor"
                                            >
                                              Processor
                                              <span
                                                className="bx--toggle__switch"
                                              >
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--off"
                                                >
                                                  No
                                                </span>
                                                <span
                                                  aria-hidden="true"
                                                  className="bx--toggle__text--on"
                                                >
                                                  Yes
                                                </span>
                                              </span>
                                            </label>
                                          </div>
                                        </Toggle>
                                      </FeatureToggle(Toggle)>
                                      <HelperTextBlock />
                                    </div>
                                  </Switch>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              className="reconfigure-sub-form"
                              component="sub-form"
                              condition={
                                Object {
                                  "is": true,
                                  "when": "processor",
                                }
                              }
                              fields={
                                Array [
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "socket",
                                    "label": "Sockets",
                                    "name": "socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "socket",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "hideField": false,
                                    "id": "cores",
                                    "label": "Cores Per Socket",
                                    "name": "cores_per_socket_count",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "1",
                                        "value": 1,
                                      },
                                      Object {
                                        "label": "2",
                                        "value": 2,
                                      },
                                      Object {
                                        "label": "3",
                                        "value": 3,
                                      },
                                      Object {
                                        "label": "4",
                                        "value": 4,
                                      },
                                    ],
                                    "validate": Array [
                                      Object {
                                        "field": "cores",
                                        "type": "cpuCheck",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "total_cpus",
                                    "initialValue": 2,
                                    "isReadOnly": true,
                                    "label": "Total Processors",
                                    "name": "total_cpus",
                                    "type": "number",
                                  },
                                ]
                              }
                              id="processor-sub-form"
                              key="processor-sub-form"
                              name="processor-sub-form"
                            >
                              <FormConditionWrapper
                                condition={
                                  Object {
                                    "is": true,
                                    "when": "processor",
                                  }
                                }
                                field={
                                  Object {
                                    "className": "reconfigure-sub-form",
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "socket",
                                        "label": "Sockets",
                                        "name": "socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "socket",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "hideField": false,
                                        "id": "cores",
                                        "label": "Cores Per Socket",
                                        "name": "cores_per_socket_count",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "1",
                                            "value": 1,
                                          },
                                          Object {
                                            "label": "2",
                                            "value": 2,
                                          },
                                          Object {
                                            "label": "3",
                                            "value": 3,
                                          },
                                          Object {
                                            "label": "4",
                                            "value": 4,
                                          },
                                        ],
                                        "validate": Array [
                                          Object {
                                            "field": "cores",
                                            "type": "cpuCheck",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "text-field",
                                        "id": "total_cpus",
                                        "initialValue": 2,
                                        "isReadOnly": true,
                                        "label": "Total Processors",
                                        "name": "total_cpus",
                                        "type": "number",
                                      },
                                    ],
                                    "id": "processor-sub-form",
                                    "name": "processor-sub-form",
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "processor",
                                    }
                                  }
                                  field={
                                    Object {
                                      "className": "reconfigure-sub-form",
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "socket",
                                          "label": "Sockets",
                                          "name": "socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "socket",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "hideField": false,
                                          "id": "cores",
                                          "label": "Cores Per Socket",
                                          "name": "cores_per_socket_count",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "1",
                                              "value": 1,
                                            },
                                            Object {
                                              "label": "2",
                                              "value": 2,
                                            },
                                            Object {
                                              "label": "3",
                                              "value": 3,
                                            },
                                            Object {
                                              "label": "4",
                                              "value": 4,
                                            },
                                          ],
                                          "validate": Array [
                                            Object {
                                              "field": "cores",
                                              "type": "cpuCheck",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "text-field",
                                          "id": "total_cpus",
                                          "initialValue": 2,
                                          "isReadOnly": true,
                                          "label": "Total Processors",
                                          "name": "total_cpus",
                                          "type": "number",
                                        },
                                      ],
                                      "id": "processor-sub-form",
                                      "name": "processor-sub-form",
                                    }
                                  }
                                  triggers={
                                    Array [
                                      "processor",
                                    ]
                                  }
                                >
                                  <ForwardRef(Field)
                                    name="processor"
                                    subscription={
                                      Object {
                                        "value": true,
                                      }
                                    }
                                  >
                                    <ConditionTriggerDetector
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "processor",
                                        }
                                      }
                                      field={
                                        Object {
                                          "className": "reconfigure-sub-form",
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "socket",
                                              "label": "Sockets",
                                              "name": "socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "socket",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "hideField": false,
                                              "id": "cores",
                                              "label": "Cores Per Socket",
                                              "name": "cores_per_socket_count",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "label": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "label": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "label": "4",
                                                  "value": 4,
                                                },
                                              ],
                                              "validate": Array [
                                                Object {
                                                  "field": "cores",
                                                  "type": "cpuCheck",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "text-field",
                                              "id": "total_cpus",
                                              "initialValue": 2,
                                              "isReadOnly": true,
                                              "label": "Total Processors",
                                              "name": "total_cpus",
                                              "type": "number",
                                            },
                                          ],
                                          "id": "processor-sub-form",
                                          "name": "processor-sub-form",
                                        }
                                      }
                                      triggers={Array []}
                                      values={
                                        Object {
                                          "processor": false,
                                        }
                                      }
                                    >
                                      <ConditionTriggerWrapper
                                        condition={
                                          Object {
                                            "is": true,
                                            "when": "processor",
                                          }
                                        }
                                        field={
                                          Object {
                                            "className": "reconfigure-sub-form",
                                            "component": "sub-form",
                                            "fields": Array [
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "socket",
                                                "label": "Sockets",
                                                "name": "socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "socket",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "hideField": false,
                                                "id": "cores",
                                                "label": "Cores Per Socket",
                                                "name": "cores_per_socket_count",
                                                "onChange": [Function],
                                                "options": Array [
                                                  Object {
                                                    "label": "1",
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "label": "2",
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "label": "3",
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "label": "4",
                                                    "value": 4,
                                                  },
                                                ],
                                                "validate": Array [
                                                  Object {
                                                    "field": "cores",
                                                    "type": "cpuCheck",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "text-field",
                                                "id": "total_cpus",
                                                "initialValue": 2,
                                                "isReadOnly": true,
                                                "label": "Total Processors",
                                                "name": "total_cpus",
                                                "type": "number",
                                              },
                                            ],
                                            "id": "processor-sub-form",
                                            "name": "processor-sub-form",
                                          }
                                        }
                                        values={
                                          Object {
                                            "processor": false,
                                          }
                                        }
                                      >
                                        <Component
                                          condition={
                                            Object {
                                              "is": true,
                                              "when": "processor",
                                            }
                                          }
                                          field={
                                            Object {
                                              "className": "reconfigure-sub-form",
                                              "component": "sub-form",
                                              "fields": Array [
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "socket",
                                                  "label": "Sockets",
                                                  "name": "socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "socket",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "select",
                                                  "hideField": false,
                                                  "id": "cores",
                                                  "label": "Cores Per Socket",
                                                  "name": "cores_per_socket_count",
                                                  "onChange": [Function],
                                                  "options": Array [
                                                    Object {
                                                      "label": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "label": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "label": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "label": "4",
                                                      "value": 4,
                                                    },
                                                  ],
                                                  "validate": Array [
                                                    Object {
                                                      "field": "cores",
                                                      "type": "cpuCheck",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "text-field",
                                                  "id": "total_cpus",
                                                  "initialValue": 2,
                                                  "isReadOnly": true,
                                                  "label": "Total Processors",
                                                  "name": "total_cpus",
                                                  "type": "number",
                                                },
                                              ],
                                              "id": "processor-sub-form",
                                              "name": "processor-sub-form",
                                            }
                                          }
                                          values={
                                            Object {
                                              "processor": false,
                                            }
                                          }
                                        />
                                      </ConditionTriggerWrapper>
                                    </ConditionTriggerDetector>
                                  </ForwardRef(Field)>
                                </ConditionTriggerDetector>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              addButtonLabel="Add Disk"
                              buttonClick={[Function]}
                              component="reconfigure-table"
                              formType="disk"
                              headers={
                                Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Type",
                                    "key": "type",
                                  },
                                  Object {
                                    "header": "Size",
                                    "key": "size",
                                  },
                                  Object {
                                    "header": "Unit",
                                    "key": "unit",
                                  },
                                  Object {
                                    "header": "Mode",
                                    "key": "mode",
                                  },
                                  Object {
                                    "header": "Controller Type",
                                    "key": "controller",
                                  },
                                  Object {
                                    "header": "Dependent",
                                    "key": "dependent",
                                  },
                                  Object {
                                    "header": "Delete Backing",
                                    "key": "backing",
                                  },
                                  Object {
                                    "header": "Bootable",
                                    "key": "bootable",
                                  },
                                  Object {
                                    "header": "Resize",
                                    "key": "resize",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ]
                              }
                              key="disk"
                              label="Disks"
                              name="disk"
                              onCellClick={[Function]}
                              rows={
                                Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Cancel Delete",
                                      "callback": "cancelDeleteDisk",
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Cancel Delete",
                                      "title": "Cancel Delete",
                                    },
                                    "backing": Object {
                                      "disabled": true,
                                      "is_toggle": true,
                                      "labelA": "Yes",
                                      "labelB": "No",
                                      "labelText": "Delete Backing",
                                      "ontoggle": [Function],
                                      "toggled": false,
                                    },
                                    "bootable": "No",
                                    "controller": "None",
                                    "dependent": "No",
                                    "id": "disk0",
                                    "mode": "persistent",
                                    "name": "disk test 2",
                                    "resize": Object {
                                      "alt": "Resize",
                                      "callback": "resizeDisk",
                                      "disabled": true,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Resize",
                                      "title": "Resize",
                                    },
                                    "size": "16",
                                    "type": "thin",
                                    "unit": "GB",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "addButtonLabel": "Add Disk",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "disk",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Type",
                                        "key": "type",
                                      },
                                      Object {
                                        "header": "Size",
                                        "key": "size",
                                      },
                                      Object {
                                        "header": "Unit",
                                        "key": "unit",
                                      },
                                      Object {
                                        "header": "Mode",
                                        "key": "mode",
                                      },
                                      Object {
                                        "header": "Controller Type",
                                        "key": "controller",
                                      },
                                      Object {
                                        "header": "Dependent",
                                        "key": "dependent",
                                      },
                                      Object {
                                        "header": "Delete Backing",
                                        "key": "backing",
                                      },
                                      Object {
                                        "header": "Bootable",
                                        "key": "bootable",
                                      },
                                      Object {
                                        "header": "Resize",
                                        "key": "resize",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Disks",
                                    "name": "disk",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Cancel Delete",
                                          "callback": "cancelDeleteDisk",
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Cancel Delete",
                                          "title": "Cancel Delete",
                                        },
                                        "backing": Object {
                                          "disabled": true,
                                          "is_toggle": true,
                                          "labelA": "Yes",
                                          "labelB": "No",
                                          "labelText": "Delete Backing",
                                          "ontoggle": [Function],
                                          "toggled": false,
                                        },
                                        "bootable": "No",
                                        "controller": "None",
                                        "dependent": "No",
                                        "id": "disk0",
                                        "mode": "persistent",
                                        "name": "disk test 2",
                                        "resize": Object {
                                          "alt": "Resize",
                                          "callback": "resizeDisk",
                                          "disabled": true,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Resize",
                                          "title": "Resize",
                                        },
                                        "size": "16",
                                        "type": "thin",
                                        "unit": "GB",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <ReconfigureTable
                                    addButtonLabel="Add Disk"
                                    buttonClick={[Function]}
                                    component="reconfigure-table"
                                    formType="disk"
                                    headers={
                                      Array [
                                        Object {
                                          "header": "Name",
                                          "key": "name",
                                        },
                                        Object {
                                          "header": "Type",
                                          "key": "type",
                                        },
                                        Object {
                                          "header": "Size",
                                          "key": "size",
                                        },
                                        Object {
                                          "header": "Unit",
                                          "key": "unit",
                                        },
                                        Object {
                                          "header": "Mode",
                                          "key": "mode",
                                        },
                                        Object {
                                          "header": "Controller Type",
                                          "key": "controller",
                                        },
                                        Object {
                                          "header": "Dependent",
                                          "key": "dependent",
                                        },
                                        Object {
                                          "header": "Delete Backing",
                                          "key": "backing",
                                        },
                                        Object {
                                          "header": "Bootable",
                                          "key": "bootable",
                                        },
                                        Object {
                                          "header": "Resize",
                                          "key": "resize",
                                        },
                                        Object {
                                          "contentButton": true,
                                          "header": "Action",
                                          "key": "action",
                                        },
                                      ]
                                    }
                                    label="Disks"
                                    name="disk"
                                    onCellClick={[Function]}
                                    rows={
                                      Array [
                                        Object {
                                          "action": Object {
                                            "alt": "Cancel Delete",
                                            "callback": "cancelDeleteDisk",
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Cancel Delete",
                                            "title": "Cancel Delete",
                                          },
                                          "backing": Object {
                                            "disabled": true,
                                            "is_toggle": true,
                                            "labelA": "Yes",
                                            "labelB": "No",
                                            "labelText": "Delete Backing",
                                            "ontoggle": [Function],
                                            "toggled": false,
                                          },
                                          "bootable": "No",
                                          "controller": "None",
                                          "dependent": "No",
                                          "id": "disk0",
                                          "mode": "persistent",
                                          "name": "disk test 2",
                                          "resize": Object {
                                            "alt": "Resize",
                                            "callback": "resizeDisk",
                                            "disabled": true,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Resize",
                                            "title": "Resize",
                                          },
                                          "size": "16",
                                          "type": "thin",
                                          "unit": "GB",
                                        },
                                      ]
                                    }
                                  >
                                    <div
                                      className="disk-table reconfigure-form-table"
                                    >
                                      <div
                                        className="form-section-title"
                                      >
                                        <h3>
                                          Disks
                                        </h3>
                                        <Button
                                          className="disk-add bx--btn bx--btn--primary pull-right reconfigure-add-button"
                                          kind="primary"
                                          onClick={[Function]}
                                          type="button"
                                          variant="contained"
                                        >
                                          <button
                                            aria-describedby={null}
                                            aria-pressed={null}
                                            className="disk-add bx--btn bx--btn--primary pull-right reconfigure-add-button bx--btn bx--btn--primary"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            tabIndex={0}
                                            type="button"
                                            variant="contained"
                                          >
                                            Add Disk
                                          </button>
                                        </Button>
                                      </div>
                                      <MiqDataTable
                                        gridChecks={Array []}
                                        headers={
                                          Array [
                                            Object {
                                              "header": "Name",
                                              "key": "name",
                                            },
                                            Object {
                                              "header": "Type",
                                              "key": "type",
                                            },
                                            Object {
                                              "header": "Size",
                                              "key": "size",
                                            },
                                            Object {
                                              "header": "Unit",
                                              "key": "unit",
                                            },
                                            Object {
                                              "header": "Mode",
                                              "key": "mode",
                                            },
                                            Object {
                                              "header": "Controller Type",
                                              "key": "controller",
                                            },
                                            Object {
                                              "header": "Dependent",
                                              "key": "dependent",
                                            },
                                            Object {
                                              "header": "Delete Backing",
                                              "key": "backing",
                                            },
                                            Object {
                                              "header": "Bootable",
                                              "key": "bootable",
                                            },
                                            Object {
                                              "header": "Resize",
                                              "key": "resize",
                                            },
                                            Object {
                                              "contentButton": true,
                                              "header": "Action",
                                              "key": "action",
                                            },
                                          ]
                                        }
                                        mode="disk-table-list"
                                        onCellClick={[Function]}
                                        pageOptions={
                                          Object {
                                            "page": 1,
                                            "pageSize": 20,
                                            "pageSizes": Array [
                                              5,
                                              10,
                                              20,
                                              50,
                                              100,
                                              200,
                                            ],
                                            "totalItems": 10,
                                          }
                                        }
                                        rowCheckBox={false}
                                        rows={
                                          Array [
                                            Object {
                                              "action": Object {
                                                "alt": "Cancel Delete",
                                                "callback": "cancelDeleteDisk",
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Cancel Delete",
                                                "title": "Cancel Delete",
                                              },
                                              "backing": Object {
                                                "disabled": true,
                                                "is_toggle": true,
                                                "labelA": "Yes",
                                                "labelB": "No",
                                                "labelText": "Delete Backing",
                                                "ontoggle": [Function],
                                                "toggled": false,
                                              },
                                              "bootable": "No",
                                              "controller": "None",
                                              "dependent": "No",
                                              "id": "disk0",
                                              "mode": "persistent",
                                              "name": "disk test 2",
                                              "resize": Object {
                                                "alt": "Resize",
                                                "callback": "resizeDisk",
                                                "disabled": true,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Resize",
                                                "title": "Resize",
                                              },
                                              "size": "16",
                                              "type": "thin",
                                              "unit": "GB",
                                            },
                                          ]
                                        }
                                        showPagination={false}
                                        size="lg"
                                        sortable={false}
                                        stickyHeader={false}
                                        truncateText={true}
                                      >
                                        <div
                                          className="miq-data-table disk-table-list"
                                        >
                                          <DataTable
                                            filterRows={[Function]}
                                            headers={
                                              Array [
                                                Object {
                                                  "header": "Name",
                                                  "key": "name",
                                                },
                                                Object {
                                                  "header": "Type",
                                                  "key": "type",
                                                },
                                                Object {
                                                  "header": "Size",
                                                  "key": "size",
                                                },
                                                Object {
                                                  "header": "Unit",
                                                  "key": "unit",
                                                },
                                                Object {
                                                  "header": "Mode",
                                                  "key": "mode",
                                                },
                                                Object {
                                                  "header": "Controller Type",
                                                  "key": "controller",
                                                },
                                                Object {
                                                  "header": "Dependent",
                                                  "key": "dependent",
                                                },
                                                Object {
                                                  "header": "Delete Backing",
                                                  "key": "backing",
                                                },
                                                Object {
                                                  "header": "Bootable",
                                                  "key": "bootable",
                                                },
                                                Object {
                                                  "header": "Resize",
                                                  "key": "resize",
                                                },
                                                Object {
                                                  "contentButton": true,
                                                  "header": "Action",
                                                  "key": "action",
                                                },
                                              ]
                                            }
                                            isSortable={false}
                                            locale="en"
                                            overflowMenuOnHover={true}
                                            rows={
                                              Array [
                                                Object {
                                                  "action": Object {
                                                    "alt": "Cancel Delete",
                                                    "callback": "cancelDeleteDisk",
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Cancel Delete",
                                                    "title": "Cancel Delete",
                                                  },
                                                  "backing": Object {
                                                    "disabled": true,
                                                    "is_toggle": true,
                                                    "labelA": "Yes",
                                                    "labelB": "No",
                                                    "labelText": "Delete Backing",
                                                    "ontoggle": [Function],
                                                    "toggled": false,
                                                  },
                                                  "bootable": "No",
                                                  "controller": "None",
                                                  "dependent": "No",
                                                  "id": "disk0",
                                                  "mode": "persistent",
                                                  "name": "disk test 2",
                                                  "resize": Object {
                                                    "alt": "Resize",
                                                    "callback": "resizeDisk",
                                                    "disabled": true,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Resize",
                                                    "title": "Resize",
                                                  },
                                                  "size": "16",
                                                  "type": "thin",
                                                  "unit": "GB",
                                                },
                                              ]
                                            }
                                            size="lg"
                                            sortDirection="ASC"
                                            sortRow={[Function]}
                                            stickyHeader={false}
                                            translateWithId={[Function]}
                                          >
                                            <Table
                                              isSortable={false}
                                              overflowMenuOnHover={true}
                                              size="lg"
                                              stickyHeader={false}
                                            >
                                              <div
                                                className="bx--data-table-content"
                                              >
                                                <table
                                                  className="bx--data-table bx--data-table--lg bx--data-table--no-border"
                                                >
                                                  <TableHead>
                                                    <thead>
                                                      <TableRow>
                                                        <tr>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="name"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-184"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Name header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-184"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Name
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="type"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-185"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Type header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-185"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Type
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="size"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-186"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Size header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-186"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Size
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="unit"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-187"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Unit header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-187"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Unit
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="mode"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-188"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Mode header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-188"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Mode
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="controller"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-189"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Controller Type header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-189"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Controller Type
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="dependent"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-190"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Dependent header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-190"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Dependent
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="backing"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-191"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Delete Backing header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-191"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Delete Backing
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="bootable"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-192"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Bootable header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-192"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Bootable
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="resize"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-193"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Resize header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-193"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Resize
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header header-button"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="action"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header header-button"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-194"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Action header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-194"
                                                                className="miq-data-table-header header-button bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Action
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                        </tr>
                                                      </TableRow>
                                                    </thead>
                                                  </TableHead>
                                                  <TableBody
                                                    aria-live="polite"
                                                  >
                                                    <tbody
                                                      aria-live="polite"
                                                    >
                                                      <TableRow
                                                        ariaLabel="Expand current row"
                                                        className=""
                                                        disabled={false}
                                                        isExpanded={false}
                                                        isSelected={false}
                                                        key="disk0"
                                                        onExpand={[Function]}
                                                        onKeyPress={[Function]}
                                                        tabIndex="0"
                                                        title=""
                                                      >
                                                        <tr
                                                          disabled={false}
                                                          onKeyPress={[Function]}
                                                          tabIndex="0"
                                                          title=""
                                                        >
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "disk test 2",
                                                                "errors": null,
                                                                "id": "disk0:name",
                                                                "info": Object {
                                                                  "header": "name",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "disk test 2",
                                                              }
                                                            }
                                                            key="0-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:name"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="disk test 2"
                                                                  >
                                                                    disk test 2
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "thin",
                                                                "errors": null,
                                                                "id": "disk0:type",
                                                                "info": Object {
                                                                  "header": "type",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "thin",
                                                              }
                                                            }
                                                            key="1-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:type"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="thin"
                                                                  >
                                                                    thin
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "16",
                                                                "errors": null,
                                                                "id": "disk0:size",
                                                                "info": Object {
                                                                  "header": "size",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "16",
                                                              }
                                                            }
                                                            key="2-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:size"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="16"
                                                                  >
                                                                    16
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "GB",
                                                                "errors": null,
                                                                "id": "disk0:unit",
                                                                "info": Object {
                                                                  "header": "unit",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "GB",
                                                              }
                                                            }
                                                            key="3-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:unit"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="GB"
                                                                  >
                                                                    GB
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "persistent",
                                                                "errors": null,
                                                                "id": "disk0:mode",
                                                                "info": Object {
                                                                  "header": "mode",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "persistent",
                                                              }
                                                            }
                                                            key="4-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:mode"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="persistent"
                                                                  >
                                                                    persistent
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "None",
                                                                "errors": null,
                                                                "id": "disk0:controller",
                                                                "info": Object {
                                                                  "header": "controller",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "None",
                                                              }
                                                            }
                                                            key="5-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:controller"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="None"
                                                                  >
                                                                    None
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "No",
                                                                "errors": null,
                                                                "id": "disk0:dependent",
                                                                "info": Object {
                                                                  "header": "dependent",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "No",
                                                              }
                                                            }
                                                            key="6-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:dependent"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="No"
                                                                  >
                                                                    No
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "disabled": true,
                                                                  "is_toggle": true,
                                                                  "labelA": "Yes",
                                                                  "labelB": "No",
                                                                  "labelText": "Delete Backing",
                                                                  "ontoggle": [Function],
                                                                  "toggled": false,
                                                                },
                                                                "errors": null,
                                                                "id": "disk0:backing",
                                                                "info": Object {
                                                                  "header": "backing",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "",
                                                              }
                                                            }
                                                            key="7-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:backing"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <FeatureToggle(Toggle)
                                                                    disabled={true}
                                                                    id="disk0:backing"
                                                                    labelA="Yes"
                                                                    labelB="No"
                                                                    labelText={
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title=""
                                                                      >
                                                                        
                                                                      </span>
                                                                    }
                                                                    onToggle={[Function]}
                                                                    tabIndex={0}
                                                                    toggled={false}
                                                                  >
                                                                    <Toggle
                                                                      aria-label="Toggle"
                                                                      defaultToggled={false}
                                                                      disabled={true}
                                                                      id="disk0:backing"
                                                                      labelA="Yes"
                                                                      labelB="No"
                                                                      labelText={
                                                                        <span
                                                                          className="bx--front-line"
                                                                          title=""
                                                                        >
                                                                          
                                                                        </span>
                                                                      }
                                                                      onToggle={[Function]}
                                                                      tabIndex={0}
                                                                      toggled={false}
                                                                    >
                                                                      <div
                                                                        className="bx--form-item"
                                                                      >
                                                                        <input
                                                                          aria-label={null}
                                                                          checked={false}
                                                                          className="bx--toggle-input"
                                                                          disabled={true}
                                                                          id="disk0:backing"
                                                                          onChange={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          tabIndex={0}
                                                                          type="checkbox"
                                                                        />
                                                                        <label
                                                                          aria-label="Toggle"
                                                                          className="bx--toggle-input__label"
                                                                          htmlFor="disk0:backing"
                                                                        >
                                                                          <span
                                                                            className="bx--front-line"
                                                                            title=""
                                                                          />
                                                                          <span
                                                                            className="bx--toggle__switch"
                                                                          >
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="bx--toggle__text--off"
                                                                            >
                                                                              Yes
                                                                            </span>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="bx--toggle__text--on"
                                                                            >
                                                                              No
                                                                            </span>
                                                                          </span>
                                                                        </label>
                                                                      </div>
                                                                    </Toggle>
                                                                  </FeatureToggle(Toggle)>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "No",
                                                                "errors": null,
                                                                "id": "disk0:bootable",
                                                                "info": Object {
                                                                  "header": "bootable",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "No",
                                                              }
                                                            }
                                                            key="8-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:bootable"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="No"
                                                                  >
                                                                    No
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Resize",
                                                                  "callback": "resizeDisk",
                                                                  "disabled": true,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Resize",
                                                                  "title": "Resize",
                                                                },
                                                                "errors": null,
                                                                "id": "disk0:resize",
                                                                "info": Object {
                                                                  "header": "resize",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Resize",
                                                              }
                                                            }
                                                            key="9-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:resize"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={true}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Resize"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost bx--btn--disabled"
                                                                      disabled={true}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Resize"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Resize"
                                                                      >
                                                                        Resize
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Cancel Delete",
                                                                  "callback": "cancelDeleteDisk",
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Cancel Delete",
                                                                  "title": "Cancel Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "disk0:action",
                                                                "info": Object {
                                                                  "header": "action",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Cancel Delete",
                                                              }
                                                            }
                                                            key="10-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "disk test 2",
                                                                    "errors": null,
                                                                    "id": "disk0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "disk test 2",
                                                                  },
                                                                  Object {
                                                                    "data": "thin",
                                                                    "errors": null,
                                                                    "id": "disk0:type",
                                                                    "info": Object {
                                                                      "header": "type",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "thin",
                                                                  },
                                                                  Object {
                                                                    "data": "16",
                                                                    "errors": null,
                                                                    "id": "disk0:size",
                                                                    "info": Object {
                                                                      "header": "size",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "16",
                                                                  },
                                                                  Object {
                                                                    "data": "GB",
                                                                    "errors": null,
                                                                    "id": "disk0:unit",
                                                                    "info": Object {
                                                                      "header": "unit",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "GB",
                                                                  },
                                                                  Object {
                                                                    "data": "persistent",
                                                                    "errors": null,
                                                                    "id": "disk0:mode",
                                                                    "info": Object {
                                                                      "header": "mode",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "persistent",
                                                                  },
                                                                  Object {
                                                                    "data": "None",
                                                                    "errors": null,
                                                                    "id": "disk0:controller",
                                                                    "info": Object {
                                                                      "header": "controller",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "None",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:dependent",
                                                                    "info": Object {
                                                                      "header": "dependent",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "disabled": true,
                                                                      "is_toggle": true,
                                                                      "labelA": "Yes",
                                                                      "labelB": "No",
                                                                      "labelText": "Delete Backing",
                                                                      "ontoggle": [Function],
                                                                      "toggled": false,
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:backing",
                                                                    "info": Object {
                                                                      "header": "backing",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "",
                                                                  },
                                                                  Object {
                                                                    "data": "No",
                                                                    "errors": null,
                                                                    "id": "disk0:bootable",
                                                                    "info": Object {
                                                                      "header": "bootable",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "No",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Resize",
                                                                      "callback": "resizeDisk",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Resize",
                                                                      "title": "Resize",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:resize",
                                                                    "info": Object {
                                                                      "header": "resize",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Resize",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Cancel Delete",
                                                                      "callback": "cancelDeleteDisk",
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Cancel Delete",
                                                                      "title": "Cancel Delete",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "disk0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Cancel Delete",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "disk0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="disk0:action"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Cancel Delete"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Cancel Delete"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Cancel Delete"
                                                                      >
                                                                        Cancel Delete
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                        </tr>
                                                      </TableRow>
                                                    </tbody>
                                                  </TableBody>
                                                </table>
                                              </div>
                                            </Table>
                                          </DataTable>
                                        </div>
                                      </MiqDataTable>
                                    </div>
                                  </ReconfigureTable>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              addButtonLabel="Add Network Adapter"
                              buttonClick={[Function]}
                              component="reconfigure-table"
                              formType="network"
                              headers={
                                Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "MAC address",
                                    "key": "mac",
                                  },
                                  Object {
                                    "header": "vLan",
                                    "key": "vlan",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Edit",
                                    "key": "edit",
                                  },
                                  Object {
                                    "contentButton": true,
                                    "header": "Action",
                                    "key": "action",
                                  },
                                ]
                              }
                              key="network"
                              label="Network Adapters"
                              name="network"
                              onCellClick={[Function]}
                              rows={Array []}
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "addButtonLabel": "Add Network Adapter",
                                    "buttonClick": [Function],
                                    "component": "reconfigure-table",
                                    "formType": "network",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "MAC address",
                                        "key": "mac",
                                      },
                                      Object {
                                        "header": "vLan",
                                        "key": "vlan",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Edit",
                                        "key": "edit",
                                      },
                                      Object {
                                        "contentButton": true,
                                        "header": "Action",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "Network Adapters",
                                    "name": "network",
                                    "onCellClick": [Function],
                                    "rows": Array [],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <ReconfigureTable
                                    addButtonLabel="Add Network Adapter"
                                    buttonClick={[Function]}
                                    component="reconfigure-table"
                                    formType="network"
                                    headers={
                                      Array [
                                        Object {
                                          "header": "Name",
                                          "key": "name",
                                        },
                                        Object {
                                          "header": "MAC address",
                                          "key": "mac",
                                        },
                                        Object {
                                          "header": "vLan",
                                          "key": "vlan",
                                        },
                                        Object {
                                          "contentButton": true,
                                          "header": "Edit",
                                          "key": "edit",
                                        },
                                        Object {
                                          "contentButton": true,
                                          "header": "Action",
                                          "key": "action",
                                        },
                                      ]
                                    }
                                    label="Network Adapters"
                                    name="network"
                                    onCellClick={[Function]}
                                    rows={Array []}
                                  >
                                    <div
                                      className="network-table reconfigure-form-table"
                                    >
                                      <div
                                        className="form-section-title"
                                      >
                                        <h3>
                                          Network Adapters
                                        </h3>
                                        <Button
                                          className="network-add bx--btn bx--btn--primary pull-right reconfigure-add-button"
                                          kind="primary"
                                          onClick={[Function]}
                                          type="button"
                                          variant="contained"
                                        >
                                          <button
                                            aria-describedby={null}
                                            aria-pressed={null}
                                            className="network-add bx--btn bx--btn--primary pull-right reconfigure-add-button bx--btn bx--btn--primary"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            tabIndex={0}
                                            type="button"
                                            variant="contained"
                                          >
                                            Add Network Adapter
                                          </button>
                                        </Button>
                                      </div>
                                      <MiqDataTable
                                        gridChecks={Array []}
                                        headers={
                                          Array [
                                            Object {
                                              "header": "Name",
                                              "key": "name",
                                            },
                                            Object {
                                              "header": "MAC address",
                                              "key": "mac",
                                            },
                                            Object {
                                              "header": "vLan",
                                              "key": "vlan",
                                            },
                                            Object {
                                              "contentButton": true,
                                              "header": "Edit",
                                              "key": "edit",
                                            },
                                            Object {
                                              "contentButton": true,
                                              "header": "Action",
                                              "key": "action",
                                            },
                                          ]
                                        }
                                        mode="network-table-list"
                                        onCellClick={[Function]}
                                        pageOptions={
                                          Object {
                                            "page": 1,
                                            "pageSize": 20,
                                            "pageSizes": Array [
                                              5,
                                              10,
                                              20,
                                              50,
                                              100,
                                              200,
                                            ],
                                            "totalItems": 10,
                                          }
                                        }
                                        rowCheckBox={false}
                                        rows={Array []}
                                        showPagination={false}
                                        size="lg"
                                        sortable={false}
                                        stickyHeader={false}
                                        truncateText={true}
                                      >
                                        <div
                                          className="miq-data-table network-table-list"
                                        >
                                          <DataTable
                                            filterRows={[Function]}
                                            headers={
                                              Array [
                                                Object {
                                                  "header": "Name",
                                                  "key": "name",
                                                },
                                                Object {
                                                  "header": "MAC address",
                                                  "key": "mac",
                                                },
                                                Object {
                                                  "header": "vLan",
                                                  "key": "vlan",
                                                },
                                                Object {
                                                  "contentButton": true,
                                                  "header": "Edit",
                                                  "key": "edit",
                                                },
                                                Object {
                                                  "contentButton": true,
                                                  "header": "Action",
                                                  "key": "action",
                                                },
                                              ]
                                            }
                                            isSortable={false}
                                            locale="en"
                                            overflowMenuOnHover={true}
                                            rows={Array []}
                                            size="lg"
                                            sortDirection="ASC"
                                            sortRow={[Function]}
                                            stickyHeader={false}
                                            translateWithId={[Function]}
                                          >
                                            <Table
                                              isSortable={false}
                                              overflowMenuOnHover={true}
                                              size="lg"
                                              stickyHeader={false}
                                            >
                                              <div
                                                className="bx--data-table-content"
                                              >
                                                <table
                                                  className="bx--data-table bx--data-table--lg bx--data-table--no-border"
                                                >
                                                  <TableHead>
                                                    <thead>
                                                      <TableRow>
                                                        <tr>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="name"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-198"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Name header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-198"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Name
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="mac"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-199"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by MAC address header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-199"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    MAC address
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="vlan"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-200"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by vLan header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-200"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    vLan
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header header-button"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="edit"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header header-button"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-201"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Edit header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-201"
                                                                className="miq-data-table-header header-button bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Edit
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header header-button"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="action"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header header-button"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-202"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Action header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-202"
                                                                className="miq-data-table-header header-button bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Action
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                        </tr>
                                                      </TableRow>
                                                    </thead>
                                                  </TableHead>
                                                  <TableBody
                                                    aria-live="polite"
                                                  >
                                                    <tbody
                                                      aria-live="polite"
                                                    />
                                                  </TableBody>
                                                </table>
                                              </div>
                                            </Table>
                                          </DataTable>
                                        </div>
                                      </MiqDataTable>
                                    </div>
                                  </ReconfigureTable>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                            <SingleField
                              addButton={false}
                              component="reconfigure-table"
                              formType="drive"
                              headers={
                                Array [
                                  Object {
                                    "header": "Name",
                                    "key": "name",
                                  },
                                  Object {
                                    "header": "Host File",
                                    "key": "hostFile",
                                  },
                                  Object {
                                    "header": "Disconnect",
                                    "key": "disconnect",
                                  },
                                  Object {
                                    "header": "Actions",
                                    "key": "action",
                                  },
                                ]
                              }
                              hideField={false}
                              key="drive"
                              label="CD/DVD Drives"
                              name="drive"
                              onCellClick={[Function]}
                              rows={
                                Array [
                                  Object {
                                    "action": Object {
                                      "alt": "Connect",
                                      "callback": "connectDrives",
                                      "disabled": true,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Connect",
                                      "title": "Connect",
                                    },
                                    "disconnect": Object {
                                      "alt": "Disconnect",
                                      "callback": "disconnectDrives",
                                      "disabled": false,
                                      "is_button": true,
                                      "kind": "ghost",
                                      "text": "Disconnect",
                                      "title": "Disconnect",
                                    },
                                    "hostFile": "teset",
                                    "id": "drive0",
                                    "name": "CD/DVD drive 1",
                                  },
                                ]
                              }
                            >
                              <FormConditionWrapper
                                field={
                                  Object {
                                    "addButton": false,
                                    "component": "reconfigure-table",
                                    "formType": "drive",
                                    "headers": Array [
                                      Object {
                                        "header": "Name",
                                        "key": "name",
                                      },
                                      Object {
                                        "header": "Host File",
                                        "key": "hostFile",
                                      },
                                      Object {
                                        "header": "Disconnect",
                                        "key": "disconnect",
                                      },
                                      Object {
                                        "header": "Actions",
                                        "key": "action",
                                      },
                                    ],
                                    "label": "CD/DVD Drives",
                                    "name": "drive",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "action": Object {
                                          "alt": "Connect",
                                          "callback": "connectDrives",
                                          "disabled": true,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Connect",
                                          "title": "Connect",
                                        },
                                        "disconnect": Object {
                                          "alt": "Disconnect",
                                          "callback": "disconnectDrives",
                                          "disabled": false,
                                          "is_button": true,
                                          "kind": "ghost",
                                          "text": "Disconnect",
                                          "title": "Disconnect",
                                        },
                                        "hostFile": "teset",
                                        "id": "drive0",
                                        "name": "CD/DVD drive 1",
                                      },
                                    ],
                                  }
                                }
                              >
                                <FormFieldHideWrapper
                                  hideField={false}
                                >
                                  <ReconfigureTable
                                    addButton={false}
                                    addButtonLabel=""
                                    component="reconfigure-table"
                                    formType="drive"
                                    headers={
                                      Array [
                                        Object {
                                          "header": "Name",
                                          "key": "name",
                                        },
                                        Object {
                                          "header": "Host File",
                                          "key": "hostFile",
                                        },
                                        Object {
                                          "header": "Disconnect",
                                          "key": "disconnect",
                                        },
                                        Object {
                                          "header": "Actions",
                                          "key": "action",
                                        },
                                      ]
                                    }
                                    label="CD/DVD Drives"
                                    name="drive"
                                    onCellClick={[Function]}
                                    rows={
                                      Array [
                                        Object {
                                          "action": Object {
                                            "alt": "Connect",
                                            "callback": "connectDrives",
                                            "disabled": true,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Connect",
                                            "title": "Connect",
                                          },
                                          "disconnect": Object {
                                            "alt": "Disconnect",
                                            "callback": "disconnectDrives",
                                            "disabled": false,
                                            "is_button": true,
                                            "kind": "ghost",
                                            "text": "Disconnect",
                                            "title": "Disconnect",
                                          },
                                          "hostFile": "teset",
                                          "id": "drive0",
                                          "name": "CD/DVD drive 1",
                                        },
                                      ]
                                    }
                                  >
                                    <div
                                      className="drive-table reconfigure-form-table"
                                    >
                                      <div
                                        className="form-section-title"
                                      >
                                        <h3>
                                          CD/DVD Drives
                                        </h3>
                                      </div>
                                      <MiqDataTable
                                        gridChecks={Array []}
                                        headers={
                                          Array [
                                            Object {
                                              "header": "Name",
                                              "key": "name",
                                            },
                                            Object {
                                              "header": "Host File",
                                              "key": "hostFile",
                                            },
                                            Object {
                                              "header": "Disconnect",
                                              "key": "disconnect",
                                            },
                                            Object {
                                              "header": "Actions",
                                              "key": "action",
                                            },
                                          ]
                                        }
                                        mode="drive-table-list"
                                        onCellClick={[Function]}
                                        pageOptions={
                                          Object {
                                            "page": 1,
                                            "pageSize": 20,
                                            "pageSizes": Array [
                                              5,
                                              10,
                                              20,
                                              50,
                                              100,
                                              200,
                                            ],
                                            "totalItems": 10,
                                          }
                                        }
                                        rowCheckBox={false}
                                        rows={
                                          Array [
                                            Object {
                                              "action": Object {
                                                "alt": "Connect",
                                                "callback": "connectDrives",
                                                "disabled": true,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Connect",
                                                "title": "Connect",
                                              },
                                              "disconnect": Object {
                                                "alt": "Disconnect",
                                                "callback": "disconnectDrives",
                                                "disabled": false,
                                                "is_button": true,
                                                "kind": "ghost",
                                                "text": "Disconnect",
                                                "title": "Disconnect",
                                              },
                                              "hostFile": "teset",
                                              "id": "drive0",
                                              "name": "CD/DVD drive 1",
                                            },
                                          ]
                                        }
                                        showPagination={false}
                                        size="lg"
                                        sortable={false}
                                        stickyHeader={false}
                                        truncateText={true}
                                      >
                                        <div
                                          className="miq-data-table drive-table-list"
                                        >
                                          <DataTable
                                            filterRows={[Function]}
                                            headers={
                                              Array [
                                                Object {
                                                  "header": "Name",
                                                  "key": "name",
                                                },
                                                Object {
                                                  "header": "Host File",
                                                  "key": "hostFile",
                                                },
                                                Object {
                                                  "header": "Disconnect",
                                                  "key": "disconnect",
                                                },
                                                Object {
                                                  "header": "Actions",
                                                  "key": "action",
                                                },
                                              ]
                                            }
                                            isSortable={false}
                                            locale="en"
                                            overflowMenuOnHover={true}
                                            rows={
                                              Array [
                                                Object {
                                                  "action": Object {
                                                    "alt": "Connect",
                                                    "callback": "connectDrives",
                                                    "disabled": true,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Connect",
                                                    "title": "Connect",
                                                  },
                                                  "disconnect": Object {
                                                    "alt": "Disconnect",
                                                    "callback": "disconnectDrives",
                                                    "disabled": false,
                                                    "is_button": true,
                                                    "kind": "ghost",
                                                    "text": "Disconnect",
                                                    "title": "Disconnect",
                                                  },
                                                  "hostFile": "teset",
                                                  "id": "drive0",
                                                  "name": "CD/DVD drive 1",
                                                },
                                              ]
                                            }
                                            size="lg"
                                            sortDirection="ASC"
                                            sortRow={[Function]}
                                            stickyHeader={false}
                                            translateWithId={[Function]}
                                          >
                                            <Table
                                              isSortable={false}
                                              overflowMenuOnHover={true}
                                              size="lg"
                                              stickyHeader={false}
                                            >
                                              <div
                                                className="bx--data-table-content"
                                              >
                                                <table
                                                  className="bx--data-table bx--data-table--lg bx--data-table--no-border"
                                                >
                                                  <TableHead>
                                                    <thead>
                                                      <TableRow>
                                                        <tr>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="name"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-203"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Name header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-203"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Name
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="hostFile"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-204"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Host File header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-204"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Host File
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="disconnect"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-205"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Disconnect header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-205"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Disconnect
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                          <TableHeader
                                                            className="miq-data-table-header"
                                                            isSortHeader={false}
                                                            isSortable={true}
                                                            key="action"
                                                            onClick={[Function]}
                                                            scope="col"
                                                            sortDirection="NONE"
                                                            translateWithId={[Function]}
                                                          >
                                                            <th
                                                              aria-sort="none"
                                                              className="miq-data-table-header"
                                                              scope="col"
                                                            >
                                                              <div
                                                                id="table-sort-206"
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                  }
                                                                }
                                                              >
                                                                Click to sort rows by Actions header in ascending order
                                                              </div>
                                                              <button
                                                                aria-describedby="table-sort-206"
                                                                className="miq-data-table-header bx--table-sort"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="bx--table-sort__flex"
                                                                >
                                                                  <div
                                                                    className="bx--table-header-label"
                                                                  >
                                                                    Actions
                                                                  </div>
                                                                  <ForwardRef(ArrowUp20)
                                                                    className="bx--table-sort__icon"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowUp20)>
                                                                  <ForwardRef(ArrowsVertical20)
                                                                    className="bx--table-sort__icon-unsorted"
                                                                  >
                                                                    <Icon
                                                                      className="bx--table-sort__icon-unsorted"
                                                                      fill="currentColor"
                                                                      height={20}
                                                                      preserveAspectRatio="xMidYMid meet"
                                                                      viewBox="0 0 32 32"
                                                                      width={20}
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="bx--table-sort__icon-unsorted"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height={20}
                                                                        preserveAspectRatio="xMidYMid meet"
                                                                        viewBox="0 0 32 32"
                                                                        width={20}
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <path
                                                                          d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                        />
                                                                      </svg>
                                                                    </Icon>
                                                                  </ForwardRef(ArrowsVertical20)>
                                                                </span>
                                                              </button>
                                                            </th>
                                                          </TableHeader>
                                                        </tr>
                                                      </TableRow>
                                                    </thead>
                                                  </TableHead>
                                                  <TableBody
                                                    aria-live="polite"
                                                  >
                                                    <tbody
                                                      aria-live="polite"
                                                    >
                                                      <TableRow
                                                        ariaLabel="Expand current row"
                                                        className=""
                                                        disabled={false}
                                                        isExpanded={false}
                                                        isSelected={false}
                                                        key="drive0"
                                                        onExpand={[Function]}
                                                        onKeyPress={[Function]}
                                                        tabIndex="0"
                                                        title=""
                                                      >
                                                        <tr
                                                          disabled={false}
                                                          onKeyPress={[Function]}
                                                          tabIndex="0"
                                                          title=""
                                                        >
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "CD/DVD drive 1",
                                                                "errors": null,
                                                                "id": "drive0:name",
                                                                "info": Object {
                                                                  "header": "name",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "CD/DVD drive 1",
                                                              }
                                                            }
                                                            key="0-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "CD/DVD drive 1",
                                                                    "errors": null,
                                                                    "id": "drive0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "CD/DVD drive 1",
                                                                  },
                                                                  Object {
                                                                    "data": "teset",
                                                                    "errors": null,
                                                                    "id": "drive0:hostFile",
                                                                    "info": Object {
                                                                      "header": "hostFile",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "teset",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Disconnect",
                                                                      "callback": "disconnectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Disconnect",
                                                                      "title": "Disconnect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:disconnect",
                                                                    "info": Object {
                                                                      "header": "disconnect",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Disconnect",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Connect",
                                                                      "callback": "connectDrives",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Connect",
                                                                      "title": "Connect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Connect",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "drive0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="drive0:name"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="CD/DVD drive 1"
                                                                  >
                                                                    CD/DVD drive 1
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": "teset",
                                                                "errors": null,
                                                                "id": "drive0:hostFile",
                                                                "info": Object {
                                                                  "header": "hostFile",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "teset",
                                                              }
                                                            }
                                                            key="1-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "CD/DVD drive 1",
                                                                    "errors": null,
                                                                    "id": "drive0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "CD/DVD drive 1",
                                                                  },
                                                                  Object {
                                                                    "data": "teset",
                                                                    "errors": null,
                                                                    "id": "drive0:hostFile",
                                                                    "info": Object {
                                                                      "header": "hostFile",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "teset",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Disconnect",
                                                                      "callback": "disconnectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Disconnect",
                                                                      "title": "Disconnect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:disconnect",
                                                                    "info": Object {
                                                                      "header": "disconnect",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Disconnect",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Connect",
                                                                      "callback": "connectDrives",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Connect",
                                                                      "title": "Connect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Connect",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "drive0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="drive0:hostFile"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="teset"
                                                                  >
                                                                    teset
                                                                  </span>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Disconnect",
                                                                  "callback": "disconnectDrives",
                                                                  "disabled": false,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Disconnect",
                                                                  "title": "Disconnect",
                                                                },
                                                                "errors": null,
                                                                "id": "drive0:disconnect",
                                                                "info": Object {
                                                                  "header": "disconnect",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Disconnect",
                                                              }
                                                            }
                                                            key="2-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "CD/DVD drive 1",
                                                                    "errors": null,
                                                                    "id": "drive0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "CD/DVD drive 1",
                                                                  },
                                                                  Object {
                                                                    "data": "teset",
                                                                    "errors": null,
                                                                    "id": "drive0:hostFile",
                                                                    "info": Object {
                                                                      "header": "hostFile",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "teset",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Disconnect",
                                                                      "callback": "disconnectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Disconnect",
                                                                      "title": "Disconnect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:disconnect",
                                                                    "info": Object {
                                                                      "header": "disconnect",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Disconnect",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Connect",
                                                                      "callback": "connectDrives",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Connect",
                                                                      "title": "Connect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Connect",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "drive0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="drive0:disconnect"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={false}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Disconnect"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost"
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Disconnect"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Disconnect"
                                                                      >
                                                                        Disconnect
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                          <MiqTableCell
                                                            cell={
                                                              Object {
                                                                "data": Object {
                                                                  "alt": "Connect",
                                                                  "callback": "connectDrives",
                                                                  "disabled": true,
                                                                  "is_button": true,
                                                                  "kind": "ghost",
                                                                  "text": "Connect",
                                                                  "title": "Connect",
                                                                },
                                                                "errors": null,
                                                                "id": "drive0:action",
                                                                "info": Object {
                                                                  "header": "action",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Connect",
                                                              }
                                                            }
                                                            key="3-cellKey"
                                                            onCellClick={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "data": "CD/DVD drive 1",
                                                                    "errors": null,
                                                                    "id": "drive0:name",
                                                                    "info": Object {
                                                                      "header": "name",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "CD/DVD drive 1",
                                                                  },
                                                                  Object {
                                                                    "data": "teset",
                                                                    "errors": null,
                                                                    "id": "drive0:hostFile",
                                                                    "info": Object {
                                                                      "header": "hostFile",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "teset",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Disconnect",
                                                                      "callback": "disconnectDrives",
                                                                      "disabled": false,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Disconnect",
                                                                      "title": "Disconnect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:disconnect",
                                                                    "info": Object {
                                                                      "header": "disconnect",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Disconnect",
                                                                  },
                                                                  Object {
                                                                    "data": Object {
                                                                      "alt": "Connect",
                                                                      "callback": "connectDrives",
                                                                      "disabled": true,
                                                                      "is_button": true,
                                                                      "kind": "ghost",
                                                                      "text": "Connect",
                                                                      "title": "Connect",
                                                                    },
                                                                    "errors": null,
                                                                    "id": "drive0:action",
                                                                    "info": Object {
                                                                      "header": "action",
                                                                    },
                                                                    "isEditable": false,
                                                                    "isEditing": false,
                                                                    "isValid": true,
                                                                    "value": "Connect",
                                                                  },
                                                                ],
                                                                "disabled": false,
                                                                "id": "drive0",
                                                                "isExpanded": false,
                                                                "isSelected": false,
                                                              }
                                                            }
                                                            truncate={true}
                                                          >
                                                            <TableCell
                                                              className=""
                                                              key="drive0:action"
                                                              onClick={[Function]}
                                                            >
                                                              <td
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="cell"
                                                                >
                                                                  <Button
                                                                    className="miq-data-table-button"
                                                                    disabled={true}
                                                                    kind="ghost"
                                                                    onClick={[Function]}
                                                                    onKeyPress={[Function]}
                                                                    size="default"
                                                                    tabIndex={0}
                                                                    title="Connect"
                                                                  >
                                                                    <button
                                                                      aria-describedby={null}
                                                                      aria-pressed={null}
                                                                      className="miq-data-table-button bx--btn bx--btn--ghost bx--btn--disabled"
                                                                      disabled={true}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyPress={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      tabIndex={0}
                                                                      title="Connect"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="bx--front-line"
                                                                        title="Connect"
                                                                      >
                                                                        Connect
                                                                      </span>
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </td>
                                                            </TableCell>
                                                          </MiqTableCell>
                                                        </tr>
                                                      </TableRow>
                                                    </tbody>
                                                  </TableBody>
                                                </table>
                                              </div>
                                            </Table>
                                          </DataTable>
                                        </div>
                                      </MiqDataTable>
                                    </div>
                                  </ReconfigureTable>
                                </FormFieldHideWrapper>
                              </FormConditionWrapper>
                            </SingleField>
                          </div>
                        </SubForm>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <SingleField
                    component="spy-field"
                    key="spy-field"
                    name="spy-field"
                  >
                    <FormConditionWrapper
                      field={
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        }
                      }
                    >
                      <FormFieldHideWrapper
                        hideField={false}
                      >
                        <SpyField
                          component="spy-field"
                          name="spy-field"
                        >
                          <FormSpy
                            onChange={[Function]}
                            subscription={
                              Object {
                                "pristine": true,
                                "valid": true,
                              }
                            }
                          />
                        </SpyField>
                      </FormFieldHideWrapper>
                    </FormConditionWrapper>
                  </SingleField>
                  <div
                    className="bx--btn-set"
                  >
                    <button
                      alt="Save"
                      className="bx--btn bx--btn--primary"
                      disabled={false}
                      type="submit"
                    >
                      Save
                    </button>
                    <button
                      alt="Reset"
                      className="bx--btn bx--btn--secondary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      Reset
                    </button>
                    <button
                      alt="Cancel"
                      className="bx--btn bx--btn--secondary"
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </form>
              </ReconfigureTemplate>
            </FormTemplate>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </ReconfigureVmForm>
</Provider>
`;
