// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Workflow Credential Form Component should redirect back to show_list page if a workflow has no credentials to map 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <WorkflowCredentialMappingForm
    recordId="2"
  />
</Provider>
`;

exports[`Workflow Credential Form Component should render mapping credentials to the workflow 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <WorkflowCredentialMappingForm
    recordId="1"
  >
    <Connect(MiqFormRenderer)
      buttonsLabels={
        Object {
          "submitLabel": "Save",
        }
      }
      canReset={true}
      componentMapper={
        Object {
          "checkbox": [Function],
          "checkbox-tree": [Function],
          "code-editor": [Function],
          "credential-mapper": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "tree-view-redux": Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(TreeView)",
            "type": [Function],
          },
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "credentials": Object {
            "api_password": Object {
              "credential_field": "password",
              "credential_ref": "test_credential",
            },
            "api_user": Object {
              "credential_field": "userid",
              "credential_ref": "api_credential",
            },
          },
          "name": "test-workflow.asl",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "credential-mapper",
              "id": "credential-mapping-table",
              "name": "credential-mapping-table",
              "onCellClick": [Function],
              "rows": Array [
                Object {
                  "CredentialField": Object {
                    "text": "Password",
                  },
                  "CredentialRecord": Object {
                    "text": "Test Credential",
                  },
                  "CredentialsIdentifier": Object {
                    "text": "api_password",
                  },
                  "Delete": Object {
                    "callback": "deleteMapping",
                    "is_button": true,
                    "kind": "danger",
                    "size": "md",
                    "text": "Delete",
                  },
                  "id": "0",
                },
                Object {
                  "CredentialField": Object {
                    "text": "Username",
                  },
                  "CredentialRecord": Object {
                    "text": "API Credential",
                  },
                  "CredentialsIdentifier": Object {
                    "text": "api_user",
                  },
                  "Delete": Object {
                    "callback": "deleteMapping",
                    "is_button": true,
                    "kind": "danger",
                    "size": "md",
                    "text": "Delete",
                  },
                  "id": "1",
                },
              ],
            },
            Object {
              "component": "select",
              "id": "credential_references",
              "includeEmpty": true,
              "label": "Credential Reference",
              "name": "credential_references",
              "onChange": [Function],
              "options": Array [
                Object {
                  "label": "api_password",
                  "value": "api_password",
                },
                Object {
                  "label": "api_user",
                  "value": "api_user",
                },
              ],
              "placeholder": "<Choose>",
              "resolveProps": [Function],
            },
            Object {
              "component": "sub-form",
              "condition": Object {
                "isNotEmpty": true,
                "when": "credential_references",
              },
              "fields": Array [
                Object {
                  "component": "select",
                  "id": "workflow_credentials",
                  "includeEmpty": true,
                  "label": "Workflow Credential",
                  "name": "workflow_credentials",
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "Test Credential",
                      "value": "test_credential",
                    },
                    Object {
                      "label": "API Credential",
                      "value": "api_credential",
                    },
                  ],
                  "placeholder": "<Choose>",
                },
                Object {
                  "component": "select",
                  "id": "credential_field",
                  "includeEmpty": true,
                  "label": "Credential Field",
                  "name": "credential_field",
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "Username",
                      "value": "userid",
                    },
                    Object {
                      "label": "Password",
                      "value": "password",
                    },
                    Object {
                      "label": "Private key",
                      "value": "auth_key",
                    },
                    Object {
                      "label": "Private key passphrase",
                      "value": "auth_key_password",
                    },
                  ],
                  "placeholder": "<Choose>",
                },
              ],
              "id": "workflow_credentials_section",
              "name": "workflow_credentials_section",
            },
          ],
        }
      }
    >
      <MiqFormRenderer
        buttonsLabels={
          Object {
            "submitLabel": "Save",
          }
        }
        canReset={true}
        className="form-react"
        componentMapper={
          Object {
            "checkbox": [Function],
            "checkbox-tree": [Function],
            "code-editor": [Function],
            "credential-mapper": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "tree-view-redux": Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(TreeView)",
              "type": [Function],
            },
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "credentials": Object {
              "api_password": Object {
                "credential_field": "password",
                "credential_ref": "test_credential",
              },
              "api_user": Object {
                "credential_field": "userid",
                "credential_ref": "api_credential",
              },
            },
            "name": "test-workflow.asl",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "credential-mapper",
                "id": "credential-mapping-table",
                "name": "credential-mapping-table",
                "onCellClick": [Function],
                "rows": Array [
                  Object {
                    "CredentialField": Object {
                      "text": "Password",
                    },
                    "CredentialRecord": Object {
                      "text": "Test Credential",
                    },
                    "CredentialsIdentifier": Object {
                      "text": "api_password",
                    },
                    "Delete": Object {
                      "callback": "deleteMapping",
                      "is_button": true,
                      "kind": "danger",
                      "size": "md",
                      "text": "Delete",
                    },
                    "id": "0",
                  },
                  Object {
                    "CredentialField": Object {
                      "text": "Username",
                    },
                    "CredentialRecord": Object {
                      "text": "API Credential",
                    },
                    "CredentialsIdentifier": Object {
                      "text": "api_user",
                    },
                    "Delete": Object {
                      "callback": "deleteMapping",
                      "is_button": true,
                      "kind": "danger",
                      "size": "md",
                      "text": "Delete",
                    },
                    "id": "1",
                  },
                ],
              },
              Object {
                "component": "select",
                "id": "credential_references",
                "includeEmpty": true,
                "label": "Credential Reference",
                "name": "credential_references",
                "onChange": [Function],
                "options": Array [
                  Object {
                    "label": "api_password",
                    "value": "api_password",
                  },
                  Object {
                    "label": "api_user",
                    "value": "api_user",
                  },
                ],
                "placeholder": "<Choose>",
                "resolveProps": [Function],
              },
              Object {
                "component": "sub-form",
                "condition": Object {
                  "isNotEmpty": true,
                  "when": "credential_references",
                },
                "fields": Array [
                  Object {
                    "component": "select",
                    "id": "workflow_credentials",
                    "includeEmpty": true,
                    "label": "Workflow Credential",
                    "name": "workflow_credentials",
                    "onChange": [Function],
                    "options": Array [
                      Object {
                        "label": "Test Credential",
                        "value": "test_credential",
                      },
                      Object {
                        "label": "API Credential",
                        "value": "api_credential",
                      },
                    ],
                    "placeholder": "<Choose>",
                  },
                  Object {
                    "component": "select",
                    "id": "credential_field",
                    "includeEmpty": true,
                    "label": "Credential Field",
                    "name": "credential_field",
                    "onChange": [Function],
                    "options": Array [
                      Object {
                        "label": "Username",
                        "value": "userid",
                      },
                      Object {
                        "label": "Password",
                        "value": "password",
                      },
                      Object {
                        "label": "Private key",
                        "value": "auth_key",
                      },
                      Object {
                        "label": "Private key passphrase",
                        "value": "auth_key_password",
                      },
                    ],
                    "placeholder": "<Choose>",
                  },
                ],
                "id": "workflow_credentials_section",
                "name": "workflow_credentials_section",
              },
            ],
          }
        }
        showFormControls={true}
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "checkbox-tree": [Function],
              "code-editor": [Function],
              "credential-mapper": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "tree-view-redux": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(TreeView)",
                "type": [Function],
              },
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "credentials": Object {
                "api_password": Object {
                  "credential_field": "password",
                  "credential_ref": "test_credential",
                },
                "api_user": Object {
                  "credential_field": "userid",
                  "credential_ref": "api_credential",
                },
              },
              "name": "test-workflow.asl",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "credential-mapper",
                  "id": "credential-mapping-table",
                  "name": "credential-mapping-table",
                  "onCellClick": [Function],
                  "rows": Array [
                    Object {
                      "CredentialField": Object {
                        "text": "Password",
                      },
                      "CredentialRecord": Object {
                        "text": "Test Credential",
                      },
                      "CredentialsIdentifier": Object {
                        "text": "api_password",
                      },
                      "Delete": Object {
                        "callback": "deleteMapping",
                        "is_button": true,
                        "kind": "danger",
                        "size": "md",
                        "text": "Delete",
                      },
                      "id": "0",
                    },
                    Object {
                      "CredentialField": Object {
                        "text": "Username",
                      },
                      "CredentialRecord": Object {
                        "text": "API Credential",
                      },
                      "CredentialsIdentifier": Object {
                        "text": "api_user",
                      },
                      "Delete": Object {
                        "callback": "deleteMapping",
                        "is_button": true,
                        "kind": "danger",
                        "size": "md",
                        "text": "Delete",
                      },
                      "id": "1",
                    },
                  ],
                },
                Object {
                  "component": "select",
                  "id": "credential_references",
                  "includeEmpty": true,
                  "label": "Credential Reference",
                  "name": "credential_references",
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "api_password",
                      "value": "api_password",
                    },
                    Object {
                      "label": "api_user",
                      "value": "api_user",
                    },
                  ],
                  "placeholder": "<Choose>",
                  "resolveProps": [Function],
                },
                Object {
                  "component": "sub-form",
                  "condition": Object {
                    "isNotEmpty": true,
                    "when": "credential_references",
                  },
                  "fields": Array [
                    Object {
                      "component": "select",
                      "id": "workflow_credentials",
                      "includeEmpty": true,
                      "label": "Workflow Credential",
                      "name": "workflow_credentials",
                      "onChange": [Function],
                      "options": Array [
                        Object {
                          "label": "Test Credential",
                          "value": "test_credential",
                        },
                        Object {
                          "label": "API Credential",
                          "value": "api_credential",
                        },
                      ],
                      "placeholder": "<Choose>",
                    },
                    Object {
                      "component": "select",
                      "id": "credential_field",
                      "includeEmpty": true,
                      "label": "Credential Field",
                      "name": "credential_field",
                      "onChange": [Function],
                      "options": Array [
                        Object {
                          "label": "Username",
                          "value": "userid",
                        },
                        Object {
                          "label": "Password",
                          "value": "password",
                        },
                        Object {
                          "label": "Private key",
                          "value": "auth_key",
                        },
                        Object {
                          "label": "Private key passphrase",
                          "value": "auth_key_password",
                        },
                      ],
                      "placeholder": "<Choose>",
                    },
                  ],
                  "id": "workflow_credentials_section",
                  "name": "workflow_credentials_section",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "credentials": Object {
                  "api_password": Object {
                    "credential_field": "password",
                    "credential_ref": "test_credential",
                  },
                  "api_user": Object {
                    "credential_field": "userid",
                    "credential_ref": "api_credential",
                  },
                },
                "name": "test-workflow.asl",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <Component
              formFields={
                Array [
                  <SingleField
                    component="credential-mapper"
                    id="credential-mapping-table"
                    name="credential-mapping-table"
                    onCellClick={[Function]}
                    rows={
                      Array [
                        Object {
                          "CredentialField": Object {
                            "text": "Password",
                          },
                          "CredentialRecord": Object {
                            "text": "Test Credential",
                          },
                          "CredentialsIdentifier": Object {
                            "text": "api_password",
                          },
                          "Delete": Object {
                            "callback": "deleteMapping",
                            "is_button": true,
                            "kind": "danger",
                            "size": "md",
                            "text": "Delete",
                          },
                          "id": "0",
                        },
                        Object {
                          "CredentialField": Object {
                            "text": "Username",
                          },
                          "CredentialRecord": Object {
                            "text": "API Credential",
                          },
                          "CredentialsIdentifier": Object {
                            "text": "api_user",
                          },
                          "Delete": Object {
                            "callback": "deleteMapping",
                            "is_button": true,
                            "kind": "danger",
                            "size": "md",
                            "text": "Delete",
                          },
                          "id": "1",
                        },
                      ]
                    }
                  />,
                  <SingleField
                    component="select"
                    id="credential_references"
                    includeEmpty={true}
                    label="Credential Reference"
                    name="credential_references"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "api_password",
                          "value": "api_password",
                        },
                        Object {
                          "label": "api_user",
                          "value": "api_user",
                        },
                      ]
                    }
                    placeholder="<Choose>"
                    resolveProps={[Function]}
                  />,
                  <SingleField
                    component="sub-form"
                    condition={
                      Object {
                        "isNotEmpty": true,
                        "when": "credential_references",
                      }
                    }
                    fields={
                      Array [
                        Object {
                          "component": "select",
                          "id": "workflow_credentials",
                          "includeEmpty": true,
                          "label": "Workflow Credential",
                          "name": "workflow_credentials",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "Test Credential",
                              "value": "test_credential",
                            },
                            Object {
                              "label": "API Credential",
                              "value": "api_credential",
                            },
                          ],
                          "placeholder": "<Choose>",
                        },
                        Object {
                          "component": "select",
                          "id": "credential_field",
                          "includeEmpty": true,
                          "label": "Credential Field",
                          "name": "credential_field",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "Username",
                              "value": "userid",
                            },
                            Object {
                              "label": "Password",
                              "value": "password",
                            },
                            Object {
                              "label": "Private key",
                              "value": "auth_key",
                            },
                            Object {
                              "label": "Private key passphrase",
                              "value": "auth_key_password",
                            },
                          ],
                          "placeholder": "<Choose>",
                        },
                      ]
                    }
                    id="workflow_credentials_section"
                    name="workflow_credentials_section"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "component": "credential-mapper",
                      "id": "credential-mapping-table",
                      "name": "credential-mapping-table",
                      "onCellClick": [Function],
                      "rows": Array [
                        Object {
                          "CredentialField": Object {
                            "text": "Password",
                          },
                          "CredentialRecord": Object {
                            "text": "Test Credential",
                          },
                          "CredentialsIdentifier": Object {
                            "text": "api_password",
                          },
                          "Delete": Object {
                            "callback": "deleteMapping",
                            "is_button": true,
                            "kind": "danger",
                            "size": "md",
                            "text": "Delete",
                          },
                          "id": "0",
                        },
                        Object {
                          "CredentialField": Object {
                            "text": "Username",
                          },
                          "CredentialRecord": Object {
                            "text": "API Credential",
                          },
                          "CredentialsIdentifier": Object {
                            "text": "api_user",
                          },
                          "Delete": Object {
                            "callback": "deleteMapping",
                            "is_button": true,
                            "kind": "danger",
                            "size": "md",
                            "text": "Delete",
                          },
                          "id": "1",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "id": "credential_references",
                      "includeEmpty": true,
                      "label": "Credential Reference",
                      "name": "credential_references",
                      "onChange": [Function],
                      "options": Array [
                        Object {
                          "label": "api_password",
                          "value": "api_password",
                        },
                        Object {
                          "label": "api_user",
                          "value": "api_user",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "resolveProps": [Function],
                    },
                    Object {
                      "component": "sub-form",
                      "condition": Object {
                        "isNotEmpty": true,
                        "when": "credential_references",
                      },
                      "fields": Array [
                        Object {
                          "component": "select",
                          "id": "workflow_credentials",
                          "includeEmpty": true,
                          "label": "Workflow Credential",
                          "name": "workflow_credentials",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "Test Credential",
                              "value": "test_credential",
                            },
                            Object {
                              "label": "API Credential",
                              "value": "api_credential",
                            },
                          ],
                          "placeholder": "<Choose>",
                        },
                        Object {
                          "component": "select",
                          "id": "credential_field",
                          "includeEmpty": true,
                          "label": "Credential Field",
                          "name": "credential_field",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "Username",
                              "value": "userid",
                            },
                            Object {
                              "label": "Password",
                              "value": "password",
                            },
                            Object {
                              "label": "Private key",
                              "value": "auth_key",
                            },
                            Object {
                              "label": "Private key passphrase",
                              "value": "auth_key_password",
                            },
                          ],
                          "placeholder": "<Choose>",
                        },
                      ],
                      "id": "workflow_credentials_section",
                      "name": "workflow_credentials_section",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <WrappedFormTemplate
                canReset={true}
                cancelLabel="Cancel"
                disableSubmit={
                  Array [
                    "pristine",
                    "invalid",
                  ]
                }
                formFields={
                  Array [
                    <SingleField
                      component="credential-mapper"
                      id="credential-mapping-table"
                      name="credential-mapping-table"
                      onCellClick={[Function]}
                      rows={
                        Array [
                          Object {
                            "CredentialField": Object {
                              "text": "Password",
                            },
                            "CredentialRecord": Object {
                              "text": "Test Credential",
                            },
                            "CredentialsIdentifier": Object {
                              "text": "api_password",
                            },
                            "Delete": Object {
                              "callback": "deleteMapping",
                              "is_button": true,
                              "kind": "danger",
                              "size": "md",
                              "text": "Delete",
                            },
                            "id": "0",
                          },
                          Object {
                            "CredentialField": Object {
                              "text": "Username",
                            },
                            "CredentialRecord": Object {
                              "text": "API Credential",
                            },
                            "CredentialsIdentifier": Object {
                              "text": "api_user",
                            },
                            "Delete": Object {
                              "callback": "deleteMapping",
                              "is_button": true,
                              "kind": "danger",
                              "size": "md",
                              "text": "Delete",
                            },
                            "id": "1",
                          },
                        ]
                      }
                    />,
                    <SingleField
                      component="select"
                      id="credential_references"
                      includeEmpty={true}
                      label="Credential Reference"
                      name="credential_references"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "api_password",
                            "value": "api_password",
                          },
                          Object {
                            "label": "api_user",
                            "value": "api_user",
                          },
                        ]
                      }
                      placeholder="<Choose>"
                      resolveProps={[Function]}
                    />,
                    <SingleField
                      component="sub-form"
                      condition={
                        Object {
                          "isNotEmpty": true,
                          "when": "credential_references",
                        }
                      }
                      fields={
                        Array [
                          Object {
                            "component": "select",
                            "id": "workflow_credentials",
                            "includeEmpty": true,
                            "label": "Workflow Credential",
                            "name": "workflow_credentials",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "Test Credential",
                                "value": "test_credential",
                              },
                              Object {
                                "label": "API Credential",
                                "value": "api_credential",
                              },
                            ],
                            "placeholder": "<Choose>",
                          },
                          Object {
                            "component": "select",
                            "id": "credential_field",
                            "includeEmpty": true,
                            "label": "Credential Field",
                            "name": "credential_field",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "Username",
                                "value": "userid",
                              },
                              Object {
                                "label": "Password",
                                "value": "password",
                              },
                              Object {
                                "label": "Private key",
                                "value": "auth_key",
                              },
                              Object {
                                "label": "Private key passphrase",
                                "value": "auth_key_password",
                              },
                            ],
                            "placeholder": "<Choose>",
                          },
                        ]
                      }
                      id="workflow_credentials_section"
                      name="workflow_credentials_section"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                formWrapperProps={
                  Object {
                    "className": "form-react",
                  }
                }
                resetLabel="Reset"
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "component": "credential-mapper",
                        "id": "credential-mapping-table",
                        "name": "credential-mapping-table",
                        "onCellClick": [Function],
                        "rows": Array [
                          Object {
                            "CredentialField": Object {
                              "text": "Password",
                            },
                            "CredentialRecord": Object {
                              "text": "Test Credential",
                            },
                            "CredentialsIdentifier": Object {
                              "text": "api_password",
                            },
                            "Delete": Object {
                              "callback": "deleteMapping",
                              "is_button": true,
                              "kind": "danger",
                              "size": "md",
                              "text": "Delete",
                            },
                            "id": "0",
                          },
                          Object {
                            "CredentialField": Object {
                              "text": "Username",
                            },
                            "CredentialRecord": Object {
                              "text": "API Credential",
                            },
                            "CredentialsIdentifier": Object {
                              "text": "api_user",
                            },
                            "Delete": Object {
                              "callback": "deleteMapping",
                              "is_button": true,
                              "kind": "danger",
                              "size": "md",
                              "text": "Delete",
                            },
                            "id": "1",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "id": "credential_references",
                        "includeEmpty": true,
                        "label": "Credential Reference",
                        "name": "credential_references",
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "label": "api_password",
                            "value": "api_password",
                          },
                          Object {
                            "label": "api_user",
                            "value": "api_user",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "resolveProps": [Function],
                      },
                      Object {
                        "component": "sub-form",
                        "condition": Object {
                          "isNotEmpty": true,
                          "when": "credential_references",
                        },
                        "fields": Array [
                          Object {
                            "component": "select",
                            "id": "workflow_credentials",
                            "includeEmpty": true,
                            "label": "Workflow Credential",
                            "name": "workflow_credentials",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "Test Credential",
                                "value": "test_credential",
                              },
                              Object {
                                "label": "API Credential",
                                "value": "api_credential",
                              },
                            ],
                            "placeholder": "<Choose>",
                          },
                          Object {
                            "component": "select",
                            "id": "credential_field",
                            "includeEmpty": true,
                            "label": "Credential Field",
                            "name": "credential_field",
                            "onChange": [Function],
                            "options": Array [
                              Object {
                                "label": "Username",
                                "value": "userid",
                              },
                              Object {
                                "label": "Password",
                                "value": "password",
                              },
                              Object {
                                "label": "Private key",
                                "value": "auth_key",
                              },
                              Object {
                                "label": "Private key passphrase",
                                "value": "auth_key_password",
                              },
                            ],
                            "placeholder": "<Choose>",
                          },
                        ],
                        "id": "workflow_credentials_section",
                        "name": "workflow_credentials_section",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
                showFormControls={true}
                submitLabel="Save"
              >
                <FormTemplate
                  Button={[Function]}
                  ButtonGroup={[Function]}
                  Description={[Function]}
                  FormWrapper={[Function]}
                  Header={[Function]}
                  Title={[Function]}
                  buttonOrder={
                    Array [
                      "submit",
                      "reset",
                      "cancel",
                    ]
                  }
                  canReset={true}
                  cancelLabel="Cancel"
                  disableSubmit={
                    Array [
                      "pristine",
                      "invalid",
                    ]
                  }
                  formFields={
                    Array [
                      <SingleField
                        component="credential-mapper"
                        id="credential-mapping-table"
                        name="credential-mapping-table"
                        onCellClick={[Function]}
                        rows={
                          Array [
                            Object {
                              "CredentialField": Object {
                                "text": "Password",
                              },
                              "CredentialRecord": Object {
                                "text": "Test Credential",
                              },
                              "CredentialsIdentifier": Object {
                                "text": "api_password",
                              },
                              "Delete": Object {
                                "callback": "deleteMapping",
                                "is_button": true,
                                "kind": "danger",
                                "size": "md",
                                "text": "Delete",
                              },
                              "id": "0",
                            },
                            Object {
                              "CredentialField": Object {
                                "text": "Username",
                              },
                              "CredentialRecord": Object {
                                "text": "API Credential",
                              },
                              "CredentialsIdentifier": Object {
                                "text": "api_user",
                              },
                              "Delete": Object {
                                "callback": "deleteMapping",
                                "is_button": true,
                                "kind": "danger",
                                "size": "md",
                                "text": "Delete",
                              },
                              "id": "1",
                            },
                          ]
                        }
                      />,
                      <SingleField
                        component="select"
                        id="credential_references"
                        includeEmpty={true}
                        label="Credential Reference"
                        name="credential_references"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "api_password",
                              "value": "api_password",
                            },
                            Object {
                              "label": "api_user",
                              "value": "api_user",
                            },
                          ]
                        }
                        placeholder="<Choose>"
                        resolveProps={[Function]}
                      />,
                      <SingleField
                        component="sub-form"
                        condition={
                          Object {
                            "isNotEmpty": true,
                            "when": "credential_references",
                          }
                        }
                        fields={
                          Array [
                            Object {
                              "component": "select",
                              "id": "workflow_credentials",
                              "includeEmpty": true,
                              "label": "Workflow Credential",
                              "name": "workflow_credentials",
                              "onChange": [Function],
                              "options": Array [
                                Object {
                                  "label": "Test Credential",
                                  "value": "test_credential",
                                },
                                Object {
                                  "label": "API Credential",
                                  "value": "api_credential",
                                },
                              ],
                              "placeholder": "<Choose>",
                            },
                            Object {
                              "component": "select",
                              "id": "credential_field",
                              "includeEmpty": true,
                              "label": "Credential Field",
                              "name": "credential_field",
                              "onChange": [Function],
                              "options": Array [
                                Object {
                                  "label": "Username",
                                  "value": "userid",
                                },
                                Object {
                                  "label": "Password",
                                  "value": "password",
                                },
                                Object {
                                  "label": "Private key",
                                  "value": "auth_key",
                                },
                                Object {
                                  "label": "Private key passphrase",
                                  "value": "auth_key_password",
                                },
                              ],
                              "placeholder": "<Choose>",
                            },
                          ]
                        }
                        id="workflow_credentials_section"
                        name="workflow_credentials_section"
                      />,
                      <SingleField
                        component="spy-field"
                        name="spy-field"
                      />,
                    ]
                  }
                  formWrapperProps={
                    Object {
                      "className": "form-react",
                    }
                  }
                  resetLabel="Reset"
                  schema={
                    Object {
                      "fields": Array [
                        Object {
                          "component": "credential-mapper",
                          "id": "credential-mapping-table",
                          "name": "credential-mapping-table",
                          "onCellClick": [Function],
                          "rows": Array [
                            Object {
                              "CredentialField": Object {
                                "text": "Password",
                              },
                              "CredentialRecord": Object {
                                "text": "Test Credential",
                              },
                              "CredentialsIdentifier": Object {
                                "text": "api_password",
                              },
                              "Delete": Object {
                                "callback": "deleteMapping",
                                "is_button": true,
                                "kind": "danger",
                                "size": "md",
                                "text": "Delete",
                              },
                              "id": "0",
                            },
                            Object {
                              "CredentialField": Object {
                                "text": "Username",
                              },
                              "CredentialRecord": Object {
                                "text": "API Credential",
                              },
                              "CredentialsIdentifier": Object {
                                "text": "api_user",
                              },
                              "Delete": Object {
                                "callback": "deleteMapping",
                                "is_button": true,
                                "kind": "danger",
                                "size": "md",
                                "text": "Delete",
                              },
                              "id": "1",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "id": "credential_references",
                          "includeEmpty": true,
                          "label": "Credential Reference",
                          "name": "credential_references",
                          "onChange": [Function],
                          "options": Array [
                            Object {
                              "label": "api_password",
                              "value": "api_password",
                            },
                            Object {
                              "label": "api_user",
                              "value": "api_user",
                            },
                          ],
                          "placeholder": "<Choose>",
                          "resolveProps": [Function],
                        },
                        Object {
                          "component": "sub-form",
                          "condition": Object {
                            "isNotEmpty": true,
                            "when": "credential_references",
                          },
                          "fields": Array [
                            Object {
                              "component": "select",
                              "id": "workflow_credentials",
                              "includeEmpty": true,
                              "label": "Workflow Credential",
                              "name": "workflow_credentials",
                              "onChange": [Function],
                              "options": Array [
                                Object {
                                  "label": "Test Credential",
                                  "value": "test_credential",
                                },
                                Object {
                                  "label": "API Credential",
                                  "value": "api_credential",
                                },
                              ],
                              "placeholder": "<Choose>",
                            },
                            Object {
                              "component": "select",
                              "id": "credential_field",
                              "includeEmpty": true,
                              "label": "Credential Field",
                              "name": "credential_field",
                              "onChange": [Function],
                              "options": Array [
                                Object {
                                  "label": "Username",
                                  "value": "userid",
                                },
                                Object {
                                  "label": "Password",
                                  "value": "password",
                                },
                                Object {
                                  "label": "Private key",
                                  "value": "auth_key",
                                },
                                Object {
                                  "label": "Private key passphrase",
                                  "value": "auth_key_password",
                                },
                              ],
                              "placeholder": "<Choose>",
                            },
                          ],
                          "id": "workflow_credentials_section",
                          "name": "workflow_credentials_section",
                        },
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        },
                      ],
                    }
                  }
                  showFormControls={true}
                  submitLabel="Save"
                >
                  <Form
                    className="form-react"
                    onSubmit={[Function]}
                  >
                    <Form
                      className="form-0-2-3 form-react"
                      noValidate={true}
                      onSubmit={[Function]}
                    >
                      <form
                        className="bx--form form-0-2-3 form-react"
                        noValidate={true}
                        onSubmit={[Function]}
                      >
                         
                        <SingleField
                          component="credential-mapper"
                          id="credential-mapping-table"
                          key="credential-mapping-table"
                          name="credential-mapping-table"
                          onCellClick={[Function]}
                          rows={
                            Array [
                              Object {
                                "CredentialField": Object {
                                  "text": "Password",
                                },
                                "CredentialRecord": Object {
                                  "text": "Test Credential",
                                },
                                "CredentialsIdentifier": Object {
                                  "text": "api_password",
                                },
                                "Delete": Object {
                                  "callback": "deleteMapping",
                                  "is_button": true,
                                  "kind": "danger",
                                  "size": "md",
                                  "text": "Delete",
                                },
                                "id": "0",
                              },
                              Object {
                                "CredentialField": Object {
                                  "text": "Username",
                                },
                                "CredentialRecord": Object {
                                  "text": "API Credential",
                                },
                                "CredentialsIdentifier": Object {
                                  "text": "api_user",
                                },
                                "Delete": Object {
                                  "callback": "deleteMapping",
                                  "is_button": true,
                                  "kind": "danger",
                                  "size": "md",
                                  "text": "Delete",
                                },
                                "id": "1",
                              },
                            ]
                          }
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "credential-mapper",
                                "id": "credential-mapping-table",
                                "name": "credential-mapping-table",
                                "onCellClick": [Function],
                                "rows": Array [
                                  Object {
                                    "CredentialField": Object {
                                      "text": "Password",
                                    },
                                    "CredentialRecord": Object {
                                      "text": "Test Credential",
                                    },
                                    "CredentialsIdentifier": Object {
                                      "text": "api_password",
                                    },
                                    "Delete": Object {
                                      "callback": "deleteMapping",
                                      "is_button": true,
                                      "kind": "danger",
                                      "size": "md",
                                      "text": "Delete",
                                    },
                                    "id": "0",
                                  },
                                  Object {
                                    "CredentialField": Object {
                                      "text": "Username",
                                    },
                                    "CredentialRecord": Object {
                                      "text": "API Credential",
                                    },
                                    "CredentialsIdentifier": Object {
                                      "text": "api_user",
                                    },
                                    "Delete": Object {
                                      "callback": "deleteMapping",
                                      "is_button": true,
                                      "kind": "danger",
                                      "size": "md",
                                      "text": "Delete",
                                    },
                                    "id": "1",
                                  },
                                ],
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <CredentialMapperComponent
                                component="credential-mapper"
                                id="credential-mapping-table"
                                name="credential-mapping-table"
                                onCellClick={[Function]}
                                rows={
                                  Array [
                                    Object {
                                      "CredentialField": Object {
                                        "text": "Password",
                                      },
                                      "CredentialRecord": Object {
                                        "text": "Test Credential",
                                      },
                                      "CredentialsIdentifier": Object {
                                        "text": "api_password",
                                      },
                                      "Delete": Object {
                                        "callback": "deleteMapping",
                                        "is_button": true,
                                        "kind": "danger",
                                        "size": "md",
                                        "text": "Delete",
                                      },
                                      "id": "0",
                                    },
                                    Object {
                                      "CredentialField": Object {
                                        "text": "Username",
                                      },
                                      "CredentialRecord": Object {
                                        "text": "API Credential",
                                      },
                                      "CredentialsIdentifier": Object {
                                        "text": "api_user",
                                      },
                                      "Delete": Object {
                                        "callback": "deleteMapping",
                                        "is_button": true,
                                        "kind": "danger",
                                        "size": "md",
                                        "text": "Delete",
                                      },
                                      "id": "1",
                                    },
                                  ]
                                }
                              >
                                <div
                                  className="credential-mapper-data-table"
                                >
                                  <MiqDataTable
                                    gridChecks={Array []}
                                    headers={
                                      Array [
                                        Object {
                                          "header": "Credentials Identifier",
                                          "key": "CredentialsIdentifier",
                                        },
                                        Object {
                                          "header": "Credential Record",
                                          "key": "CredentialRecord",
                                        },
                                        Object {
                                          "header": "Credential Field",
                                          "key": "CredentialField",
                                        },
                                        Object {
                                          "header": "Delete",
                                          "key": "Delete",
                                        },
                                      ]
                                    }
                                    mode=""
                                    onCellClick={[Function]}
                                    pageOptions={
                                      Object {
                                        "page": 1,
                                        "pageSize": 20,
                                        "pageSizes": Array [
                                          5,
                                          10,
                                          20,
                                          50,
                                          100,
                                          200,
                                        ],
                                        "totalItems": 10,
                                      }
                                    }
                                    rowCheckBox={false}
                                    rows={
                                      Array [
                                        Object {
                                          "CredentialField": Object {
                                            "text": "Password",
                                          },
                                          "CredentialRecord": Object {
                                            "text": "Test Credential",
                                          },
                                          "CredentialsIdentifier": Object {
                                            "text": "api_password",
                                          },
                                          "Delete": Object {
                                            "callback": "deleteMapping",
                                            "is_button": true,
                                            "kind": "danger",
                                            "size": "md",
                                            "text": "Delete",
                                          },
                                          "id": "0",
                                        },
                                        Object {
                                          "CredentialField": Object {
                                            "text": "Username",
                                          },
                                          "CredentialRecord": Object {
                                            "text": "API Credential",
                                          },
                                          "CredentialsIdentifier": Object {
                                            "text": "api_user",
                                          },
                                          "Delete": Object {
                                            "callback": "deleteMapping",
                                            "is_button": true,
                                            "kind": "danger",
                                            "size": "md",
                                            "text": "Delete",
                                          },
                                          "id": "1",
                                        },
                                      ]
                                    }
                                    showPagination={false}
                                    size="md"
                                    sortable={false}
                                    stickyHeader={false}
                                    truncateText={true}
                                  >
                                    <div
                                      className="miq-data-table"
                                    >
                                      <DataTable
                                        filterRows={[Function]}
                                        headers={
                                          Array [
                                            Object {
                                              "header": "Credentials Identifier",
                                              "key": "CredentialsIdentifier",
                                            },
                                            Object {
                                              "header": "Credential Record",
                                              "key": "CredentialRecord",
                                            },
                                            Object {
                                              "header": "Credential Field",
                                              "key": "CredentialField",
                                            },
                                            Object {
                                              "header": "Delete",
                                              "key": "Delete",
                                            },
                                          ]
                                        }
                                        isSortable={false}
                                        locale="en"
                                        overflowMenuOnHover={true}
                                        rows={
                                          Array [
                                            Object {
                                              "CredentialField": Object {
                                                "text": "Password",
                                              },
                                              "CredentialRecord": Object {
                                                "text": "Test Credential",
                                              },
                                              "CredentialsIdentifier": Object {
                                                "text": "api_password",
                                              },
                                              "Delete": Object {
                                                "callback": "deleteMapping",
                                                "is_button": true,
                                                "kind": "danger",
                                                "size": "md",
                                                "text": "Delete",
                                              },
                                              "id": "0",
                                            },
                                            Object {
                                              "CredentialField": Object {
                                                "text": "Username",
                                              },
                                              "CredentialRecord": Object {
                                                "text": "API Credential",
                                              },
                                              "CredentialsIdentifier": Object {
                                                "text": "api_user",
                                              },
                                              "Delete": Object {
                                                "callback": "deleteMapping",
                                                "is_button": true,
                                                "kind": "danger",
                                                "size": "md",
                                                "text": "Delete",
                                              },
                                              "id": "1",
                                            },
                                          ]
                                        }
                                        size="md"
                                        sortDirection="ASC"
                                        sortRow={[Function]}
                                        stickyHeader={false}
                                        translateWithId={[Function]}
                                      >
                                        <Table
                                          isSortable={false}
                                          overflowMenuOnHover={true}
                                          size="md"
                                          stickyHeader={false}
                                        >
                                          <div
                                            className="bx--data-table-content"
                                          >
                                            <table
                                              className="bx--data-table bx--data-table--md bx--data-table--no-border"
                                            >
                                              <TableHead>
                                                <thead>
                                                  <TableRow>
                                                    <tr>
                                                      <TableHeader
                                                        className="miq-data-table-header"
                                                        isSortHeader={false}
                                                        isSortable={true}
                                                        key="CredentialsIdentifier"
                                                        onClick={[Function]}
                                                        scope="col"
                                                        sortDirection="NONE"
                                                        translateWithId={[Function]}
                                                      >
                                                        <th
                                                          aria-sort="none"
                                                          className="miq-data-table-header"
                                                          scope="col"
                                                        >
                                                          <div
                                                            id="table-sort-1"
                                                            style={
                                                              Object {
                                                                "display": "none",
                                                              }
                                                            }
                                                          >
                                                            Click to sort rows by Credentials Identifier header in ascending order
                                                          </div>
                                                          <button
                                                            aria-describedby="table-sort-1"
                                                            className="miq-data-table-header bx--table-sort"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className="bx--table-sort__flex"
                                                            >
                                                              <div
                                                                className="bx--table-header-label"
                                                              >
                                                                Credentials Identifier
                                                              </div>
                                                              <ForwardRef(ArrowUp20)
                                                                className="bx--table-sort__icon"
                                                              >
                                                                <Icon
                                                                  className="bx--table-sort__icon"
                                                                  fill="currentColor"
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="bx--table-sort__icon"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height={20}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    viewBox="0 0 32 32"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                    />
                                                                  </svg>
                                                                </Icon>
                                                              </ForwardRef(ArrowUp20)>
                                                              <ForwardRef(ArrowsVertical20)
                                                                className="bx--table-sort__icon-unsorted"
                                                              >
                                                                <Icon
                                                                  className="bx--table-sort__icon-unsorted"
                                                                  fill="currentColor"
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="bx--table-sort__icon-unsorted"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height={20}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    viewBox="0 0 32 32"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                    />
                                                                  </svg>
                                                                </Icon>
                                                              </ForwardRef(ArrowsVertical20)>
                                                            </span>
                                                          </button>
                                                        </th>
                                                      </TableHeader>
                                                      <TableHeader
                                                        className="miq-data-table-header"
                                                        isSortHeader={false}
                                                        isSortable={true}
                                                        key="CredentialRecord"
                                                        onClick={[Function]}
                                                        scope="col"
                                                        sortDirection="NONE"
                                                        translateWithId={[Function]}
                                                      >
                                                        <th
                                                          aria-sort="none"
                                                          className="miq-data-table-header"
                                                          scope="col"
                                                        >
                                                          <div
                                                            id="table-sort-2"
                                                            style={
                                                              Object {
                                                                "display": "none",
                                                              }
                                                            }
                                                          >
                                                            Click to sort rows by Credential Record header in ascending order
                                                          </div>
                                                          <button
                                                            aria-describedby="table-sort-2"
                                                            className="miq-data-table-header bx--table-sort"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className="bx--table-sort__flex"
                                                            >
                                                              <div
                                                                className="bx--table-header-label"
                                                              >
                                                                Credential Record
                                                              </div>
                                                              <ForwardRef(ArrowUp20)
                                                                className="bx--table-sort__icon"
                                                              >
                                                                <Icon
                                                                  className="bx--table-sort__icon"
                                                                  fill="currentColor"
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="bx--table-sort__icon"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height={20}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    viewBox="0 0 32 32"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                    />
                                                                  </svg>
                                                                </Icon>
                                                              </ForwardRef(ArrowUp20)>
                                                              <ForwardRef(ArrowsVertical20)
                                                                className="bx--table-sort__icon-unsorted"
                                                              >
                                                                <Icon
                                                                  className="bx--table-sort__icon-unsorted"
                                                                  fill="currentColor"
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="bx--table-sort__icon-unsorted"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height={20}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    viewBox="0 0 32 32"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                    />
                                                                  </svg>
                                                                </Icon>
                                                              </ForwardRef(ArrowsVertical20)>
                                                            </span>
                                                          </button>
                                                        </th>
                                                      </TableHeader>
                                                      <TableHeader
                                                        className="miq-data-table-header"
                                                        isSortHeader={false}
                                                        isSortable={true}
                                                        key="CredentialField"
                                                        onClick={[Function]}
                                                        scope="col"
                                                        sortDirection="NONE"
                                                        translateWithId={[Function]}
                                                      >
                                                        <th
                                                          aria-sort="none"
                                                          className="miq-data-table-header"
                                                          scope="col"
                                                        >
                                                          <div
                                                            id="table-sort-3"
                                                            style={
                                                              Object {
                                                                "display": "none",
                                                              }
                                                            }
                                                          >
                                                            Click to sort rows by Credential Field header in ascending order
                                                          </div>
                                                          <button
                                                            aria-describedby="table-sort-3"
                                                            className="miq-data-table-header bx--table-sort"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className="bx--table-sort__flex"
                                                            >
                                                              <div
                                                                className="bx--table-header-label"
                                                              >
                                                                Credential Field
                                                              </div>
                                                              <ForwardRef(ArrowUp20)
                                                                className="bx--table-sort__icon"
                                                              >
                                                                <Icon
                                                                  className="bx--table-sort__icon"
                                                                  fill="currentColor"
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="bx--table-sort__icon"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height={20}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    viewBox="0 0 32 32"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                    />
                                                                  </svg>
                                                                </Icon>
                                                              </ForwardRef(ArrowUp20)>
                                                              <ForwardRef(ArrowsVertical20)
                                                                className="bx--table-sort__icon-unsorted"
                                                              >
                                                                <Icon
                                                                  className="bx--table-sort__icon-unsorted"
                                                                  fill="currentColor"
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="bx--table-sort__icon-unsorted"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height={20}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    viewBox="0 0 32 32"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                    />
                                                                  </svg>
                                                                </Icon>
                                                              </ForwardRef(ArrowsVertical20)>
                                                            </span>
                                                          </button>
                                                        </th>
                                                      </TableHeader>
                                                      <TableHeader
                                                        className="miq-data-table-header"
                                                        isSortHeader={false}
                                                        isSortable={true}
                                                        key="Delete"
                                                        onClick={[Function]}
                                                        scope="col"
                                                        sortDirection="NONE"
                                                        translateWithId={[Function]}
                                                      >
                                                        <th
                                                          aria-sort="none"
                                                          className="miq-data-table-header"
                                                          scope="col"
                                                        >
                                                          <div
                                                            id="table-sort-4"
                                                            style={
                                                              Object {
                                                                "display": "none",
                                                              }
                                                            }
                                                          >
                                                            Click to sort rows by Delete header in ascending order
                                                          </div>
                                                          <button
                                                            aria-describedby="table-sort-4"
                                                            className="miq-data-table-header bx--table-sort"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className="bx--table-sort__flex"
                                                            >
                                                              <div
                                                                className="bx--table-header-label"
                                                              >
                                                                Delete
                                                              </div>
                                                              <ForwardRef(ArrowUp20)
                                                                className="bx--table-sort__icon"
                                                              >
                                                                <Icon
                                                                  className="bx--table-sort__icon"
                                                                  fill="currentColor"
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="bx--table-sort__icon"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height={20}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    viewBox="0 0 32 32"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                                                                    />
                                                                  </svg>
                                                                </Icon>
                                                              </ForwardRef(ArrowUp20)>
                                                              <ForwardRef(ArrowsVertical20)
                                                                className="bx--table-sort__icon-unsorted"
                                                              >
                                                                <Icon
                                                                  className="bx--table-sort__icon-unsorted"
                                                                  fill="currentColor"
                                                                  height={20}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  viewBox="0 0 32 32"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="bx--table-sort__icon-unsorted"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height={20}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    viewBox="0 0 32 32"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                                                                    />
                                                                  </svg>
                                                                </Icon>
                                                              </ForwardRef(ArrowsVertical20)>
                                                            </span>
                                                          </button>
                                                        </th>
                                                      </TableHeader>
                                                    </tr>
                                                  </TableRow>
                                                </thead>
                                              </TableHead>
                                              <TableBody
                                                aria-live="polite"
                                              >
                                                <tbody
                                                  aria-live="polite"
                                                >
                                                  <TableRow
                                                    ariaLabel="Expand current row"
                                                    className=""
                                                    disabled={false}
                                                    isExpanded={false}
                                                    isSelected={false}
                                                    key="0"
                                                    onExpand={[Function]}
                                                    onKeyPress={[Function]}
                                                    tabIndex="0"
                                                    title=""
                                                  >
                                                    <tr
                                                      disabled={false}
                                                      onKeyPress={[Function]}
                                                      tabIndex="0"
                                                      title=""
                                                    >
                                                      <MiqTableCell
                                                        cell={
                                                          Object {
                                                            "data": Object {
                                                              "text": "api_password",
                                                            },
                                                            "errors": null,
                                                            "id": "0:CredentialsIdentifier",
                                                            "info": Object {
                                                              "header": "CredentialsIdentifier",
                                                            },
                                                            "isEditable": false,
                                                            "isEditing": false,
                                                            "isValid": true,
                                                            "value": "api_password",
                                                          }
                                                        }
                                                        key="0-cellKey"
                                                        onCellClick={[Function]}
                                                        row={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "data": Object {
                                                                  "text": "api_password",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialsIdentifier",
                                                                "info": Object {
                                                                  "header": "CredentialsIdentifier",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "api_password",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Test Credential",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialRecord",
                                                                "info": Object {
                                                                  "header": "CredentialRecord",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Test Credential",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Password",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialField",
                                                                "info": Object {
                                                                  "header": "CredentialField",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Password",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "callback": "deleteMapping",
                                                                  "is_button": true,
                                                                  "kind": "danger",
                                                                  "size": "md",
                                                                  "text": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "0:Delete",
                                                                "info": Object {
                                                                  "header": "Delete",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              },
                                                            ],
                                                            "disabled": false,
                                                            "id": "0",
                                                            "isExpanded": false,
                                                            "isSelected": false,
                                                          }
                                                        }
                                                        truncate={true}
                                                      >
                                                        <TableCell
                                                          className=""
                                                          key="0:CredentialsIdentifier"
                                                          onClick={[Function]}
                                                        >
                                                          <td
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="cell"
                                                            >
                                                              <span
                                                                className="bx--front-line"
                                                                title="api_password"
                                                              >
                                                                api_password
                                                              </span>
                                                            </div>
                                                          </td>
                                                        </TableCell>
                                                      </MiqTableCell>
                                                      <MiqTableCell
                                                        cell={
                                                          Object {
                                                            "data": Object {
                                                              "text": "Test Credential",
                                                            },
                                                            "errors": null,
                                                            "id": "0:CredentialRecord",
                                                            "info": Object {
                                                              "header": "CredentialRecord",
                                                            },
                                                            "isEditable": false,
                                                            "isEditing": false,
                                                            "isValid": true,
                                                            "value": "Test Credential",
                                                          }
                                                        }
                                                        key="1-cellKey"
                                                        onCellClick={[Function]}
                                                        row={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "data": Object {
                                                                  "text": "api_password",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialsIdentifier",
                                                                "info": Object {
                                                                  "header": "CredentialsIdentifier",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "api_password",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Test Credential",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialRecord",
                                                                "info": Object {
                                                                  "header": "CredentialRecord",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Test Credential",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Password",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialField",
                                                                "info": Object {
                                                                  "header": "CredentialField",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Password",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "callback": "deleteMapping",
                                                                  "is_button": true,
                                                                  "kind": "danger",
                                                                  "size": "md",
                                                                  "text": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "0:Delete",
                                                                "info": Object {
                                                                  "header": "Delete",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              },
                                                            ],
                                                            "disabled": false,
                                                            "id": "0",
                                                            "isExpanded": false,
                                                            "isSelected": false,
                                                          }
                                                        }
                                                        truncate={true}
                                                      >
                                                        <TableCell
                                                          className=""
                                                          key="0:CredentialRecord"
                                                          onClick={[Function]}
                                                        >
                                                          <td
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="cell"
                                                            >
                                                              <span
                                                                className="bx--front-line"
                                                                title="Test Credential"
                                                              >
                                                                Test Credential
                                                              </span>
                                                            </div>
                                                          </td>
                                                        </TableCell>
                                                      </MiqTableCell>
                                                      <MiqTableCell
                                                        cell={
                                                          Object {
                                                            "data": Object {
                                                              "text": "Password",
                                                            },
                                                            "errors": null,
                                                            "id": "0:CredentialField",
                                                            "info": Object {
                                                              "header": "CredentialField",
                                                            },
                                                            "isEditable": false,
                                                            "isEditing": false,
                                                            "isValid": true,
                                                            "value": "Password",
                                                          }
                                                        }
                                                        key="2-cellKey"
                                                        onCellClick={[Function]}
                                                        row={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "data": Object {
                                                                  "text": "api_password",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialsIdentifier",
                                                                "info": Object {
                                                                  "header": "CredentialsIdentifier",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "api_password",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Test Credential",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialRecord",
                                                                "info": Object {
                                                                  "header": "CredentialRecord",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Test Credential",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Password",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialField",
                                                                "info": Object {
                                                                  "header": "CredentialField",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Password",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "callback": "deleteMapping",
                                                                  "is_button": true,
                                                                  "kind": "danger",
                                                                  "size": "md",
                                                                  "text": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "0:Delete",
                                                                "info": Object {
                                                                  "header": "Delete",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              },
                                                            ],
                                                            "disabled": false,
                                                            "id": "0",
                                                            "isExpanded": false,
                                                            "isSelected": false,
                                                          }
                                                        }
                                                        truncate={true}
                                                      >
                                                        <TableCell
                                                          className=""
                                                          key="0:CredentialField"
                                                          onClick={[Function]}
                                                        >
                                                          <td
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="cell"
                                                            >
                                                              <span
                                                                className="bx--front-line"
                                                                title="Password"
                                                              >
                                                                Password
                                                              </span>
                                                            </div>
                                                          </td>
                                                        </TableCell>
                                                      </MiqTableCell>
                                                      <MiqTableCell
                                                        cell={
                                                          Object {
                                                            "data": Object {
                                                              "callback": "deleteMapping",
                                                              "is_button": true,
                                                              "kind": "danger",
                                                              "size": "md",
                                                              "text": "Delete",
                                                            },
                                                            "errors": null,
                                                            "id": "0:Delete",
                                                            "info": Object {
                                                              "header": "Delete",
                                                            },
                                                            "isEditable": false,
                                                            "isEditing": false,
                                                            "isValid": true,
                                                            "value": "Delete",
                                                          }
                                                        }
                                                        key="3-cellKey"
                                                        onCellClick={[Function]}
                                                        row={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "data": Object {
                                                                  "text": "api_password",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialsIdentifier",
                                                                "info": Object {
                                                                  "header": "CredentialsIdentifier",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "api_password",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Test Credential",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialRecord",
                                                                "info": Object {
                                                                  "header": "CredentialRecord",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Test Credential",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Password",
                                                                },
                                                                "errors": null,
                                                                "id": "0:CredentialField",
                                                                "info": Object {
                                                                  "header": "CredentialField",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Password",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "callback": "deleteMapping",
                                                                  "is_button": true,
                                                                  "kind": "danger",
                                                                  "size": "md",
                                                                  "text": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "0:Delete",
                                                                "info": Object {
                                                                  "header": "Delete",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              },
                                                            ],
                                                            "disabled": false,
                                                            "id": "0",
                                                            "isExpanded": false,
                                                            "isSelected": false,
                                                          }
                                                        }
                                                        truncate={true}
                                                      >
                                                        <TableCell
                                                          className=""
                                                          key="0:Delete"
                                                          onClick={[Function]}
                                                        >
                                                          <td
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="cell"
                                                            >
                                                              <Button
                                                                className="miq-data-table-button"
                                                                kind="danger"
                                                                onClick={[Function]}
                                                                onKeyPress={[Function]}
                                                                size="md"
                                                                tabIndex={0}
                                                                title={
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="Delete"
                                                                  >
                                                                    Delete
                                                                  </span>
                                                                }
                                                              >
                                                                <button
                                                                  aria-describedby="danger-description-5"
                                                                  aria-pressed={null}
                                                                  className="miq-data-table-button bx--btn bx--btn--md bx--btn--danger"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyPress={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  tabIndex={0}
                                                                  title={
                                                                    <span
                                                                      className="bx--front-line"
                                                                      title="Delete"
                                                                    >
                                                                      Delete
                                                                    </span>
                                                                  }
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="bx--visually-hidden"
                                                                    id="danger-description-5"
                                                                  >
                                                                    danger
                                                                  </span>
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="Delete"
                                                                  >
                                                                    Delete
                                                                  </span>
                                                                </button>
                                                              </Button>
                                                            </div>
                                                          </td>
                                                        </TableCell>
                                                      </MiqTableCell>
                                                    </tr>
                                                  </TableRow>
                                                  <TableRow
                                                    ariaLabel="Expand current row"
                                                    className=""
                                                    disabled={false}
                                                    isExpanded={false}
                                                    isSelected={false}
                                                    key="1"
                                                    onExpand={[Function]}
                                                    onKeyPress={[Function]}
                                                    tabIndex="1"
                                                    title=""
                                                  >
                                                    <tr
                                                      disabled={false}
                                                      onKeyPress={[Function]}
                                                      tabIndex="1"
                                                      title=""
                                                    >
                                                      <MiqTableCell
                                                        cell={
                                                          Object {
                                                            "data": Object {
                                                              "text": "api_user",
                                                            },
                                                            "errors": null,
                                                            "id": "1:CredentialsIdentifier",
                                                            "info": Object {
                                                              "header": "CredentialsIdentifier",
                                                            },
                                                            "isEditable": false,
                                                            "isEditing": false,
                                                            "isValid": true,
                                                            "value": "api_user",
                                                          }
                                                        }
                                                        key="0-cellKey"
                                                        onCellClick={[Function]}
                                                        row={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "data": Object {
                                                                  "text": "api_user",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialsIdentifier",
                                                                "info": Object {
                                                                  "header": "CredentialsIdentifier",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "api_user",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "API Credential",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialRecord",
                                                                "info": Object {
                                                                  "header": "CredentialRecord",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "API Credential",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Username",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialField",
                                                                "info": Object {
                                                                  "header": "CredentialField",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Username",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "callback": "deleteMapping",
                                                                  "is_button": true,
                                                                  "kind": "danger",
                                                                  "size": "md",
                                                                  "text": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "1:Delete",
                                                                "info": Object {
                                                                  "header": "Delete",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              },
                                                            ],
                                                            "disabled": false,
                                                            "id": "1",
                                                            "isExpanded": false,
                                                            "isSelected": false,
                                                          }
                                                        }
                                                        truncate={true}
                                                      >
                                                        <TableCell
                                                          className=""
                                                          key="1:CredentialsIdentifier"
                                                          onClick={[Function]}
                                                        >
                                                          <td
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="cell"
                                                            >
                                                              <span
                                                                className="bx--front-line"
                                                                title="api_user"
                                                              >
                                                                api_user
                                                              </span>
                                                            </div>
                                                          </td>
                                                        </TableCell>
                                                      </MiqTableCell>
                                                      <MiqTableCell
                                                        cell={
                                                          Object {
                                                            "data": Object {
                                                              "text": "API Credential",
                                                            },
                                                            "errors": null,
                                                            "id": "1:CredentialRecord",
                                                            "info": Object {
                                                              "header": "CredentialRecord",
                                                            },
                                                            "isEditable": false,
                                                            "isEditing": false,
                                                            "isValid": true,
                                                            "value": "API Credential",
                                                          }
                                                        }
                                                        key="1-cellKey"
                                                        onCellClick={[Function]}
                                                        row={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "data": Object {
                                                                  "text": "api_user",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialsIdentifier",
                                                                "info": Object {
                                                                  "header": "CredentialsIdentifier",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "api_user",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "API Credential",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialRecord",
                                                                "info": Object {
                                                                  "header": "CredentialRecord",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "API Credential",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Username",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialField",
                                                                "info": Object {
                                                                  "header": "CredentialField",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Username",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "callback": "deleteMapping",
                                                                  "is_button": true,
                                                                  "kind": "danger",
                                                                  "size": "md",
                                                                  "text": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "1:Delete",
                                                                "info": Object {
                                                                  "header": "Delete",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              },
                                                            ],
                                                            "disabled": false,
                                                            "id": "1",
                                                            "isExpanded": false,
                                                            "isSelected": false,
                                                          }
                                                        }
                                                        truncate={true}
                                                      >
                                                        <TableCell
                                                          className=""
                                                          key="1:CredentialRecord"
                                                          onClick={[Function]}
                                                        >
                                                          <td
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="cell"
                                                            >
                                                              <span
                                                                className="bx--front-line"
                                                                title="API Credential"
                                                              >
                                                                API Credential
                                                              </span>
                                                            </div>
                                                          </td>
                                                        </TableCell>
                                                      </MiqTableCell>
                                                      <MiqTableCell
                                                        cell={
                                                          Object {
                                                            "data": Object {
                                                              "text": "Username",
                                                            },
                                                            "errors": null,
                                                            "id": "1:CredentialField",
                                                            "info": Object {
                                                              "header": "CredentialField",
                                                            },
                                                            "isEditable": false,
                                                            "isEditing": false,
                                                            "isValid": true,
                                                            "value": "Username",
                                                          }
                                                        }
                                                        key="2-cellKey"
                                                        onCellClick={[Function]}
                                                        row={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "data": Object {
                                                                  "text": "api_user",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialsIdentifier",
                                                                "info": Object {
                                                                  "header": "CredentialsIdentifier",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "api_user",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "API Credential",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialRecord",
                                                                "info": Object {
                                                                  "header": "CredentialRecord",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "API Credential",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Username",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialField",
                                                                "info": Object {
                                                                  "header": "CredentialField",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Username",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "callback": "deleteMapping",
                                                                  "is_button": true,
                                                                  "kind": "danger",
                                                                  "size": "md",
                                                                  "text": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "1:Delete",
                                                                "info": Object {
                                                                  "header": "Delete",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              },
                                                            ],
                                                            "disabled": false,
                                                            "id": "1",
                                                            "isExpanded": false,
                                                            "isSelected": false,
                                                          }
                                                        }
                                                        truncate={true}
                                                      >
                                                        <TableCell
                                                          className=""
                                                          key="1:CredentialField"
                                                          onClick={[Function]}
                                                        >
                                                          <td
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="cell"
                                                            >
                                                              <span
                                                                className="bx--front-line"
                                                                title="Username"
                                                              >
                                                                Username
                                                              </span>
                                                            </div>
                                                          </td>
                                                        </TableCell>
                                                      </MiqTableCell>
                                                      <MiqTableCell
                                                        cell={
                                                          Object {
                                                            "data": Object {
                                                              "callback": "deleteMapping",
                                                              "is_button": true,
                                                              "kind": "danger",
                                                              "size": "md",
                                                              "text": "Delete",
                                                            },
                                                            "errors": null,
                                                            "id": "1:Delete",
                                                            "info": Object {
                                                              "header": "Delete",
                                                            },
                                                            "isEditable": false,
                                                            "isEditing": false,
                                                            "isValid": true,
                                                            "value": "Delete",
                                                          }
                                                        }
                                                        key="3-cellKey"
                                                        onCellClick={[Function]}
                                                        row={
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "data": Object {
                                                                  "text": "api_user",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialsIdentifier",
                                                                "info": Object {
                                                                  "header": "CredentialsIdentifier",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "api_user",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "API Credential",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialRecord",
                                                                "info": Object {
                                                                  "header": "CredentialRecord",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "API Credential",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "text": "Username",
                                                                },
                                                                "errors": null,
                                                                "id": "1:CredentialField",
                                                                "info": Object {
                                                                  "header": "CredentialField",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Username",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "callback": "deleteMapping",
                                                                  "is_button": true,
                                                                  "kind": "danger",
                                                                  "size": "md",
                                                                  "text": "Delete",
                                                                },
                                                                "errors": null,
                                                                "id": "1:Delete",
                                                                "info": Object {
                                                                  "header": "Delete",
                                                                },
                                                                "isEditable": false,
                                                                "isEditing": false,
                                                                "isValid": true,
                                                                "value": "Delete",
                                                              },
                                                            ],
                                                            "disabled": false,
                                                            "id": "1",
                                                            "isExpanded": false,
                                                            "isSelected": false,
                                                          }
                                                        }
                                                        truncate={true}
                                                      >
                                                        <TableCell
                                                          className=""
                                                          key="1:Delete"
                                                          onClick={[Function]}
                                                        >
                                                          <td
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="cell"
                                                            >
                                                              <Button
                                                                className="miq-data-table-button"
                                                                kind="danger"
                                                                onClick={[Function]}
                                                                onKeyPress={[Function]}
                                                                size="md"
                                                                tabIndex={0}
                                                                title={
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="Delete"
                                                                  >
                                                                    Delete
                                                                  </span>
                                                                }
                                                              >
                                                                <button
                                                                  aria-describedby="danger-description-6"
                                                                  aria-pressed={null}
                                                                  className="miq-data-table-button bx--btn bx--btn--md bx--btn--danger"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyPress={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  tabIndex={0}
                                                                  title={
                                                                    <span
                                                                      className="bx--front-line"
                                                                      title="Delete"
                                                                    >
                                                                      Delete
                                                                    </span>
                                                                  }
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="bx--visually-hidden"
                                                                    id="danger-description-6"
                                                                  >
                                                                    danger
                                                                  </span>
                                                                  <span
                                                                    className="bx--front-line"
                                                                    title="Delete"
                                                                  >
                                                                    Delete
                                                                  </span>
                                                                </button>
                                                              </Button>
                                                            </div>
                                                          </td>
                                                        </TableCell>
                                                      </MiqTableCell>
                                                    </tr>
                                                  </TableRow>
                                                </tbody>
                                              </TableBody>
                                            </table>
                                          </div>
                                        </Table>
                                      </DataTable>
                                    </div>
                                  </MiqDataTable>
                                </div>
                              </CredentialMapperComponent>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="select"
                          id="credential_references"
                          includeEmpty={true}
                          key="credential_references"
                          label="Credential Reference"
                          name="credential_references"
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "api_password",
                                "value": "api_password",
                              },
                              Object {
                                "label": "api_user",
                                "value": "api_user",
                              },
                            ]
                          }
                          placeholder="<Choose>"
                          resolveProps={[Function]}
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "select",
                                "id": "credential_references",
                                "includeEmpty": true,
                                "label": "Credential Reference",
                                "name": "credential_references",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "api_password",
                                    "value": "api_password",
                                  },
                                  Object {
                                    "label": "api_user",
                                    "value": "api_user",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "resolveProps": [Function],
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SelectWithOnChange
                                component="select"
                                id="credential_references"
                                includeEmpty={true}
                                label="Credential Reference"
                                name="credential_references"
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "label": "api_password",
                                      "value": "api_password",
                                    },
                                    Object {
                                      "label": "api_user",
                                      "value": "api_user",
                                    },
                                  ]
                                }
                                placeholder="<Choose>"
                                resolveProps={[Function]}
                              >
                                <Select
                                  component="select"
                                  id="credential_references"
                                  label="Credential Reference"
                                  loadingMessage="Loading..."
                                  name="credential_references"
                                  options={
                                    Array [
                                      Object {
                                        "label": "<Choose>",
                                        "value": undefined,
                                      },
                                      Object {
                                        "label": "api_password",
                                        "value": "api_password",
                                      },
                                      Object {
                                        "label": "api_user",
                                        "value": "api_user",
                                      },
                                    ]
                                  }
                                  placeholder="<Choose>"
                                  resolveProps={[Function]}
                                >
                                  <Select
                                    SelectComponent={[Function]}
                                    id="credential_references"
                                    invalidText=""
                                    labelText="Credential Reference"
                                    loadOptionsChangeCounter={1}
                                    loadingMessage="Loading..."
                                    name="credential_references"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "<Choose>",
                                          "value": undefined,
                                        },
                                        Object {
                                          "label": "api_password",
                                          "value": "api_password",
                                        },
                                        Object {
                                          "label": "api_user",
                                          "value": "api_user",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                    simpleValue={false}
                                    value=""
                                  >
                                    <ClearedSelect
                                      className=""
                                      closeMenuOnSelect={true}
                                      hideSelectedOptions={false}
                                      id="credential_references"
                                      invalidText=""
                                      isClearable={false}
                                      isFetching={false}
                                      isSearchable={false}
                                      labelText="Credential Reference"
                                      name="credential_references"
                                      noOptionsMessage={[Function]}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onInputChange={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "label": "<Choose>",
                                            "value": undefined,
                                          },
                                          Object {
                                            "label": "api_password",
                                            "value": "api_password",
                                          },
                                          Object {
                                            "label": "api_user",
                                            "value": "api_user",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                      value=""
                                    >
                                      <Select
                                        className=""
                                        disabled={false}
                                        helperText=""
                                        id="credential_references"
                                        inline={false}
                                        invalid={false}
                                        invalidText=""
                                        labelText="Credential Reference"
                                        light={false}
                                        name="credential_references"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value=""
                                      >
                                        <div
                                          className="bx--form-item"
                                        >
                                          <div
                                            className="bx--select"
                                          >
                                            <label
                                              className="bx--label"
                                              htmlFor="credential_references"
                                            >
                                              Credential Reference
                                            </label>
                                            <div
                                              className="bx--select-input__wrapper"
                                              data-invalid={null}
                                            >
                                              <select
                                                className="bx--select-input"
                                                id="credential_references"
                                                name="credential_references"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value=""
                                              >
                                                <SelectItem
                                                  disabled={false}
                                                  hidden={false}
                                                  key="0"
                                                  label="<Choose>"
                                                  text="<Choose>"
                                                  value=""
                                                >
                                                  <option
                                                    className="bx--select-option"
                                                    disabled={false}
                                                    hidden={false}
                                                    label="<Choose>"
                                                    value=""
                                                  >
                                                    &lt;Choose&gt;
                                                  </option>
                                                </SelectItem>
                                                <SelectItem
                                                  disabled={false}
                                                  hidden={false}
                                                  key="api_password"
                                                  label="api_password"
                                                  text="api_password"
                                                  value="api_password"
                                                >
                                                  <option
                                                    className="bx--select-option"
                                                    disabled={false}
                                                    hidden={false}
                                                    label="api_password"
                                                    value="api_password"
                                                  >
                                                    api_password
                                                  </option>
                                                </SelectItem>
                                                <SelectItem
                                                  disabled={false}
                                                  hidden={false}
                                                  key="api_user"
                                                  label="api_user"
                                                  text="api_user"
                                                  value="api_user"
                                                >
                                                  <option
                                                    className="bx--select-option"
                                                    disabled={false}
                                                    hidden={false}
                                                    label="api_user"
                                                    value="api_user"
                                                  >
                                                    api_user
                                                  </option>
                                                </SelectItem>
                                              </select>
                                              <ForwardRef(ChevronDown16)
                                                className="bx--select__arrow"
                                              >
                                                <Icon
                                                  className="bx--select__arrow"
                                                  fill="currentColor"
                                                  height={16}
                                                  preserveAspectRatio="xMidYMid meet"
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="bx--select__arrow"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    height={16}
                                                    preserveAspectRatio="xMidYMid meet"
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                    />
                                                  </svg>
                                                </Icon>
                                              </ForwardRef(ChevronDown16)>
                                            </div>
                                          </div>
                                        </div>
                                      </Select>
                                    </ClearedSelect>
                                  </Select>
                                </Select>
                              </SelectWithOnChange>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          condition={
                            Object {
                              "isNotEmpty": true,
                              "when": "credential_references",
                            }
                          }
                          fields={
                            Array [
                              Object {
                                "component": "select",
                                "id": "workflow_credentials",
                                "includeEmpty": true,
                                "label": "Workflow Credential",
                                "name": "workflow_credentials",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "Test Credential",
                                    "value": "test_credential",
                                  },
                                  Object {
                                    "label": "API Credential",
                                    "value": "api_credential",
                                  },
                                ],
                                "placeholder": "<Choose>",
                              },
                              Object {
                                "component": "select",
                                "id": "credential_field",
                                "includeEmpty": true,
                                "label": "Credential Field",
                                "name": "credential_field",
                                "onChange": [Function],
                                "options": Array [
                                  Object {
                                    "label": "Username",
                                    "value": "userid",
                                  },
                                  Object {
                                    "label": "Password",
                                    "value": "password",
                                  },
                                  Object {
                                    "label": "Private key",
                                    "value": "auth_key",
                                  },
                                  Object {
                                    "label": "Private key passphrase",
                                    "value": "auth_key_password",
                                  },
                                ],
                                "placeholder": "<Choose>",
                              },
                            ]
                          }
                          id="workflow_credentials_section"
                          key="workflow_credentials_section"
                          name="workflow_credentials_section"
                        >
                          <FormConditionWrapper
                            condition={
                              Object {
                                "isNotEmpty": true,
                                "when": "credential_references",
                              }
                            }
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "select",
                                    "id": "workflow_credentials",
                                    "includeEmpty": true,
                                    "label": "Workflow Credential",
                                    "name": "workflow_credentials",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "Test Credential",
                                        "value": "test_credential",
                                      },
                                      Object {
                                        "label": "API Credential",
                                        "value": "api_credential",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                  },
                                  Object {
                                    "component": "select",
                                    "id": "credential_field",
                                    "includeEmpty": true,
                                    "label": "Credential Field",
                                    "name": "credential_field",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "Username",
                                        "value": "userid",
                                      },
                                      Object {
                                        "label": "Password",
                                        "value": "password",
                                      },
                                      Object {
                                        "label": "Private key",
                                        "value": "auth_key",
                                      },
                                      Object {
                                        "label": "Private key passphrase",
                                        "value": "auth_key_password",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                  },
                                ],
                                "id": "workflow_credentials_section",
                                "name": "workflow_credentials_section",
                              }
                            }
                          >
                            <ConditionTriggerDetector
                              condition={
                                Object {
                                  "isNotEmpty": true,
                                  "when": "credential_references",
                                }
                              }
                              field={
                                Object {
                                  "component": "sub-form",
                                  "fields": Array [
                                    Object {
                                      "component": "select",
                                      "id": "workflow_credentials",
                                      "includeEmpty": true,
                                      "label": "Workflow Credential",
                                      "name": "workflow_credentials",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "Test Credential",
                                          "value": "test_credential",
                                        },
                                        Object {
                                          "label": "API Credential",
                                          "value": "api_credential",
                                        },
                                      ],
                                      "placeholder": "<Choose>",
                                    },
                                    Object {
                                      "component": "select",
                                      "id": "credential_field",
                                      "includeEmpty": true,
                                      "label": "Credential Field",
                                      "name": "credential_field",
                                      "onChange": [Function],
                                      "options": Array [
                                        Object {
                                          "label": "Username",
                                          "value": "userid",
                                        },
                                        Object {
                                          "label": "Password",
                                          "value": "password",
                                        },
                                        Object {
                                          "label": "Private key",
                                          "value": "auth_key",
                                        },
                                        Object {
                                          "label": "Private key passphrase",
                                          "value": "auth_key_password",
                                        },
                                      ],
                                      "placeholder": "<Choose>",
                                    },
                                  ],
                                  "id": "workflow_credentials_section",
                                  "name": "workflow_credentials_section",
                                }
                              }
                              triggers={
                                Array [
                                  "credential_references",
                                ]
                              }
                            >
                              <ForwardRef(Field)
                                name="credential_references"
                                subscription={
                                  Object {
                                    "value": true,
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "isNotEmpty": true,
                                      "when": "credential_references",
                                    }
                                  }
                                  field={
                                    Object {
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "select",
                                          "id": "workflow_credentials",
                                          "includeEmpty": true,
                                          "label": "Workflow Credential",
                                          "name": "workflow_credentials",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "Test Credential",
                                              "value": "test_credential",
                                            },
                                            Object {
                                              "label": "API Credential",
                                              "value": "api_credential",
                                            },
                                          ],
                                          "placeholder": "<Choose>",
                                        },
                                        Object {
                                          "component": "select",
                                          "id": "credential_field",
                                          "includeEmpty": true,
                                          "label": "Credential Field",
                                          "name": "credential_field",
                                          "onChange": [Function],
                                          "options": Array [
                                            Object {
                                              "label": "Username",
                                              "value": "userid",
                                            },
                                            Object {
                                              "label": "Password",
                                              "value": "password",
                                            },
                                            Object {
                                              "label": "Private key",
                                              "value": "auth_key",
                                            },
                                            Object {
                                              "label": "Private key passphrase",
                                              "value": "auth_key_password",
                                            },
                                          ],
                                          "placeholder": "<Choose>",
                                        },
                                      ],
                                      "id": "workflow_credentials_section",
                                      "name": "workflow_credentials_section",
                                    }
                                  }
                                  triggers={Array []}
                                  values={
                                    Object {
                                      "credential_references": "",
                                    }
                                  }
                                >
                                  <ConditionTriggerWrapper
                                    condition={
                                      Object {
                                        "isNotEmpty": true,
                                        "when": "credential_references",
                                      }
                                    }
                                    field={
                                      Object {
                                        "component": "sub-form",
                                        "fields": Array [
                                          Object {
                                            "component": "select",
                                            "id": "workflow_credentials",
                                            "includeEmpty": true,
                                            "label": "Workflow Credential",
                                            "name": "workflow_credentials",
                                            "onChange": [Function],
                                            "options": Array [
                                              Object {
                                                "label": "Test Credential",
                                                "value": "test_credential",
                                              },
                                              Object {
                                                "label": "API Credential",
                                                "value": "api_credential",
                                              },
                                            ],
                                            "placeholder": "<Choose>",
                                          },
                                          Object {
                                            "component": "select",
                                            "id": "credential_field",
                                            "includeEmpty": true,
                                            "label": "Credential Field",
                                            "name": "credential_field",
                                            "onChange": [Function],
                                            "options": Array [
                                              Object {
                                                "label": "Username",
                                                "value": "userid",
                                              },
                                              Object {
                                                "label": "Password",
                                                "value": "password",
                                              },
                                              Object {
                                                "label": "Private key",
                                                "value": "auth_key",
                                              },
                                              Object {
                                                "label": "Private key passphrase",
                                                "value": "auth_key_password",
                                              },
                                            ],
                                            "placeholder": "<Choose>",
                                          },
                                        ],
                                        "id": "workflow_credentials_section",
                                        "name": "workflow_credentials_section",
                                      }
                                    }
                                    values={
                                      Object {
                                        "credential_references": "",
                                      }
                                    }
                                  >
                                    <Component
                                      condition={
                                        Object {
                                          "isNotEmpty": true,
                                          "when": "credential_references",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "select",
                                              "id": "workflow_credentials",
                                              "includeEmpty": true,
                                              "label": "Workflow Credential",
                                              "name": "workflow_credentials",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "Test Credential",
                                                  "value": "test_credential",
                                                },
                                                Object {
                                                  "label": "API Credential",
                                                  "value": "api_credential",
                                                },
                                              ],
                                              "placeholder": "<Choose>",
                                            },
                                            Object {
                                              "component": "select",
                                              "id": "credential_field",
                                              "includeEmpty": true,
                                              "label": "Credential Field",
                                              "name": "credential_field",
                                              "onChange": [Function],
                                              "options": Array [
                                                Object {
                                                  "label": "Username",
                                                  "value": "userid",
                                                },
                                                Object {
                                                  "label": "Password",
                                                  "value": "password",
                                                },
                                                Object {
                                                  "label": "Private key",
                                                  "value": "auth_key",
                                                },
                                                Object {
                                                  "label": "Private key passphrase",
                                                  "value": "auth_key_password",
                                                },
                                              ],
                                              "placeholder": "<Choose>",
                                            },
                                          ],
                                          "id": "workflow_credentials_section",
                                          "name": "workflow_credentials_section",
                                        }
                                      }
                                      values={
                                        Object {
                                          "credential_references": "",
                                        }
                                      }
                                    />
                                  </ConditionTriggerWrapper>
                                </ConditionTriggerDetector>
                              </ForwardRef(Field)>
                            </ConditionTriggerDetector>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="spy-field"
                          key="spy-field"
                          name="spy-field"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "spy-field",
                                "initialize": undefined,
                                "name": "spy-field",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SpyField
                                component="spy-field"
                                name="spy-field"
                              >
                                <FormSpy
                                  onChange={[Function]}
                                  subscription={
                                    Object {
                                      "pristine": true,
                                      "valid": true,
                                    }
                                  }
                                />
                              </SpyField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <FormSpy>
                          <FormControls
                            Button={[Function]}
                            ButtonGroup={[Function]}
                            FormSpy={[Function]}
                            buttonOrder={
                              Array [
                                "submit",
                                "reset",
                                "cancel",
                              ]
                            }
                            canReset={true}
                            cancelLabel="Cancel"
                            disableSubmit={true}
                            formFields={
                              Array [
                                <SingleField
                                  component="credential-mapper"
                                  id="credential-mapping-table"
                                  name="credential-mapping-table"
                                  onCellClick={[Function]}
                                  rows={
                                    Array [
                                      Object {
                                        "CredentialField": Object {
                                          "text": "Password",
                                        },
                                        "CredentialRecord": Object {
                                          "text": "Test Credential",
                                        },
                                        "CredentialsIdentifier": Object {
                                          "text": "api_password",
                                        },
                                        "Delete": Object {
                                          "callback": "deleteMapping",
                                          "is_button": true,
                                          "kind": "danger",
                                          "size": "md",
                                          "text": "Delete",
                                        },
                                        "id": "0",
                                      },
                                      Object {
                                        "CredentialField": Object {
                                          "text": "Username",
                                        },
                                        "CredentialRecord": Object {
                                          "text": "API Credential",
                                        },
                                        "CredentialsIdentifier": Object {
                                          "text": "api_user",
                                        },
                                        "Delete": Object {
                                          "callback": "deleteMapping",
                                          "is_button": true,
                                          "kind": "danger",
                                          "size": "md",
                                          "text": "Delete",
                                        },
                                        "id": "1",
                                      },
                                    ]
                                  }
                                />,
                                <SingleField
                                  component="select"
                                  id="credential_references"
                                  includeEmpty={true}
                                  label="Credential Reference"
                                  name="credential_references"
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "api_password",
                                        "value": "api_password",
                                      },
                                      Object {
                                        "label": "api_user",
                                        "value": "api_user",
                                      },
                                    ]
                                  }
                                  placeholder="<Choose>"
                                  resolveProps={[Function]}
                                />,
                                <SingleField
                                  component="sub-form"
                                  condition={
                                    Object {
                                      "isNotEmpty": true,
                                      "when": "credential_references",
                                    }
                                  }
                                  fields={
                                    Array [
                                      Object {
                                        "component": "select",
                                        "id": "workflow_credentials",
                                        "includeEmpty": true,
                                        "label": "Workflow Credential",
                                        "name": "workflow_credentials",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "Test Credential",
                                            "value": "test_credential",
                                          },
                                          Object {
                                            "label": "API Credential",
                                            "value": "api_credential",
                                          },
                                        ],
                                        "placeholder": "<Choose>",
                                      },
                                      Object {
                                        "component": "select",
                                        "id": "credential_field",
                                        "includeEmpty": true,
                                        "label": "Credential Field",
                                        "name": "credential_field",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "Username",
                                            "value": "userid",
                                          },
                                          Object {
                                            "label": "Password",
                                            "value": "password",
                                          },
                                          Object {
                                            "label": "Private key",
                                            "value": "auth_key",
                                          },
                                          Object {
                                            "label": "Private key passphrase",
                                            "value": "auth_key_password",
                                          },
                                        ],
                                        "placeholder": "<Choose>",
                                      },
                                    ]
                                  }
                                  id="workflow_credentials_section"
                                  name="workflow_credentials_section"
                                />,
                                <SingleField
                                  component="spy-field"
                                  name="spy-field"
                                />,
                              ]
                            }
                            formSpyProps={
                              Object {
                                "active": undefined,
                                "dirty": false,
                                "dirtyFields": Object {},
                                "dirtyFieldsSinceLastSubmit": Object {},
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "errors": Object {},
                                "form": Object {
                                  "batch": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "destroyOnUnregister": false,
                                  "focus": [Function],
                                  "getFieldState": [Function],
                                  "getRegisteredFields": [Function],
                                  "getState": [Function],
                                  "initialize": [Function],
                                  "isValidationPaused": [Function],
                                  "mutators": Object {
                                    "concat": [Function],
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeBatch": [Function],
                                    "shift": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                    "update": [Function],
                                  },
                                  "pauseValidation": [Function],
                                  "registerField": [Function],
                                  "reset": [Function],
                                  "resetFieldState": [Function],
                                  "restart": [Function],
                                  "resumeValidation": [Function],
                                  "setConfig": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "hasSubmitErrors": false,
                                "hasValidationErrors": false,
                                "initialValues": Object {
                                  "credentials": Object {
                                    "api_password": Object {
                                      "credential_field": "password",
                                      "credential_ref": "test_credential",
                                    },
                                    "api_user": Object {
                                      "credential_field": "userid",
                                      "credential_ref": "api_credential",
                                    },
                                  },
                                  "name": "test-workflow.asl",
                                },
                                "invalid": false,
                                "modified": Object {},
                                "modifiedSinceLastSubmit": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitErrors": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "touched": Object {},
                                "valid": true,
                                "validating": false,
                                "values": Object {
                                  "credentials": Object {
                                    "api_password": Object {
                                      "credential_field": "password",
                                      "credential_ref": "test_credential",
                                    },
                                    "api_user": Object {
                                      "credential_field": "userid",
                                      "credential_ref": "api_credential",
                                    },
                                  },
                                  "name": "test-workflow.asl",
                                },
                                "visited": Object {},
                              }
                            }
                            onCancel={[Function]}
                            onReset={[Function]}
                            resetLabel="Reset"
                            schema={
                              Object {
                                "fields": Array [
                                  Object {
                                    "component": "credential-mapper",
                                    "id": "credential-mapping-table",
                                    "name": "credential-mapping-table",
                                    "onCellClick": [Function],
                                    "rows": Array [
                                      Object {
                                        "CredentialField": Object {
                                          "text": "Password",
                                        },
                                        "CredentialRecord": Object {
                                          "text": "Test Credential",
                                        },
                                        "CredentialsIdentifier": Object {
                                          "text": "api_password",
                                        },
                                        "Delete": Object {
                                          "callback": "deleteMapping",
                                          "is_button": true,
                                          "kind": "danger",
                                          "size": "md",
                                          "text": "Delete",
                                        },
                                        "id": "0",
                                      },
                                      Object {
                                        "CredentialField": Object {
                                          "text": "Username",
                                        },
                                        "CredentialRecord": Object {
                                          "text": "API Credential",
                                        },
                                        "CredentialsIdentifier": Object {
                                          "text": "api_user",
                                        },
                                        "Delete": Object {
                                          "callback": "deleteMapping",
                                          "is_button": true,
                                          "kind": "danger",
                                          "size": "md",
                                          "text": "Delete",
                                        },
                                        "id": "1",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "id": "credential_references",
                                    "includeEmpty": true,
                                    "label": "Credential Reference",
                                    "name": "credential_references",
                                    "onChange": [Function],
                                    "options": Array [
                                      Object {
                                        "label": "api_password",
                                        "value": "api_password",
                                      },
                                      Object {
                                        "label": "api_user",
                                        "value": "api_user",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "resolveProps": [Function],
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "condition": Object {
                                      "isNotEmpty": true,
                                      "when": "credential_references",
                                    },
                                    "fields": Array [
                                      Object {
                                        "component": "select",
                                        "id": "workflow_credentials",
                                        "includeEmpty": true,
                                        "label": "Workflow Credential",
                                        "name": "workflow_credentials",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "Test Credential",
                                            "value": "test_credential",
                                          },
                                          Object {
                                            "label": "API Credential",
                                            "value": "api_credential",
                                          },
                                        ],
                                        "placeholder": "<Choose>",
                                      },
                                      Object {
                                        "component": "select",
                                        "id": "credential_field",
                                        "includeEmpty": true,
                                        "label": "Credential Field",
                                        "name": "credential_field",
                                        "onChange": [Function],
                                        "options": Array [
                                          Object {
                                            "label": "Username",
                                            "value": "userid",
                                          },
                                          Object {
                                            "label": "Password",
                                            "value": "password",
                                          },
                                          Object {
                                            "label": "Private key",
                                            "value": "auth_key",
                                          },
                                          Object {
                                            "label": "Private key passphrase",
                                            "value": "auth_key_password",
                                          },
                                        ],
                                        "placeholder": "<Choose>",
                                      },
                                    ],
                                    "id": "workflow_credentials_section",
                                    "name": "workflow_credentials_section",
                                  },
                                  Object {
                                    "component": "spy-field",
                                    "initialize": undefined,
                                    "name": "spy-field",
                                  },
                                ],
                              }
                            }
                            submitLabel="Save"
                          >
                            <ButtonGroup>
                              <ButtonSet
                                className=""
                              >
                                <div
                                  className="bx--btn-set"
                                >
                                  <Button
                                    buttonType="submit"
                                    disabled={true}
                                    key="form-submit"
                                    label="Save"
                                    type="submit"
                                    variant="primary"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="primary"
                                      type="submit"
                                      variant="primary"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--primary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="submit"
                                        variant="primary"
                                      >
                                        Save
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="reset"
                                    disabled={true}
                                    key="form-reset"
                                    label="Reset"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Reset
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="cancel"
                                    key="form-cancel"
                                    label="Cancel"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Cancel
                                      </button>
                                    </Button>
                                  </Button>
                                </div>
                              </ButtonSet>
                            </ButtonGroup>
                          </FormControls>
                        </FormSpy>
                         
                      </form>
                    </Form>
                  </Form>
                </FormTemplate>
              </WrappedFormTemplate>
            </Component>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </WorkflowCredentialMappingForm>
</Provider>
`;
