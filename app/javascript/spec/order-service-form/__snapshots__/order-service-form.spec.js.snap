// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Order Service Form Component should edit template with a parent and children 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <VmEditForm
    displayName="Template"
    emsId="22"
    isTemplate={true}
    recordId="2686"
  >
    <Loading
      active={true}
      className="export-spinner"
      description="Active loading indicator"
      small={true}
      withOverlay={false}
    >
      <div
        aria-atomic="true"
        aria-labelledby="loading-id-3"
        aria-live="assertive"
        className="export-spinner bx--loading bx--loading--small"
      >
        <label
          className="bx--visually-hidden"
          id="loading-id-3"
        >
          Active loading indicator
        </label>
        <svg
          className="bx--loading__svg"
          viewBox="0 0 100 100"
        >
          <title>
            Active loading indicator
          </title>
          <circle
            className="bx--loading__background"
            cx="50%"
            cy="50%"
            r="44"
          />
          <circle
            className="bx--loading__stroke"
            cx="50%"
            cy="50%"
            r="44"
          />
        </svg>
      </div>
    </Loading>
  </VmEditForm>
</Provider>
`;

exports[`Order Service Form Component should edit template with no parent and children 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <VmEditForm
    displayName="Template"
    emsId="22"
    isTemplate={true}
    recordId="2686"
  >
    <Loading
      active={true}
      className="export-spinner"
      description="Active loading indicator"
      small={true}
      withOverlay={false}
    >
      <div
        aria-atomic="true"
        aria-labelledby="loading-id-4"
        aria-live="assertive"
        className="export-spinner bx--loading bx--loading--small"
      >
        <label
          className="bx--visually-hidden"
          id="loading-id-4"
        >
          Active loading indicator
        </label>
        <svg
          className="bx--loading__svg"
          viewBox="0 0 100 100"
        >
          <title>
            Active loading indicator
          </title>
          <circle
            className="bx--loading__background"
            cx="50%"
            cy="50%"
            r="44"
          />
          <circle
            className="bx--loading__stroke"
            cx="50%"
            cy="50%"
            r="44"
          />
        </svg>
      </div>
    </Loading>
  </VmEditForm>
</Provider>
`;

exports[`Order Service Form Component should edit vm with a parent and children 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <VmEditForm
    displayName="Virtual Machine"
    emsId="56"
    isTemplate={false}
    recordId="4671"
  >
    <Loading
      active={true}
      className="export-spinner"
      description="Active loading indicator"
      small={true}
      withOverlay={false}
    >
      <div
        aria-atomic="true"
        aria-labelledby="loading-id-1"
        aria-live="assertive"
        className="export-spinner bx--loading bx--loading--small"
      >
        <label
          className="bx--visually-hidden"
          id="loading-id-1"
        >
          Active loading indicator
        </label>
        <svg
          className="bx--loading__svg"
          viewBox="0 0 100 100"
        >
          <title>
            Active loading indicator
          </title>
          <circle
            className="bx--loading__background"
            cx="50%"
            cy="50%"
            r="44"
          />
          <circle
            className="bx--loading__stroke"
            cx="50%"
            cy="50%"
            r="44"
          />
        </svg>
      </div>
    </Loading>
  </VmEditForm>
</Provider>
`;

exports[`Order Service Form Component should edit vm with no parent or children 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <VmEditForm
    displayName="Virtual Machine"
    emsId="56"
    isTemplate={false}
    recordId="4671"
  >
    <Loading
      active={true}
      className="export-spinner"
      description="Active loading indicator"
      small={true}
      withOverlay={false}
    >
      <div
        aria-atomic="true"
        aria-labelledby="loading-id-2"
        aria-live="assertive"
        className="export-spinner bx--loading bx--loading--small"
      >
        <label
          className="bx--visually-hidden"
          id="loading-id-2"
        >
          Active loading indicator
        </label>
        <svg
          className="bx--loading__svg"
          viewBox="0 0 100 100"
        >
          <title>
            Active loading indicator
          </title>
          <circle
            className="bx--loading__background"
            cx="50%"
            cy="50%"
            r="44"
          />
          <circle
            className="bx--loading__stroke"
            cx="50%"
            cy="50%"
            r="44"
          />
        </svg>
      </div>
    </Loading>
  </VmEditForm>
</Provider>
`;

exports[`Order Service Form Component should render order service form 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <OrderServiceForm
    initialData={
      Object {
        "apiAction": "order",
        "apiSubmitEndpoint": "/api/service_catalogs/9/service_templates/14",
        "dialogId": 10,
        "finishSubmitEndpoint": "/miq_request/show_list",
        "openUrl": false,
        "realTargetType": "ServiceTemplate",
        "resourceActionId": 2018,
        "targetId": 14,
        "targetType": "service_template",
      }
    }
  />
</Provider>
`;
