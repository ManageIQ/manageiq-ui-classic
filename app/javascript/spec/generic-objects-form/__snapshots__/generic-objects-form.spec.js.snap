// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generic Object Form Component should render adding a new generic object 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <GenericObjectForm>
    <Connect(MiqFormRenderer)
      buttonsLabels={
        Object {
          "submitLabel": "Add",
        }
      }
      canReset={false}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-edit": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      onCancel={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "text-field",
              "id": "name",
              "isRequired": true,
              "label": "Name",
              "maxLength": 255,
              "name": "name",
              "validate": Array [
                Object {
                  "type": "required",
                },
              ],
            },
            Object {
              "component": "text-field",
              "id": "description",
              "isRequired": true,
              "label": "Description",
              "maxLength": 255,
              "name": "description",
              "validate": Array [
                Object {
                  "type": "required",
                },
              ],
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "AddButtonProps": Object {
                    "size": "small",
                  },
                  "RemoveButtonProps": Object {
                    "size": "small",
                  },
                  "buttonLabels": Object {
                    "add": "Add",
                    "remove": "Remove",
                  },
                  "component": "field-array",
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "label": "Name",
                      "name": "attributes_name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                        Object {
                          "type": "syntax",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "includeEmpty": true,
                      "label": "Type",
                      "loadOptions": [Function],
                      "name": "type",
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                  "id": "attributes",
                  "label": "Attributes",
                  "name": "attributes",
                  "noItemsMessage": "None",
                },
              ],
              "id": "generic-objects-field-array-attributes",
              "key": "generic-objects-field-array-attributes",
              "name": "generic-objects-field-array-attributes",
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "AddButtonProps": Object {
                    "size": "small",
                  },
                  "RemoveButtonProps": Object {
                    "size": "small",
                  },
                  "buttonLabels": Object {
                    "add": "Add",
                    "remove": "Remove",
                  },
                  "component": "field-array",
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "label": "Name",
                      "name": "associations_name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                        Object {
                          "type": "syntax",
                        },
                      ],
                    },
                    Object {
                      "className": "class",
                      "component": "select",
                      "id": "class",
                      "isSearchable": true,
                      "label": "Class",
                      "name": "class",
                      "options": Array [
                        Object {
                          "label": "Bottleneck Event",
                          "value": "BottleneckEvent",
                        },
                        Object {
                          "label": "Performance - Container Project",
                          "value": "ContainerProjectPerformance",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "simpleValue": true,
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                  "id": "associations",
                  "label": "Associations",
                  "name": "associations",
                  "noItemsMessage": "None",
                },
              ],
              "id": "generic-objects-field-array-associations",
              "key": "generic-objects-field-array-associations",
              "name": "generic-objects-field-array-associations",
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "AddButtonProps": Object {
                    "size": "small",
                  },
                  "RemoveButtonProps": Object {
                    "size": "small",
                  },
                  "buttonLabels": Object {
                    "add": "Add",
                    "remove": "Remove",
                  },
                  "component": "field-array",
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "label": "Name",
                      "name": "methods_name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                        Object {
                          "type": "syntax",
                        },
                      ],
                    },
                  ],
                  "id": "methods",
                  "label": "Methods",
                  "name": "methods",
                  "noItemsMessage": "None",
                },
              ],
              "id": "generic-objects-field-array-methods",
              "key": "generic-objects-field-array-methods",
              "name": "generic-objects-field-array-methods",
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "component": "file-upload",
                  "label": "Custom Image File",
                  "name": "file_upload",
                  "type": "file",
                  "validate": Array [
                    Object {
                      "maxSize": 5000000,
                      "type": "file",
                    },
                  ],
                },
              ],
              "id": "file_section",
              "name": "file_section",
            },
          ],
        }
      }
      validate={[Function]}
      validatorMapper={
        Object {
          "dateRange": [Function],
          "file": [Function],
          "syntax": [Function],
        }
      }
    >
      <MiqFormRenderer
        buttonsLabels={
          Object {
            "submitLabel": "Add",
          }
        }
        canReset={false}
        className="form-react"
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-edit": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        onCancel={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "text-field",
                "id": "name",
                "isRequired": true,
                "label": "Name",
                "maxLength": 255,
                "name": "name",
                "validate": Array [
                  Object {
                    "type": "required",
                  },
                ],
              },
              Object {
                "component": "text-field",
                "id": "description",
                "isRequired": true,
                "label": "Description",
                "maxLength": 255,
                "name": "description",
                "validate": Array [
                  Object {
                    "type": "required",
                  },
                ],
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "AddButtonProps": Object {
                      "size": "small",
                    },
                    "RemoveButtonProps": Object {
                      "size": "small",
                    },
                    "buttonLabels": Object {
                      "add": "Add",
                      "remove": "Remove",
                    },
                    "component": "field-array",
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "label": "Name",
                        "name": "attributes_name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                          Object {
                            "type": "syntax",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "includeEmpty": true,
                        "label": "Type",
                        "loadOptions": [Function],
                        "name": "type",
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                    ],
                    "id": "attributes",
                    "label": "Attributes",
                    "name": "attributes",
                    "noItemsMessage": "None",
                  },
                ],
                "id": "generic-objects-field-array-attributes",
                "key": "generic-objects-field-array-attributes",
                "name": "generic-objects-field-array-attributes",
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "AddButtonProps": Object {
                      "size": "small",
                    },
                    "RemoveButtonProps": Object {
                      "size": "small",
                    },
                    "buttonLabels": Object {
                      "add": "Add",
                      "remove": "Remove",
                    },
                    "component": "field-array",
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "label": "Name",
                        "name": "associations_name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                          Object {
                            "type": "syntax",
                          },
                        ],
                      },
                      Object {
                        "className": "class",
                        "component": "select",
                        "id": "class",
                        "isSearchable": true,
                        "label": "Class",
                        "name": "class",
                        "options": Array [
                          Object {
                            "label": "Bottleneck Event",
                            "value": "BottleneckEvent",
                          },
                          Object {
                            "label": "Performance - Container Project",
                            "value": "ContainerProjectPerformance",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "simpleValue": true,
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                    ],
                    "id": "associations",
                    "label": "Associations",
                    "name": "associations",
                    "noItemsMessage": "None",
                  },
                ],
                "id": "generic-objects-field-array-associations",
                "key": "generic-objects-field-array-associations",
                "name": "generic-objects-field-array-associations",
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "AddButtonProps": Object {
                      "size": "small",
                    },
                    "RemoveButtonProps": Object {
                      "size": "small",
                    },
                    "buttonLabels": Object {
                      "add": "Add",
                      "remove": "Remove",
                    },
                    "component": "field-array",
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "label": "Name",
                        "name": "methods_name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                          Object {
                            "type": "syntax",
                          },
                        ],
                      },
                    ],
                    "id": "methods",
                    "label": "Methods",
                    "name": "methods",
                    "noItemsMessage": "None",
                  },
                ],
                "id": "generic-objects-field-array-methods",
                "key": "generic-objects-field-array-methods",
                "name": "generic-objects-field-array-methods",
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "component": "file-upload",
                    "label": "Custom Image File",
                    "name": "file_upload",
                    "type": "file",
                    "validate": Array [
                      Object {
                        "maxSize": 5000000,
                        "type": "file",
                      },
                    ],
                  },
                ],
                "id": "file_section",
                "name": "file_section",
              },
            ],
          }
        }
        showFormControls={true}
        validate={[Function]}
        validatorMapper={
          Object {
            "dateRange": [Function],
            "file": [Function],
            "syntax": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-edit": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={Object {}}
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "text-field",
                  "id": "name",
                  "isRequired": true,
                  "label": "Name",
                  "maxLength": 255,
                  "name": "name",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "text-field",
                  "id": "description",
                  "isRequired": true,
                  "label": "Description",
                  "maxLength": 255,
                  "name": "description",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "AddButtonProps": Object {
                        "size": "small",
                      },
                      "RemoveButtonProps": Object {
                        "size": "small",
                      },
                      "buttonLabels": Object {
                        "add": "Add",
                        "remove": "Remove",
                      },
                      "component": "field-array",
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "label": "Name",
                          "name": "attributes_name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                            Object {
                              "type": "syntax",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "includeEmpty": true,
                          "label": "Type",
                          "loadOptions": [Function],
                          "name": "type",
                          "placeholder": "<Choose>",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ],
                      "id": "attributes",
                      "label": "Attributes",
                      "name": "attributes",
                      "noItemsMessage": "None",
                    },
                  ],
                  "id": "generic-objects-field-array-attributes",
                  "key": "generic-objects-field-array-attributes",
                  "name": "generic-objects-field-array-attributes",
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "AddButtonProps": Object {
                        "size": "small",
                      },
                      "RemoveButtonProps": Object {
                        "size": "small",
                      },
                      "buttonLabels": Object {
                        "add": "Add",
                        "remove": "Remove",
                      },
                      "component": "field-array",
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "label": "Name",
                          "name": "associations_name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                            Object {
                              "type": "syntax",
                            },
                          ],
                        },
                        Object {
                          "className": "class",
                          "component": "select",
                          "id": "class",
                          "isSearchable": true,
                          "label": "Class",
                          "name": "class",
                          "options": Array [
                            Object {
                              "label": "Bottleneck Event",
                              "value": "BottleneckEvent",
                            },
                            Object {
                              "label": "Performance - Container Project",
                              "value": "ContainerProjectPerformance",
                            },
                          ],
                          "placeholder": "<Choose>",
                          "simpleValue": true,
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ],
                      "id": "associations",
                      "label": "Associations",
                      "name": "associations",
                      "noItemsMessage": "None",
                    },
                  ],
                  "id": "generic-objects-field-array-associations",
                  "key": "generic-objects-field-array-associations",
                  "name": "generic-objects-field-array-associations",
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "AddButtonProps": Object {
                        "size": "small",
                      },
                      "RemoveButtonProps": Object {
                        "size": "small",
                      },
                      "buttonLabels": Object {
                        "add": "Add",
                        "remove": "Remove",
                      },
                      "component": "field-array",
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "label": "Name",
                          "name": "methods_name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                            Object {
                              "type": "syntax",
                            },
                          ],
                        },
                      ],
                      "id": "methods",
                      "label": "Methods",
                      "name": "methods",
                      "noItemsMessage": "None",
                    },
                  ],
                  "id": "generic-objects-field-array-methods",
                  "key": "generic-objects-field-array-methods",
                  "name": "generic-objects-field-array-methods",
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "component": "file-upload",
                      "label": "Custom Image File",
                      "name": "file_upload",
                      "type": "file",
                      "validate": Array [
                        Object {
                          "maxSize": 5000000,
                          "type": "file",
                        },
                      ],
                    },
                  ],
                  "id": "file_section",
                  "name": "file_section",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validate={[Function]}
          validatorMapper={
            Object {
              "dateRange": [Function],
              "file": [Function],
              "syntax": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={Object {}}
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
            validate={[Function]}
          >
            <Component
              formFields={
                Array [
                  <SingleField
                    component="text-field"
                    id="name"
                    isRequired={true}
                    label="Name"
                    maxLength={255}
                    name="name"
                    validate={
                      Array [
                        Object {
                          "type": "required",
                        },
                      ]
                    }
                  />,
                  <SingleField
                    component="text-field"
                    id="description"
                    isRequired={true}
                    label="Description"
                    maxLength={255}
                    name="description"
                    validate={
                      Array [
                        Object {
                          "type": "required",
                        },
                      ]
                    }
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "attributes_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "includeEmpty": true,
                              "label": "Type",
                              "loadOptions": [Function],
                              "name": "type",
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "attributes",
                          "label": "Attributes",
                          "name": "attributes",
                          "noItemsMessage": "None",
                        },
                      ]
                    }
                    id="generic-objects-field-array-attributes"
                    name="generic-objects-field-array-attributes"
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "associations_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "className": "class",
                              "component": "select",
                              "id": "class",
                              "isSearchable": true,
                              "label": "Class",
                              "name": "class",
                              "options": Array [
                                Object {
                                  "label": "Bottleneck Event",
                                  "value": "BottleneckEvent",
                                },
                                Object {
                                  "label": "Performance - Container Project",
                                  "value": "ContainerProjectPerformance",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "simpleValue": true,
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "associations",
                          "label": "Associations",
                          "name": "associations",
                          "noItemsMessage": "None",
                        },
                      ]
                    }
                    id="generic-objects-field-array-associations"
                    name="generic-objects-field-array-associations"
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "methods_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                          ],
                          "id": "methods",
                          "label": "Methods",
                          "name": "methods",
                          "noItemsMessage": "None",
                        },
                      ]
                    }
                    id="generic-objects-field-array-methods"
                    name="generic-objects-field-array-methods"
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "component": "file-upload",
                          "label": "Custom Image File",
                          "name": "file_upload",
                          "type": "file",
                          "validate": Array [
                            Object {
                              "maxSize": 5000000,
                              "type": "file",
                            },
                          ],
                        },
                      ]
                    }
                    id="file_section"
                    name="file_section"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "id": "name",
                      "isRequired": true,
                      "label": "Name",
                      "maxLength": 255,
                      "name": "name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "text-field",
                      "id": "description",
                      "isRequired": true,
                      "label": "Description",
                      "maxLength": 255,
                      "name": "description",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "attributes_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "includeEmpty": true,
                              "label": "Type",
                              "loadOptions": [Function],
                              "name": "type",
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "attributes",
                          "label": "Attributes",
                          "name": "attributes",
                          "noItemsMessage": "None",
                        },
                      ],
                      "id": "generic-objects-field-array-attributes",
                      "key": "generic-objects-field-array-attributes",
                      "name": "generic-objects-field-array-attributes",
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "associations_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "className": "class",
                              "component": "select",
                              "id": "class",
                              "isSearchable": true,
                              "label": "Class",
                              "name": "class",
                              "options": Array [
                                Object {
                                  "label": "Bottleneck Event",
                                  "value": "BottleneckEvent",
                                },
                                Object {
                                  "label": "Performance - Container Project",
                                  "value": "ContainerProjectPerformance",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "simpleValue": true,
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "associations",
                          "label": "Associations",
                          "name": "associations",
                          "noItemsMessage": "None",
                        },
                      ],
                      "id": "generic-objects-field-array-associations",
                      "key": "generic-objects-field-array-associations",
                      "name": "generic-objects-field-array-associations",
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "methods_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                          ],
                          "id": "methods",
                          "label": "Methods",
                          "name": "methods",
                          "noItemsMessage": "None",
                        },
                      ],
                      "id": "generic-objects-field-array-methods",
                      "key": "generic-objects-field-array-methods",
                      "name": "generic-objects-field-array-methods",
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "component": "file-upload",
                          "label": "Custom Image File",
                          "name": "file_upload",
                          "type": "file",
                          "validate": Array [
                            Object {
                              "maxSize": 5000000,
                              "type": "file",
                            },
                          ],
                        },
                      ],
                      "id": "file_section",
                      "name": "file_section",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <WrappedFormTemplate
                canReset={false}
                cancelLabel="Cancel"
                disableSubmit={
                  Array [
                    "pristine",
                    "invalid",
                  ]
                }
                formFields={
                  Array [
                    <SingleField
                      component="text-field"
                      id="name"
                      isRequired={true}
                      label="Name"
                      maxLength={255}
                      name="name"
                      validate={
                        Array [
                          Object {
                            "type": "required",
                          },
                        ]
                      }
                    />,
                    <SingleField
                      component="text-field"
                      id="description"
                      isRequired={true}
                      label="Description"
                      maxLength={255}
                      name="description"
                      validate={
                        Array [
                          Object {
                            "type": "required",
                          },
                        ]
                      }
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "attributes_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "includeEmpty": true,
                                "label": "Type",
                                "loadOptions": [Function],
                                "name": "type",
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "attributes",
                            "label": "Attributes",
                            "name": "attributes",
                            "noItemsMessage": "None",
                          },
                        ]
                      }
                      id="generic-objects-field-array-attributes"
                      name="generic-objects-field-array-attributes"
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "associations_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "className": "class",
                                "component": "select",
                                "id": "class",
                                "isSearchable": true,
                                "label": "Class",
                                "name": "class",
                                "options": Array [
                                  Object {
                                    "label": "Bottleneck Event",
                                    "value": "BottleneckEvent",
                                  },
                                  Object {
                                    "label": "Performance - Container Project",
                                    "value": "ContainerProjectPerformance",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "simpleValue": true,
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "associations",
                            "label": "Associations",
                            "name": "associations",
                            "noItemsMessage": "None",
                          },
                        ]
                      }
                      id="generic-objects-field-array-associations"
                      name="generic-objects-field-array-associations"
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "methods_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                            ],
                            "id": "methods",
                            "label": "Methods",
                            "name": "methods",
                            "noItemsMessage": "None",
                          },
                        ]
                      }
                      id="generic-objects-field-array-methods"
                      name="generic-objects-field-array-methods"
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "component": "file-upload",
                            "label": "Custom Image File",
                            "name": "file_upload",
                            "type": "file",
                            "validate": Array [
                              Object {
                                "maxSize": 5000000,
                                "type": "file",
                              },
                            ],
                          },
                        ]
                      }
                      id="file_section"
                      name="file_section"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                formWrapperProps={
                  Object {
                    "className": "form-react",
                  }
                }
                resetLabel="Reset"
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "id": "name",
                        "isRequired": true,
                        "label": "Name",
                        "maxLength": 255,
                        "name": "name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "description",
                        "isRequired": true,
                        "label": "Description",
                        "maxLength": 255,
                        "name": "description",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "attributes_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "includeEmpty": true,
                                "label": "Type",
                                "loadOptions": [Function],
                                "name": "type",
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "attributes",
                            "label": "Attributes",
                            "name": "attributes",
                            "noItemsMessage": "None",
                          },
                        ],
                        "id": "generic-objects-field-array-attributes",
                        "key": "generic-objects-field-array-attributes",
                        "name": "generic-objects-field-array-attributes",
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "associations_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "className": "class",
                                "component": "select",
                                "id": "class",
                                "isSearchable": true,
                                "label": "Class",
                                "name": "class",
                                "options": Array [
                                  Object {
                                    "label": "Bottleneck Event",
                                    "value": "BottleneckEvent",
                                  },
                                  Object {
                                    "label": "Performance - Container Project",
                                    "value": "ContainerProjectPerformance",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "simpleValue": true,
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "associations",
                            "label": "Associations",
                            "name": "associations",
                            "noItemsMessage": "None",
                          },
                        ],
                        "id": "generic-objects-field-array-associations",
                        "key": "generic-objects-field-array-associations",
                        "name": "generic-objects-field-array-associations",
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "methods_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                            ],
                            "id": "methods",
                            "label": "Methods",
                            "name": "methods",
                            "noItemsMessage": "None",
                          },
                        ],
                        "id": "generic-objects-field-array-methods",
                        "key": "generic-objects-field-array-methods",
                        "name": "generic-objects-field-array-methods",
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "component": "file-upload",
                            "label": "Custom Image File",
                            "name": "file_upload",
                            "type": "file",
                            "validate": Array [
                              Object {
                                "maxSize": 5000000,
                                "type": "file",
                              },
                            ],
                          },
                        ],
                        "id": "file_section",
                        "name": "file_section",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
                showFormControls={true}
                submitLabel="Add"
              >
                <FormTemplate
                  Button={[Function]}
                  ButtonGroup={[Function]}
                  Description={[Function]}
                  FormWrapper={[Function]}
                  Header={[Function]}
                  Title={[Function]}
                  buttonOrder={
                    Array [
                      "submit",
                      "reset",
                      "cancel",
                    ]
                  }
                  canReset={false}
                  cancelLabel="Cancel"
                  disableSubmit={
                    Array [
                      "pristine",
                      "invalid",
                    ]
                  }
                  formFields={
                    Array [
                      <SingleField
                        component="text-field"
                        id="name"
                        isRequired={true}
                        label="Name"
                        maxLength={255}
                        name="name"
                        validate={
                          Array [
                            Object {
                              "type": "required",
                            },
                          ]
                        }
                      />,
                      <SingleField
                        component="text-field"
                        id="description"
                        isRequired={true}
                        label="Description"
                        maxLength={255}
                        name="description"
                        validate={
                          Array [
                            Object {
                              "type": "required",
                            },
                          ]
                        }
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "attributes_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "includeEmpty": true,
                                  "label": "Type",
                                  "loadOptions": [Function],
                                  "name": "type",
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "attributes",
                              "label": "Attributes",
                              "name": "attributes",
                              "noItemsMessage": "None",
                            },
                          ]
                        }
                        id="generic-objects-field-array-attributes"
                        name="generic-objects-field-array-attributes"
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "associations_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "className": "class",
                                  "component": "select",
                                  "id": "class",
                                  "isSearchable": true,
                                  "label": "Class",
                                  "name": "class",
                                  "options": Array [
                                    Object {
                                      "label": "Bottleneck Event",
                                      "value": "BottleneckEvent",
                                    },
                                    Object {
                                      "label": "Performance - Container Project",
                                      "value": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "simpleValue": true,
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "associations",
                              "label": "Associations",
                              "name": "associations",
                              "noItemsMessage": "None",
                            },
                          ]
                        }
                        id="generic-objects-field-array-associations"
                        name="generic-objects-field-array-associations"
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "methods_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                              ],
                              "id": "methods",
                              "label": "Methods",
                              "name": "methods",
                              "noItemsMessage": "None",
                            },
                          ]
                        }
                        id="generic-objects-field-array-methods"
                        name="generic-objects-field-array-methods"
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "component": "file-upload",
                              "label": "Custom Image File",
                              "name": "file_upload",
                              "type": "file",
                              "validate": Array [
                                Object {
                                  "maxSize": 5000000,
                                  "type": "file",
                                },
                              ],
                            },
                          ]
                        }
                        id="file_section"
                        name="file_section"
                      />,
                      <SingleField
                        component="spy-field"
                        name="spy-field"
                      />,
                    ]
                  }
                  formWrapperProps={
                    Object {
                      "className": "form-react",
                    }
                  }
                  resetLabel="Reset"
                  schema={
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "id": "name",
                          "isRequired": true,
                          "label": "Name",
                          "maxLength": 255,
                          "name": "name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "text-field",
                          "id": "description",
                          "isRequired": true,
                          "label": "Description",
                          "maxLength": 255,
                          "name": "description",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "attributes_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "includeEmpty": true,
                                  "label": "Type",
                                  "loadOptions": [Function],
                                  "name": "type",
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "attributes",
                              "label": "Attributes",
                              "name": "attributes",
                              "noItemsMessage": "None",
                            },
                          ],
                          "id": "generic-objects-field-array-attributes",
                          "key": "generic-objects-field-array-attributes",
                          "name": "generic-objects-field-array-attributes",
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "associations_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "className": "class",
                                  "component": "select",
                                  "id": "class",
                                  "isSearchable": true,
                                  "label": "Class",
                                  "name": "class",
                                  "options": Array [
                                    Object {
                                      "label": "Bottleneck Event",
                                      "value": "BottleneckEvent",
                                    },
                                    Object {
                                      "label": "Performance - Container Project",
                                      "value": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "simpleValue": true,
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "associations",
                              "label": "Associations",
                              "name": "associations",
                              "noItemsMessage": "None",
                            },
                          ],
                          "id": "generic-objects-field-array-associations",
                          "key": "generic-objects-field-array-associations",
                          "name": "generic-objects-field-array-associations",
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "methods_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                              ],
                              "id": "methods",
                              "label": "Methods",
                              "name": "methods",
                              "noItemsMessage": "None",
                            },
                          ],
                          "id": "generic-objects-field-array-methods",
                          "key": "generic-objects-field-array-methods",
                          "name": "generic-objects-field-array-methods",
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "component": "file-upload",
                              "label": "Custom Image File",
                              "name": "file_upload",
                              "type": "file",
                              "validate": Array [
                                Object {
                                  "maxSize": 5000000,
                                  "type": "file",
                                },
                              ],
                            },
                          ],
                          "id": "file_section",
                          "name": "file_section",
                        },
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        },
                      ],
                    }
                  }
                  showFormControls={true}
                  submitLabel="Add"
                >
                  <Form
                    className="form-react"
                    onSubmit={[Function]}
                  >
                    <Form
                      className="form-0-2-3 form-react"
                      noValidate={true}
                      onSubmit={[Function]}
                    >
                      <form
                        className="bx--form form-0-2-3 form-react"
                        noValidate={true}
                        onSubmit={[Function]}
                      >
                         
                        <SingleField
                          component="text-field"
                          id="name"
                          isRequired={true}
                          key="name"
                          label="Name"
                          maxLength={255}
                          name="name"
                          validate={
                            Array [
                              Object {
                                "type": "required",
                              },
                            ]
                          }
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "text-field",
                                "id": "name",
                                "isRequired": true,
                                "label": "Name",
                                "maxLength": 255,
                                "name": "name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <TextField
                                component="text-field"
                                id="name"
                                isRequired={true}
                                label="Name"
                                maxLength={255}
                                name="name"
                                validate={
                                  Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ]
                                }
                              >
                                <TextInput
                                  id="name"
                                  invalid={false}
                                  invalidText=""
                                  key="name"
                                  labelText={
                                    <IsRequired>
                                      Name
                                    </IsRequired>
                                  }
                                  maxLength={255}
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value=""
                                  warn={false}
                                  warnText=""
                                >
                                  <div
                                    className="bx--form-item bx--text-input-wrapper"
                                  >
                                    <label
                                      className="bx--label"
                                      htmlFor="name"
                                    >
                                      <IsRequired>
                                        <span
                                          aria-hidden="true"
                                          className="ddorg__carbon-component-mapper_is-required isRequired-0-2-4"
                                        >
                                          *
                                        </span>
                                        Name
                                      </IsRequired>
                                    </label>
                                    <div
                                      className="bx--text-input__field-outer-wrapper"
                                    >
                                      <div
                                        className="bx--text-input__field-wrapper"
                                        data-invalid={null}
                                      >
                                        <input
                                          className="bx--text-input bx--text-input--md"
                                          disabled={false}
                                          id="name"
                                          maxLength={255}
                                          name="name"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </TextInput>
                              </TextField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="text-field"
                          id="description"
                          isRequired={true}
                          key="description"
                          label="Description"
                          maxLength={255}
                          name="description"
                          validate={
                            Array [
                              Object {
                                "type": "required",
                              },
                            ]
                          }
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "text-field",
                                "id": "description",
                                "isRequired": true,
                                "label": "Description",
                                "maxLength": 255,
                                "name": "description",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <TextField
                                component="text-field"
                                id="description"
                                isRequired={true}
                                label="Description"
                                maxLength={255}
                                name="description"
                                validate={
                                  Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ]
                                }
                              >
                                <TextInput
                                  id="description"
                                  invalid={false}
                                  invalidText=""
                                  key="description"
                                  labelText={
                                    <IsRequired>
                                      Description
                                    </IsRequired>
                                  }
                                  maxLength={255}
                                  name="description"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value=""
                                  warn={false}
                                  warnText=""
                                >
                                  <div
                                    className="bx--form-item bx--text-input-wrapper"
                                  >
                                    <label
                                      className="bx--label"
                                      htmlFor="description"
                                    >
                                      <IsRequired>
                                        <span
                                          aria-hidden="true"
                                          className="ddorg__carbon-component-mapper_is-required isRequired-0-2-4"
                                        >
                                          *
                                        </span>
                                        Description
                                      </IsRequired>
                                    </label>
                                    <div
                                      className="bx--text-input__field-outer-wrapper"
                                    >
                                      <div
                                        className="bx--text-input__field-wrapper"
                                        data-invalid={null}
                                      >
                                        <input
                                          className="bx--text-input bx--text-input--md"
                                          disabled={false}
                                          id="description"
                                          maxLength={255}
                                          name="description"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </TextInput>
                              </TextField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "AddButtonProps": Object {
                                  "size": "small",
                                },
                                "RemoveButtonProps": Object {
                                  "size": "small",
                                },
                                "buttonLabels": Object {
                                  "add": "Add",
                                  "remove": "Remove",
                                },
                                "component": "field-array",
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "label": "Name",
                                    "name": "attributes_name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                      Object {
                                        "type": "syntax",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "includeEmpty": true,
                                    "label": "Type",
                                    "loadOptions": [Function],
                                    "name": "type",
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                ],
                                "id": "attributes",
                                "label": "Attributes",
                                "name": "attributes",
                                "noItemsMessage": "None",
                              },
                            ]
                          }
                          id="generic-objects-field-array-attributes"
                          key="generic-objects-field-array-attributes"
                          name="generic-objects-field-array-attributes"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "AddButtonProps": Object {
                                      "size": "small",
                                    },
                                    "RemoveButtonProps": Object {
                                      "size": "small",
                                    },
                                    "buttonLabels": Object {
                                      "add": "Add",
                                      "remove": "Remove",
                                    },
                                    "component": "field-array",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "label": "Name",
                                        "name": "attributes_name",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                          Object {
                                            "type": "syntax",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "includeEmpty": true,
                                        "label": "Type",
                                        "loadOptions": [Function],
                                        "name": "type",
                                        "placeholder": "<Choose>",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "attributes",
                                    "label": "Attributes",
                                    "name": "attributes",
                                    "noItemsMessage": "None",
                                  },
                                ],
                                "id": "generic-objects-field-array-attributes",
                                "name": "generic-objects-field-array-attributes",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "AddButtonProps": Object {
                                        "size": "small",
                                      },
                                      "RemoveButtonProps": Object {
                                        "size": "small",
                                      },
                                      "buttonLabels": Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      },
                                      "component": "field-array",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "attributes_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "includeEmpty": true,
                                          "label": "Type",
                                          "loadOptions": [Function],
                                          "name": "type",
                                          "placeholder": "<Choose>",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "attributes",
                                      "label": "Attributes",
                                      "name": "attributes",
                                      "noItemsMessage": "None",
                                    },
                                  ]
                                }
                                id="generic-objects-field-array-attributes"
                                name="generic-objects-field-array-attributes"
                              >
                                <div
                                  className=""
                                  id="generic-objects-field-array-attributes"
                                  name="generic-objects-field-array-attributes"
                                >
                                  <SingleField
                                    AddButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    RemoveButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    buttonLabels={
                                      Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      }
                                    }
                                    component="field-array"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "attributes_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "includeEmpty": true,
                                          "label": "Type",
                                          "loadOptions": [Function],
                                          "name": "type",
                                          "placeholder": "<Choose>",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    id="attributes"
                                    key="attributes"
                                    label="Attributes"
                                    name="attributes"
                                    noItemsMessage="None"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "AddButtonProps": Object {
                                            "size": "small",
                                          },
                                          "RemoveButtonProps": Object {
                                            "size": "small",
                                          },
                                          "buttonLabels": Object {
                                            "add": "Add",
                                            "remove": "Remove",
                                          },
                                          "component": "field-array",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "label": "Name",
                                              "name": "attributes_name",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                                Object {
                                                  "type": "syntax",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "includeEmpty": true,
                                              "label": "Type",
                                              "loadOptions": [Function],
                                              "name": "type",
                                              "placeholder": "<Choose>",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "attributes",
                                          "label": "Attributes",
                                          "name": "attributes",
                                          "noItemsMessage": "None",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FieldArray
                                          AddButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          AddContainerProps={Object {}}
                                          ArrayItemProps={Object {}}
                                          FormGroupProps={Object {}}
                                          RemoveButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          WrapperProps={Object {}}
                                          buttonLabels={
                                            Object {
                                              "add": "Add",
                                              "remove": "Remove",
                                            }
                                          }
                                          component="field-array"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "text-field",
                                                "label": "Name",
                                                "name": "attributes_name",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                  Object {
                                                    "type": "syntax",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "includeEmpty": true,
                                                "label": "Type",
                                                "loadOptions": [Function],
                                                "name": "type",
                                                "placeholder": "<Choose>",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="attributes"
                                          label="Attributes"
                                          maxItems={Infinity}
                                          minItems={0}
                                          name="attributes"
                                          noItemsMessage="None"
                                        >
                                          <FormGroup
                                            className="formGroup-0-2-9"
                                            hasMargin={true}
                                            invalid={false}
                                            legendText="Attributes"
                                            message={false}
                                            messageText=""
                                          >
                                            <fieldset
                                              className="bx--fieldset formGroup-0-2-9"
                                            >
                                              <legend
                                                className="bx--label formGroup-0-2-9"
                                              >
                                                Attributes
                                              </legend>
                                              <FieldArray
                                                name="attributes"
                                              >
                                                <div>
                                                  None
                                                  <div
                                                    className="addContainer-0-2-7"
                                                  >
                                                    <Button
                                                      className="add-0-2-6"
                                                      disabled={false}
                                                      id="add-attributes"
                                                      onClick={[Function]}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size="small"
                                                    >
                                                      <button
                                                        aria-describedby={null}
                                                        aria-pressed={null}
                                                        className="add-0-2-6 bx--btn bx--btn--sm bx--btn--primary"
                                                        disabled={false}
                                                        id="add-attributes"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        Add
                                                        <ForwardRef(AddAlt32)
                                                          aria-hidden="true"
                                                          className="bx--btn__icon"
                                                        >
                                                          <Icon
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                            fill="currentColor"
                                                            height={32}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            viewBox="0 0 32 32"
                                                            width={32}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M16,4c6.6,0,12,5.4,12,12s-5.4,12-12,12S4,22.6,4,16S9.4,4,16,4 M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14	S23.7,2,16,2z"
                                                              />
                                                              <path
                                                                d="M24 15L17 15 17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17z"
                                                              />
                                                            </svg>
                                                          </Icon>
                                                        </ForwardRef(AddAlt32)>
                                                      </button>
                                                    </Button>
                                                  </div>
                                                </div>
                                              </FieldArray>
                                            </fieldset>
                                          </FormGroup>
                                        </FieldArray>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "AddButtonProps": Object {
                                  "size": "small",
                                },
                                "RemoveButtonProps": Object {
                                  "size": "small",
                                },
                                "buttonLabels": Object {
                                  "add": "Add",
                                  "remove": "Remove",
                                },
                                "component": "field-array",
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "label": "Name",
                                    "name": "associations_name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                      Object {
                                        "type": "syntax",
                                      },
                                    ],
                                  },
                                  Object {
                                    "className": "class",
                                    "component": "select",
                                    "id": "class",
                                    "isSearchable": true,
                                    "label": "Class",
                                    "name": "class",
                                    "options": Array [
                                      Object {
                                        "label": "Bottleneck Event",
                                        "value": "BottleneckEvent",
                                      },
                                      Object {
                                        "label": "Performance - Container Project",
                                        "value": "ContainerProjectPerformance",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "simpleValue": true,
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                ],
                                "id": "associations",
                                "label": "Associations",
                                "name": "associations",
                                "noItemsMessage": "None",
                              },
                            ]
                          }
                          id="generic-objects-field-array-associations"
                          key="generic-objects-field-array-associations"
                          name="generic-objects-field-array-associations"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "AddButtonProps": Object {
                                      "size": "small",
                                    },
                                    "RemoveButtonProps": Object {
                                      "size": "small",
                                    },
                                    "buttonLabels": Object {
                                      "add": "Add",
                                      "remove": "Remove",
                                    },
                                    "component": "field-array",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "label": "Name",
                                        "name": "associations_name",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                          Object {
                                            "type": "syntax",
                                          },
                                        ],
                                      },
                                      Object {
                                        "className": "class",
                                        "component": "select",
                                        "id": "class",
                                        "isSearchable": true,
                                        "label": "Class",
                                        "name": "class",
                                        "options": Array [
                                          Object {
                                            "label": "Bottleneck Event",
                                            "value": "BottleneckEvent",
                                          },
                                          Object {
                                            "label": "Performance - Container Project",
                                            "value": "ContainerProjectPerformance",
                                          },
                                        ],
                                        "placeholder": "<Choose>",
                                        "simpleValue": true,
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "associations",
                                    "label": "Associations",
                                    "name": "associations",
                                    "noItemsMessage": "None",
                                  },
                                ],
                                "id": "generic-objects-field-array-associations",
                                "name": "generic-objects-field-array-associations",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "AddButtonProps": Object {
                                        "size": "small",
                                      },
                                      "RemoveButtonProps": Object {
                                        "size": "small",
                                      },
                                      "buttonLabels": Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      },
                                      "component": "field-array",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "associations_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "className": "class",
                                          "component": "select",
                                          "id": "class",
                                          "isSearchable": true,
                                          "label": "Class",
                                          "name": "class",
                                          "options": Array [
                                            Object {
                                              "label": "Bottleneck Event",
                                              "value": "BottleneckEvent",
                                            },
                                            Object {
                                              "label": "Performance - Container Project",
                                              "value": "ContainerProjectPerformance",
                                            },
                                          ],
                                          "placeholder": "<Choose>",
                                          "simpleValue": true,
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "associations",
                                      "label": "Associations",
                                      "name": "associations",
                                      "noItemsMessage": "None",
                                    },
                                  ]
                                }
                                id="generic-objects-field-array-associations"
                                name="generic-objects-field-array-associations"
                              >
                                <div
                                  className=""
                                  id="generic-objects-field-array-associations"
                                  name="generic-objects-field-array-associations"
                                >
                                  <SingleField
                                    AddButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    RemoveButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    buttonLabels={
                                      Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      }
                                    }
                                    component="field-array"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "associations_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "className": "class",
                                          "component": "select",
                                          "id": "class",
                                          "isSearchable": true,
                                          "label": "Class",
                                          "name": "class",
                                          "options": Array [
                                            Object {
                                              "label": "Bottleneck Event",
                                              "value": "BottleneckEvent",
                                            },
                                            Object {
                                              "label": "Performance - Container Project",
                                              "value": "ContainerProjectPerformance",
                                            },
                                          ],
                                          "placeholder": "<Choose>",
                                          "simpleValue": true,
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    id="associations"
                                    key="associations"
                                    label="Associations"
                                    name="associations"
                                    noItemsMessage="None"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "AddButtonProps": Object {
                                            "size": "small",
                                          },
                                          "RemoveButtonProps": Object {
                                            "size": "small",
                                          },
                                          "buttonLabels": Object {
                                            "add": "Add",
                                            "remove": "Remove",
                                          },
                                          "component": "field-array",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "label": "Name",
                                              "name": "associations_name",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                                Object {
                                                  "type": "syntax",
                                                },
                                              ],
                                            },
                                            Object {
                                              "className": "class",
                                              "component": "select",
                                              "id": "class",
                                              "isSearchable": true,
                                              "label": "Class",
                                              "name": "class",
                                              "options": Array [
                                                Object {
                                                  "label": "Bottleneck Event",
                                                  "value": "BottleneckEvent",
                                                },
                                                Object {
                                                  "label": "Performance - Container Project",
                                                  "value": "ContainerProjectPerformance",
                                                },
                                              ],
                                              "placeholder": "<Choose>",
                                              "simpleValue": true,
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "associations",
                                          "label": "Associations",
                                          "name": "associations",
                                          "noItemsMessage": "None",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FieldArray
                                          AddButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          AddContainerProps={Object {}}
                                          ArrayItemProps={Object {}}
                                          FormGroupProps={Object {}}
                                          RemoveButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          WrapperProps={Object {}}
                                          buttonLabels={
                                            Object {
                                              "add": "Add",
                                              "remove": "Remove",
                                            }
                                          }
                                          component="field-array"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "text-field",
                                                "label": "Name",
                                                "name": "associations_name",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                  Object {
                                                    "type": "syntax",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "className": "class",
                                                "component": "select",
                                                "id": "class",
                                                "isSearchable": true,
                                                "label": "Class",
                                                "name": "class",
                                                "options": Array [
                                                  Object {
                                                    "label": "Bottleneck Event",
                                                    "value": "BottleneckEvent",
                                                  },
                                                  Object {
                                                    "label": "Performance - Container Project",
                                                    "value": "ContainerProjectPerformance",
                                                  },
                                                ],
                                                "placeholder": "<Choose>",
                                                "simpleValue": true,
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="associations"
                                          label="Associations"
                                          maxItems={Infinity}
                                          minItems={0}
                                          name="associations"
                                          noItemsMessage="None"
                                        >
                                          <FormGroup
                                            className="formGroup-0-2-9"
                                            hasMargin={true}
                                            invalid={false}
                                            legendText="Associations"
                                            message={false}
                                            messageText=""
                                          >
                                            <fieldset
                                              className="bx--fieldset formGroup-0-2-9"
                                            >
                                              <legend
                                                className="bx--label formGroup-0-2-9"
                                              >
                                                Associations
                                              </legend>
                                              <FieldArray
                                                name="associations"
                                              >
                                                <div>
                                                  None
                                                  <div
                                                    className="addContainer-0-2-7"
                                                  >
                                                    <Button
                                                      className="add-0-2-6"
                                                      disabled={false}
                                                      id="add-associations"
                                                      onClick={[Function]}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size="small"
                                                    >
                                                      <button
                                                        aria-describedby={null}
                                                        aria-pressed={null}
                                                        className="add-0-2-6 bx--btn bx--btn--sm bx--btn--primary"
                                                        disabled={false}
                                                        id="add-associations"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        Add
                                                        <ForwardRef(AddAlt32)
                                                          aria-hidden="true"
                                                          className="bx--btn__icon"
                                                        >
                                                          <Icon
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                            fill="currentColor"
                                                            height={32}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            viewBox="0 0 32 32"
                                                            width={32}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M16,4c6.6,0,12,5.4,12,12s-5.4,12-12,12S4,22.6,4,16S9.4,4,16,4 M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14	S23.7,2,16,2z"
                                                              />
                                                              <path
                                                                d="M24 15L17 15 17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17z"
                                                              />
                                                            </svg>
                                                          </Icon>
                                                        </ForwardRef(AddAlt32)>
                                                      </button>
                                                    </Button>
                                                  </div>
                                                </div>
                                              </FieldArray>
                                            </fieldset>
                                          </FormGroup>
                                        </FieldArray>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "AddButtonProps": Object {
                                  "size": "small",
                                },
                                "RemoveButtonProps": Object {
                                  "size": "small",
                                },
                                "buttonLabels": Object {
                                  "add": "Add",
                                  "remove": "Remove",
                                },
                                "component": "field-array",
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "label": "Name",
                                    "name": "methods_name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                      Object {
                                        "type": "syntax",
                                      },
                                    ],
                                  },
                                ],
                                "id": "methods",
                                "label": "Methods",
                                "name": "methods",
                                "noItemsMessage": "None",
                              },
                            ]
                          }
                          id="generic-objects-field-array-methods"
                          key="generic-objects-field-array-methods"
                          name="generic-objects-field-array-methods"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "AddButtonProps": Object {
                                      "size": "small",
                                    },
                                    "RemoveButtonProps": Object {
                                      "size": "small",
                                    },
                                    "buttonLabels": Object {
                                      "add": "Add",
                                      "remove": "Remove",
                                    },
                                    "component": "field-array",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "label": "Name",
                                        "name": "methods_name",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                          Object {
                                            "type": "syntax",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "methods",
                                    "label": "Methods",
                                    "name": "methods",
                                    "noItemsMessage": "None",
                                  },
                                ],
                                "id": "generic-objects-field-array-methods",
                                "name": "generic-objects-field-array-methods",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "AddButtonProps": Object {
                                        "size": "small",
                                      },
                                      "RemoveButtonProps": Object {
                                        "size": "small",
                                      },
                                      "buttonLabels": Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      },
                                      "component": "field-array",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "methods_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "methods",
                                      "label": "Methods",
                                      "name": "methods",
                                      "noItemsMessage": "None",
                                    },
                                  ]
                                }
                                id="generic-objects-field-array-methods"
                                name="generic-objects-field-array-methods"
                              >
                                <div
                                  className=""
                                  id="generic-objects-field-array-methods"
                                  name="generic-objects-field-array-methods"
                                >
                                  <SingleField
                                    AddButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    RemoveButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    buttonLabels={
                                      Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      }
                                    }
                                    component="field-array"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "methods_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    id="methods"
                                    key="methods"
                                    label="Methods"
                                    name="methods"
                                    noItemsMessage="None"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "AddButtonProps": Object {
                                            "size": "small",
                                          },
                                          "RemoveButtonProps": Object {
                                            "size": "small",
                                          },
                                          "buttonLabels": Object {
                                            "add": "Add",
                                            "remove": "Remove",
                                          },
                                          "component": "field-array",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "label": "Name",
                                              "name": "methods_name",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                                Object {
                                                  "type": "syntax",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "methods",
                                          "label": "Methods",
                                          "name": "methods",
                                          "noItemsMessage": "None",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FieldArray
                                          AddButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          AddContainerProps={Object {}}
                                          ArrayItemProps={Object {}}
                                          FormGroupProps={Object {}}
                                          RemoveButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          WrapperProps={Object {}}
                                          buttonLabels={
                                            Object {
                                              "add": "Add",
                                              "remove": "Remove",
                                            }
                                          }
                                          component="field-array"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "text-field",
                                                "label": "Name",
                                                "name": "methods_name",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                  Object {
                                                    "type": "syntax",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="methods"
                                          label="Methods"
                                          maxItems={Infinity}
                                          minItems={0}
                                          name="methods"
                                          noItemsMessage="None"
                                        >
                                          <FormGroup
                                            className="formGroup-0-2-9"
                                            hasMargin={true}
                                            invalid={false}
                                            legendText="Methods"
                                            message={false}
                                            messageText=""
                                          >
                                            <fieldset
                                              className="bx--fieldset formGroup-0-2-9"
                                            >
                                              <legend
                                                className="bx--label formGroup-0-2-9"
                                              >
                                                Methods
                                              </legend>
                                              <FieldArray
                                                name="methods"
                                              >
                                                <div>
                                                  None
                                                  <div
                                                    className="addContainer-0-2-7"
                                                  >
                                                    <Button
                                                      className="add-0-2-6"
                                                      disabled={false}
                                                      id="add-methods"
                                                      onClick={[Function]}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size="small"
                                                    >
                                                      <button
                                                        aria-describedby={null}
                                                        aria-pressed={null}
                                                        className="add-0-2-6 bx--btn bx--btn--sm bx--btn--primary"
                                                        disabled={false}
                                                        id="add-methods"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        Add
                                                        <ForwardRef(AddAlt32)
                                                          aria-hidden="true"
                                                          className="bx--btn__icon"
                                                        >
                                                          <Icon
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                            fill="currentColor"
                                                            height={32}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            viewBox="0 0 32 32"
                                                            width={32}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M16,4c6.6,0,12,5.4,12,12s-5.4,12-12,12S4,22.6,4,16S9.4,4,16,4 M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14	S23.7,2,16,2z"
                                                              />
                                                              <path
                                                                d="M24 15L17 15 17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17z"
                                                              />
                                                            </svg>
                                                          </Icon>
                                                        </ForwardRef(AddAlt32)>
                                                      </button>
                                                    </Button>
                                                  </div>
                                                </div>
                                              </FieldArray>
                                            </fieldset>
                                          </FormGroup>
                                        </FieldArray>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "component": "file-upload",
                                "label": "Custom Image File",
                                "name": "file_upload",
                                "type": "file",
                                "validate": Array [
                                  Object {
                                    "maxSize": 5000000,
                                    "type": "file",
                                  },
                                ],
                              },
                            ]
                          }
                          id="file_section"
                          key="file_section"
                          name="file_section"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "file-upload",
                                    "label": "Custom Image File",
                                    "name": "file_upload",
                                    "type": "file",
                                    "validate": Array [
                                      Object {
                                        "maxSize": 5000000,
                                        "type": "file",
                                      },
                                    ],
                                  },
                                ],
                                "id": "file_section",
                                "name": "file_section",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "component": "file-upload",
                                      "label": "Custom Image File",
                                      "name": "file_upload",
                                      "type": "file",
                                      "validate": Array [
                                        Object {
                                          "maxSize": 5000000,
                                          "type": "file",
                                        },
                                      ],
                                    },
                                  ]
                                }
                                id="file_section"
                                name="file_section"
                              >
                                <div
                                  className=""
                                  id="file_section"
                                  name="file_section"
                                >
                                  <SingleField
                                    component="file-upload"
                                    key="file_upload"
                                    label="Custom Image File"
                                    name="file_upload"
                                    type="file"
                                    validate={
                                      Array [
                                        Object {
                                          "maxSize": 5000000,
                                          "type": "file",
                                        },
                                      ]
                                    }
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "component": "file-upload",
                                          "label": "Custom Image File",
                                          "name": "file_upload",
                                          "type": "file",
                                          "validate": Array [
                                            Object {
                                              "maxSize": 5000000,
                                              "type": "file",
                                            },
                                          ],
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FileUploadComponent
                                          component="file-upload"
                                          label="Custom Image File"
                                          name="file_upload"
                                          type="file"
                                          validate={
                                            Array [
                                              Object {
                                                "maxSize": 5000000,
                                                "type": "file",
                                              },
                                            ]
                                          }
                                        >
                                          <div
                                            className="file-upload"
                                          >
                                            <label
                                              className="bx--label"
                                            >
                                              Custom Image File
                                            </label>
                                            <br />
                                            <label
                                              className="file-upload-label"
                                              disabled={true}
                                            >
                                              No File Chosen
                                            </label>
                                            <span
                                              className="file-button"
                                              tabIndex="0"
                                            >
                                              <label
                                                className="file-button-label"
                                                htmlFor="file_upload"
                                              >
                                                <span
                                                  className="buttonText"
                                                >
                                                  Choose File
                                                </span>
                                                <input
                                                  className="file-upload-input"
                                                  id="file_upload"
                                                  name="file_upload"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  type="file"
                                                  value=""
                                                />
                                              </label>
                                            </span>
                                          </div>
                                        </FileUploadComponent>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="spy-field"
                          key="spy-field"
                          name="spy-field"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "spy-field",
                                "initialize": undefined,
                                "name": "spy-field",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SpyField
                                component="spy-field"
                                name="spy-field"
                              >
                                <FormSpy
                                  onChange={[Function]}
                                  subscription={
                                    Object {
                                      "pristine": true,
                                      "valid": true,
                                    }
                                  }
                                />
                              </SpyField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <FormSpy>
                          <FormControls
                            Button={[Function]}
                            ButtonGroup={[Function]}
                            FormSpy={[Function]}
                            buttonOrder={
                              Array [
                                "submit",
                                "reset",
                                "cancel",
                              ]
                            }
                            canReset={false}
                            cancelLabel="Cancel"
                            disableSubmit={true}
                            formFields={
                              Array [
                                <SingleField
                                  component="text-field"
                                  id="name"
                                  isRequired={true}
                                  label="Name"
                                  maxLength={255}
                                  name="name"
                                  validate={
                                    Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ]
                                  }
                                />,
                                <SingleField
                                  component="text-field"
                                  id="description"
                                  isRequired={true}
                                  label="Description"
                                  maxLength={255}
                                  name="description"
                                  validate={
                                    Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ]
                                  }
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "attributes_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "component": "select",
                                            "includeEmpty": true,
                                            "label": "Type",
                                            "loadOptions": [Function],
                                            "name": "type",
                                            "placeholder": "<Choose>",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "attributes",
                                        "label": "Attributes",
                                        "name": "attributes",
                                        "noItemsMessage": "None",
                                      },
                                    ]
                                  }
                                  id="generic-objects-field-array-attributes"
                                  name="generic-objects-field-array-attributes"
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "associations_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "className": "class",
                                            "component": "select",
                                            "id": "class",
                                            "isSearchable": true,
                                            "label": "Class",
                                            "name": "class",
                                            "options": Array [
                                              Object {
                                                "label": "Bottleneck Event",
                                                "value": "BottleneckEvent",
                                              },
                                              Object {
                                                "label": "Performance - Container Project",
                                                "value": "ContainerProjectPerformance",
                                              },
                                            ],
                                            "placeholder": "<Choose>",
                                            "simpleValue": true,
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "associations",
                                        "label": "Associations",
                                        "name": "associations",
                                        "noItemsMessage": "None",
                                      },
                                    ]
                                  }
                                  id="generic-objects-field-array-associations"
                                  name="generic-objects-field-array-associations"
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "methods_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "methods",
                                        "label": "Methods",
                                        "name": "methods",
                                        "noItemsMessage": "None",
                                      },
                                    ]
                                  }
                                  id="generic-objects-field-array-methods"
                                  name="generic-objects-field-array-methods"
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "component": "file-upload",
                                        "label": "Custom Image File",
                                        "name": "file_upload",
                                        "type": "file",
                                        "validate": Array [
                                          Object {
                                            "maxSize": 5000000,
                                            "type": "file",
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                  id="file_section"
                                  name="file_section"
                                />,
                                <SingleField
                                  component="spy-field"
                                  name="spy-field"
                                />,
                              ]
                            }
                            formSpyProps={
                              Object {
                                "active": undefined,
                                "dirty": false,
                                "dirtyFields": Object {},
                                "dirtyFieldsSinceLastSubmit": Object {},
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "errors": Object {
                                  "associations": Array [],
                                  "attributes": Array [],
                                  "description": "Required",
                                  "methods": Array [],
                                  "name": "Required",
                                },
                                "form": Object {
                                  "batch": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "destroyOnUnregister": false,
                                  "focus": [Function],
                                  "getFieldState": [Function],
                                  "getRegisteredFields": [Function],
                                  "getState": [Function],
                                  "initialize": [Function],
                                  "isValidationPaused": [Function],
                                  "mutators": Object {
                                    "concat": [Function],
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeBatch": [Function],
                                    "shift": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                    "update": [Function],
                                  },
                                  "pauseValidation": [Function],
                                  "registerField": [Function],
                                  "reset": [Function],
                                  "resetFieldState": [Function],
                                  "restart": [Function],
                                  "resumeValidation": [Function],
                                  "setConfig": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "hasSubmitErrors": false,
                                "hasValidationErrors": true,
                                "initialValues": Object {},
                                "invalid": true,
                                "modified": Object {
                                  "associations": false,
                                  "attributes": false,
                                  "description": false,
                                  "file_upload": false,
                                  "methods": false,
                                  "name": false,
                                },
                                "modifiedSinceLastSubmit": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitErrors": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "touched": Object {
                                  "associations": false,
                                  "attributes": false,
                                  "description": false,
                                  "file_upload": false,
                                  "methods": false,
                                  "name": false,
                                },
                                "valid": false,
                                "validating": false,
                                "values": Object {},
                                "visited": Object {
                                  "associations": false,
                                  "attributes": false,
                                  "description": false,
                                  "file_upload": false,
                                  "methods": false,
                                  "name": false,
                                },
                              }
                            }
                            onCancel={[Function]}
                            onReset={[Function]}
                            resetLabel="Reset"
                            schema={
                              Object {
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "id": "name",
                                    "isRequired": true,
                                    "label": "Name",
                                    "maxLength": 255,
                                    "name": "name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "description",
                                    "isRequired": true,
                                    "label": "Description",
                                    "maxLength": 255,
                                    "name": "description",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "attributes_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "component": "select",
                                            "includeEmpty": true,
                                            "label": "Type",
                                            "loadOptions": [Function],
                                            "name": "type",
                                            "placeholder": "<Choose>",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "attributes",
                                        "label": "Attributes",
                                        "name": "attributes",
                                        "noItemsMessage": "None",
                                      },
                                    ],
                                    "id": "generic-objects-field-array-attributes",
                                    "key": "generic-objects-field-array-attributes",
                                    "name": "generic-objects-field-array-attributes",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "associations_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "className": "class",
                                            "component": "select",
                                            "id": "class",
                                            "isSearchable": true,
                                            "label": "Class",
                                            "name": "class",
                                            "options": Array [
                                              Object {
                                                "label": "Bottleneck Event",
                                                "value": "BottleneckEvent",
                                              },
                                              Object {
                                                "label": "Performance - Container Project",
                                                "value": "ContainerProjectPerformance",
                                              },
                                            ],
                                            "placeholder": "<Choose>",
                                            "simpleValue": true,
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "associations",
                                        "label": "Associations",
                                        "name": "associations",
                                        "noItemsMessage": "None",
                                      },
                                    ],
                                    "id": "generic-objects-field-array-associations",
                                    "key": "generic-objects-field-array-associations",
                                    "name": "generic-objects-field-array-associations",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "methods_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "methods",
                                        "label": "Methods",
                                        "name": "methods",
                                        "noItemsMessage": "None",
                                      },
                                    ],
                                    "id": "generic-objects-field-array-methods",
                                    "key": "generic-objects-field-array-methods",
                                    "name": "generic-objects-field-array-methods",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "file-upload",
                                        "label": "Custom Image File",
                                        "name": "file_upload",
                                        "type": "file",
                                        "validate": Array [
                                          Object {
                                            "maxSize": 5000000,
                                            "type": "file",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "file_section",
                                    "name": "file_section",
                                  },
                                  Object {
                                    "component": "spy-field",
                                    "initialize": undefined,
                                    "name": "spy-field",
                                  },
                                ],
                              }
                            }
                            submitLabel="Add"
                          >
                            <ButtonGroup>
                              <ButtonSet
                                className=""
                              >
                                <div
                                  className="bx--btn-set"
                                >
                                  <Button
                                    buttonType="submit"
                                    disabled={true}
                                    key="form-submit"
                                    label="Add"
                                    type="submit"
                                    variant="primary"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="primary"
                                      type="submit"
                                      variant="primary"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--primary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="submit"
                                        variant="primary"
                                      >
                                        Add
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="cancel"
                                    key="form-cancel"
                                    label="Cancel"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Cancel
                                      </button>
                                    </Button>
                                  </Button>
                                </div>
                              </ButtonSet>
                            </ButtonGroup>
                          </FormControls>
                        </FormSpy>
                         
                      </form>
                    </Form>
                  </Form>
                </FormTemplate>
              </WrappedFormTemplate>
            </Component>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </GenericObjectForm>
</Provider>
`;

exports[`Generic Object Form Component should render editing a generic object with an existing image 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <GenericObjectForm
    recordId="1"
  >
    <Connect(MiqFormRenderer)
      buttonsLabels={
        Object {
          "submitLabel": "Save",
        }
      }
      canReset={true}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-edit": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "associations": Array [
            Object {
              "associations_name": "bottle_neck",
              "class": "BottleneckEvent",
            },
            Object {
              "associations_name": "project",
              "class": "ContainerProjectPerformance",
            },
          ],
          "attributes": Array [
            Object {
              "attributes_name": "this_is_a_string",
              "type": "string",
            },
          ],
          "description": "this is a test",
          "image_update": false,
          "methods": Array [
            Object {
              "methods_name": "method",
            },
          ],
          "name": "Generic Object",
          "picture": Object {
            "image_href": "http://localhost:3000/pictures/52.png",
          },
        }
      }
      onCancel={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "text-field",
              "id": "name",
              "isRequired": true,
              "label": "Name",
              "maxLength": 255,
              "name": "name",
              "validate": Array [
                Object {
                  "type": "required",
                },
              ],
            },
            Object {
              "component": "text-field",
              "id": "description",
              "isRequired": true,
              "label": "Description",
              "maxLength": 255,
              "name": "description",
              "validate": Array [
                Object {
                  "type": "required",
                },
              ],
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "AddButtonProps": Object {
                    "size": "small",
                  },
                  "RemoveButtonProps": Object {
                    "size": "small",
                  },
                  "buttonLabels": Object {
                    "add": "Add",
                    "remove": "Remove",
                  },
                  "component": "field-array",
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "label": "Name",
                      "name": "attributes_name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                        Object {
                          "type": "syntax",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "includeEmpty": true,
                      "label": "Type",
                      "loadOptions": [Function],
                      "name": "type",
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                  "id": "attributes",
                  "label": "Attributes",
                  "name": "attributes",
                  "noItemsMessage": "None",
                },
              ],
              "id": "generic-objects-field-array-attributes",
              "key": "generic-objects-field-array-attributes",
              "name": "generic-objects-field-array-attributes",
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "AddButtonProps": Object {
                    "size": "small",
                  },
                  "RemoveButtonProps": Object {
                    "size": "small",
                  },
                  "buttonLabels": Object {
                    "add": "Add",
                    "remove": "Remove",
                  },
                  "component": "field-array",
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "label": "Name",
                      "name": "associations_name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                        Object {
                          "type": "syntax",
                        },
                      ],
                    },
                    Object {
                      "className": "class",
                      "component": "select",
                      "id": "class",
                      "isSearchable": true,
                      "label": "Class",
                      "name": "class",
                      "options": Array [
                        Object {
                          "label": "Bottleneck Event",
                          "value": "BottleneckEvent",
                        },
                        Object {
                          "label": "Performance - Container Project",
                          "value": "ContainerProjectPerformance",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "simpleValue": true,
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                  "id": "associations",
                  "label": "Associations",
                  "name": "associations",
                  "noItemsMessage": "None",
                },
              ],
              "id": "generic-objects-field-array-associations",
              "key": "generic-objects-field-array-associations",
              "name": "generic-objects-field-array-associations",
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "AddButtonProps": Object {
                    "size": "small",
                  },
                  "RemoveButtonProps": Object {
                    "size": "small",
                  },
                  "buttonLabels": Object {
                    "add": "Add",
                    "remove": "Remove",
                  },
                  "component": "field-array",
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "label": "Name",
                      "name": "methods_name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                        Object {
                          "type": "syntax",
                        },
                      ],
                    },
                  ],
                  "id": "methods",
                  "label": "Methods",
                  "name": "methods",
                  "noItemsMessage": "None",
                },
              ],
              "id": "generic-objects-field-array-methods",
              "key": "generic-objects-field-array-methods",
              "name": "generic-objects-field-array-methods",
            },
            Object {
              "component": "sub-form",
              "condition": Object {
                "is": true,
                "when": "image_update",
              },
              "fields": Array [
                Object {
                  "component": "file-upload",
                  "label": "Custom Image File",
                  "name": "file_upload",
                  "type": "file",
                  "validate": Array [
                    Object {
                      "maxSize": 5000000,
                      "type": "file",
                    },
                  ],
                },
              ],
              "id": "file_section",
              "name": "file_section",
            },
            Object {
              "component": "sub-form",
              "condition": Object {
                "is": false,
                "when": "image_update",
              },
              "fields": Array [
                Object {
                  "component": "file-edit",
                  "description": "Delete File",
                  "label": "Current Custom Image File",
                  "name": "file_edit",
                  "src": "http://localhost:3000/pictures/52.png",
                },
              ],
              "id": "edit_section",
              "name": "edit_section",
            },
            Object {
              "component": "switch",
              "hideField": true,
              "name": "image_update",
            },
          ],
        }
      }
      validate={[Function]}
      validatorMapper={
        Object {
          "dateRange": [Function],
          "file": [Function],
          "syntax": [Function],
        }
      }
    >
      <MiqFormRenderer
        buttonsLabels={
          Object {
            "submitLabel": "Save",
          }
        }
        canReset={true}
        className="form-react"
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-edit": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "associations": Array [
              Object {
                "associations_name": "bottle_neck",
                "class": "BottleneckEvent",
              },
              Object {
                "associations_name": "project",
                "class": "ContainerProjectPerformance",
              },
            ],
            "attributes": Array [
              Object {
                "attributes_name": "this_is_a_string",
                "type": "string",
              },
            ],
            "description": "this is a test",
            "image_update": false,
            "methods": Array [
              Object {
                "methods_name": "method",
              },
            ],
            "name": "Generic Object",
            "picture": Object {
              "image_href": "http://localhost:3000/pictures/52.png",
            },
          }
        }
        onCancel={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "text-field",
                "id": "name",
                "isRequired": true,
                "label": "Name",
                "maxLength": 255,
                "name": "name",
                "validate": Array [
                  Object {
                    "type": "required",
                  },
                ],
              },
              Object {
                "component": "text-field",
                "id": "description",
                "isRequired": true,
                "label": "Description",
                "maxLength": 255,
                "name": "description",
                "validate": Array [
                  Object {
                    "type": "required",
                  },
                ],
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "AddButtonProps": Object {
                      "size": "small",
                    },
                    "RemoveButtonProps": Object {
                      "size": "small",
                    },
                    "buttonLabels": Object {
                      "add": "Add",
                      "remove": "Remove",
                    },
                    "component": "field-array",
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "label": "Name",
                        "name": "attributes_name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                          Object {
                            "type": "syntax",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "includeEmpty": true,
                        "label": "Type",
                        "loadOptions": [Function],
                        "name": "type",
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                    ],
                    "id": "attributes",
                    "label": "Attributes",
                    "name": "attributes",
                    "noItemsMessage": "None",
                  },
                ],
                "id": "generic-objects-field-array-attributes",
                "key": "generic-objects-field-array-attributes",
                "name": "generic-objects-field-array-attributes",
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "AddButtonProps": Object {
                      "size": "small",
                    },
                    "RemoveButtonProps": Object {
                      "size": "small",
                    },
                    "buttonLabels": Object {
                      "add": "Add",
                      "remove": "Remove",
                    },
                    "component": "field-array",
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "label": "Name",
                        "name": "associations_name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                          Object {
                            "type": "syntax",
                          },
                        ],
                      },
                      Object {
                        "className": "class",
                        "component": "select",
                        "id": "class",
                        "isSearchable": true,
                        "label": "Class",
                        "name": "class",
                        "options": Array [
                          Object {
                            "label": "Bottleneck Event",
                            "value": "BottleneckEvent",
                          },
                          Object {
                            "label": "Performance - Container Project",
                            "value": "ContainerProjectPerformance",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "simpleValue": true,
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                    ],
                    "id": "associations",
                    "label": "Associations",
                    "name": "associations",
                    "noItemsMessage": "None",
                  },
                ],
                "id": "generic-objects-field-array-associations",
                "key": "generic-objects-field-array-associations",
                "name": "generic-objects-field-array-associations",
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "AddButtonProps": Object {
                      "size": "small",
                    },
                    "RemoveButtonProps": Object {
                      "size": "small",
                    },
                    "buttonLabels": Object {
                      "add": "Add",
                      "remove": "Remove",
                    },
                    "component": "field-array",
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "label": "Name",
                        "name": "methods_name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                          Object {
                            "type": "syntax",
                          },
                        ],
                      },
                    ],
                    "id": "methods",
                    "label": "Methods",
                    "name": "methods",
                    "noItemsMessage": "None",
                  },
                ],
                "id": "generic-objects-field-array-methods",
                "key": "generic-objects-field-array-methods",
                "name": "generic-objects-field-array-methods",
              },
              Object {
                "component": "sub-form",
                "condition": Object {
                  "is": true,
                  "when": "image_update",
                },
                "fields": Array [
                  Object {
                    "component": "file-upload",
                    "label": "Custom Image File",
                    "name": "file_upload",
                    "type": "file",
                    "validate": Array [
                      Object {
                        "maxSize": 5000000,
                        "type": "file",
                      },
                    ],
                  },
                ],
                "id": "file_section",
                "name": "file_section",
              },
              Object {
                "component": "sub-form",
                "condition": Object {
                  "is": false,
                  "when": "image_update",
                },
                "fields": Array [
                  Object {
                    "component": "file-edit",
                    "description": "Delete File",
                    "label": "Current Custom Image File",
                    "name": "file_edit",
                    "src": "http://localhost:3000/pictures/52.png",
                  },
                ],
                "id": "edit_section",
                "name": "edit_section",
              },
              Object {
                "component": "switch",
                "hideField": true,
                "name": "image_update",
              },
            ],
          }
        }
        showFormControls={true}
        validate={[Function]}
        validatorMapper={
          Object {
            "dateRange": [Function],
            "file": [Function],
            "syntax": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-edit": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "associations": Array [
                Object {
                  "associations_name": "bottle_neck",
                  "class": "BottleneckEvent",
                },
                Object {
                  "associations_name": "project",
                  "class": "ContainerProjectPerformance",
                },
              ],
              "attributes": Array [
                Object {
                  "attributes_name": "this_is_a_string",
                  "type": "string",
                },
              ],
              "description": "this is a test",
              "image_update": false,
              "methods": Array [
                Object {
                  "methods_name": "method",
                },
              ],
              "name": "Generic Object",
              "picture": Object {
                "image_href": "http://localhost:3000/pictures/52.png",
              },
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "text-field",
                  "id": "name",
                  "isRequired": true,
                  "label": "Name",
                  "maxLength": 255,
                  "name": "name",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "text-field",
                  "id": "description",
                  "isRequired": true,
                  "label": "Description",
                  "maxLength": 255,
                  "name": "description",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "AddButtonProps": Object {
                        "size": "small",
                      },
                      "RemoveButtonProps": Object {
                        "size": "small",
                      },
                      "buttonLabels": Object {
                        "add": "Add",
                        "remove": "Remove",
                      },
                      "component": "field-array",
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "label": "Name",
                          "name": "attributes_name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                            Object {
                              "type": "syntax",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "includeEmpty": true,
                          "label": "Type",
                          "loadOptions": [Function],
                          "name": "type",
                          "placeholder": "<Choose>",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ],
                      "id": "attributes",
                      "label": "Attributes",
                      "name": "attributes",
                      "noItemsMessage": "None",
                    },
                  ],
                  "id": "generic-objects-field-array-attributes",
                  "key": "generic-objects-field-array-attributes",
                  "name": "generic-objects-field-array-attributes",
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "AddButtonProps": Object {
                        "size": "small",
                      },
                      "RemoveButtonProps": Object {
                        "size": "small",
                      },
                      "buttonLabels": Object {
                        "add": "Add",
                        "remove": "Remove",
                      },
                      "component": "field-array",
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "label": "Name",
                          "name": "associations_name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                            Object {
                              "type": "syntax",
                            },
                          ],
                        },
                        Object {
                          "className": "class",
                          "component": "select",
                          "id": "class",
                          "isSearchable": true,
                          "label": "Class",
                          "name": "class",
                          "options": Array [
                            Object {
                              "label": "Bottleneck Event",
                              "value": "BottleneckEvent",
                            },
                            Object {
                              "label": "Performance - Container Project",
                              "value": "ContainerProjectPerformance",
                            },
                          ],
                          "placeholder": "<Choose>",
                          "simpleValue": true,
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ],
                      "id": "associations",
                      "label": "Associations",
                      "name": "associations",
                      "noItemsMessage": "None",
                    },
                  ],
                  "id": "generic-objects-field-array-associations",
                  "key": "generic-objects-field-array-associations",
                  "name": "generic-objects-field-array-associations",
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "AddButtonProps": Object {
                        "size": "small",
                      },
                      "RemoveButtonProps": Object {
                        "size": "small",
                      },
                      "buttonLabels": Object {
                        "add": "Add",
                        "remove": "Remove",
                      },
                      "component": "field-array",
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "label": "Name",
                          "name": "methods_name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                            Object {
                              "type": "syntax",
                            },
                          ],
                        },
                      ],
                      "id": "methods",
                      "label": "Methods",
                      "name": "methods",
                      "noItemsMessage": "None",
                    },
                  ],
                  "id": "generic-objects-field-array-methods",
                  "key": "generic-objects-field-array-methods",
                  "name": "generic-objects-field-array-methods",
                },
                Object {
                  "component": "sub-form",
                  "condition": Object {
                    "is": true,
                    "when": "image_update",
                  },
                  "fields": Array [
                    Object {
                      "component": "file-upload",
                      "label": "Custom Image File",
                      "name": "file_upload",
                      "type": "file",
                      "validate": Array [
                        Object {
                          "maxSize": 5000000,
                          "type": "file",
                        },
                      ],
                    },
                  ],
                  "id": "file_section",
                  "name": "file_section",
                },
                Object {
                  "component": "sub-form",
                  "condition": Object {
                    "is": false,
                    "when": "image_update",
                  },
                  "fields": Array [
                    Object {
                      "component": "file-edit",
                      "description": "Delete File",
                      "label": "Current Custom Image File",
                      "name": "file_edit",
                      "src": "http://localhost:3000/pictures/52.png",
                    },
                  ],
                  "id": "edit_section",
                  "name": "edit_section",
                },
                Object {
                  "component": "switch",
                  "hideField": true,
                  "name": "image_update",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validate={[Function]}
          validatorMapper={
            Object {
              "dateRange": [Function],
              "file": [Function],
              "syntax": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "associations": Array [
                  Object {
                    "associations_name": "bottle_neck",
                    "class": "BottleneckEvent",
                  },
                  Object {
                    "associations_name": "project",
                    "class": "ContainerProjectPerformance",
                  },
                ],
                "attributes": Array [
                  Object {
                    "attributes_name": "this_is_a_string",
                    "type": "string",
                  },
                ],
                "description": "this is a test",
                "image_update": false,
                "methods": Array [
                  Object {
                    "methods_name": "method",
                  },
                ],
                "name": "Generic Object",
                "picture": Object {
                  "image_href": "http://localhost:3000/pictures/52.png",
                },
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
            validate={[Function]}
          >
            <Component
              formFields={
                Array [
                  <SingleField
                    component="text-field"
                    id="name"
                    isRequired={true}
                    label="Name"
                    maxLength={255}
                    name="name"
                    validate={
                      Array [
                        Object {
                          "type": "required",
                        },
                      ]
                    }
                  />,
                  <SingleField
                    component="text-field"
                    id="description"
                    isRequired={true}
                    label="Description"
                    maxLength={255}
                    name="description"
                    validate={
                      Array [
                        Object {
                          "type": "required",
                        },
                      ]
                    }
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "attributes_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "includeEmpty": true,
                              "label": "Type",
                              "loadOptions": [Function],
                              "name": "type",
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "attributes",
                          "label": "Attributes",
                          "name": "attributes",
                          "noItemsMessage": "None",
                        },
                      ]
                    }
                    id="generic-objects-field-array-attributes"
                    name="generic-objects-field-array-attributes"
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "associations_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "className": "class",
                              "component": "select",
                              "id": "class",
                              "isSearchable": true,
                              "label": "Class",
                              "name": "class",
                              "options": Array [
                                Object {
                                  "label": "Bottleneck Event",
                                  "value": "BottleneckEvent",
                                },
                                Object {
                                  "label": "Performance - Container Project",
                                  "value": "ContainerProjectPerformance",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "simpleValue": true,
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "associations",
                          "label": "Associations",
                          "name": "associations",
                          "noItemsMessage": "None",
                        },
                      ]
                    }
                    id="generic-objects-field-array-associations"
                    name="generic-objects-field-array-associations"
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "methods_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                          ],
                          "id": "methods",
                          "label": "Methods",
                          "name": "methods",
                          "noItemsMessage": "None",
                        },
                      ]
                    }
                    id="generic-objects-field-array-methods"
                    name="generic-objects-field-array-methods"
                  />,
                  <SingleField
                    component="sub-form"
                    condition={
                      Object {
                        "is": true,
                        "when": "image_update",
                      }
                    }
                    fields={
                      Array [
                        Object {
                          "component": "file-upload",
                          "label": "Custom Image File",
                          "name": "file_upload",
                          "type": "file",
                          "validate": Array [
                            Object {
                              "maxSize": 5000000,
                              "type": "file",
                            },
                          ],
                        },
                      ]
                    }
                    id="file_section"
                    name="file_section"
                  />,
                  <SingleField
                    component="sub-form"
                    condition={
                      Object {
                        "is": false,
                        "when": "image_update",
                      }
                    }
                    fields={
                      Array [
                        Object {
                          "component": "file-edit",
                          "description": "Delete File",
                          "label": "Current Custom Image File",
                          "name": "file_edit",
                          "src": "http://localhost:3000/pictures/52.png",
                        },
                      ]
                    }
                    id="edit_section"
                    name="edit_section"
                  />,
                  <SingleField
                    component="switch"
                    hideField={true}
                    name="image_update"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "id": "name",
                      "isRequired": true,
                      "label": "Name",
                      "maxLength": 255,
                      "name": "name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "text-field",
                      "id": "description",
                      "isRequired": true,
                      "label": "Description",
                      "maxLength": 255,
                      "name": "description",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "attributes_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "includeEmpty": true,
                              "label": "Type",
                              "loadOptions": [Function],
                              "name": "type",
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "attributes",
                          "label": "Attributes",
                          "name": "attributes",
                          "noItemsMessage": "None",
                        },
                      ],
                      "id": "generic-objects-field-array-attributes",
                      "key": "generic-objects-field-array-attributes",
                      "name": "generic-objects-field-array-attributes",
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "associations_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "className": "class",
                              "component": "select",
                              "id": "class",
                              "isSearchable": true,
                              "label": "Class",
                              "name": "class",
                              "options": Array [
                                Object {
                                  "label": "Bottleneck Event",
                                  "value": "BottleneckEvent",
                                },
                                Object {
                                  "label": "Performance - Container Project",
                                  "value": "ContainerProjectPerformance",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "simpleValue": true,
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "associations",
                          "label": "Associations",
                          "name": "associations",
                          "noItemsMessage": "None",
                        },
                      ],
                      "id": "generic-objects-field-array-associations",
                      "key": "generic-objects-field-array-associations",
                      "name": "generic-objects-field-array-associations",
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "methods_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                          ],
                          "id": "methods",
                          "label": "Methods",
                          "name": "methods",
                          "noItemsMessage": "None",
                        },
                      ],
                      "id": "generic-objects-field-array-methods",
                      "key": "generic-objects-field-array-methods",
                      "name": "generic-objects-field-array-methods",
                    },
                    Object {
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "image_update",
                      },
                      "fields": Array [
                        Object {
                          "component": "file-upload",
                          "label": "Custom Image File",
                          "name": "file_upload",
                          "type": "file",
                          "validate": Array [
                            Object {
                              "maxSize": 5000000,
                              "type": "file",
                            },
                          ],
                        },
                      ],
                      "id": "file_section",
                      "name": "file_section",
                    },
                    Object {
                      "component": "sub-form",
                      "condition": Object {
                        "is": false,
                        "when": "image_update",
                      },
                      "fields": Array [
                        Object {
                          "component": "file-edit",
                          "description": "Delete File",
                          "label": "Current Custom Image File",
                          "name": "file_edit",
                          "src": "http://localhost:3000/pictures/52.png",
                        },
                      ],
                      "id": "edit_section",
                      "name": "edit_section",
                    },
                    Object {
                      "component": "switch",
                      "hideField": true,
                      "name": "image_update",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <WrappedFormTemplate
                canReset={true}
                cancelLabel="Cancel"
                disableSubmit={
                  Array [
                    "pristine",
                    "invalid",
                  ]
                }
                formFields={
                  Array [
                    <SingleField
                      component="text-field"
                      id="name"
                      isRequired={true}
                      label="Name"
                      maxLength={255}
                      name="name"
                      validate={
                        Array [
                          Object {
                            "type": "required",
                          },
                        ]
                      }
                    />,
                    <SingleField
                      component="text-field"
                      id="description"
                      isRequired={true}
                      label="Description"
                      maxLength={255}
                      name="description"
                      validate={
                        Array [
                          Object {
                            "type": "required",
                          },
                        ]
                      }
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "attributes_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "includeEmpty": true,
                                "label": "Type",
                                "loadOptions": [Function],
                                "name": "type",
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "attributes",
                            "label": "Attributes",
                            "name": "attributes",
                            "noItemsMessage": "None",
                          },
                        ]
                      }
                      id="generic-objects-field-array-attributes"
                      name="generic-objects-field-array-attributes"
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "associations_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "className": "class",
                                "component": "select",
                                "id": "class",
                                "isSearchable": true,
                                "label": "Class",
                                "name": "class",
                                "options": Array [
                                  Object {
                                    "label": "Bottleneck Event",
                                    "value": "BottleneckEvent",
                                  },
                                  Object {
                                    "label": "Performance - Container Project",
                                    "value": "ContainerProjectPerformance",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "simpleValue": true,
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "associations",
                            "label": "Associations",
                            "name": "associations",
                            "noItemsMessage": "None",
                          },
                        ]
                      }
                      id="generic-objects-field-array-associations"
                      name="generic-objects-field-array-associations"
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "methods_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                            ],
                            "id": "methods",
                            "label": "Methods",
                            "name": "methods",
                            "noItemsMessage": "None",
                          },
                        ]
                      }
                      id="generic-objects-field-array-methods"
                      name="generic-objects-field-array-methods"
                    />,
                    <SingleField
                      component="sub-form"
                      condition={
                        Object {
                          "is": true,
                          "when": "image_update",
                        }
                      }
                      fields={
                        Array [
                          Object {
                            "component": "file-upload",
                            "label": "Custom Image File",
                            "name": "file_upload",
                            "type": "file",
                            "validate": Array [
                              Object {
                                "maxSize": 5000000,
                                "type": "file",
                              },
                            ],
                          },
                        ]
                      }
                      id="file_section"
                      name="file_section"
                    />,
                    <SingleField
                      component="sub-form"
                      condition={
                        Object {
                          "is": false,
                          "when": "image_update",
                        }
                      }
                      fields={
                        Array [
                          Object {
                            "component": "file-edit",
                            "description": "Delete File",
                            "label": "Current Custom Image File",
                            "name": "file_edit",
                            "src": "http://localhost:3000/pictures/52.png",
                          },
                        ]
                      }
                      id="edit_section"
                      name="edit_section"
                    />,
                    <SingleField
                      component="switch"
                      hideField={true}
                      name="image_update"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                formWrapperProps={
                  Object {
                    "className": "form-react",
                  }
                }
                resetLabel="Reset"
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "id": "name",
                        "isRequired": true,
                        "label": "Name",
                        "maxLength": 255,
                        "name": "name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "description",
                        "isRequired": true,
                        "label": "Description",
                        "maxLength": 255,
                        "name": "description",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "attributes_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "includeEmpty": true,
                                "label": "Type",
                                "loadOptions": [Function],
                                "name": "type",
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "attributes",
                            "label": "Attributes",
                            "name": "attributes",
                            "noItemsMessage": "None",
                          },
                        ],
                        "id": "generic-objects-field-array-attributes",
                        "key": "generic-objects-field-array-attributes",
                        "name": "generic-objects-field-array-attributes",
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "associations_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "className": "class",
                                "component": "select",
                                "id": "class",
                                "isSearchable": true,
                                "label": "Class",
                                "name": "class",
                                "options": Array [
                                  Object {
                                    "label": "Bottleneck Event",
                                    "value": "BottleneckEvent",
                                  },
                                  Object {
                                    "label": "Performance - Container Project",
                                    "value": "ContainerProjectPerformance",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "simpleValue": true,
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "associations",
                            "label": "Associations",
                            "name": "associations",
                            "noItemsMessage": "None",
                          },
                        ],
                        "id": "generic-objects-field-array-associations",
                        "key": "generic-objects-field-array-associations",
                        "name": "generic-objects-field-array-associations",
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "methods_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                            ],
                            "id": "methods",
                            "label": "Methods",
                            "name": "methods",
                            "noItemsMessage": "None",
                          },
                        ],
                        "id": "generic-objects-field-array-methods",
                        "key": "generic-objects-field-array-methods",
                        "name": "generic-objects-field-array-methods",
                      },
                      Object {
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "image_update",
                        },
                        "fields": Array [
                          Object {
                            "component": "file-upload",
                            "label": "Custom Image File",
                            "name": "file_upload",
                            "type": "file",
                            "validate": Array [
                              Object {
                                "maxSize": 5000000,
                                "type": "file",
                              },
                            ],
                          },
                        ],
                        "id": "file_section",
                        "name": "file_section",
                      },
                      Object {
                        "component": "sub-form",
                        "condition": Object {
                          "is": false,
                          "when": "image_update",
                        },
                        "fields": Array [
                          Object {
                            "component": "file-edit",
                            "description": "Delete File",
                            "label": "Current Custom Image File",
                            "name": "file_edit",
                            "src": "http://localhost:3000/pictures/52.png",
                          },
                        ],
                        "id": "edit_section",
                        "name": "edit_section",
                      },
                      Object {
                        "component": "switch",
                        "hideField": true,
                        "name": "image_update",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
                showFormControls={true}
                submitLabel="Save"
              >
                <FormTemplate
                  Button={[Function]}
                  ButtonGroup={[Function]}
                  Description={[Function]}
                  FormWrapper={[Function]}
                  Header={[Function]}
                  Title={[Function]}
                  buttonOrder={
                    Array [
                      "submit",
                      "reset",
                      "cancel",
                    ]
                  }
                  canReset={true}
                  cancelLabel="Cancel"
                  disableSubmit={
                    Array [
                      "pristine",
                      "invalid",
                    ]
                  }
                  formFields={
                    Array [
                      <SingleField
                        component="text-field"
                        id="name"
                        isRequired={true}
                        label="Name"
                        maxLength={255}
                        name="name"
                        validate={
                          Array [
                            Object {
                              "type": "required",
                            },
                          ]
                        }
                      />,
                      <SingleField
                        component="text-field"
                        id="description"
                        isRequired={true}
                        label="Description"
                        maxLength={255}
                        name="description"
                        validate={
                          Array [
                            Object {
                              "type": "required",
                            },
                          ]
                        }
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "attributes_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "includeEmpty": true,
                                  "label": "Type",
                                  "loadOptions": [Function],
                                  "name": "type",
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "attributes",
                              "label": "Attributes",
                              "name": "attributes",
                              "noItemsMessage": "None",
                            },
                          ]
                        }
                        id="generic-objects-field-array-attributes"
                        name="generic-objects-field-array-attributes"
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "associations_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "className": "class",
                                  "component": "select",
                                  "id": "class",
                                  "isSearchable": true,
                                  "label": "Class",
                                  "name": "class",
                                  "options": Array [
                                    Object {
                                      "label": "Bottleneck Event",
                                      "value": "BottleneckEvent",
                                    },
                                    Object {
                                      "label": "Performance - Container Project",
                                      "value": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "simpleValue": true,
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "associations",
                              "label": "Associations",
                              "name": "associations",
                              "noItemsMessage": "None",
                            },
                          ]
                        }
                        id="generic-objects-field-array-associations"
                        name="generic-objects-field-array-associations"
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "methods_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                              ],
                              "id": "methods",
                              "label": "Methods",
                              "name": "methods",
                              "noItemsMessage": "None",
                            },
                          ]
                        }
                        id="generic-objects-field-array-methods"
                        name="generic-objects-field-array-methods"
                      />,
                      <SingleField
                        component="sub-form"
                        condition={
                          Object {
                            "is": true,
                            "when": "image_update",
                          }
                        }
                        fields={
                          Array [
                            Object {
                              "component": "file-upload",
                              "label": "Custom Image File",
                              "name": "file_upload",
                              "type": "file",
                              "validate": Array [
                                Object {
                                  "maxSize": 5000000,
                                  "type": "file",
                                },
                              ],
                            },
                          ]
                        }
                        id="file_section"
                        name="file_section"
                      />,
                      <SingleField
                        component="sub-form"
                        condition={
                          Object {
                            "is": false,
                            "when": "image_update",
                          }
                        }
                        fields={
                          Array [
                            Object {
                              "component": "file-edit",
                              "description": "Delete File",
                              "label": "Current Custom Image File",
                              "name": "file_edit",
                              "src": "http://localhost:3000/pictures/52.png",
                            },
                          ]
                        }
                        id="edit_section"
                        name="edit_section"
                      />,
                      <SingleField
                        component="switch"
                        hideField={true}
                        name="image_update"
                      />,
                      <SingleField
                        component="spy-field"
                        name="spy-field"
                      />,
                    ]
                  }
                  formWrapperProps={
                    Object {
                      "className": "form-react",
                    }
                  }
                  resetLabel="Reset"
                  schema={
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "id": "name",
                          "isRequired": true,
                          "label": "Name",
                          "maxLength": 255,
                          "name": "name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "text-field",
                          "id": "description",
                          "isRequired": true,
                          "label": "Description",
                          "maxLength": 255,
                          "name": "description",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "attributes_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "includeEmpty": true,
                                  "label": "Type",
                                  "loadOptions": [Function],
                                  "name": "type",
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "attributes",
                              "label": "Attributes",
                              "name": "attributes",
                              "noItemsMessage": "None",
                            },
                          ],
                          "id": "generic-objects-field-array-attributes",
                          "key": "generic-objects-field-array-attributes",
                          "name": "generic-objects-field-array-attributes",
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "associations_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "className": "class",
                                  "component": "select",
                                  "id": "class",
                                  "isSearchable": true,
                                  "label": "Class",
                                  "name": "class",
                                  "options": Array [
                                    Object {
                                      "label": "Bottleneck Event",
                                      "value": "BottleneckEvent",
                                    },
                                    Object {
                                      "label": "Performance - Container Project",
                                      "value": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "simpleValue": true,
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "associations",
                              "label": "Associations",
                              "name": "associations",
                              "noItemsMessage": "None",
                            },
                          ],
                          "id": "generic-objects-field-array-associations",
                          "key": "generic-objects-field-array-associations",
                          "name": "generic-objects-field-array-associations",
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "methods_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                              ],
                              "id": "methods",
                              "label": "Methods",
                              "name": "methods",
                              "noItemsMessage": "None",
                            },
                          ],
                          "id": "generic-objects-field-array-methods",
                          "key": "generic-objects-field-array-methods",
                          "name": "generic-objects-field-array-methods",
                        },
                        Object {
                          "component": "sub-form",
                          "condition": Object {
                            "is": true,
                            "when": "image_update",
                          },
                          "fields": Array [
                            Object {
                              "component": "file-upload",
                              "label": "Custom Image File",
                              "name": "file_upload",
                              "type": "file",
                              "validate": Array [
                                Object {
                                  "maxSize": 5000000,
                                  "type": "file",
                                },
                              ],
                            },
                          ],
                          "id": "file_section",
                          "name": "file_section",
                        },
                        Object {
                          "component": "sub-form",
                          "condition": Object {
                            "is": false,
                            "when": "image_update",
                          },
                          "fields": Array [
                            Object {
                              "component": "file-edit",
                              "description": "Delete File",
                              "label": "Current Custom Image File",
                              "name": "file_edit",
                              "src": "http://localhost:3000/pictures/52.png",
                            },
                          ],
                          "id": "edit_section",
                          "name": "edit_section",
                        },
                        Object {
                          "component": "switch",
                          "hideField": true,
                          "name": "image_update",
                        },
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        },
                      ],
                    }
                  }
                  showFormControls={true}
                  submitLabel="Save"
                >
                  <Form
                    className="form-react"
                    onSubmit={[Function]}
                  >
                    <Form
                      className="form-0-2-3 form-react"
                      noValidate={true}
                      onSubmit={[Function]}
                    >
                      <form
                        className="bx--form form-0-2-3 form-react"
                        noValidate={true}
                        onSubmit={[Function]}
                      >
                         
                        <SingleField
                          component="text-field"
                          id="name"
                          isRequired={true}
                          key="name"
                          label="Name"
                          maxLength={255}
                          name="name"
                          validate={
                            Array [
                              Object {
                                "type": "required",
                              },
                            ]
                          }
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "text-field",
                                "id": "name",
                                "isRequired": true,
                                "label": "Name",
                                "maxLength": 255,
                                "name": "name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <TextField
                                component="text-field"
                                id="name"
                                isRequired={true}
                                label="Name"
                                maxLength={255}
                                name="name"
                                validate={
                                  Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ]
                                }
                              >
                                <TextInput
                                  id="name"
                                  invalid={false}
                                  invalidText=""
                                  key="name"
                                  labelText={
                                    <IsRequired>
                                      Name
                                    </IsRequired>
                                  }
                                  maxLength={255}
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value="Generic Object"
                                  warn={false}
                                  warnText=""
                                >
                                  <div
                                    className="bx--form-item bx--text-input-wrapper"
                                  >
                                    <label
                                      className="bx--label"
                                      htmlFor="name"
                                    >
                                      <IsRequired>
                                        <span
                                          aria-hidden="true"
                                          className="ddorg__carbon-component-mapper_is-required isRequired-0-2-4"
                                        >
                                          *
                                        </span>
                                        Name
                                      </IsRequired>
                                    </label>
                                    <div
                                      className="bx--text-input__field-outer-wrapper"
                                    >
                                      <div
                                        className="bx--text-input__field-wrapper"
                                        data-invalid={null}
                                      >
                                        <input
                                          className="bx--text-input bx--text-input--md"
                                          disabled={false}
                                          id="name"
                                          maxLength={255}
                                          name="name"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          type="text"
                                          value="Generic Object"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </TextInput>
                              </TextField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="text-field"
                          id="description"
                          isRequired={true}
                          key="description"
                          label="Description"
                          maxLength={255}
                          name="description"
                          validate={
                            Array [
                              Object {
                                "type": "required",
                              },
                            ]
                          }
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "text-field",
                                "id": "description",
                                "isRequired": true,
                                "label": "Description",
                                "maxLength": 255,
                                "name": "description",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <TextField
                                component="text-field"
                                id="description"
                                isRequired={true}
                                label="Description"
                                maxLength={255}
                                name="description"
                                validate={
                                  Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ]
                                }
                              >
                                <TextInput
                                  id="description"
                                  invalid={false}
                                  invalidText=""
                                  key="description"
                                  labelText={
                                    <IsRequired>
                                      Description
                                    </IsRequired>
                                  }
                                  maxLength={255}
                                  name="description"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value="this is a test"
                                  warn={false}
                                  warnText=""
                                >
                                  <div
                                    className="bx--form-item bx--text-input-wrapper"
                                  >
                                    <label
                                      className="bx--label"
                                      htmlFor="description"
                                    >
                                      <IsRequired>
                                        <span
                                          aria-hidden="true"
                                          className="ddorg__carbon-component-mapper_is-required isRequired-0-2-4"
                                        >
                                          *
                                        </span>
                                        Description
                                      </IsRequired>
                                    </label>
                                    <div
                                      className="bx--text-input__field-outer-wrapper"
                                    >
                                      <div
                                        className="bx--text-input__field-wrapper"
                                        data-invalid={null}
                                      >
                                        <input
                                          className="bx--text-input bx--text-input--md"
                                          disabled={false}
                                          id="description"
                                          maxLength={255}
                                          name="description"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          type="text"
                                          value="this is a test"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </TextInput>
                              </TextField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "AddButtonProps": Object {
                                  "size": "small",
                                },
                                "RemoveButtonProps": Object {
                                  "size": "small",
                                },
                                "buttonLabels": Object {
                                  "add": "Add",
                                  "remove": "Remove",
                                },
                                "component": "field-array",
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "label": "Name",
                                    "name": "attributes_name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                      Object {
                                        "type": "syntax",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "includeEmpty": true,
                                    "label": "Type",
                                    "loadOptions": [Function],
                                    "name": "type",
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                ],
                                "id": "attributes",
                                "label": "Attributes",
                                "name": "attributes",
                                "noItemsMessage": "None",
                              },
                            ]
                          }
                          id="generic-objects-field-array-attributes"
                          key="generic-objects-field-array-attributes"
                          name="generic-objects-field-array-attributes"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "AddButtonProps": Object {
                                      "size": "small",
                                    },
                                    "RemoveButtonProps": Object {
                                      "size": "small",
                                    },
                                    "buttonLabels": Object {
                                      "add": "Add",
                                      "remove": "Remove",
                                    },
                                    "component": "field-array",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "label": "Name",
                                        "name": "attributes_name",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                          Object {
                                            "type": "syntax",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "includeEmpty": true,
                                        "label": "Type",
                                        "loadOptions": [Function],
                                        "name": "type",
                                        "placeholder": "<Choose>",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "attributes",
                                    "label": "Attributes",
                                    "name": "attributes",
                                    "noItemsMessage": "None",
                                  },
                                ],
                                "id": "generic-objects-field-array-attributes",
                                "name": "generic-objects-field-array-attributes",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "AddButtonProps": Object {
                                        "size": "small",
                                      },
                                      "RemoveButtonProps": Object {
                                        "size": "small",
                                      },
                                      "buttonLabels": Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      },
                                      "component": "field-array",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "attributes_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "includeEmpty": true,
                                          "label": "Type",
                                          "loadOptions": [Function],
                                          "name": "type",
                                          "placeholder": "<Choose>",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "attributes",
                                      "label": "Attributes",
                                      "name": "attributes",
                                      "noItemsMessage": "None",
                                    },
                                  ]
                                }
                                id="generic-objects-field-array-attributes"
                                name="generic-objects-field-array-attributes"
                              >
                                <div
                                  className=""
                                  id="generic-objects-field-array-attributes"
                                  name="generic-objects-field-array-attributes"
                                >
                                  <SingleField
                                    AddButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    RemoveButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    buttonLabels={
                                      Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      }
                                    }
                                    component="field-array"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "attributes_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "includeEmpty": true,
                                          "label": "Type",
                                          "loadOptions": [Function],
                                          "name": "type",
                                          "placeholder": "<Choose>",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    id="attributes"
                                    key="attributes"
                                    label="Attributes"
                                    name="attributes"
                                    noItemsMessage="None"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "AddButtonProps": Object {
                                            "size": "small",
                                          },
                                          "RemoveButtonProps": Object {
                                            "size": "small",
                                          },
                                          "buttonLabels": Object {
                                            "add": "Add",
                                            "remove": "Remove",
                                          },
                                          "component": "field-array",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "label": "Name",
                                              "name": "attributes_name",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                                Object {
                                                  "type": "syntax",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "includeEmpty": true,
                                              "label": "Type",
                                              "loadOptions": [Function],
                                              "name": "type",
                                              "placeholder": "<Choose>",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "attributes",
                                          "label": "Attributes",
                                          "name": "attributes",
                                          "noItemsMessage": "None",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FieldArray
                                          AddButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          AddContainerProps={Object {}}
                                          ArrayItemProps={Object {}}
                                          FormGroupProps={Object {}}
                                          RemoveButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          WrapperProps={Object {}}
                                          buttonLabels={
                                            Object {
                                              "add": "Add",
                                              "remove": "Remove",
                                            }
                                          }
                                          component="field-array"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "text-field",
                                                "label": "Name",
                                                "name": "attributes_name",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                  Object {
                                                    "type": "syntax",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "includeEmpty": true,
                                                "label": "Type",
                                                "loadOptions": [Function],
                                                "name": "type",
                                                "placeholder": "<Choose>",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="attributes"
                                          label="Attributes"
                                          maxItems={Infinity}
                                          minItems={0}
                                          name="attributes"
                                          noItemsMessage="None"
                                        >
                                          <FormGroup
                                            className="formGroup-0-2-9"
                                            hasMargin={true}
                                            invalid={false}
                                            legendText="Attributes"
                                            message={false}
                                            messageText=""
                                          >
                                            <fieldset
                                              className="bx--fieldset formGroup-0-2-9"
                                            >
                                              <legend
                                                className="bx--label formGroup-0-2-9"
                                              >
                                                Attributes
                                              </legend>
                                              <FieldArray
                                                name="attributes"
                                              >
                                                <div>
                                                  <Component
                                                    ArrayItemProps={Object {}}
                                                    RemoveButtonProps={
                                                      Object {
                                                        "size": "small",
                                                      }
                                                    }
                                                    buttonDisabled={false}
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "label": "Name",
                                                          "name": "attributes_name",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ],
                                                        },
                                                        Object {
                                                          "component": "select",
                                                          "includeEmpty": true,
                                                          "label": "Type",
                                                          "loadOptions": [Function],
                                                          "name": "type",
                                                          "placeholder": "<Choose>",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    key="0"
                                                    name="attributes[0]"
                                                    remove={[Function]}
                                                    removeText="Remove"
                                                  >
                                                    <div>
                                                      <SingleField
                                                        component="text-field"
                                                        key="attributes[0].attributes_name"
                                                        label="Name"
                                                        name="attributes[0].attributes_name"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "label": "Name",
                                                              "name": "attributes[0].attributes_name",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                                Object {
                                                                  "type": "syntax",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <TextField
                                                              component="text-field"
                                                              label="Name"
                                                              name="attributes[0].attributes_name"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                  Object {
                                                                    "type": "syntax",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <TextInput
                                                                id="attributes[0].attributes_name"
                                                                invalid={false}
                                                                invalidText=""
                                                                key="attributes[0].attributes_name"
                                                                labelText="Name"
                                                                name="attributes[0].attributes_name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="this_is_a_string"
                                                                warn={false}
                                                                warnText=""
                                                              >
                                                                <div
                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                >
                                                                  <label
                                                                    className="bx--label"
                                                                    htmlFor="attributes[0].attributes_name"
                                                                  >
                                                                    Name
                                                                  </label>
                                                                  <div
                                                                    className="bx--text-input__field-outer-wrapper"
                                                                  >
                                                                    <div
                                                                      className="bx--text-input__field-wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <input
                                                                        className="bx--text-input bx--text-input--md"
                                                                        disabled={false}
                                                                        id="attributes[0].attributes_name"
                                                                        name="attributes[0].attributes_name"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        value="this_is_a_string"
                                                                      />
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </TextInput>
                                                            </TextField>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <SingleField
                                                        component="select"
                                                        includeEmpty={true}
                                                        key="attributes[0].type"
                                                        label="Type"
                                                        loadOptions={[Function]}
                                                        name="attributes[0].type"
                                                        placeholder="<Choose>"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "select",
                                                              "includeEmpty": true,
                                                              "label": "Type",
                                                              "loadOptions": [Function],
                                                              "name": "attributes[0].type",
                                                              "placeholder": "<Choose>",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <SelectWithOnChange
                                                              component="select"
                                                              includeEmpty={true}
                                                              label="Type"
                                                              loadOptions={[Function]}
                                                              name="attributes[0].type"
                                                              placeholder="<Choose>"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <Select
                                                                component="select"
                                                                label="Type"
                                                                loadOptions={[Function]}
                                                                loadingMessage="Loading..."
                                                                name="attributes[0].type"
                                                                placeholder="<Choose>"
                                                                validate={
                                                                  Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Select
                                                                  SelectComponent={[Function]}
                                                                  invalidText=""
                                                                  labelText="Type"
                                                                  loadOptions={[Function]}
                                                                  loadOptionsChangeCounter={1}
                                                                  loadingMessage="Loading..."
                                                                  name="attributes[0].type"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  placeholder="<Choose>"
                                                                  simpleValue={false}
                                                                  value="string"
                                                                >
                                                                  <ClearedSelect
                                                                    className=""
                                                                    closeMenuOnSelect={true}
                                                                    hideSelectedOptions={false}
                                                                    invalidText=""
                                                                    isClearable={false}
                                                                    isFetching={false}
                                                                    isSearchable={false}
                                                                    labelText="Type"
                                                                    name="attributes[0].type"
                                                                    noOptionsMessage={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onInputChange={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "<Choose>",
                                                                          "value": undefined,
                                                                        },
                                                                        Object {
                                                                          "label": "Boolean",
                                                                          "value": "boolean",
                                                                        },
                                                                        Object {
                                                                          "label": "String",
                                                                          "value": "string",
                                                                        },
                                                                      ]
                                                                    }
                                                                    placeholder="<Choose>"
                                                                    value="string"
                                                                  >
                                                                    <Select
                                                                      className=""
                                                                      disabled={false}
                                                                      helperText=""
                                                                      id="attributes[0].type"
                                                                      inline={false}
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      labelText="Type"
                                                                      light={false}
                                                                      name="attributes[0].type"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="string"
                                                                    >
                                                                      <div
                                                                        className="bx--form-item"
                                                                      >
                                                                        <div
                                                                          className="bx--select"
                                                                        >
                                                                          <label
                                                                            className="bx--label"
                                                                            htmlFor="attributes[0].type"
                                                                          >
                                                                            Type
                                                                          </label>
                                                                          <div
                                                                            className="bx--select-input__wrapper"
                                                                            data-invalid={null}
                                                                          >
                                                                            <select
                                                                              className="bx--select-input"
                                                                              id="attributes[0].type"
                                                                              name="attributes[0].type"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              value="string"
                                                                            >
                                                                              <SelectItem
                                                                                disabled={false}
                                                                                hidden={false}
                                                                                key="0"
                                                                                label="<Choose>"
                                                                                text="<Choose>"
                                                                                value=""
                                                                              >
                                                                                <option
                                                                                  className="bx--select-option"
                                                                                  disabled={false}
                                                                                  hidden={false}
                                                                                  label="<Choose>"
                                                                                  value=""
                                                                                >
                                                                                  &lt;Choose&gt;
                                                                                </option>
                                                                              </SelectItem>
                                                                              <SelectItem
                                                                                disabled={false}
                                                                                hidden={false}
                                                                                key="boolean"
                                                                                label="Boolean"
                                                                                text="Boolean"
                                                                                value="boolean"
                                                                              >
                                                                                <option
                                                                                  className="bx--select-option"
                                                                                  disabled={false}
                                                                                  hidden={false}
                                                                                  label="Boolean"
                                                                                  value="boolean"
                                                                                >
                                                                                  Boolean
                                                                                </option>
                                                                              </SelectItem>
                                                                              <SelectItem
                                                                                disabled={false}
                                                                                hidden={false}
                                                                                key="string"
                                                                                label="String"
                                                                                text="String"
                                                                                value="string"
                                                                              >
                                                                                <option
                                                                                  className="bx--select-option"
                                                                                  disabled={false}
                                                                                  hidden={false}
                                                                                  label="String"
                                                                                  value="string"
                                                                                >
                                                                                  String
                                                                                </option>
                                                                              </SelectItem>
                                                                            </select>
                                                                            <ForwardRef(ChevronDown16)
                                                                              className="bx--select__arrow"
                                                                            >
                                                                              <Icon
                                                                                className="bx--select__arrow"
                                                                                fill="currentColor"
                                                                                height={16}
                                                                                preserveAspectRatio="xMidYMid meet"
                                                                                viewBox="0 0 16 16"
                                                                                width={16}
                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="bx--select__arrow"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height={16}
                                                                                  preserveAspectRatio="xMidYMid meet"
                                                                                  viewBox="0 0 16 16"
                                                                                  width={16}
                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                >
                                                                                  <path
                                                                                    d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                                  />
                                                                                </svg>
                                                                              </Icon>
                                                                            </ForwardRef(ChevronDown16)>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Select>
                                                                  </ClearedSelect>
                                                                </Select>
                                                              </Select>
                                                            </SelectWithOnChange>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <Button
                                                        className="remove-0-2-8"
                                                        disabled={false}
                                                        id="remove-attributes[0]"
                                                        kind="danger"
                                                        onClick={[Function]}
                                                        renderIcon={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          }
                                                        }
                                                        size="small"
                                                      >
                                                        <button
                                                          aria-describedby="danger-description-6"
                                                          aria-pressed={null}
                                                          className="remove-0-2-8 bx--btn bx--btn--sm bx--btn--danger"
                                                          disabled={false}
                                                          id="remove-attributes[0]"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="bx--visually-hidden"
                                                            id="danger-description-6"
                                                          >
                                                            danger
                                                          </span>
                                                          Remove
                                                          <ForwardRef(Subtract32)
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                          >
                                                            <Icon
                                                              aria-hidden="true"
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="bx--btn__icon"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height={32}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                viewBox="0 0 32 32"
                                                                width={32}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M8 15H24V17H8z"
                                                                />
                                                              </svg>
                                                            </Icon>
                                                          </ForwardRef(Subtract32)>
                                                        </button>
                                                      </Button>
                                                    </div>
                                                  </Component>
                                                  <div
                                                    className="addContainer-0-2-7"
                                                  >
                                                    <Button
                                                      className="add-0-2-6"
                                                      disabled={false}
                                                      id="add-attributes"
                                                      onClick={[Function]}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size="small"
                                                    >
                                                      <button
                                                        aria-describedby={null}
                                                        aria-pressed={null}
                                                        className="add-0-2-6 bx--btn bx--btn--sm bx--btn--primary"
                                                        disabled={false}
                                                        id="add-attributes"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        Add
                                                        <ForwardRef(AddAlt32)
                                                          aria-hidden="true"
                                                          className="bx--btn__icon"
                                                        >
                                                          <Icon
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                            fill="currentColor"
                                                            height={32}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            viewBox="0 0 32 32"
                                                            width={32}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M16,4c6.6,0,12,5.4,12,12s-5.4,12-12,12S4,22.6,4,16S9.4,4,16,4 M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14	S23.7,2,16,2z"
                                                              />
                                                              <path
                                                                d="M24 15L17 15 17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17z"
                                                              />
                                                            </svg>
                                                          </Icon>
                                                        </ForwardRef(AddAlt32)>
                                                      </button>
                                                    </Button>
                                                  </div>
                                                </div>
                                              </FieldArray>
                                            </fieldset>
                                          </FormGroup>
                                        </FieldArray>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "AddButtonProps": Object {
                                  "size": "small",
                                },
                                "RemoveButtonProps": Object {
                                  "size": "small",
                                },
                                "buttonLabels": Object {
                                  "add": "Add",
                                  "remove": "Remove",
                                },
                                "component": "field-array",
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "label": "Name",
                                    "name": "associations_name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                      Object {
                                        "type": "syntax",
                                      },
                                    ],
                                  },
                                  Object {
                                    "className": "class",
                                    "component": "select",
                                    "id": "class",
                                    "isSearchable": true,
                                    "label": "Class",
                                    "name": "class",
                                    "options": Array [
                                      Object {
                                        "label": "Bottleneck Event",
                                        "value": "BottleneckEvent",
                                      },
                                      Object {
                                        "label": "Performance - Container Project",
                                        "value": "ContainerProjectPerformance",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "simpleValue": true,
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                ],
                                "id": "associations",
                                "label": "Associations",
                                "name": "associations",
                                "noItemsMessage": "None",
                              },
                            ]
                          }
                          id="generic-objects-field-array-associations"
                          key="generic-objects-field-array-associations"
                          name="generic-objects-field-array-associations"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "AddButtonProps": Object {
                                      "size": "small",
                                    },
                                    "RemoveButtonProps": Object {
                                      "size": "small",
                                    },
                                    "buttonLabels": Object {
                                      "add": "Add",
                                      "remove": "Remove",
                                    },
                                    "component": "field-array",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "label": "Name",
                                        "name": "associations_name",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                          Object {
                                            "type": "syntax",
                                          },
                                        ],
                                      },
                                      Object {
                                        "className": "class",
                                        "component": "select",
                                        "id": "class",
                                        "isSearchable": true,
                                        "label": "Class",
                                        "name": "class",
                                        "options": Array [
                                          Object {
                                            "label": "Bottleneck Event",
                                            "value": "BottleneckEvent",
                                          },
                                          Object {
                                            "label": "Performance - Container Project",
                                            "value": "ContainerProjectPerformance",
                                          },
                                        ],
                                        "placeholder": "<Choose>",
                                        "simpleValue": true,
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "associations",
                                    "label": "Associations",
                                    "name": "associations",
                                    "noItemsMessage": "None",
                                  },
                                ],
                                "id": "generic-objects-field-array-associations",
                                "name": "generic-objects-field-array-associations",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "AddButtonProps": Object {
                                        "size": "small",
                                      },
                                      "RemoveButtonProps": Object {
                                        "size": "small",
                                      },
                                      "buttonLabels": Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      },
                                      "component": "field-array",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "associations_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "className": "class",
                                          "component": "select",
                                          "id": "class",
                                          "isSearchable": true,
                                          "label": "Class",
                                          "name": "class",
                                          "options": Array [
                                            Object {
                                              "label": "Bottleneck Event",
                                              "value": "BottleneckEvent",
                                            },
                                            Object {
                                              "label": "Performance - Container Project",
                                              "value": "ContainerProjectPerformance",
                                            },
                                          ],
                                          "placeholder": "<Choose>",
                                          "simpleValue": true,
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "associations",
                                      "label": "Associations",
                                      "name": "associations",
                                      "noItemsMessage": "None",
                                    },
                                  ]
                                }
                                id="generic-objects-field-array-associations"
                                name="generic-objects-field-array-associations"
                              >
                                <div
                                  className=""
                                  id="generic-objects-field-array-associations"
                                  name="generic-objects-field-array-associations"
                                >
                                  <SingleField
                                    AddButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    RemoveButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    buttonLabels={
                                      Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      }
                                    }
                                    component="field-array"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "associations_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "className": "class",
                                          "component": "select",
                                          "id": "class",
                                          "isSearchable": true,
                                          "label": "Class",
                                          "name": "class",
                                          "options": Array [
                                            Object {
                                              "label": "Bottleneck Event",
                                              "value": "BottleneckEvent",
                                            },
                                            Object {
                                              "label": "Performance - Container Project",
                                              "value": "ContainerProjectPerformance",
                                            },
                                          ],
                                          "placeholder": "<Choose>",
                                          "simpleValue": true,
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    id="associations"
                                    key="associations"
                                    label="Associations"
                                    name="associations"
                                    noItemsMessage="None"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "AddButtonProps": Object {
                                            "size": "small",
                                          },
                                          "RemoveButtonProps": Object {
                                            "size": "small",
                                          },
                                          "buttonLabels": Object {
                                            "add": "Add",
                                            "remove": "Remove",
                                          },
                                          "component": "field-array",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "label": "Name",
                                              "name": "associations_name",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                                Object {
                                                  "type": "syntax",
                                                },
                                              ],
                                            },
                                            Object {
                                              "className": "class",
                                              "component": "select",
                                              "id": "class",
                                              "isSearchable": true,
                                              "label": "Class",
                                              "name": "class",
                                              "options": Array [
                                                Object {
                                                  "label": "Bottleneck Event",
                                                  "value": "BottleneckEvent",
                                                },
                                                Object {
                                                  "label": "Performance - Container Project",
                                                  "value": "ContainerProjectPerformance",
                                                },
                                              ],
                                              "placeholder": "<Choose>",
                                              "simpleValue": true,
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "associations",
                                          "label": "Associations",
                                          "name": "associations",
                                          "noItemsMessage": "None",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FieldArray
                                          AddButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          AddContainerProps={Object {}}
                                          ArrayItemProps={Object {}}
                                          FormGroupProps={Object {}}
                                          RemoveButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          WrapperProps={Object {}}
                                          buttonLabels={
                                            Object {
                                              "add": "Add",
                                              "remove": "Remove",
                                            }
                                          }
                                          component="field-array"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "text-field",
                                                "label": "Name",
                                                "name": "associations_name",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                  Object {
                                                    "type": "syntax",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "className": "class",
                                                "component": "select",
                                                "id": "class",
                                                "isSearchable": true,
                                                "label": "Class",
                                                "name": "class",
                                                "options": Array [
                                                  Object {
                                                    "label": "Bottleneck Event",
                                                    "value": "BottleneckEvent",
                                                  },
                                                  Object {
                                                    "label": "Performance - Container Project",
                                                    "value": "ContainerProjectPerformance",
                                                  },
                                                ],
                                                "placeholder": "<Choose>",
                                                "simpleValue": true,
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="associations"
                                          label="Associations"
                                          maxItems={Infinity}
                                          minItems={0}
                                          name="associations"
                                          noItemsMessage="None"
                                        >
                                          <FormGroup
                                            className="formGroup-0-2-9"
                                            hasMargin={true}
                                            invalid={false}
                                            legendText="Associations"
                                            message={false}
                                            messageText=""
                                          >
                                            <fieldset
                                              className="bx--fieldset formGroup-0-2-9"
                                            >
                                              <legend
                                                className="bx--label formGroup-0-2-9"
                                              >
                                                Associations
                                              </legend>
                                              <FieldArray
                                                name="associations"
                                              >
                                                <div>
                                                  <Component
                                                    ArrayItemProps={Object {}}
                                                    RemoveButtonProps={
                                                      Object {
                                                        "size": "small",
                                                      }
                                                    }
                                                    buttonDisabled={false}
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "label": "Name",
                                                          "name": "associations_name",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ],
                                                        },
                                                        Object {
                                                          "className": "class",
                                                          "component": "select",
                                                          "id": "class",
                                                          "isSearchable": true,
                                                          "label": "Class",
                                                          "name": "class",
                                                          "options": Array [
                                                            Object {
                                                              "label": "Bottleneck Event",
                                                              "value": "BottleneckEvent",
                                                            },
                                                            Object {
                                                              "label": "Performance - Container Project",
                                                              "value": "ContainerProjectPerformance",
                                                            },
                                                          ],
                                                          "placeholder": "<Choose>",
                                                          "simpleValue": true,
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    key="0"
                                                    name="associations[0]"
                                                    remove={[Function]}
                                                    removeText="Remove"
                                                  >
                                                    <div>
                                                      <SingleField
                                                        component="text-field"
                                                        key="associations[0].associations_name"
                                                        label="Name"
                                                        name="associations[0].associations_name"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "label": "Name",
                                                              "name": "associations[0].associations_name",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                                Object {
                                                                  "type": "syntax",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <TextField
                                                              component="text-field"
                                                              label="Name"
                                                              name="associations[0].associations_name"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                  Object {
                                                                    "type": "syntax",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <TextInput
                                                                id="associations[0].associations_name"
                                                                invalid={false}
                                                                invalidText=""
                                                                key="associations[0].associations_name"
                                                                labelText="Name"
                                                                name="associations[0].associations_name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="bottle_neck"
                                                                warn={false}
                                                                warnText=""
                                                              >
                                                                <div
                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                >
                                                                  <label
                                                                    className="bx--label"
                                                                    htmlFor="associations[0].associations_name"
                                                                  >
                                                                    Name
                                                                  </label>
                                                                  <div
                                                                    className="bx--text-input__field-outer-wrapper"
                                                                  >
                                                                    <div
                                                                      className="bx--text-input__field-wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <input
                                                                        className="bx--text-input bx--text-input--md"
                                                                        disabled={false}
                                                                        id="associations[0].associations_name"
                                                                        name="associations[0].associations_name"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        value="bottle_neck"
                                                                      />
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </TextInput>
                                                            </TextField>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <SingleField
                                                        className="class"
                                                        component="select"
                                                        id="class"
                                                        isSearchable={true}
                                                        key="associations[0].class"
                                                        label="Class"
                                                        name="associations[0].class"
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "Bottleneck Event",
                                                              "value": "BottleneckEvent",
                                                            },
                                                            Object {
                                                              "label": "Performance - Container Project",
                                                              "value": "ContainerProjectPerformance",
                                                            },
                                                          ]
                                                        }
                                                        placeholder="<Choose>"
                                                        simpleValue={true}
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "className": "class",
                                                              "component": "select",
                                                              "id": "class",
                                                              "isSearchable": true,
                                                              "label": "Class",
                                                              "name": "associations[0].class",
                                                              "options": Array [
                                                                Object {
                                                                  "label": "Bottleneck Event",
                                                                  "value": "BottleneckEvent",
                                                                },
                                                                Object {
                                                                  "label": "Performance - Container Project",
                                                                  "value": "ContainerProjectPerformance",
                                                                },
                                                              ],
                                                              "placeholder": "<Choose>",
                                                              "simpleValue": true,
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <SelectWithOnChange
                                                              className="class"
                                                              component="select"
                                                              id="class"
                                                              isSearchable={true}
                                                              label="Class"
                                                              name="associations[0].class"
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "label": "Bottleneck Event",
                                                                    "value": "BottleneckEvent",
                                                                  },
                                                                  Object {
                                                                    "label": "Performance - Container Project",
                                                                    "value": "ContainerProjectPerformance",
                                                                  },
                                                                ]
                                                              }
                                                              placeholder="<Choose>"
                                                              simpleValue={true}
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <Select
                                                                className="class"
                                                                component="select"
                                                                id="class"
                                                                isSearchable={true}
                                                                label="Class"
                                                                loadingMessage="Loading..."
                                                                name="associations[0].class"
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "label": "Bottleneck Event",
                                                                      "value": "BottleneckEvent",
                                                                    },
                                                                    Object {
                                                                      "label": "Performance - Container Project",
                                                                      "value": "ContainerProjectPerformance",
                                                                    },
                                                                  ]
                                                                }
                                                                placeholder="<Choose>"
                                                                simpleValue={true}
                                                                validate={
                                                                  Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Select
                                                                  SelectComponent={[Function]}
                                                                  className="class"
                                                                  id="class"
                                                                  invalidText=""
                                                                  labelText="Class"
                                                                  loadOptionsChangeCounter={1}
                                                                  loadingMessage="Loading..."
                                                                  name="associations[0].class"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "Bottleneck Event",
                                                                        "value": "BottleneckEvent",
                                                                      },
                                                                      Object {
                                                                        "label": "Performance - Container Project",
                                                                        "value": "ContainerProjectPerformance",
                                                                      },
                                                                    ]
                                                                  }
                                                                  placeholder="<Choose>"
                                                                  simpleValue={true}
                                                                  value="BottleneckEvent"
                                                                >
                                                                  <ClearedSelectSearchable
                                                                    className="class"
                                                                    closeMenuOnSelect={true}
                                                                    hideSelectedOptions={false}
                                                                    id="class"
                                                                    invalidText=""
                                                                    isClearable={false}
                                                                    isFetching={false}
                                                                    isSearchable={false}
                                                                    labelText="Class"
                                                                    name="associations[0].class"
                                                                    noOptionsMessage={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onInputChange={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Bottleneck Event",
                                                                          "value": "BottleneckEvent",
                                                                        },
                                                                        Object {
                                                                          "label": "Performance - Container Project",
                                                                          "value": "ContainerProjectPerformance",
                                                                        },
                                                                      ]
                                                                    }
                                                                    placeholder="<Choose>"
                                                                    value={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Bottleneck Event",
                                                                          "value": "BottleneckEvent",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <ComboBox
                                                                      ariaLabel="Choose an item"
                                                                      className="class"
                                                                      direction="bottom"
                                                                      disabled={false}
                                                                      id="associations[0].class"
                                                                      initialSelectedItem={
                                                                        Object {
                                                                          "label": "Bottleneck Event",
                                                                          "value": "BottleneckEvent",
                                                                        }
                                                                      }
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      itemToElement={null}
                                                                      itemToString={[Function]}
                                                                      items={
                                                                        Array [
                                                                          Object {
                                                                            "label": "Bottleneck Event",
                                                                            "value": "BottleneckEvent",
                                                                          },
                                                                          Object {
                                                                            "label": "Performance - Container Project",
                                                                            "value": "ContainerProjectPerformance",
                                                                          },
                                                                        ]
                                                                      }
                                                                      light={false}
                                                                      name="associations[0].class"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      placeholder="<Choose>"
                                                                      shouldFilterItem={[Function]}
                                                                      titleText="Class"
                                                                      type="default"
                                                                    >
                                                                      <Downshift
                                                                        defaultHighlightedIndex={null}
                                                                        defaultIsOpen={false}
                                                                        environment={[Window]}
                                                                        getA11yStatusMessage={[Function]}
                                                                        initialSelectedItem={
                                                                          Object {
                                                                            "label": "Bottleneck Event",
                                                                            "value": "BottleneckEvent",
                                                                          }
                                                                        }
                                                                        inputId="associations[0].class"
                                                                        inputValue="Bottleneck Event"
                                                                        itemToString={[Function]}
                                                                        onChange={[Function]}
                                                                        onInputValueChange={[Function]}
                                                                        onOuterClick={[Function]}
                                                                        onSelect={[Function]}
                                                                        onStateChange={[Function]}
                                                                        onUserAction={[Function]}
                                                                        scrollIntoView={[Function]}
                                                                        selectedItemChanged={[Function]}
                                                                        stateReducer={[Function]}
                                                                        suppressRefError={false}
                                                                      >
                                                                        <div
                                                                          className="bx--list-box__wrapper"
                                                                        >
                                                                          <Text
                                                                            as="label"
                                                                            className="bx--label"
                                                                            htmlFor="associations[0].class"
                                                                            id="downshift-0-label"
                                                                          >
                                                                            <label
                                                                              className="bx--label"
                                                                              dir="auto"
                                                                              htmlFor="associations[0].class"
                                                                              id="downshift-0-label"
                                                                            >
                                                                              Class
                                                                            </label>
                                                                          </Text>
                                                                          <ListBox
                                                                            className="bx--combo-box class"
                                                                            disabled={false}
                                                                            invalid={false}
                                                                            invalidText=""
                                                                            isOpen={false}
                                                                            light={false}
                                                                            type="default"
                                                                          >
                                                                            <div
                                                                              className="bx--combo-box class bx--list-box"
                                                                              onClick={[Function]}
                                                                              onKeyDown={[Function]}
                                                                            >
                                                                              <div
                                                                                className="bx--list-box__field"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant={null}
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls={null}
                                                                                  aria-expanded={false}
                                                                                  aria-haspopup="listbox"
                                                                                  aria-labelledby={null}
                                                                                  autoComplete="off"
                                                                                  className="bx--text-input"
                                                                                  disabled={false}
                                                                                  id="associations[0].class"
                                                                                  name="associations[0].class"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  placeholder="<Choose>"
                                                                                  role="combobox"
                                                                                  tabIndex="0"
                                                                                  title="Bottleneck Event"
                                                                                  type="text"
                                                                                  value="Bottleneck Event"
                                                                                />
                                                                                <ListBoxSelection
                                                                                  clearSelection={[Function]}
                                                                                  disabled={false}
                                                                                  onClearSelection={[Function]}
                                                                                  translateWithId={[Function]}
                                                                                >
                                                                                  <button
                                                                                    aria-label="Clear selected item"
                                                                                    className="bx--list-box__selection"
                                                                                    onClick={[Function]}
                                                                                    tabIndex={-1}
                                                                                    title="Clear selected item"
                                                                                    type="button"
                                                                                  >
                                                                                    <ForwardRef(Close16)>
                                                                                      <Icon
                                                                                        fill="currentColor"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        viewBox="0 0 32 32"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height={16}
                                                                                          preserveAspectRatio="xMidYMid meet"
                                                                                          viewBox="0 0 32 32"
                                                                                          width={16}
                                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                                        >
                                                                                          <path
                                                                                            d="M17.4141 16L24 9.4141 22.5859 8 16 14.5859 9.4143 8 8 9.4141 14.5859 16 8 22.5859 9.4143 24 16 17.4141 22.5859 24 24 22.5859 17.4141 16z"
                                                                                          />
                                                                                        </svg>
                                                                                      </Icon>
                                                                                    </ForwardRef(Close16)>
                                                                                  </button>
                                                                                </ListBoxSelection>
                                                                                <ListBoxTrigger
                                                                                  aria-haspopup={true}
                                                                                  aria-label="open menu"
                                                                                  data-toggle={true}
                                                                                  disabled={false}
                                                                                  isOpen={false}
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  role="button"
                                                                                  translateWithId={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <button
                                                                                    aria-haspopup={true}
                                                                                    aria-label="Open"
                                                                                    className="bx--list-box__menu-icon"
                                                                                    data-toggle={true}
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    role="button"
                                                                                    tabIndex="-1"
                                                                                    title="Open"
                                                                                    type="button"
                                                                                  >
                                                                                    <ForwardRef(ChevronDown16)>
                                                                                      <Icon
                                                                                        fill="currentColor"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        viewBox="0 0 16 16"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height={16}
                                                                                          preserveAspectRatio="xMidYMid meet"
                                                                                          viewBox="0 0 16 16"
                                                                                          width={16}
                                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                                        >
                                                                                          <path
                                                                                            d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                                          />
                                                                                        </svg>
                                                                                      </Icon>
                                                                                    </ForwardRef(ChevronDown16)>
                                                                                  </button>
                                                                                </ListBoxTrigger>
                                                                              </div>
                                                                              <ListBoxMenu
                                                                                aria-label="Choose an item"
                                                                                aria-labelledby={null}
                                                                                id="downshift-0-menu"
                                                                                role="listbox"
                                                                              >
                                                                                <div
                                                                                  aria-label="Choose an item"
                                                                                  aria-labelledby={null}
                                                                                  className="bx--list-box__menu"
                                                                                  id="downshift-0-menu"
                                                                                  role="listbox"
                                                                                />
                                                                              </ListBoxMenu>
                                                                            </div>
                                                                          </ListBox>
                                                                        </div>
                                                                      </Downshift>
                                                                    </ComboBox>
                                                                  </ClearedSelectSearchable>
                                                                </Select>
                                                              </Select>
                                                            </SelectWithOnChange>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <Button
                                                        className="remove-0-2-8"
                                                        disabled={false}
                                                        id="remove-associations[0]"
                                                        kind="danger"
                                                        onClick={[Function]}
                                                        renderIcon={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          }
                                                        }
                                                        size="small"
                                                      >
                                                        <button
                                                          aria-describedby="danger-description-8"
                                                          aria-pressed={null}
                                                          className="remove-0-2-8 bx--btn bx--btn--sm bx--btn--danger"
                                                          disabled={false}
                                                          id="remove-associations[0]"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="bx--visually-hidden"
                                                            id="danger-description-8"
                                                          >
                                                            danger
                                                          </span>
                                                          Remove
                                                          <ForwardRef(Subtract32)
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                          >
                                                            <Icon
                                                              aria-hidden="true"
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="bx--btn__icon"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height={32}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                viewBox="0 0 32 32"
                                                                width={32}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M8 15H24V17H8z"
                                                                />
                                                              </svg>
                                                            </Icon>
                                                          </ForwardRef(Subtract32)>
                                                        </button>
                                                      </Button>
                                                    </div>
                                                  </Component>
                                                  <Component
                                                    ArrayItemProps={Object {}}
                                                    RemoveButtonProps={
                                                      Object {
                                                        "size": "small",
                                                      }
                                                    }
                                                    buttonDisabled={false}
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "label": "Name",
                                                          "name": "associations_name",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ],
                                                        },
                                                        Object {
                                                          "className": "class",
                                                          "component": "select",
                                                          "id": "class",
                                                          "isSearchable": true,
                                                          "label": "Class",
                                                          "name": "class",
                                                          "options": Array [
                                                            Object {
                                                              "label": "Bottleneck Event",
                                                              "value": "BottleneckEvent",
                                                            },
                                                            Object {
                                                              "label": "Performance - Container Project",
                                                              "value": "ContainerProjectPerformance",
                                                            },
                                                          ],
                                                          "placeholder": "<Choose>",
                                                          "simpleValue": true,
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    key="1"
                                                    name="associations[1]"
                                                    remove={[Function]}
                                                    removeText="Remove"
                                                  >
                                                    <div>
                                                      <SingleField
                                                        component="text-field"
                                                        key="associations[1].associations_name"
                                                        label="Name"
                                                        name="associations[1].associations_name"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "label": "Name",
                                                              "name": "associations[1].associations_name",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                                Object {
                                                                  "type": "syntax",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <TextField
                                                              component="text-field"
                                                              label="Name"
                                                              name="associations[1].associations_name"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                  Object {
                                                                    "type": "syntax",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <TextInput
                                                                id="associations[1].associations_name"
                                                                invalid={false}
                                                                invalidText=""
                                                                key="associations[1].associations_name"
                                                                labelText="Name"
                                                                name="associations[1].associations_name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="project"
                                                                warn={false}
                                                                warnText=""
                                                              >
                                                                <div
                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                >
                                                                  <label
                                                                    className="bx--label"
                                                                    htmlFor="associations[1].associations_name"
                                                                  >
                                                                    Name
                                                                  </label>
                                                                  <div
                                                                    className="bx--text-input__field-outer-wrapper"
                                                                  >
                                                                    <div
                                                                      className="bx--text-input__field-wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <input
                                                                        className="bx--text-input bx--text-input--md"
                                                                        disabled={false}
                                                                        id="associations[1].associations_name"
                                                                        name="associations[1].associations_name"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        value="project"
                                                                      />
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </TextInput>
                                                            </TextField>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <SingleField
                                                        className="class"
                                                        component="select"
                                                        id="class"
                                                        isSearchable={true}
                                                        key="associations[1].class"
                                                        label="Class"
                                                        name="associations[1].class"
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "Bottleneck Event",
                                                              "value": "BottleneckEvent",
                                                            },
                                                            Object {
                                                              "label": "Performance - Container Project",
                                                              "value": "ContainerProjectPerformance",
                                                            },
                                                          ]
                                                        }
                                                        placeholder="<Choose>"
                                                        simpleValue={true}
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "className": "class",
                                                              "component": "select",
                                                              "id": "class",
                                                              "isSearchable": true,
                                                              "label": "Class",
                                                              "name": "associations[1].class",
                                                              "options": Array [
                                                                Object {
                                                                  "label": "Bottleneck Event",
                                                                  "value": "BottleneckEvent",
                                                                },
                                                                Object {
                                                                  "label": "Performance - Container Project",
                                                                  "value": "ContainerProjectPerformance",
                                                                },
                                                              ],
                                                              "placeholder": "<Choose>",
                                                              "simpleValue": true,
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <SelectWithOnChange
                                                              className="class"
                                                              component="select"
                                                              id="class"
                                                              isSearchable={true}
                                                              label="Class"
                                                              name="associations[1].class"
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "label": "Bottleneck Event",
                                                                    "value": "BottleneckEvent",
                                                                  },
                                                                  Object {
                                                                    "label": "Performance - Container Project",
                                                                    "value": "ContainerProjectPerformance",
                                                                  },
                                                                ]
                                                              }
                                                              placeholder="<Choose>"
                                                              simpleValue={true}
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <Select
                                                                className="class"
                                                                component="select"
                                                                id="class"
                                                                isSearchable={true}
                                                                label="Class"
                                                                loadingMessage="Loading..."
                                                                name="associations[1].class"
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "label": "Bottleneck Event",
                                                                      "value": "BottleneckEvent",
                                                                    },
                                                                    Object {
                                                                      "label": "Performance - Container Project",
                                                                      "value": "ContainerProjectPerformance",
                                                                    },
                                                                  ]
                                                                }
                                                                placeholder="<Choose>"
                                                                simpleValue={true}
                                                                validate={
                                                                  Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Select
                                                                  SelectComponent={[Function]}
                                                                  className="class"
                                                                  id="class"
                                                                  invalidText=""
                                                                  labelText="Class"
                                                                  loadOptionsChangeCounter={1}
                                                                  loadingMessage="Loading..."
                                                                  name="associations[1].class"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "Bottleneck Event",
                                                                        "value": "BottleneckEvent",
                                                                      },
                                                                      Object {
                                                                        "label": "Performance - Container Project",
                                                                        "value": "ContainerProjectPerformance",
                                                                      },
                                                                    ]
                                                                  }
                                                                  placeholder="<Choose>"
                                                                  simpleValue={true}
                                                                  value="ContainerProjectPerformance"
                                                                >
                                                                  <ClearedSelectSearchable
                                                                    className="class"
                                                                    closeMenuOnSelect={true}
                                                                    hideSelectedOptions={false}
                                                                    id="class"
                                                                    invalidText=""
                                                                    isClearable={false}
                                                                    isFetching={false}
                                                                    isSearchable={false}
                                                                    labelText="Class"
                                                                    name="associations[1].class"
                                                                    noOptionsMessage={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onInputChange={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Bottleneck Event",
                                                                          "value": "BottleneckEvent",
                                                                        },
                                                                        Object {
                                                                          "label": "Performance - Container Project",
                                                                          "value": "ContainerProjectPerformance",
                                                                        },
                                                                      ]
                                                                    }
                                                                    placeholder="<Choose>"
                                                                    value={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Performance - Container Project",
                                                                          "value": "ContainerProjectPerformance",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <ComboBox
                                                                      ariaLabel="Choose an item"
                                                                      className="class"
                                                                      direction="bottom"
                                                                      disabled={false}
                                                                      id="associations[1].class"
                                                                      initialSelectedItem={
                                                                        Object {
                                                                          "label": "Performance - Container Project",
                                                                          "value": "ContainerProjectPerformance",
                                                                        }
                                                                      }
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      itemToElement={null}
                                                                      itemToString={[Function]}
                                                                      items={
                                                                        Array [
                                                                          Object {
                                                                            "label": "Bottleneck Event",
                                                                            "value": "BottleneckEvent",
                                                                          },
                                                                          Object {
                                                                            "label": "Performance - Container Project",
                                                                            "value": "ContainerProjectPerformance",
                                                                          },
                                                                        ]
                                                                      }
                                                                      light={false}
                                                                      name="associations[1].class"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      placeholder="<Choose>"
                                                                      shouldFilterItem={[Function]}
                                                                      titleText="Class"
                                                                      type="default"
                                                                    >
                                                                      <Downshift
                                                                        defaultHighlightedIndex={null}
                                                                        defaultIsOpen={false}
                                                                        environment={[Window]}
                                                                        getA11yStatusMessage={[Function]}
                                                                        initialSelectedItem={
                                                                          Object {
                                                                            "label": "Performance - Container Project",
                                                                            "value": "ContainerProjectPerformance",
                                                                          }
                                                                        }
                                                                        inputId="associations[1].class"
                                                                        inputValue="Performance - Container Project"
                                                                        itemToString={[Function]}
                                                                        onChange={[Function]}
                                                                        onInputValueChange={[Function]}
                                                                        onOuterClick={[Function]}
                                                                        onSelect={[Function]}
                                                                        onStateChange={[Function]}
                                                                        onUserAction={[Function]}
                                                                        scrollIntoView={[Function]}
                                                                        selectedItemChanged={[Function]}
                                                                        stateReducer={[Function]}
                                                                        suppressRefError={false}
                                                                      >
                                                                        <div
                                                                          className="bx--list-box__wrapper"
                                                                        >
                                                                          <Text
                                                                            as="label"
                                                                            className="bx--label"
                                                                            htmlFor="associations[1].class"
                                                                            id="downshift-1-label"
                                                                          >
                                                                            <label
                                                                              className="bx--label"
                                                                              dir="auto"
                                                                              htmlFor="associations[1].class"
                                                                              id="downshift-1-label"
                                                                            >
                                                                              Class
                                                                            </label>
                                                                          </Text>
                                                                          <ListBox
                                                                            className="bx--combo-box class"
                                                                            disabled={false}
                                                                            invalid={false}
                                                                            invalidText=""
                                                                            isOpen={false}
                                                                            light={false}
                                                                            type="default"
                                                                          >
                                                                            <div
                                                                              className="bx--combo-box class bx--list-box"
                                                                              onClick={[Function]}
                                                                              onKeyDown={[Function]}
                                                                            >
                                                                              <div
                                                                                className="bx--list-box__field"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant={null}
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls={null}
                                                                                  aria-expanded={false}
                                                                                  aria-haspopup="listbox"
                                                                                  aria-labelledby={null}
                                                                                  autoComplete="off"
                                                                                  className="bx--text-input"
                                                                                  disabled={false}
                                                                                  id="associations[1].class"
                                                                                  name="associations[1].class"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  placeholder="<Choose>"
                                                                                  role="combobox"
                                                                                  tabIndex="0"
                                                                                  title="Performance - Container Project"
                                                                                  type="text"
                                                                                  value="Performance - Container Project"
                                                                                />
                                                                                <ListBoxSelection
                                                                                  clearSelection={[Function]}
                                                                                  disabled={false}
                                                                                  onClearSelection={[Function]}
                                                                                  translateWithId={[Function]}
                                                                                >
                                                                                  <button
                                                                                    aria-label="Clear selected item"
                                                                                    className="bx--list-box__selection"
                                                                                    onClick={[Function]}
                                                                                    tabIndex={-1}
                                                                                    title="Clear selected item"
                                                                                    type="button"
                                                                                  >
                                                                                    <ForwardRef(Close16)>
                                                                                      <Icon
                                                                                        fill="currentColor"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        viewBox="0 0 32 32"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height={16}
                                                                                          preserveAspectRatio="xMidYMid meet"
                                                                                          viewBox="0 0 32 32"
                                                                                          width={16}
                                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                                        >
                                                                                          <path
                                                                                            d="M17.4141 16L24 9.4141 22.5859 8 16 14.5859 9.4143 8 8 9.4141 14.5859 16 8 22.5859 9.4143 24 16 17.4141 22.5859 24 24 22.5859 17.4141 16z"
                                                                                          />
                                                                                        </svg>
                                                                                      </Icon>
                                                                                    </ForwardRef(Close16)>
                                                                                  </button>
                                                                                </ListBoxSelection>
                                                                                <ListBoxTrigger
                                                                                  aria-haspopup={true}
                                                                                  aria-label="open menu"
                                                                                  data-toggle={true}
                                                                                  disabled={false}
                                                                                  isOpen={false}
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  role="button"
                                                                                  translateWithId={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <button
                                                                                    aria-haspopup={true}
                                                                                    aria-label="Open"
                                                                                    className="bx--list-box__menu-icon"
                                                                                    data-toggle={true}
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    role="button"
                                                                                    tabIndex="-1"
                                                                                    title="Open"
                                                                                    type="button"
                                                                                  >
                                                                                    <ForwardRef(ChevronDown16)>
                                                                                      <Icon
                                                                                        fill="currentColor"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        viewBox="0 0 16 16"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height={16}
                                                                                          preserveAspectRatio="xMidYMid meet"
                                                                                          viewBox="0 0 16 16"
                                                                                          width={16}
                                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                                        >
                                                                                          <path
                                                                                            d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                                          />
                                                                                        </svg>
                                                                                      </Icon>
                                                                                    </ForwardRef(ChevronDown16)>
                                                                                  </button>
                                                                                </ListBoxTrigger>
                                                                              </div>
                                                                              <ListBoxMenu
                                                                                aria-label="Choose an item"
                                                                                aria-labelledby={null}
                                                                                id="downshift-1-menu"
                                                                                role="listbox"
                                                                              >
                                                                                <div
                                                                                  aria-label="Choose an item"
                                                                                  aria-labelledby={null}
                                                                                  className="bx--list-box__menu"
                                                                                  id="downshift-1-menu"
                                                                                  role="listbox"
                                                                                />
                                                                              </ListBoxMenu>
                                                                            </div>
                                                                          </ListBox>
                                                                        </div>
                                                                      </Downshift>
                                                                    </ComboBox>
                                                                  </ClearedSelectSearchable>
                                                                </Select>
                                                              </Select>
                                                            </SelectWithOnChange>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <Button
                                                        className="remove-0-2-8"
                                                        disabled={false}
                                                        id="remove-associations[1]"
                                                        kind="danger"
                                                        onClick={[Function]}
                                                        renderIcon={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          }
                                                        }
                                                        size="small"
                                                      >
                                                        <button
                                                          aria-describedby="danger-description-9"
                                                          aria-pressed={null}
                                                          className="remove-0-2-8 bx--btn bx--btn--sm bx--btn--danger"
                                                          disabled={false}
                                                          id="remove-associations[1]"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="bx--visually-hidden"
                                                            id="danger-description-9"
                                                          >
                                                            danger
                                                          </span>
                                                          Remove
                                                          <ForwardRef(Subtract32)
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                          >
                                                            <Icon
                                                              aria-hidden="true"
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="bx--btn__icon"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height={32}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                viewBox="0 0 32 32"
                                                                width={32}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M8 15H24V17H8z"
                                                                />
                                                              </svg>
                                                            </Icon>
                                                          </ForwardRef(Subtract32)>
                                                        </button>
                                                      </Button>
                                                    </div>
                                                  </Component>
                                                  <div
                                                    className="addContainer-0-2-7"
                                                  >
                                                    <Button
                                                      className="add-0-2-6"
                                                      disabled={false}
                                                      id="add-associations"
                                                      onClick={[Function]}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size="small"
                                                    >
                                                      <button
                                                        aria-describedby={null}
                                                        aria-pressed={null}
                                                        className="add-0-2-6 bx--btn bx--btn--sm bx--btn--primary"
                                                        disabled={false}
                                                        id="add-associations"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        Add
                                                        <ForwardRef(AddAlt32)
                                                          aria-hidden="true"
                                                          className="bx--btn__icon"
                                                        >
                                                          <Icon
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                            fill="currentColor"
                                                            height={32}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            viewBox="0 0 32 32"
                                                            width={32}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M16,4c6.6,0,12,5.4,12,12s-5.4,12-12,12S4,22.6,4,16S9.4,4,16,4 M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14	S23.7,2,16,2z"
                                                              />
                                                              <path
                                                                d="M24 15L17 15 17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17z"
                                                              />
                                                            </svg>
                                                          </Icon>
                                                        </ForwardRef(AddAlt32)>
                                                      </button>
                                                    </Button>
                                                  </div>
                                                </div>
                                              </FieldArray>
                                            </fieldset>
                                          </FormGroup>
                                        </FieldArray>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "AddButtonProps": Object {
                                  "size": "small",
                                },
                                "RemoveButtonProps": Object {
                                  "size": "small",
                                },
                                "buttonLabels": Object {
                                  "add": "Add",
                                  "remove": "Remove",
                                },
                                "component": "field-array",
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "label": "Name",
                                    "name": "methods_name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                      Object {
                                        "type": "syntax",
                                      },
                                    ],
                                  },
                                ],
                                "id": "methods",
                                "label": "Methods",
                                "name": "methods",
                                "noItemsMessage": "None",
                              },
                            ]
                          }
                          id="generic-objects-field-array-methods"
                          key="generic-objects-field-array-methods"
                          name="generic-objects-field-array-methods"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "AddButtonProps": Object {
                                      "size": "small",
                                    },
                                    "RemoveButtonProps": Object {
                                      "size": "small",
                                    },
                                    "buttonLabels": Object {
                                      "add": "Add",
                                      "remove": "Remove",
                                    },
                                    "component": "field-array",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "label": "Name",
                                        "name": "methods_name",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                          Object {
                                            "type": "syntax",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "methods",
                                    "label": "Methods",
                                    "name": "methods",
                                    "noItemsMessage": "None",
                                  },
                                ],
                                "id": "generic-objects-field-array-methods",
                                "name": "generic-objects-field-array-methods",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "AddButtonProps": Object {
                                        "size": "small",
                                      },
                                      "RemoveButtonProps": Object {
                                        "size": "small",
                                      },
                                      "buttonLabels": Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      },
                                      "component": "field-array",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "methods_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "methods",
                                      "label": "Methods",
                                      "name": "methods",
                                      "noItemsMessage": "None",
                                    },
                                  ]
                                }
                                id="generic-objects-field-array-methods"
                                name="generic-objects-field-array-methods"
                              >
                                <div
                                  className=""
                                  id="generic-objects-field-array-methods"
                                  name="generic-objects-field-array-methods"
                                >
                                  <SingleField
                                    AddButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    RemoveButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    buttonLabels={
                                      Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      }
                                    }
                                    component="field-array"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "methods_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    id="methods"
                                    key="methods"
                                    label="Methods"
                                    name="methods"
                                    noItemsMessage="None"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "AddButtonProps": Object {
                                            "size": "small",
                                          },
                                          "RemoveButtonProps": Object {
                                            "size": "small",
                                          },
                                          "buttonLabels": Object {
                                            "add": "Add",
                                            "remove": "Remove",
                                          },
                                          "component": "field-array",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "label": "Name",
                                              "name": "methods_name",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                                Object {
                                                  "type": "syntax",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "methods",
                                          "label": "Methods",
                                          "name": "methods",
                                          "noItemsMessage": "None",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FieldArray
                                          AddButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          AddContainerProps={Object {}}
                                          ArrayItemProps={Object {}}
                                          FormGroupProps={Object {}}
                                          RemoveButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          WrapperProps={Object {}}
                                          buttonLabels={
                                            Object {
                                              "add": "Add",
                                              "remove": "Remove",
                                            }
                                          }
                                          component="field-array"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "text-field",
                                                "label": "Name",
                                                "name": "methods_name",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                  Object {
                                                    "type": "syntax",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="methods"
                                          label="Methods"
                                          maxItems={Infinity}
                                          minItems={0}
                                          name="methods"
                                          noItemsMessage="None"
                                        >
                                          <FormGroup
                                            className="formGroup-0-2-9"
                                            hasMargin={true}
                                            invalid={false}
                                            legendText="Methods"
                                            message={false}
                                            messageText=""
                                          >
                                            <fieldset
                                              className="bx--fieldset formGroup-0-2-9"
                                            >
                                              <legend
                                                className="bx--label formGroup-0-2-9"
                                              >
                                                Methods
                                              </legend>
                                              <FieldArray
                                                name="methods"
                                              >
                                                <div>
                                                  <Component
                                                    ArrayItemProps={Object {}}
                                                    RemoveButtonProps={
                                                      Object {
                                                        "size": "small",
                                                      }
                                                    }
                                                    buttonDisabled={false}
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "label": "Name",
                                                          "name": "methods_name",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    key="0"
                                                    name="methods[0]"
                                                    remove={[Function]}
                                                    removeText="Remove"
                                                  >
                                                    <div>
                                                      <SingleField
                                                        component="text-field"
                                                        key="methods[0].methods_name"
                                                        label="Name"
                                                        name="methods[0].methods_name"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "label": "Name",
                                                              "name": "methods[0].methods_name",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                                Object {
                                                                  "type": "syntax",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <TextField
                                                              component="text-field"
                                                              label="Name"
                                                              name="methods[0].methods_name"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                  Object {
                                                                    "type": "syntax",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <TextInput
                                                                id="methods[0].methods_name"
                                                                invalid={false}
                                                                invalidText=""
                                                                key="methods[0].methods_name"
                                                                labelText="Name"
                                                                name="methods[0].methods_name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="method"
                                                                warn={false}
                                                                warnText=""
                                                              >
                                                                <div
                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                >
                                                                  <label
                                                                    className="bx--label"
                                                                    htmlFor="methods[0].methods_name"
                                                                  >
                                                                    Name
                                                                  </label>
                                                                  <div
                                                                    className="bx--text-input__field-outer-wrapper"
                                                                  >
                                                                    <div
                                                                      className="bx--text-input__field-wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <input
                                                                        className="bx--text-input bx--text-input--md"
                                                                        disabled={false}
                                                                        id="methods[0].methods_name"
                                                                        name="methods[0].methods_name"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        value="method"
                                                                      />
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </TextInput>
                                                            </TextField>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <Button
                                                        className="remove-0-2-8"
                                                        disabled={false}
                                                        id="remove-methods[0]"
                                                        kind="danger"
                                                        onClick={[Function]}
                                                        renderIcon={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          }
                                                        }
                                                        size="small"
                                                      >
                                                        <button
                                                          aria-describedby="danger-description-11"
                                                          aria-pressed={null}
                                                          className="remove-0-2-8 bx--btn bx--btn--sm bx--btn--danger"
                                                          disabled={false}
                                                          id="remove-methods[0]"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="bx--visually-hidden"
                                                            id="danger-description-11"
                                                          >
                                                            danger
                                                          </span>
                                                          Remove
                                                          <ForwardRef(Subtract32)
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                          >
                                                            <Icon
                                                              aria-hidden="true"
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="bx--btn__icon"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height={32}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                viewBox="0 0 32 32"
                                                                width={32}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M8 15H24V17H8z"
                                                                />
                                                              </svg>
                                                            </Icon>
                                                          </ForwardRef(Subtract32)>
                                                        </button>
                                                      </Button>
                                                    </div>
                                                  </Component>
                                                  <div
                                                    className="addContainer-0-2-7"
                                                  >
                                                    <Button
                                                      className="add-0-2-6"
                                                      disabled={false}
                                                      id="add-methods"
                                                      onClick={[Function]}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size="small"
                                                    >
                                                      <button
                                                        aria-describedby={null}
                                                        aria-pressed={null}
                                                        className="add-0-2-6 bx--btn bx--btn--sm bx--btn--primary"
                                                        disabled={false}
                                                        id="add-methods"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        Add
                                                        <ForwardRef(AddAlt32)
                                                          aria-hidden="true"
                                                          className="bx--btn__icon"
                                                        >
                                                          <Icon
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                            fill="currentColor"
                                                            height={32}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            viewBox="0 0 32 32"
                                                            width={32}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M16,4c6.6,0,12,5.4,12,12s-5.4,12-12,12S4,22.6,4,16S9.4,4,16,4 M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14	S23.7,2,16,2z"
                                                              />
                                                              <path
                                                                d="M24 15L17 15 17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17z"
                                                              />
                                                            </svg>
                                                          </Icon>
                                                        </ForwardRef(AddAlt32)>
                                                      </button>
                                                    </Button>
                                                  </div>
                                                </div>
                                              </FieldArray>
                                            </fieldset>
                                          </FormGroup>
                                        </FieldArray>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          condition={
                            Object {
                              "is": true,
                              "when": "image_update",
                            }
                          }
                          fields={
                            Array [
                              Object {
                                "component": "file-upload",
                                "label": "Custom Image File",
                                "name": "file_upload",
                                "type": "file",
                                "validate": Array [
                                  Object {
                                    "maxSize": 5000000,
                                    "type": "file",
                                  },
                                ],
                              },
                            ]
                          }
                          id="file_section"
                          key="file_section"
                          name="file_section"
                        >
                          <FormConditionWrapper
                            condition={
                              Object {
                                "is": true,
                                "when": "image_update",
                              }
                            }
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "file-upload",
                                    "label": "Custom Image File",
                                    "name": "file_upload",
                                    "type": "file",
                                    "validate": Array [
                                      Object {
                                        "maxSize": 5000000,
                                        "type": "file",
                                      },
                                    ],
                                  },
                                ],
                                "id": "file_section",
                                "name": "file_section",
                              }
                            }
                          >
                            <ConditionTriggerDetector
                              condition={
                                Object {
                                  "is": true,
                                  "when": "image_update",
                                }
                              }
                              field={
                                Object {
                                  "component": "sub-form",
                                  "fields": Array [
                                    Object {
                                      "component": "file-upload",
                                      "label": "Custom Image File",
                                      "name": "file_upload",
                                      "type": "file",
                                      "validate": Array [
                                        Object {
                                          "maxSize": 5000000,
                                          "type": "file",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "file_section",
                                  "name": "file_section",
                                }
                              }
                              triggers={
                                Array [
                                  "image_update",
                                ]
                              }
                            >
                              <ForwardRef(Field)
                                name="image_update"
                                subscription={
                                  Object {
                                    "value": true,
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "image_update",
                                    }
                                  }
                                  field={
                                    Object {
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "file-upload",
                                          "label": "Custom Image File",
                                          "name": "file_upload",
                                          "type": "file",
                                          "validate": Array [
                                            Object {
                                              "maxSize": 5000000,
                                              "type": "file",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "file_section",
                                      "name": "file_section",
                                    }
                                  }
                                  triggers={Array []}
                                  values={
                                    Object {
                                      "image_update": false,
                                    }
                                  }
                                >
                                  <ConditionTriggerWrapper
                                    condition={
                                      Object {
                                        "is": true,
                                        "when": "image_update",
                                      }
                                    }
                                    field={
                                      Object {
                                        "component": "sub-form",
                                        "fields": Array [
                                          Object {
                                            "component": "file-upload",
                                            "label": "Custom Image File",
                                            "name": "file_upload",
                                            "type": "file",
                                            "validate": Array [
                                              Object {
                                                "maxSize": 5000000,
                                                "type": "file",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "file_section",
                                        "name": "file_section",
                                      }
                                    }
                                    values={
                                      Object {
                                        "image_update": false,
                                      }
                                    }
                                  >
                                    <Component
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "image_update",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "file-upload",
                                              "label": "Custom Image File",
                                              "name": "file_upload",
                                              "type": "file",
                                              "validate": Array [
                                                Object {
                                                  "maxSize": 5000000,
                                                  "type": "file",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "file_section",
                                          "name": "file_section",
                                        }
                                      }
                                      values={
                                        Object {
                                          "image_update": false,
                                        }
                                      }
                                    />
                                  </ConditionTriggerWrapper>
                                </ConditionTriggerDetector>
                              </ForwardRef(Field)>
                            </ConditionTriggerDetector>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          condition={
                            Object {
                              "is": false,
                              "when": "image_update",
                            }
                          }
                          fields={
                            Array [
                              Object {
                                "component": "file-edit",
                                "description": "Delete File",
                                "label": "Current Custom Image File",
                                "name": "file_edit",
                                "src": "http://localhost:3000/pictures/52.png",
                              },
                            ]
                          }
                          id="edit_section"
                          key="edit_section"
                          name="edit_section"
                        >
                          <FormConditionWrapper
                            condition={
                              Object {
                                "is": false,
                                "when": "image_update",
                              }
                            }
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "file-edit",
                                    "description": "Delete File",
                                    "label": "Current Custom Image File",
                                    "name": "file_edit",
                                    "src": "http://localhost:3000/pictures/52.png",
                                  },
                                ],
                                "id": "edit_section",
                                "name": "edit_section",
                              }
                            }
                          >
                            <ConditionTriggerDetector
                              condition={
                                Object {
                                  "is": false,
                                  "when": "image_update",
                                }
                              }
                              field={
                                Object {
                                  "component": "sub-form",
                                  "fields": Array [
                                    Object {
                                      "component": "file-edit",
                                      "description": "Delete File",
                                      "label": "Current Custom Image File",
                                      "name": "file_edit",
                                      "src": "http://localhost:3000/pictures/52.png",
                                    },
                                  ],
                                  "id": "edit_section",
                                  "name": "edit_section",
                                }
                              }
                              triggers={
                                Array [
                                  "image_update",
                                ]
                              }
                            >
                              <ForwardRef(Field)
                                name="image_update"
                                subscription={
                                  Object {
                                    "value": true,
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": false,
                                      "when": "image_update",
                                    }
                                  }
                                  field={
                                    Object {
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "file-edit",
                                          "description": "Delete File",
                                          "label": "Current Custom Image File",
                                          "name": "file_edit",
                                          "src": "http://localhost:3000/pictures/52.png",
                                        },
                                      ],
                                      "id": "edit_section",
                                      "name": "edit_section",
                                    }
                                  }
                                  triggers={Array []}
                                  values={
                                    Object {
                                      "image_update": false,
                                    }
                                  }
                                >
                                  <ConditionTriggerWrapper
                                    condition={
                                      Object {
                                        "is": false,
                                        "when": "image_update",
                                      }
                                    }
                                    field={
                                      Object {
                                        "component": "sub-form",
                                        "fields": Array [
                                          Object {
                                            "component": "file-edit",
                                            "description": "Delete File",
                                            "label": "Current Custom Image File",
                                            "name": "file_edit",
                                            "src": "http://localhost:3000/pictures/52.png",
                                          },
                                        ],
                                        "id": "edit_section",
                                        "name": "edit_section",
                                      }
                                    }
                                    values={
                                      Object {
                                        "image_update": false,
                                      }
                                    }
                                  >
                                    <Component
                                      condition={
                                        Object {
                                          "is": false,
                                          "when": "image_update",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "file-edit",
                                              "description": "Delete File",
                                              "label": "Current Custom Image File",
                                              "name": "file_edit",
                                              "src": "http://localhost:3000/pictures/52.png",
                                            },
                                          ],
                                          "id": "edit_section",
                                          "name": "edit_section",
                                        }
                                      }
                                      values={
                                        Object {
                                          "image_update": false,
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <SubForm
                                          DescriptionElement="p"
                                          TitleElement="h3"
                                          component="sub-form"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "file-edit",
                                                "description": "Delete File",
                                                "label": "Current Custom Image File",
                                                "name": "file_edit",
                                                "src": "http://localhost:3000/pictures/52.png",
                                              },
                                            ]
                                          }
                                          id="edit_section"
                                          name="edit_section"
                                        >
                                          <div
                                            className=""
                                            id="edit_section"
                                            name="edit_section"
                                          >
                                            <SingleField
                                              component="file-edit"
                                              description="Delete File"
                                              key="file_edit"
                                              label="Current Custom Image File"
                                              name="file_edit"
                                              src="http://localhost:3000/pictures/52.png"
                                            >
                                              <FormConditionWrapper
                                                field={
                                                  Object {
                                                    "component": "file-edit",
                                                    "description": "Delete File",
                                                    "label": "Current Custom Image File",
                                                    "name": "file_edit",
                                                    "src": "http://localhost:3000/pictures/52.png",
                                                  }
                                                }
                                              >
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FileEditComponent
                                                    component="file-edit"
                                                    description="Delete File"
                                                    label="Current Custom Image File"
                                                    name="file_edit"
                                                    src="http://localhost:3000/pictures/52.png"
                                                  >
                                                    <div>
                                                      <label
                                                        className="bx--label"
                                                        htmlFor="file_edit"
                                                      >
                                                        Current Custom Image File
                                                      </label>
                                                      <br />
                                                      <div
                                                        className="edit-div"
                                                      >
                                                        <img
                                                          alt="Uploaded Image"
                                                          className="edit-image"
                                                          id="imageDisplay"
                                                          src="http://localhost:3000/pictures/52.png"
                                                        />
                                                        <Button
                                                          className="edit-button"
                                                          hasIconOnly={true}
                                                          iconDescription="Delete File"
                                                          name="file_edit"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          renderIcon={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            }
                                                          }
                                                          value=""
                                                        >
                                                          <button
                                                            aria-describedby={null}
                                                            aria-pressed={null}
                                                            className="edit-button bx--btn bx--btn--primary bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--top bx--tooltip--align-center"
                                                            disabled={false}
                                                            name="file_edit"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            tabIndex={0}
                                                            type="button"
                                                            value=""
                                                          >
                                                            <div
                                                              className="bx--assistive-text"
                                                              onMouseEnter={[Function]}
                                                            >
                                                              Delete File
                                                            </div>
                                                            <ForwardRef(TrashCan32)
                                                              aria-hidden="true"
                                                              aria-label="Delete File"
                                                              className="bx--btn__icon"
                                                            >
                                                              <Icon
                                                                aria-hidden="true"
                                                                aria-label="Delete File"
                                                                className="bx--btn__icon"
                                                                fill="currentColor"
                                                                height={32}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                viewBox="0 0 32 32"
                                                                width={32}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  aria-label="Delete File"
                                                                  className="bx--btn__icon"
                                                                  fill="currentColor"
                                                                  focusable="false"
                                                                  height={32}
                                                                  preserveAspectRatio="xMidYMid meet"
                                                                  role="img"
                                                                  viewBox="0 0 32 32"
                                                                  width={32}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    d="M12 12H14V24H12zM18 12H20V24H18z"
                                                                  />
                                                                  <path
                                                                    d="M4 6V8H6V28a2 2 0 002 2H24a2 2 0 002-2V8h2V6zM8 28V8H24V28zM12 2H20V4H12z"
                                                                  />
                                                                </svg>
                                                              </Icon>
                                                            </ForwardRef(TrashCan32)>
                                                          </button>
                                                        </Button>
                                                      </div>
                                                    </div>
                                                  </FileEditComponent>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </SingleField>
                                          </div>
                                        </SubForm>
                                      </FormFieldHideWrapper>
                                    </Component>
                                  </ConditionTriggerWrapper>
                                </ConditionTriggerDetector>
                              </ForwardRef(Field)>
                            </ConditionTriggerDetector>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="switch"
                          hideField={true}
                          key="image_update"
                          name="image_update"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "switch",
                                "name": "image_update",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={true}
                            >
                              <div
                                hidden={true}
                              >
                                <Switch
                                  component="switch"
                                  name="image_update"
                                >
                                  <div>
                                    <FeatureToggle(Toggle)
                                      id="image_update"
                                      key="image_update"
                                      name="image_update"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      toggled={false}
                                      type="checkbox"
                                    >
                                      <Toggle
                                        aria-label="Toggle"
                                        defaultToggled={false}
                                        id="image_update"
                                        labelA="Off"
                                        labelB="On"
                                        name="image_update"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onToggle={[Function]}
                                        toggled={false}
                                        type="checkbox"
                                      >
                                        <div
                                          className="bx--form-item"
                                        >
                                          <input
                                            aria-label={null}
                                            checked={false}
                                            className="bx--toggle-input"
                                            id="image_update"
                                            name="image_update"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyUp={[Function]}
                                            type="checkbox"
                                          />
                                          <label
                                            aria-label="Toggle"
                                            className="bx--toggle-input__label"
                                            htmlFor="image_update"
                                          >
                                            <span
                                              className="bx--toggle__switch"
                                            >
                                              <span
                                                aria-hidden="true"
                                                className="bx--toggle__text--off"
                                              >
                                                Off
                                              </span>
                                              <span
                                                aria-hidden="true"
                                                className="bx--toggle__text--on"
                                              >
                                                On
                                              </span>
                                            </span>
                                          </label>
                                        </div>
                                      </Toggle>
                                    </FeatureToggle(Toggle)>
                                    <HelperTextBlock />
                                  </div>
                                </Switch>
                              </div>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="spy-field"
                          key="spy-field"
                          name="spy-field"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "spy-field",
                                "initialize": undefined,
                                "name": "spy-field",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SpyField
                                component="spy-field"
                                name="spy-field"
                              >
                                <FormSpy
                                  onChange={[Function]}
                                  subscription={
                                    Object {
                                      "pristine": true,
                                      "valid": true,
                                    }
                                  }
                                />
                              </SpyField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <FormSpy>
                          <FormControls
                            Button={[Function]}
                            ButtonGroup={[Function]}
                            FormSpy={[Function]}
                            buttonOrder={
                              Array [
                                "submit",
                                "reset",
                                "cancel",
                              ]
                            }
                            canReset={true}
                            cancelLabel="Cancel"
                            disableSubmit={true}
                            formFields={
                              Array [
                                <SingleField
                                  component="text-field"
                                  id="name"
                                  isRequired={true}
                                  label="Name"
                                  maxLength={255}
                                  name="name"
                                  validate={
                                    Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ]
                                  }
                                />,
                                <SingleField
                                  component="text-field"
                                  id="description"
                                  isRequired={true}
                                  label="Description"
                                  maxLength={255}
                                  name="description"
                                  validate={
                                    Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ]
                                  }
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "attributes_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "component": "select",
                                            "includeEmpty": true,
                                            "label": "Type",
                                            "loadOptions": [Function],
                                            "name": "type",
                                            "placeholder": "<Choose>",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "attributes",
                                        "label": "Attributes",
                                        "name": "attributes",
                                        "noItemsMessage": "None",
                                      },
                                    ]
                                  }
                                  id="generic-objects-field-array-attributes"
                                  name="generic-objects-field-array-attributes"
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "associations_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "className": "class",
                                            "component": "select",
                                            "id": "class",
                                            "isSearchable": true,
                                            "label": "Class",
                                            "name": "class",
                                            "options": Array [
                                              Object {
                                                "label": "Bottleneck Event",
                                                "value": "BottleneckEvent",
                                              },
                                              Object {
                                                "label": "Performance - Container Project",
                                                "value": "ContainerProjectPerformance",
                                              },
                                            ],
                                            "placeholder": "<Choose>",
                                            "simpleValue": true,
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "associations",
                                        "label": "Associations",
                                        "name": "associations",
                                        "noItemsMessage": "None",
                                      },
                                    ]
                                  }
                                  id="generic-objects-field-array-associations"
                                  name="generic-objects-field-array-associations"
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "methods_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "methods",
                                        "label": "Methods",
                                        "name": "methods",
                                        "noItemsMessage": "None",
                                      },
                                    ]
                                  }
                                  id="generic-objects-field-array-methods"
                                  name="generic-objects-field-array-methods"
                                />,
                                <SingleField
                                  component="sub-form"
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "image_update",
                                    }
                                  }
                                  fields={
                                    Array [
                                      Object {
                                        "component": "file-upload",
                                        "label": "Custom Image File",
                                        "name": "file_upload",
                                        "type": "file",
                                        "validate": Array [
                                          Object {
                                            "maxSize": 5000000,
                                            "type": "file",
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                  id="file_section"
                                  name="file_section"
                                />,
                                <SingleField
                                  component="sub-form"
                                  condition={
                                    Object {
                                      "is": false,
                                      "when": "image_update",
                                    }
                                  }
                                  fields={
                                    Array [
                                      Object {
                                        "component": "file-edit",
                                        "description": "Delete File",
                                        "label": "Current Custom Image File",
                                        "name": "file_edit",
                                        "src": "http://localhost:3000/pictures/52.png",
                                      },
                                    ]
                                  }
                                  id="edit_section"
                                  name="edit_section"
                                />,
                                <SingleField
                                  component="switch"
                                  hideField={true}
                                  name="image_update"
                                />,
                                <SingleField
                                  component="spy-field"
                                  name="spy-field"
                                />,
                              ]
                            }
                            formSpyProps={
                              Object {
                                "active": undefined,
                                "dirty": false,
                                "dirtyFields": Object {},
                                "dirtyFieldsSinceLastSubmit": Object {
                                  "associations": true,
                                  "associations[0].associations_name": true,
                                  "associations[0].class": true,
                                  "associations[1].associations_name": true,
                                  "associations[1].class": true,
                                  "attributes": true,
                                  "attributes[0].attributes_name": true,
                                  "attributes[0].type": true,
                                  "description": true,
                                  "image_update": true,
                                  "methods": true,
                                  "methods[0].methods_name": true,
                                  "name": true,
                                },
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "errors": Object {
                                  "associations": Array [],
                                  "attributes": Array [],
                                  "methods": Array [],
                                },
                                "form": Object {
                                  "batch": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "destroyOnUnregister": false,
                                  "focus": [Function],
                                  "getFieldState": [Function],
                                  "getRegisteredFields": [Function],
                                  "getState": [Function],
                                  "initialize": [Function],
                                  "isValidationPaused": [Function],
                                  "mutators": Object {
                                    "concat": [Function],
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeBatch": [Function],
                                    "shift": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                    "update": [Function],
                                  },
                                  "pauseValidation": [Function],
                                  "registerField": [Function],
                                  "reset": [Function],
                                  "resetFieldState": [Function],
                                  "restart": [Function],
                                  "resumeValidation": [Function],
                                  "setConfig": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "hasSubmitErrors": false,
                                "hasValidationErrors": false,
                                "initialValues": Object {
                                  "associations": Array [
                                    Object {
                                      "associations_name": "bottle_neck",
                                      "class": "BottleneckEvent",
                                    },
                                    Object {
                                      "associations_name": "project",
                                      "class": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "attributes": Array [
                                    Object {
                                      "attributes_name": "this_is_a_string",
                                      "type": "string",
                                    },
                                  ],
                                  "description": "this is a test",
                                  "image_update": false,
                                  "methods": Array [
                                    Object {
                                      "methods_name": "method",
                                    },
                                  ],
                                  "name": "Generic Object",
                                  "picture": Object {
                                    "image_href": "http://localhost:3000/pictures/52.png",
                                  },
                                },
                                "invalid": false,
                                "modified": Object {
                                  "associations": false,
                                  "associations[0].associations_name": false,
                                  "associations[0].class": false,
                                  "associations[1].associations_name": false,
                                  "associations[1].class": false,
                                  "attributes": false,
                                  "attributes[0].attributes_name": false,
                                  "attributes[0].type": false,
                                  "description": false,
                                  "file_edit": false,
                                  "image_update": false,
                                  "methods": false,
                                  "methods[0].methods_name": false,
                                  "name": false,
                                },
                                "modifiedSinceLastSubmit": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitErrors": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "touched": Object {
                                  "associations": false,
                                  "associations[0].associations_name": false,
                                  "associations[0].class": false,
                                  "associations[1].associations_name": false,
                                  "associations[1].class": false,
                                  "attributes": false,
                                  "attributes[0].attributes_name": false,
                                  "attributes[0].type": false,
                                  "description": false,
                                  "file_edit": false,
                                  "image_update": false,
                                  "methods": false,
                                  "methods[0].methods_name": false,
                                  "name": false,
                                },
                                "valid": true,
                                "validating": false,
                                "values": Object {
                                  "associations": Array [
                                    Object {
                                      "associations_name": "bottle_neck",
                                      "class": "BottleneckEvent",
                                    },
                                    Object {
                                      "associations_name": "project",
                                      "class": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "attributes": Array [
                                    Object {
                                      "attributes_name": "this_is_a_string",
                                      "type": "string",
                                    },
                                  ],
                                  "description": "this is a test",
                                  "image_update": false,
                                  "methods": Array [
                                    Object {
                                      "methods_name": "method",
                                    },
                                  ],
                                  "name": "Generic Object",
                                  "picture": Object {
                                    "image_href": "http://localhost:3000/pictures/52.png",
                                  },
                                },
                                "visited": Object {
                                  "associations": false,
                                  "associations[0].associations_name": false,
                                  "associations[0].class": false,
                                  "associations[1].associations_name": false,
                                  "associations[1].class": false,
                                  "attributes": false,
                                  "attributes[0].attributes_name": false,
                                  "attributes[0].type": false,
                                  "description": false,
                                  "file_edit": false,
                                  "image_update": false,
                                  "methods": false,
                                  "methods[0].methods_name": false,
                                  "name": false,
                                },
                              }
                            }
                            onCancel={[Function]}
                            onReset={[Function]}
                            resetLabel="Reset"
                            schema={
                              Object {
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "id": "name",
                                    "isRequired": true,
                                    "label": "Name",
                                    "maxLength": 255,
                                    "name": "name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "description",
                                    "isRequired": true,
                                    "label": "Description",
                                    "maxLength": 255,
                                    "name": "description",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "attributes_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "component": "select",
                                            "includeEmpty": true,
                                            "label": "Type",
                                            "loadOptions": [Function],
                                            "name": "type",
                                            "placeholder": "<Choose>",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "attributes",
                                        "label": "Attributes",
                                        "name": "attributes",
                                        "noItemsMessage": "None",
                                      },
                                    ],
                                    "id": "generic-objects-field-array-attributes",
                                    "key": "generic-objects-field-array-attributes",
                                    "name": "generic-objects-field-array-attributes",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "associations_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "className": "class",
                                            "component": "select",
                                            "id": "class",
                                            "isSearchable": true,
                                            "label": "Class",
                                            "name": "class",
                                            "options": Array [
                                              Object {
                                                "label": "Bottleneck Event",
                                                "value": "BottleneckEvent",
                                              },
                                              Object {
                                                "label": "Performance - Container Project",
                                                "value": "ContainerProjectPerformance",
                                              },
                                            ],
                                            "placeholder": "<Choose>",
                                            "simpleValue": true,
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "associations",
                                        "label": "Associations",
                                        "name": "associations",
                                        "noItemsMessage": "None",
                                      },
                                    ],
                                    "id": "generic-objects-field-array-associations",
                                    "key": "generic-objects-field-array-associations",
                                    "name": "generic-objects-field-array-associations",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "methods_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "methods",
                                        "label": "Methods",
                                        "name": "methods",
                                        "noItemsMessage": "None",
                                      },
                                    ],
                                    "id": "generic-objects-field-array-methods",
                                    "key": "generic-objects-field-array-methods",
                                    "name": "generic-objects-field-array-methods",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "condition": Object {
                                      "is": true,
                                      "when": "image_update",
                                    },
                                    "fields": Array [
                                      Object {
                                        "component": "file-upload",
                                        "label": "Custom Image File",
                                        "name": "file_upload",
                                        "type": "file",
                                        "validate": Array [
                                          Object {
                                            "maxSize": 5000000,
                                            "type": "file",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "file_section",
                                    "name": "file_section",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "condition": Object {
                                      "is": false,
                                      "when": "image_update",
                                    },
                                    "fields": Array [
                                      Object {
                                        "component": "file-edit",
                                        "description": "Delete File",
                                        "label": "Current Custom Image File",
                                        "name": "file_edit",
                                        "src": "http://localhost:3000/pictures/52.png",
                                      },
                                    ],
                                    "id": "edit_section",
                                    "name": "edit_section",
                                  },
                                  Object {
                                    "component": "switch",
                                    "hideField": true,
                                    "name": "image_update",
                                  },
                                  Object {
                                    "component": "spy-field",
                                    "initialize": undefined,
                                    "name": "spy-field",
                                  },
                                ],
                              }
                            }
                            submitLabel="Save"
                          >
                            <ButtonGroup>
                              <ButtonSet
                                className=""
                              >
                                <div
                                  className="bx--btn-set"
                                >
                                  <Button
                                    buttonType="submit"
                                    disabled={true}
                                    key="form-submit"
                                    label="Save"
                                    type="submit"
                                    variant="primary"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="primary"
                                      type="submit"
                                      variant="primary"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--primary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="submit"
                                        variant="primary"
                                      >
                                        Save
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="reset"
                                    disabled={true}
                                    key="form-reset"
                                    label="Reset"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Reset
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="cancel"
                                    key="form-cancel"
                                    label="Cancel"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Cancel
                                      </button>
                                    </Button>
                                  </Button>
                                </div>
                              </ButtonSet>
                            </ButtonGroup>
                          </FormControls>
                        </FormSpy>
                         
                      </form>
                    </Form>
                  </Form>
                </FormTemplate>
              </WrappedFormTemplate>
            </Component>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </GenericObjectForm>
</Provider>
`;

exports[`Generic Object Form Component should render editing a generic object without an existing image 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <GenericObjectForm
    recordId="1"
  >
    <Connect(MiqFormRenderer)
      buttonsLabels={
        Object {
          "submitLabel": "Save",
        }
      }
      canReset={true}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-edit": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "radio": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "associations": Array [
            Object {
              "associations_name": "bottle_neck",
              "class": "BottleneckEvent",
            },
            Object {
              "associations_name": "project",
              "class": "ContainerProjectPerformance",
            },
          ],
          "attributes": Array [
            Object {
              "attributes_name": "this_is_a_string",
              "type": "string",
            },
          ],
          "description": "this is a test",
          "image_update": true,
          "methods": Array [
            Object {
              "methods_name": "method",
            },
          ],
          "name": "Generic Object",
        }
      }
      onCancel={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "text-field",
              "id": "name",
              "isRequired": true,
              "label": "Name",
              "maxLength": 255,
              "name": "name",
              "validate": Array [
                Object {
                  "type": "required",
                },
              ],
            },
            Object {
              "component": "text-field",
              "id": "description",
              "isRequired": true,
              "label": "Description",
              "maxLength": 255,
              "name": "description",
              "validate": Array [
                Object {
                  "type": "required",
                },
              ],
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "AddButtonProps": Object {
                    "size": "small",
                  },
                  "RemoveButtonProps": Object {
                    "size": "small",
                  },
                  "buttonLabels": Object {
                    "add": "Add",
                    "remove": "Remove",
                  },
                  "component": "field-array",
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "label": "Name",
                      "name": "attributes_name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                        Object {
                          "type": "syntax",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "includeEmpty": true,
                      "label": "Type",
                      "loadOptions": [Function],
                      "name": "type",
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                  "id": "attributes",
                  "label": "Attributes",
                  "name": "attributes",
                  "noItemsMessage": "None",
                },
              ],
              "id": "generic-objects-field-array-attributes",
              "key": "generic-objects-field-array-attributes",
              "name": "generic-objects-field-array-attributes",
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "AddButtonProps": Object {
                    "size": "small",
                  },
                  "RemoveButtonProps": Object {
                    "size": "small",
                  },
                  "buttonLabels": Object {
                    "add": "Add",
                    "remove": "Remove",
                  },
                  "component": "field-array",
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "label": "Name",
                      "name": "associations_name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                        Object {
                          "type": "syntax",
                        },
                      ],
                    },
                    Object {
                      "className": "class",
                      "component": "select",
                      "id": "class",
                      "isSearchable": true,
                      "label": "Class",
                      "name": "class",
                      "options": Array [
                        Object {
                          "label": "Bottleneck Event",
                          "value": "BottleneckEvent",
                        },
                        Object {
                          "label": "Performance - Container Project",
                          "value": "ContainerProjectPerformance",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "simpleValue": true,
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                  "id": "associations",
                  "label": "Associations",
                  "name": "associations",
                  "noItemsMessage": "None",
                },
              ],
              "id": "generic-objects-field-array-associations",
              "key": "generic-objects-field-array-associations",
              "name": "generic-objects-field-array-associations",
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "AddButtonProps": Object {
                    "size": "small",
                  },
                  "RemoveButtonProps": Object {
                    "size": "small",
                  },
                  "buttonLabels": Object {
                    "add": "Add",
                    "remove": "Remove",
                  },
                  "component": "field-array",
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "label": "Name",
                      "name": "methods_name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                        Object {
                          "type": "syntax",
                        },
                      ],
                    },
                  ],
                  "id": "methods",
                  "label": "Methods",
                  "name": "methods",
                  "noItemsMessage": "None",
                },
              ],
              "id": "generic-objects-field-array-methods",
              "key": "generic-objects-field-array-methods",
              "name": "generic-objects-field-array-methods",
            },
            Object {
              "component": "sub-form",
              "condition": Object {
                "is": true,
                "when": "image_update",
              },
              "fields": Array [
                Object {
                  "component": "file-upload",
                  "label": "Custom Image File",
                  "name": "file_upload",
                  "type": "file",
                  "validate": Array [
                    Object {
                      "maxSize": 5000000,
                      "type": "file",
                    },
                  ],
                },
              ],
              "id": "file_section",
              "name": "file_section",
            },
            Object {
              "component": "sub-form",
              "condition": Object {
                "is": false,
                "when": "image_update",
              },
              "fields": Array [
                Object {
                  "component": "file-edit",
                  "description": "Delete File",
                  "label": "Current Custom Image File",
                  "name": "file_edit",
                  "src": "",
                },
              ],
              "id": "edit_section",
              "name": "edit_section",
            },
            Object {
              "component": "switch",
              "hideField": true,
              "name": "image_update",
            },
          ],
        }
      }
      validate={[Function]}
      validatorMapper={
        Object {
          "dateRange": [Function],
          "file": [Function],
          "syntax": [Function],
        }
      }
    >
      <MiqFormRenderer
        buttonsLabels={
          Object {
            "submitLabel": "Save",
          }
        }
        canReset={true}
        className="form-react"
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-edit": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "associations": Array [
              Object {
                "associations_name": "bottle_neck",
                "class": "BottleneckEvent",
              },
              Object {
                "associations_name": "project",
                "class": "ContainerProjectPerformance",
              },
            ],
            "attributes": Array [
              Object {
                "attributes_name": "this_is_a_string",
                "type": "string",
              },
            ],
            "description": "this is a test",
            "image_update": true,
            "methods": Array [
              Object {
                "methods_name": "method",
              },
            ],
            "name": "Generic Object",
          }
        }
        onCancel={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "text-field",
                "id": "name",
                "isRequired": true,
                "label": "Name",
                "maxLength": 255,
                "name": "name",
                "validate": Array [
                  Object {
                    "type": "required",
                  },
                ],
              },
              Object {
                "component": "text-field",
                "id": "description",
                "isRequired": true,
                "label": "Description",
                "maxLength": 255,
                "name": "description",
                "validate": Array [
                  Object {
                    "type": "required",
                  },
                ],
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "AddButtonProps": Object {
                      "size": "small",
                    },
                    "RemoveButtonProps": Object {
                      "size": "small",
                    },
                    "buttonLabels": Object {
                      "add": "Add",
                      "remove": "Remove",
                    },
                    "component": "field-array",
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "label": "Name",
                        "name": "attributes_name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                          Object {
                            "type": "syntax",
                          },
                        ],
                      },
                      Object {
                        "component": "select",
                        "includeEmpty": true,
                        "label": "Type",
                        "loadOptions": [Function],
                        "name": "type",
                        "placeholder": "<Choose>",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                    ],
                    "id": "attributes",
                    "label": "Attributes",
                    "name": "attributes",
                    "noItemsMessage": "None",
                  },
                ],
                "id": "generic-objects-field-array-attributes",
                "key": "generic-objects-field-array-attributes",
                "name": "generic-objects-field-array-attributes",
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "AddButtonProps": Object {
                      "size": "small",
                    },
                    "RemoveButtonProps": Object {
                      "size": "small",
                    },
                    "buttonLabels": Object {
                      "add": "Add",
                      "remove": "Remove",
                    },
                    "component": "field-array",
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "label": "Name",
                        "name": "associations_name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                          Object {
                            "type": "syntax",
                          },
                        ],
                      },
                      Object {
                        "className": "class",
                        "component": "select",
                        "id": "class",
                        "isSearchable": true,
                        "label": "Class",
                        "name": "class",
                        "options": Array [
                          Object {
                            "label": "Bottleneck Event",
                            "value": "BottleneckEvent",
                          },
                          Object {
                            "label": "Performance - Container Project",
                            "value": "ContainerProjectPerformance",
                          },
                        ],
                        "placeholder": "<Choose>",
                        "simpleValue": true,
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                    ],
                    "id": "associations",
                    "label": "Associations",
                    "name": "associations",
                    "noItemsMessage": "None",
                  },
                ],
                "id": "generic-objects-field-array-associations",
                "key": "generic-objects-field-array-associations",
                "name": "generic-objects-field-array-associations",
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "AddButtonProps": Object {
                      "size": "small",
                    },
                    "RemoveButtonProps": Object {
                      "size": "small",
                    },
                    "buttonLabels": Object {
                      "add": "Add",
                      "remove": "Remove",
                    },
                    "component": "field-array",
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "label": "Name",
                        "name": "methods_name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                          Object {
                            "type": "syntax",
                          },
                        ],
                      },
                    ],
                    "id": "methods",
                    "label": "Methods",
                    "name": "methods",
                    "noItemsMessage": "None",
                  },
                ],
                "id": "generic-objects-field-array-methods",
                "key": "generic-objects-field-array-methods",
                "name": "generic-objects-field-array-methods",
              },
              Object {
                "component": "sub-form",
                "condition": Object {
                  "is": true,
                  "when": "image_update",
                },
                "fields": Array [
                  Object {
                    "component": "file-upload",
                    "label": "Custom Image File",
                    "name": "file_upload",
                    "type": "file",
                    "validate": Array [
                      Object {
                        "maxSize": 5000000,
                        "type": "file",
                      },
                    ],
                  },
                ],
                "id": "file_section",
                "name": "file_section",
              },
              Object {
                "component": "sub-form",
                "condition": Object {
                  "is": false,
                  "when": "image_update",
                },
                "fields": Array [
                  Object {
                    "component": "file-edit",
                    "description": "Delete File",
                    "label": "Current Custom Image File",
                    "name": "file_edit",
                    "src": "",
                  },
                ],
                "id": "edit_section",
                "name": "edit_section",
              },
              Object {
                "component": "switch",
                "hideField": true,
                "name": "image_update",
              },
            ],
          }
        }
        showFormControls={true}
        validate={[Function]}
        validatorMapper={
          Object {
            "dateRange": [Function],
            "file": [Function],
            "syntax": [Function],
          }
        }
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-edit": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "associations": Array [
                Object {
                  "associations_name": "bottle_neck",
                  "class": "BottleneckEvent",
                },
                Object {
                  "associations_name": "project",
                  "class": "ContainerProjectPerformance",
                },
              ],
              "attributes": Array [
                Object {
                  "attributes_name": "this_is_a_string",
                  "type": "string",
                },
              ],
              "description": "this is a test",
              "image_update": true,
              "methods": Array [
                Object {
                  "methods_name": "method",
                },
              ],
              "name": "Generic Object",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "text-field",
                  "id": "name",
                  "isRequired": true,
                  "label": "Name",
                  "maxLength": 255,
                  "name": "name",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "text-field",
                  "id": "description",
                  "isRequired": true,
                  "label": "Description",
                  "maxLength": 255,
                  "name": "description",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "AddButtonProps": Object {
                        "size": "small",
                      },
                      "RemoveButtonProps": Object {
                        "size": "small",
                      },
                      "buttonLabels": Object {
                        "add": "Add",
                        "remove": "Remove",
                      },
                      "component": "field-array",
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "label": "Name",
                          "name": "attributes_name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                            Object {
                              "type": "syntax",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "includeEmpty": true,
                          "label": "Type",
                          "loadOptions": [Function],
                          "name": "type",
                          "placeholder": "<Choose>",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ],
                      "id": "attributes",
                      "label": "Attributes",
                      "name": "attributes",
                      "noItemsMessage": "None",
                    },
                  ],
                  "id": "generic-objects-field-array-attributes",
                  "key": "generic-objects-field-array-attributes",
                  "name": "generic-objects-field-array-attributes",
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "AddButtonProps": Object {
                        "size": "small",
                      },
                      "RemoveButtonProps": Object {
                        "size": "small",
                      },
                      "buttonLabels": Object {
                        "add": "Add",
                        "remove": "Remove",
                      },
                      "component": "field-array",
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "label": "Name",
                          "name": "associations_name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                            Object {
                              "type": "syntax",
                            },
                          ],
                        },
                        Object {
                          "className": "class",
                          "component": "select",
                          "id": "class",
                          "isSearchable": true,
                          "label": "Class",
                          "name": "class",
                          "options": Array [
                            Object {
                              "label": "Bottleneck Event",
                              "value": "BottleneckEvent",
                            },
                            Object {
                              "label": "Performance - Container Project",
                              "value": "ContainerProjectPerformance",
                            },
                          ],
                          "placeholder": "<Choose>",
                          "simpleValue": true,
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ],
                      "id": "associations",
                      "label": "Associations",
                      "name": "associations",
                      "noItemsMessage": "None",
                    },
                  ],
                  "id": "generic-objects-field-array-associations",
                  "key": "generic-objects-field-array-associations",
                  "name": "generic-objects-field-array-associations",
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "AddButtonProps": Object {
                        "size": "small",
                      },
                      "RemoveButtonProps": Object {
                        "size": "small",
                      },
                      "buttonLabels": Object {
                        "add": "Add",
                        "remove": "Remove",
                      },
                      "component": "field-array",
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "label": "Name",
                          "name": "methods_name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                            Object {
                              "type": "syntax",
                            },
                          ],
                        },
                      ],
                      "id": "methods",
                      "label": "Methods",
                      "name": "methods",
                      "noItemsMessage": "None",
                    },
                  ],
                  "id": "generic-objects-field-array-methods",
                  "key": "generic-objects-field-array-methods",
                  "name": "generic-objects-field-array-methods",
                },
                Object {
                  "component": "sub-form",
                  "condition": Object {
                    "is": true,
                    "when": "image_update",
                  },
                  "fields": Array [
                    Object {
                      "component": "file-upload",
                      "label": "Custom Image File",
                      "name": "file_upload",
                      "type": "file",
                      "validate": Array [
                        Object {
                          "maxSize": 5000000,
                          "type": "file",
                        },
                      ],
                    },
                  ],
                  "id": "file_section",
                  "name": "file_section",
                },
                Object {
                  "component": "sub-form",
                  "condition": Object {
                    "is": false,
                    "when": "image_update",
                  },
                  "fields": Array [
                    Object {
                      "component": "file-edit",
                      "description": "Delete File",
                      "label": "Current Custom Image File",
                      "name": "file_edit",
                      "src": "",
                    },
                  ],
                  "id": "edit_section",
                  "name": "edit_section",
                },
                Object {
                  "component": "switch",
                  "hideField": true,
                  "name": "image_update",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
          validate={[Function]}
          validatorMapper={
            Object {
              "dateRange": [Function],
              "file": [Function],
              "syntax": [Function],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "associations": Array [
                  Object {
                    "associations_name": "bottle_neck",
                    "class": "BottleneckEvent",
                  },
                  Object {
                    "associations_name": "project",
                    "class": "ContainerProjectPerformance",
                  },
                ],
                "attributes": Array [
                  Object {
                    "attributes_name": "this_is_a_string",
                    "type": "string",
                  },
                ],
                "description": "this is a test",
                "image_update": true,
                "methods": Array [
                  Object {
                    "methods_name": "method",
                  },
                ],
                "name": "Generic Object",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
            validate={[Function]}
          >
            <Component
              formFields={
                Array [
                  <SingleField
                    component="text-field"
                    id="name"
                    isRequired={true}
                    label="Name"
                    maxLength={255}
                    name="name"
                    validate={
                      Array [
                        Object {
                          "type": "required",
                        },
                      ]
                    }
                  />,
                  <SingleField
                    component="text-field"
                    id="description"
                    isRequired={true}
                    label="Description"
                    maxLength={255}
                    name="description"
                    validate={
                      Array [
                        Object {
                          "type": "required",
                        },
                      ]
                    }
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "attributes_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "includeEmpty": true,
                              "label": "Type",
                              "loadOptions": [Function],
                              "name": "type",
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "attributes",
                          "label": "Attributes",
                          "name": "attributes",
                          "noItemsMessage": "None",
                        },
                      ]
                    }
                    id="generic-objects-field-array-attributes"
                    name="generic-objects-field-array-attributes"
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "associations_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "className": "class",
                              "component": "select",
                              "id": "class",
                              "isSearchable": true,
                              "label": "Class",
                              "name": "class",
                              "options": Array [
                                Object {
                                  "label": "Bottleneck Event",
                                  "value": "BottleneckEvent",
                                },
                                Object {
                                  "label": "Performance - Container Project",
                                  "value": "ContainerProjectPerformance",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "simpleValue": true,
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "associations",
                          "label": "Associations",
                          "name": "associations",
                          "noItemsMessage": "None",
                        },
                      ]
                    }
                    id="generic-objects-field-array-associations"
                    name="generic-objects-field-array-associations"
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "methods_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                          ],
                          "id": "methods",
                          "label": "Methods",
                          "name": "methods",
                          "noItemsMessage": "None",
                        },
                      ]
                    }
                    id="generic-objects-field-array-methods"
                    name="generic-objects-field-array-methods"
                  />,
                  <SingleField
                    component="sub-form"
                    condition={
                      Object {
                        "is": true,
                        "when": "image_update",
                      }
                    }
                    fields={
                      Array [
                        Object {
                          "component": "file-upload",
                          "label": "Custom Image File",
                          "name": "file_upload",
                          "type": "file",
                          "validate": Array [
                            Object {
                              "maxSize": 5000000,
                              "type": "file",
                            },
                          ],
                        },
                      ]
                    }
                    id="file_section"
                    name="file_section"
                  />,
                  <SingleField
                    component="sub-form"
                    condition={
                      Object {
                        "is": false,
                        "when": "image_update",
                      }
                    }
                    fields={
                      Array [
                        Object {
                          "component": "file-edit",
                          "description": "Delete File",
                          "label": "Current Custom Image File",
                          "name": "file_edit",
                          "src": "",
                        },
                      ]
                    }
                    id="edit_section"
                    name="edit_section"
                  />,
                  <SingleField
                    component="switch"
                    hideField={true}
                    name="image_update"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "id": "name",
                      "isRequired": true,
                      "label": "Name",
                      "maxLength": 255,
                      "name": "name",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "text-field",
                      "id": "description",
                      "isRequired": true,
                      "label": "Description",
                      "maxLength": 255,
                      "name": "description",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "attributes_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "includeEmpty": true,
                              "label": "Type",
                              "loadOptions": [Function],
                              "name": "type",
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "attributes",
                          "label": "Attributes",
                          "name": "attributes",
                          "noItemsMessage": "None",
                        },
                      ],
                      "id": "generic-objects-field-array-attributes",
                      "key": "generic-objects-field-array-attributes",
                      "name": "generic-objects-field-array-attributes",
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "associations_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                            Object {
                              "className": "class",
                              "component": "select",
                              "id": "class",
                              "isSearchable": true,
                              "label": "Class",
                              "name": "class",
                              "options": Array [
                                Object {
                                  "label": "Bottleneck Event",
                                  "value": "BottleneckEvent",
                                },
                                Object {
                                  "label": "Performance - Container Project",
                                  "value": "ContainerProjectPerformance",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "simpleValue": true,
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "associations",
                          "label": "Associations",
                          "name": "associations",
                          "noItemsMessage": "None",
                        },
                      ],
                      "id": "generic-objects-field-array-associations",
                      "key": "generic-objects-field-array-associations",
                      "name": "generic-objects-field-array-associations",
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "AddButtonProps": Object {
                            "size": "small",
                          },
                          "RemoveButtonProps": Object {
                            "size": "small",
                          },
                          "buttonLabels": Object {
                            "add": "Add",
                            "remove": "Remove",
                          },
                          "component": "field-array",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "label": "Name",
                              "name": "methods_name",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                                Object {
                                  "type": "syntax",
                                },
                              ],
                            },
                          ],
                          "id": "methods",
                          "label": "Methods",
                          "name": "methods",
                          "noItemsMessage": "None",
                        },
                      ],
                      "id": "generic-objects-field-array-methods",
                      "key": "generic-objects-field-array-methods",
                      "name": "generic-objects-field-array-methods",
                    },
                    Object {
                      "component": "sub-form",
                      "condition": Object {
                        "is": true,
                        "when": "image_update",
                      },
                      "fields": Array [
                        Object {
                          "component": "file-upload",
                          "label": "Custom Image File",
                          "name": "file_upload",
                          "type": "file",
                          "validate": Array [
                            Object {
                              "maxSize": 5000000,
                              "type": "file",
                            },
                          ],
                        },
                      ],
                      "id": "file_section",
                      "name": "file_section",
                    },
                    Object {
                      "component": "sub-form",
                      "condition": Object {
                        "is": false,
                        "when": "image_update",
                      },
                      "fields": Array [
                        Object {
                          "component": "file-edit",
                          "description": "Delete File",
                          "label": "Current Custom Image File",
                          "name": "file_edit",
                          "src": "",
                        },
                      ],
                      "id": "edit_section",
                      "name": "edit_section",
                    },
                    Object {
                      "component": "switch",
                      "hideField": true,
                      "name": "image_update",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <WrappedFormTemplate
                canReset={true}
                cancelLabel="Cancel"
                disableSubmit={
                  Array [
                    "pristine",
                    "invalid",
                  ]
                }
                formFields={
                  Array [
                    <SingleField
                      component="text-field"
                      id="name"
                      isRequired={true}
                      label="Name"
                      maxLength={255}
                      name="name"
                      validate={
                        Array [
                          Object {
                            "type": "required",
                          },
                        ]
                      }
                    />,
                    <SingleField
                      component="text-field"
                      id="description"
                      isRequired={true}
                      label="Description"
                      maxLength={255}
                      name="description"
                      validate={
                        Array [
                          Object {
                            "type": "required",
                          },
                        ]
                      }
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "attributes_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "includeEmpty": true,
                                "label": "Type",
                                "loadOptions": [Function],
                                "name": "type",
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "attributes",
                            "label": "Attributes",
                            "name": "attributes",
                            "noItemsMessage": "None",
                          },
                        ]
                      }
                      id="generic-objects-field-array-attributes"
                      name="generic-objects-field-array-attributes"
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "associations_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "className": "class",
                                "component": "select",
                                "id": "class",
                                "isSearchable": true,
                                "label": "Class",
                                "name": "class",
                                "options": Array [
                                  Object {
                                    "label": "Bottleneck Event",
                                    "value": "BottleneckEvent",
                                  },
                                  Object {
                                    "label": "Performance - Container Project",
                                    "value": "ContainerProjectPerformance",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "simpleValue": true,
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "associations",
                            "label": "Associations",
                            "name": "associations",
                            "noItemsMessage": "None",
                          },
                        ]
                      }
                      id="generic-objects-field-array-associations"
                      name="generic-objects-field-array-associations"
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "methods_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                            ],
                            "id": "methods",
                            "label": "Methods",
                            "name": "methods",
                            "noItemsMessage": "None",
                          },
                        ]
                      }
                      id="generic-objects-field-array-methods"
                      name="generic-objects-field-array-methods"
                    />,
                    <SingleField
                      component="sub-form"
                      condition={
                        Object {
                          "is": true,
                          "when": "image_update",
                        }
                      }
                      fields={
                        Array [
                          Object {
                            "component": "file-upload",
                            "label": "Custom Image File",
                            "name": "file_upload",
                            "type": "file",
                            "validate": Array [
                              Object {
                                "maxSize": 5000000,
                                "type": "file",
                              },
                            ],
                          },
                        ]
                      }
                      id="file_section"
                      name="file_section"
                    />,
                    <SingleField
                      component="sub-form"
                      condition={
                        Object {
                          "is": false,
                          "when": "image_update",
                        }
                      }
                      fields={
                        Array [
                          Object {
                            "component": "file-edit",
                            "description": "Delete File",
                            "label": "Current Custom Image File",
                            "name": "file_edit",
                            "src": "",
                          },
                        ]
                      }
                      id="edit_section"
                      name="edit_section"
                    />,
                    <SingleField
                      component="switch"
                      hideField={true}
                      name="image_update"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                formWrapperProps={
                  Object {
                    "className": "form-react",
                  }
                }
                resetLabel="Reset"
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "id": "name",
                        "isRequired": true,
                        "label": "Name",
                        "maxLength": 255,
                        "name": "name",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                      Object {
                        "component": "text-field",
                        "id": "description",
                        "isRequired": true,
                        "label": "Description",
                        "maxLength": 255,
                        "name": "description",
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "attributes_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "includeEmpty": true,
                                "label": "Type",
                                "loadOptions": [Function],
                                "name": "type",
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "attributes",
                            "label": "Attributes",
                            "name": "attributes",
                            "noItemsMessage": "None",
                          },
                        ],
                        "id": "generic-objects-field-array-attributes",
                        "key": "generic-objects-field-array-attributes",
                        "name": "generic-objects-field-array-attributes",
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "associations_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                              Object {
                                "className": "class",
                                "component": "select",
                                "id": "class",
                                "isSearchable": true,
                                "label": "Class",
                                "name": "class",
                                "options": Array [
                                  Object {
                                    "label": "Bottleneck Event",
                                    "value": "BottleneckEvent",
                                  },
                                  Object {
                                    "label": "Performance - Container Project",
                                    "value": "ContainerProjectPerformance",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "simpleValue": true,
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "associations",
                            "label": "Associations",
                            "name": "associations",
                            "noItemsMessage": "None",
                          },
                        ],
                        "id": "generic-objects-field-array-associations",
                        "key": "generic-objects-field-array-associations",
                        "name": "generic-objects-field-array-associations",
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "AddButtonProps": Object {
                              "size": "small",
                            },
                            "RemoveButtonProps": Object {
                              "size": "small",
                            },
                            "buttonLabels": Object {
                              "add": "Add",
                              "remove": "Remove",
                            },
                            "component": "field-array",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "label": "Name",
                                "name": "methods_name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                  Object {
                                    "type": "syntax",
                                  },
                                ],
                              },
                            ],
                            "id": "methods",
                            "label": "Methods",
                            "name": "methods",
                            "noItemsMessage": "None",
                          },
                        ],
                        "id": "generic-objects-field-array-methods",
                        "key": "generic-objects-field-array-methods",
                        "name": "generic-objects-field-array-methods",
                      },
                      Object {
                        "component": "sub-form",
                        "condition": Object {
                          "is": true,
                          "when": "image_update",
                        },
                        "fields": Array [
                          Object {
                            "component": "file-upload",
                            "label": "Custom Image File",
                            "name": "file_upload",
                            "type": "file",
                            "validate": Array [
                              Object {
                                "maxSize": 5000000,
                                "type": "file",
                              },
                            ],
                          },
                        ],
                        "id": "file_section",
                        "name": "file_section",
                      },
                      Object {
                        "component": "sub-form",
                        "condition": Object {
                          "is": false,
                          "when": "image_update",
                        },
                        "fields": Array [
                          Object {
                            "component": "file-edit",
                            "description": "Delete File",
                            "label": "Current Custom Image File",
                            "name": "file_edit",
                            "src": "",
                          },
                        ],
                        "id": "edit_section",
                        "name": "edit_section",
                      },
                      Object {
                        "component": "switch",
                        "hideField": true,
                        "name": "image_update",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
                showFormControls={true}
                submitLabel="Save"
              >
                <FormTemplate
                  Button={[Function]}
                  ButtonGroup={[Function]}
                  Description={[Function]}
                  FormWrapper={[Function]}
                  Header={[Function]}
                  Title={[Function]}
                  buttonOrder={
                    Array [
                      "submit",
                      "reset",
                      "cancel",
                    ]
                  }
                  canReset={true}
                  cancelLabel="Cancel"
                  disableSubmit={
                    Array [
                      "pristine",
                      "invalid",
                    ]
                  }
                  formFields={
                    Array [
                      <SingleField
                        component="text-field"
                        id="name"
                        isRequired={true}
                        label="Name"
                        maxLength={255}
                        name="name"
                        validate={
                          Array [
                            Object {
                              "type": "required",
                            },
                          ]
                        }
                      />,
                      <SingleField
                        component="text-field"
                        id="description"
                        isRequired={true}
                        label="Description"
                        maxLength={255}
                        name="description"
                        validate={
                          Array [
                            Object {
                              "type": "required",
                            },
                          ]
                        }
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "attributes_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "includeEmpty": true,
                                  "label": "Type",
                                  "loadOptions": [Function],
                                  "name": "type",
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "attributes",
                              "label": "Attributes",
                              "name": "attributes",
                              "noItemsMessage": "None",
                            },
                          ]
                        }
                        id="generic-objects-field-array-attributes"
                        name="generic-objects-field-array-attributes"
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "associations_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "className": "class",
                                  "component": "select",
                                  "id": "class",
                                  "isSearchable": true,
                                  "label": "Class",
                                  "name": "class",
                                  "options": Array [
                                    Object {
                                      "label": "Bottleneck Event",
                                      "value": "BottleneckEvent",
                                    },
                                    Object {
                                      "label": "Performance - Container Project",
                                      "value": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "simpleValue": true,
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "associations",
                              "label": "Associations",
                              "name": "associations",
                              "noItemsMessage": "None",
                            },
                          ]
                        }
                        id="generic-objects-field-array-associations"
                        name="generic-objects-field-array-associations"
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "methods_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                              ],
                              "id": "methods",
                              "label": "Methods",
                              "name": "methods",
                              "noItemsMessage": "None",
                            },
                          ]
                        }
                        id="generic-objects-field-array-methods"
                        name="generic-objects-field-array-methods"
                      />,
                      <SingleField
                        component="sub-form"
                        condition={
                          Object {
                            "is": true,
                            "when": "image_update",
                          }
                        }
                        fields={
                          Array [
                            Object {
                              "component": "file-upload",
                              "label": "Custom Image File",
                              "name": "file_upload",
                              "type": "file",
                              "validate": Array [
                                Object {
                                  "maxSize": 5000000,
                                  "type": "file",
                                },
                              ],
                            },
                          ]
                        }
                        id="file_section"
                        name="file_section"
                      />,
                      <SingleField
                        component="sub-form"
                        condition={
                          Object {
                            "is": false,
                            "when": "image_update",
                          }
                        }
                        fields={
                          Array [
                            Object {
                              "component": "file-edit",
                              "description": "Delete File",
                              "label": "Current Custom Image File",
                              "name": "file_edit",
                              "src": "",
                            },
                          ]
                        }
                        id="edit_section"
                        name="edit_section"
                      />,
                      <SingleField
                        component="switch"
                        hideField={true}
                        name="image_update"
                      />,
                      <SingleField
                        component="spy-field"
                        name="spy-field"
                      />,
                    ]
                  }
                  formWrapperProps={
                    Object {
                      "className": "form-react",
                    }
                  }
                  resetLabel="Reset"
                  schema={
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "id": "name",
                          "isRequired": true,
                          "label": "Name",
                          "maxLength": 255,
                          "name": "name",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "text-field",
                          "id": "description",
                          "isRequired": true,
                          "label": "Description",
                          "maxLength": 255,
                          "name": "description",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "attributes_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "select",
                                  "includeEmpty": true,
                                  "label": "Type",
                                  "loadOptions": [Function],
                                  "name": "type",
                                  "placeholder": "<Choose>",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "attributes",
                              "label": "Attributes",
                              "name": "attributes",
                              "noItemsMessage": "None",
                            },
                          ],
                          "id": "generic-objects-field-array-attributes",
                          "key": "generic-objects-field-array-attributes",
                          "name": "generic-objects-field-array-attributes",
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "associations_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                                Object {
                                  "className": "class",
                                  "component": "select",
                                  "id": "class",
                                  "isSearchable": true,
                                  "label": "Class",
                                  "name": "class",
                                  "options": Array [
                                    Object {
                                      "label": "Bottleneck Event",
                                      "value": "BottleneckEvent",
                                    },
                                    Object {
                                      "label": "Performance - Container Project",
                                      "value": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "placeholder": "<Choose>",
                                  "simpleValue": true,
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "associations",
                              "label": "Associations",
                              "name": "associations",
                              "noItemsMessage": "None",
                            },
                          ],
                          "id": "generic-objects-field-array-associations",
                          "key": "generic-objects-field-array-associations",
                          "name": "generic-objects-field-array-associations",
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "AddButtonProps": Object {
                                "size": "small",
                              },
                              "RemoveButtonProps": Object {
                                "size": "small",
                              },
                              "buttonLabels": Object {
                                "add": "Add",
                                "remove": "Remove",
                              },
                              "component": "field-array",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "label": "Name",
                                  "name": "methods_name",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                    Object {
                                      "type": "syntax",
                                    },
                                  ],
                                },
                              ],
                              "id": "methods",
                              "label": "Methods",
                              "name": "methods",
                              "noItemsMessage": "None",
                            },
                          ],
                          "id": "generic-objects-field-array-methods",
                          "key": "generic-objects-field-array-methods",
                          "name": "generic-objects-field-array-methods",
                        },
                        Object {
                          "component": "sub-form",
                          "condition": Object {
                            "is": true,
                            "when": "image_update",
                          },
                          "fields": Array [
                            Object {
                              "component": "file-upload",
                              "label": "Custom Image File",
                              "name": "file_upload",
                              "type": "file",
                              "validate": Array [
                                Object {
                                  "maxSize": 5000000,
                                  "type": "file",
                                },
                              ],
                            },
                          ],
                          "id": "file_section",
                          "name": "file_section",
                        },
                        Object {
                          "component": "sub-form",
                          "condition": Object {
                            "is": false,
                            "when": "image_update",
                          },
                          "fields": Array [
                            Object {
                              "component": "file-edit",
                              "description": "Delete File",
                              "label": "Current Custom Image File",
                              "name": "file_edit",
                              "src": "",
                            },
                          ],
                          "id": "edit_section",
                          "name": "edit_section",
                        },
                        Object {
                          "component": "switch",
                          "hideField": true,
                          "name": "image_update",
                        },
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        },
                      ],
                    }
                  }
                  showFormControls={true}
                  submitLabel="Save"
                >
                  <Form
                    className="form-react"
                    onSubmit={[Function]}
                  >
                    <Form
                      className="form-0-2-3 form-react"
                      noValidate={true}
                      onSubmit={[Function]}
                    >
                      <form
                        className="bx--form form-0-2-3 form-react"
                        noValidate={true}
                        onSubmit={[Function]}
                      >
                         
                        <SingleField
                          component="text-field"
                          id="name"
                          isRequired={true}
                          key="name"
                          label="Name"
                          maxLength={255}
                          name="name"
                          validate={
                            Array [
                              Object {
                                "type": "required",
                              },
                            ]
                          }
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "text-field",
                                "id": "name",
                                "isRequired": true,
                                "label": "Name",
                                "maxLength": 255,
                                "name": "name",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <TextField
                                component="text-field"
                                id="name"
                                isRequired={true}
                                label="Name"
                                maxLength={255}
                                name="name"
                                validate={
                                  Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ]
                                }
                              >
                                <TextInput
                                  id="name"
                                  invalid={false}
                                  invalidText=""
                                  key="name"
                                  labelText={
                                    <IsRequired>
                                      Name
                                    </IsRequired>
                                  }
                                  maxLength={255}
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value="Generic Object"
                                  warn={false}
                                  warnText=""
                                >
                                  <div
                                    className="bx--form-item bx--text-input-wrapper"
                                  >
                                    <label
                                      className="bx--label"
                                      htmlFor="name"
                                    >
                                      <IsRequired>
                                        <span
                                          aria-hidden="true"
                                          className="ddorg__carbon-component-mapper_is-required isRequired-0-2-4"
                                        >
                                          *
                                        </span>
                                        Name
                                      </IsRequired>
                                    </label>
                                    <div
                                      className="bx--text-input__field-outer-wrapper"
                                    >
                                      <div
                                        className="bx--text-input__field-wrapper"
                                        data-invalid={null}
                                      >
                                        <input
                                          className="bx--text-input bx--text-input--md"
                                          disabled={false}
                                          id="name"
                                          maxLength={255}
                                          name="name"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          type="text"
                                          value="Generic Object"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </TextInput>
                              </TextField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="text-field"
                          id="description"
                          isRequired={true}
                          key="description"
                          label="Description"
                          maxLength={255}
                          name="description"
                          validate={
                            Array [
                              Object {
                                "type": "required",
                              },
                            ]
                          }
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "text-field",
                                "id": "description",
                                "isRequired": true,
                                "label": "Description",
                                "maxLength": 255,
                                "name": "description",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <TextField
                                component="text-field"
                                id="description"
                                isRequired={true}
                                label="Description"
                                maxLength={255}
                                name="description"
                                validate={
                                  Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ]
                                }
                              >
                                <TextInput
                                  id="description"
                                  invalid={false}
                                  invalidText=""
                                  key="description"
                                  labelText={
                                    <IsRequired>
                                      Description
                                    </IsRequired>
                                  }
                                  maxLength={255}
                                  name="description"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value="this is a test"
                                  warn={false}
                                  warnText=""
                                >
                                  <div
                                    className="bx--form-item bx--text-input-wrapper"
                                  >
                                    <label
                                      className="bx--label"
                                      htmlFor="description"
                                    >
                                      <IsRequired>
                                        <span
                                          aria-hidden="true"
                                          className="ddorg__carbon-component-mapper_is-required isRequired-0-2-4"
                                        >
                                          *
                                        </span>
                                        Description
                                      </IsRequired>
                                    </label>
                                    <div
                                      className="bx--text-input__field-outer-wrapper"
                                    >
                                      <div
                                        className="bx--text-input__field-wrapper"
                                        data-invalid={null}
                                      >
                                        <input
                                          className="bx--text-input bx--text-input--md"
                                          disabled={false}
                                          id="description"
                                          maxLength={255}
                                          name="description"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          type="text"
                                          value="this is a test"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </TextInput>
                              </TextField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "AddButtonProps": Object {
                                  "size": "small",
                                },
                                "RemoveButtonProps": Object {
                                  "size": "small",
                                },
                                "buttonLabels": Object {
                                  "add": "Add",
                                  "remove": "Remove",
                                },
                                "component": "field-array",
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "label": "Name",
                                    "name": "attributes_name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                      Object {
                                        "type": "syntax",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "includeEmpty": true,
                                    "label": "Type",
                                    "loadOptions": [Function],
                                    "name": "type",
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                ],
                                "id": "attributes",
                                "label": "Attributes",
                                "name": "attributes",
                                "noItemsMessage": "None",
                              },
                            ]
                          }
                          id="generic-objects-field-array-attributes"
                          key="generic-objects-field-array-attributes"
                          name="generic-objects-field-array-attributes"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "AddButtonProps": Object {
                                      "size": "small",
                                    },
                                    "RemoveButtonProps": Object {
                                      "size": "small",
                                    },
                                    "buttonLabels": Object {
                                      "add": "Add",
                                      "remove": "Remove",
                                    },
                                    "component": "field-array",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "label": "Name",
                                        "name": "attributes_name",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                          Object {
                                            "type": "syntax",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "includeEmpty": true,
                                        "label": "Type",
                                        "loadOptions": [Function],
                                        "name": "type",
                                        "placeholder": "<Choose>",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "attributes",
                                    "label": "Attributes",
                                    "name": "attributes",
                                    "noItemsMessage": "None",
                                  },
                                ],
                                "id": "generic-objects-field-array-attributes",
                                "name": "generic-objects-field-array-attributes",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "AddButtonProps": Object {
                                        "size": "small",
                                      },
                                      "RemoveButtonProps": Object {
                                        "size": "small",
                                      },
                                      "buttonLabels": Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      },
                                      "component": "field-array",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "attributes_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "includeEmpty": true,
                                          "label": "Type",
                                          "loadOptions": [Function],
                                          "name": "type",
                                          "placeholder": "<Choose>",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "attributes",
                                      "label": "Attributes",
                                      "name": "attributes",
                                      "noItemsMessage": "None",
                                    },
                                  ]
                                }
                                id="generic-objects-field-array-attributes"
                                name="generic-objects-field-array-attributes"
                              >
                                <div
                                  className=""
                                  id="generic-objects-field-array-attributes"
                                  name="generic-objects-field-array-attributes"
                                >
                                  <SingleField
                                    AddButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    RemoveButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    buttonLabels={
                                      Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      }
                                    }
                                    component="field-array"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "attributes_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "select",
                                          "includeEmpty": true,
                                          "label": "Type",
                                          "loadOptions": [Function],
                                          "name": "type",
                                          "placeholder": "<Choose>",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    id="attributes"
                                    key="attributes"
                                    label="Attributes"
                                    name="attributes"
                                    noItemsMessage="None"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "AddButtonProps": Object {
                                            "size": "small",
                                          },
                                          "RemoveButtonProps": Object {
                                            "size": "small",
                                          },
                                          "buttonLabels": Object {
                                            "add": "Add",
                                            "remove": "Remove",
                                          },
                                          "component": "field-array",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "label": "Name",
                                              "name": "attributes_name",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                                Object {
                                                  "type": "syntax",
                                                },
                                              ],
                                            },
                                            Object {
                                              "component": "select",
                                              "includeEmpty": true,
                                              "label": "Type",
                                              "loadOptions": [Function],
                                              "name": "type",
                                              "placeholder": "<Choose>",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "attributes",
                                          "label": "Attributes",
                                          "name": "attributes",
                                          "noItemsMessage": "None",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FieldArray
                                          AddButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          AddContainerProps={Object {}}
                                          ArrayItemProps={Object {}}
                                          FormGroupProps={Object {}}
                                          RemoveButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          WrapperProps={Object {}}
                                          buttonLabels={
                                            Object {
                                              "add": "Add",
                                              "remove": "Remove",
                                            }
                                          }
                                          component="field-array"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "text-field",
                                                "label": "Name",
                                                "name": "attributes_name",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                  Object {
                                                    "type": "syntax",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "select",
                                                "includeEmpty": true,
                                                "label": "Type",
                                                "loadOptions": [Function],
                                                "name": "type",
                                                "placeholder": "<Choose>",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="attributes"
                                          label="Attributes"
                                          maxItems={Infinity}
                                          minItems={0}
                                          name="attributes"
                                          noItemsMessage="None"
                                        >
                                          <FormGroup
                                            className="formGroup-0-2-9"
                                            hasMargin={true}
                                            invalid={false}
                                            legendText="Attributes"
                                            message={false}
                                            messageText=""
                                          >
                                            <fieldset
                                              className="bx--fieldset formGroup-0-2-9"
                                            >
                                              <legend
                                                className="bx--label formGroup-0-2-9"
                                              >
                                                Attributes
                                              </legend>
                                              <FieldArray
                                                name="attributes"
                                              >
                                                <div>
                                                  <Component
                                                    ArrayItemProps={Object {}}
                                                    RemoveButtonProps={
                                                      Object {
                                                        "size": "small",
                                                      }
                                                    }
                                                    buttonDisabled={false}
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "label": "Name",
                                                          "name": "attributes_name",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ],
                                                        },
                                                        Object {
                                                          "component": "select",
                                                          "includeEmpty": true,
                                                          "label": "Type",
                                                          "loadOptions": [Function],
                                                          "name": "type",
                                                          "placeholder": "<Choose>",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    key="0"
                                                    name="attributes[0]"
                                                    remove={[Function]}
                                                    removeText="Remove"
                                                  >
                                                    <div>
                                                      <SingleField
                                                        component="text-field"
                                                        key="attributes[0].attributes_name"
                                                        label="Name"
                                                        name="attributes[0].attributes_name"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "label": "Name",
                                                              "name": "attributes[0].attributes_name",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                                Object {
                                                                  "type": "syntax",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <TextField
                                                              component="text-field"
                                                              label="Name"
                                                              name="attributes[0].attributes_name"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                  Object {
                                                                    "type": "syntax",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <TextInput
                                                                id="attributes[0].attributes_name"
                                                                invalid={false}
                                                                invalidText=""
                                                                key="attributes[0].attributes_name"
                                                                labelText="Name"
                                                                name="attributes[0].attributes_name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="this_is_a_string"
                                                                warn={false}
                                                                warnText=""
                                                              >
                                                                <div
                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                >
                                                                  <label
                                                                    className="bx--label"
                                                                    htmlFor="attributes[0].attributes_name"
                                                                  >
                                                                    Name
                                                                  </label>
                                                                  <div
                                                                    className="bx--text-input__field-outer-wrapper"
                                                                  >
                                                                    <div
                                                                      className="bx--text-input__field-wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <input
                                                                        className="bx--text-input bx--text-input--md"
                                                                        disabled={false}
                                                                        id="attributes[0].attributes_name"
                                                                        name="attributes[0].attributes_name"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        value="this_is_a_string"
                                                                      />
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </TextInput>
                                                            </TextField>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <SingleField
                                                        component="select"
                                                        includeEmpty={true}
                                                        key="attributes[0].type"
                                                        label="Type"
                                                        loadOptions={[Function]}
                                                        name="attributes[0].type"
                                                        placeholder="<Choose>"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "select",
                                                              "includeEmpty": true,
                                                              "label": "Type",
                                                              "loadOptions": [Function],
                                                              "name": "attributes[0].type",
                                                              "placeholder": "<Choose>",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <SelectWithOnChange
                                                              component="select"
                                                              includeEmpty={true}
                                                              label="Type"
                                                              loadOptions={[Function]}
                                                              name="attributes[0].type"
                                                              placeholder="<Choose>"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <Select
                                                                component="select"
                                                                label="Type"
                                                                loadOptions={[Function]}
                                                                loadingMessage="Loading..."
                                                                name="attributes[0].type"
                                                                placeholder="<Choose>"
                                                                validate={
                                                                  Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Select
                                                                  SelectComponent={[Function]}
                                                                  invalidText=""
                                                                  labelText="Type"
                                                                  loadOptions={[Function]}
                                                                  loadOptionsChangeCounter={1}
                                                                  loadingMessage="Loading..."
                                                                  name="attributes[0].type"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  placeholder="<Choose>"
                                                                  simpleValue={false}
                                                                  value="string"
                                                                >
                                                                  <ClearedSelect
                                                                    className=""
                                                                    closeMenuOnSelect={true}
                                                                    hideSelectedOptions={false}
                                                                    invalidText=""
                                                                    isClearable={false}
                                                                    isFetching={false}
                                                                    isSearchable={false}
                                                                    labelText="Type"
                                                                    name="attributes[0].type"
                                                                    noOptionsMessage={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onInputChange={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "<Choose>",
                                                                          "value": undefined,
                                                                        },
                                                                        Object {
                                                                          "label": "Boolean",
                                                                          "value": "boolean",
                                                                        },
                                                                        Object {
                                                                          "label": "String",
                                                                          "value": "string",
                                                                        },
                                                                      ]
                                                                    }
                                                                    placeholder="<Choose>"
                                                                    value="string"
                                                                  >
                                                                    <Select
                                                                      className=""
                                                                      disabled={false}
                                                                      helperText=""
                                                                      id="attributes[0].type"
                                                                      inline={false}
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      labelText="Type"
                                                                      light={false}
                                                                      name="attributes[0].type"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="string"
                                                                    >
                                                                      <div
                                                                        className="bx--form-item"
                                                                      >
                                                                        <div
                                                                          className="bx--select"
                                                                        >
                                                                          <label
                                                                            className="bx--label"
                                                                            htmlFor="attributes[0].type"
                                                                          >
                                                                            Type
                                                                          </label>
                                                                          <div
                                                                            className="bx--select-input__wrapper"
                                                                            data-invalid={null}
                                                                          >
                                                                            <select
                                                                              className="bx--select-input"
                                                                              id="attributes[0].type"
                                                                              name="attributes[0].type"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              value="string"
                                                                            >
                                                                              <SelectItem
                                                                                disabled={false}
                                                                                hidden={false}
                                                                                key="0"
                                                                                label="<Choose>"
                                                                                text="<Choose>"
                                                                                value=""
                                                                              >
                                                                                <option
                                                                                  className="bx--select-option"
                                                                                  disabled={false}
                                                                                  hidden={false}
                                                                                  label="<Choose>"
                                                                                  value=""
                                                                                >
                                                                                  &lt;Choose&gt;
                                                                                </option>
                                                                              </SelectItem>
                                                                              <SelectItem
                                                                                disabled={false}
                                                                                hidden={false}
                                                                                key="boolean"
                                                                                label="Boolean"
                                                                                text="Boolean"
                                                                                value="boolean"
                                                                              >
                                                                                <option
                                                                                  className="bx--select-option"
                                                                                  disabled={false}
                                                                                  hidden={false}
                                                                                  label="Boolean"
                                                                                  value="boolean"
                                                                                >
                                                                                  Boolean
                                                                                </option>
                                                                              </SelectItem>
                                                                              <SelectItem
                                                                                disabled={false}
                                                                                hidden={false}
                                                                                key="string"
                                                                                label="String"
                                                                                text="String"
                                                                                value="string"
                                                                              >
                                                                                <option
                                                                                  className="bx--select-option"
                                                                                  disabled={false}
                                                                                  hidden={false}
                                                                                  label="String"
                                                                                  value="string"
                                                                                >
                                                                                  String
                                                                                </option>
                                                                              </SelectItem>
                                                                            </select>
                                                                            <ForwardRef(ChevronDown16)
                                                                              className="bx--select__arrow"
                                                                            >
                                                                              <Icon
                                                                                className="bx--select__arrow"
                                                                                fill="currentColor"
                                                                                height={16}
                                                                                preserveAspectRatio="xMidYMid meet"
                                                                                viewBox="0 0 16 16"
                                                                                width={16}
                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="bx--select__arrow"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height={16}
                                                                                  preserveAspectRatio="xMidYMid meet"
                                                                                  viewBox="0 0 16 16"
                                                                                  width={16}
                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                >
                                                                                  <path
                                                                                    d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                                  />
                                                                                </svg>
                                                                              </Icon>
                                                                            </ForwardRef(ChevronDown16)>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Select>
                                                                  </ClearedSelect>
                                                                </Select>
                                                              </Select>
                                                            </SelectWithOnChange>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <Button
                                                        className="remove-0-2-8"
                                                        disabled={false}
                                                        id="remove-attributes[0]"
                                                        kind="danger"
                                                        onClick={[Function]}
                                                        renderIcon={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          }
                                                        }
                                                        size="small"
                                                      >
                                                        <button
                                                          aria-describedby="danger-description-17"
                                                          aria-pressed={null}
                                                          className="remove-0-2-8 bx--btn bx--btn--sm bx--btn--danger"
                                                          disabled={false}
                                                          id="remove-attributes[0]"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="bx--visually-hidden"
                                                            id="danger-description-17"
                                                          >
                                                            danger
                                                          </span>
                                                          Remove
                                                          <ForwardRef(Subtract32)
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                          >
                                                            <Icon
                                                              aria-hidden="true"
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="bx--btn__icon"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height={32}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                viewBox="0 0 32 32"
                                                                width={32}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M8 15H24V17H8z"
                                                                />
                                                              </svg>
                                                            </Icon>
                                                          </ForwardRef(Subtract32)>
                                                        </button>
                                                      </Button>
                                                    </div>
                                                  </Component>
                                                  <div
                                                    className="addContainer-0-2-7"
                                                  >
                                                    <Button
                                                      className="add-0-2-6"
                                                      disabled={false}
                                                      id="add-attributes"
                                                      onClick={[Function]}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size="small"
                                                    >
                                                      <button
                                                        aria-describedby={null}
                                                        aria-pressed={null}
                                                        className="add-0-2-6 bx--btn bx--btn--sm bx--btn--primary"
                                                        disabled={false}
                                                        id="add-attributes"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        Add
                                                        <ForwardRef(AddAlt32)
                                                          aria-hidden="true"
                                                          className="bx--btn__icon"
                                                        >
                                                          <Icon
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                            fill="currentColor"
                                                            height={32}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            viewBox="0 0 32 32"
                                                            width={32}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M16,4c6.6,0,12,5.4,12,12s-5.4,12-12,12S4,22.6,4,16S9.4,4,16,4 M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14	S23.7,2,16,2z"
                                                              />
                                                              <path
                                                                d="M24 15L17 15 17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17z"
                                                              />
                                                            </svg>
                                                          </Icon>
                                                        </ForwardRef(AddAlt32)>
                                                      </button>
                                                    </Button>
                                                  </div>
                                                </div>
                                              </FieldArray>
                                            </fieldset>
                                          </FormGroup>
                                        </FieldArray>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "AddButtonProps": Object {
                                  "size": "small",
                                },
                                "RemoveButtonProps": Object {
                                  "size": "small",
                                },
                                "buttonLabels": Object {
                                  "add": "Add",
                                  "remove": "Remove",
                                },
                                "component": "field-array",
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "label": "Name",
                                    "name": "associations_name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                      Object {
                                        "type": "syntax",
                                      },
                                    ],
                                  },
                                  Object {
                                    "className": "class",
                                    "component": "select",
                                    "id": "class",
                                    "isSearchable": true,
                                    "label": "Class",
                                    "name": "class",
                                    "options": Array [
                                      Object {
                                        "label": "Bottleneck Event",
                                        "value": "BottleneckEvent",
                                      },
                                      Object {
                                        "label": "Performance - Container Project",
                                        "value": "ContainerProjectPerformance",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "simpleValue": true,
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                ],
                                "id": "associations",
                                "label": "Associations",
                                "name": "associations",
                                "noItemsMessage": "None",
                              },
                            ]
                          }
                          id="generic-objects-field-array-associations"
                          key="generic-objects-field-array-associations"
                          name="generic-objects-field-array-associations"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "AddButtonProps": Object {
                                      "size": "small",
                                    },
                                    "RemoveButtonProps": Object {
                                      "size": "small",
                                    },
                                    "buttonLabels": Object {
                                      "add": "Add",
                                      "remove": "Remove",
                                    },
                                    "component": "field-array",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "label": "Name",
                                        "name": "associations_name",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                          Object {
                                            "type": "syntax",
                                          },
                                        ],
                                      },
                                      Object {
                                        "className": "class",
                                        "component": "select",
                                        "id": "class",
                                        "isSearchable": true,
                                        "label": "Class",
                                        "name": "class",
                                        "options": Array [
                                          Object {
                                            "label": "Bottleneck Event",
                                            "value": "BottleneckEvent",
                                          },
                                          Object {
                                            "label": "Performance - Container Project",
                                            "value": "ContainerProjectPerformance",
                                          },
                                        ],
                                        "placeholder": "<Choose>",
                                        "simpleValue": true,
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "associations",
                                    "label": "Associations",
                                    "name": "associations",
                                    "noItemsMessage": "None",
                                  },
                                ],
                                "id": "generic-objects-field-array-associations",
                                "name": "generic-objects-field-array-associations",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "AddButtonProps": Object {
                                        "size": "small",
                                      },
                                      "RemoveButtonProps": Object {
                                        "size": "small",
                                      },
                                      "buttonLabels": Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      },
                                      "component": "field-array",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "associations_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "className": "class",
                                          "component": "select",
                                          "id": "class",
                                          "isSearchable": true,
                                          "label": "Class",
                                          "name": "class",
                                          "options": Array [
                                            Object {
                                              "label": "Bottleneck Event",
                                              "value": "BottleneckEvent",
                                            },
                                            Object {
                                              "label": "Performance - Container Project",
                                              "value": "ContainerProjectPerformance",
                                            },
                                          ],
                                          "placeholder": "<Choose>",
                                          "simpleValue": true,
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "associations",
                                      "label": "Associations",
                                      "name": "associations",
                                      "noItemsMessage": "None",
                                    },
                                  ]
                                }
                                id="generic-objects-field-array-associations"
                                name="generic-objects-field-array-associations"
                              >
                                <div
                                  className=""
                                  id="generic-objects-field-array-associations"
                                  name="generic-objects-field-array-associations"
                                >
                                  <SingleField
                                    AddButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    RemoveButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    buttonLabels={
                                      Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      }
                                    }
                                    component="field-array"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "associations_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                        Object {
                                          "className": "class",
                                          "component": "select",
                                          "id": "class",
                                          "isSearchable": true,
                                          "label": "Class",
                                          "name": "class",
                                          "options": Array [
                                            Object {
                                              "label": "Bottleneck Event",
                                              "value": "BottleneckEvent",
                                            },
                                            Object {
                                              "label": "Performance - Container Project",
                                              "value": "ContainerProjectPerformance",
                                            },
                                          ],
                                          "placeholder": "<Choose>",
                                          "simpleValue": true,
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    id="associations"
                                    key="associations"
                                    label="Associations"
                                    name="associations"
                                    noItemsMessage="None"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "AddButtonProps": Object {
                                            "size": "small",
                                          },
                                          "RemoveButtonProps": Object {
                                            "size": "small",
                                          },
                                          "buttonLabels": Object {
                                            "add": "Add",
                                            "remove": "Remove",
                                          },
                                          "component": "field-array",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "label": "Name",
                                              "name": "associations_name",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                                Object {
                                                  "type": "syntax",
                                                },
                                              ],
                                            },
                                            Object {
                                              "className": "class",
                                              "component": "select",
                                              "id": "class",
                                              "isSearchable": true,
                                              "label": "Class",
                                              "name": "class",
                                              "options": Array [
                                                Object {
                                                  "label": "Bottleneck Event",
                                                  "value": "BottleneckEvent",
                                                },
                                                Object {
                                                  "label": "Performance - Container Project",
                                                  "value": "ContainerProjectPerformance",
                                                },
                                              ],
                                              "placeholder": "<Choose>",
                                              "simpleValue": true,
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "associations",
                                          "label": "Associations",
                                          "name": "associations",
                                          "noItemsMessage": "None",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FieldArray
                                          AddButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          AddContainerProps={Object {}}
                                          ArrayItemProps={Object {}}
                                          FormGroupProps={Object {}}
                                          RemoveButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          WrapperProps={Object {}}
                                          buttonLabels={
                                            Object {
                                              "add": "Add",
                                              "remove": "Remove",
                                            }
                                          }
                                          component="field-array"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "text-field",
                                                "label": "Name",
                                                "name": "associations_name",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                  Object {
                                                    "type": "syntax",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "className": "class",
                                                "component": "select",
                                                "id": "class",
                                                "isSearchable": true,
                                                "label": "Class",
                                                "name": "class",
                                                "options": Array [
                                                  Object {
                                                    "label": "Bottleneck Event",
                                                    "value": "BottleneckEvent",
                                                  },
                                                  Object {
                                                    "label": "Performance - Container Project",
                                                    "value": "ContainerProjectPerformance",
                                                  },
                                                ],
                                                "placeholder": "<Choose>",
                                                "simpleValue": true,
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="associations"
                                          label="Associations"
                                          maxItems={Infinity}
                                          minItems={0}
                                          name="associations"
                                          noItemsMessage="None"
                                        >
                                          <FormGroup
                                            className="formGroup-0-2-9"
                                            hasMargin={true}
                                            invalid={false}
                                            legendText="Associations"
                                            message={false}
                                            messageText=""
                                          >
                                            <fieldset
                                              className="bx--fieldset formGroup-0-2-9"
                                            >
                                              <legend
                                                className="bx--label formGroup-0-2-9"
                                              >
                                                Associations
                                              </legend>
                                              <FieldArray
                                                name="associations"
                                              >
                                                <div>
                                                  <Component
                                                    ArrayItemProps={Object {}}
                                                    RemoveButtonProps={
                                                      Object {
                                                        "size": "small",
                                                      }
                                                    }
                                                    buttonDisabled={false}
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "label": "Name",
                                                          "name": "associations_name",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ],
                                                        },
                                                        Object {
                                                          "className": "class",
                                                          "component": "select",
                                                          "id": "class",
                                                          "isSearchable": true,
                                                          "label": "Class",
                                                          "name": "class",
                                                          "options": Array [
                                                            Object {
                                                              "label": "Bottleneck Event",
                                                              "value": "BottleneckEvent",
                                                            },
                                                            Object {
                                                              "label": "Performance - Container Project",
                                                              "value": "ContainerProjectPerformance",
                                                            },
                                                          ],
                                                          "placeholder": "<Choose>",
                                                          "simpleValue": true,
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    key="0"
                                                    name="associations[0]"
                                                    remove={[Function]}
                                                    removeText="Remove"
                                                  >
                                                    <div>
                                                      <SingleField
                                                        component="text-field"
                                                        key="associations[0].associations_name"
                                                        label="Name"
                                                        name="associations[0].associations_name"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "label": "Name",
                                                              "name": "associations[0].associations_name",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                                Object {
                                                                  "type": "syntax",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <TextField
                                                              component="text-field"
                                                              label="Name"
                                                              name="associations[0].associations_name"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                  Object {
                                                                    "type": "syntax",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <TextInput
                                                                id="associations[0].associations_name"
                                                                invalid={false}
                                                                invalidText=""
                                                                key="associations[0].associations_name"
                                                                labelText="Name"
                                                                name="associations[0].associations_name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="bottle_neck"
                                                                warn={false}
                                                                warnText=""
                                                              >
                                                                <div
                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                >
                                                                  <label
                                                                    className="bx--label"
                                                                    htmlFor="associations[0].associations_name"
                                                                  >
                                                                    Name
                                                                  </label>
                                                                  <div
                                                                    className="bx--text-input__field-outer-wrapper"
                                                                  >
                                                                    <div
                                                                      className="bx--text-input__field-wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <input
                                                                        className="bx--text-input bx--text-input--md"
                                                                        disabled={false}
                                                                        id="associations[0].associations_name"
                                                                        name="associations[0].associations_name"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        value="bottle_neck"
                                                                      />
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </TextInput>
                                                            </TextField>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <SingleField
                                                        className="class"
                                                        component="select"
                                                        id="class"
                                                        isSearchable={true}
                                                        key="associations[0].class"
                                                        label="Class"
                                                        name="associations[0].class"
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "Bottleneck Event",
                                                              "value": "BottleneckEvent",
                                                            },
                                                            Object {
                                                              "label": "Performance - Container Project",
                                                              "value": "ContainerProjectPerformance",
                                                            },
                                                          ]
                                                        }
                                                        placeholder="<Choose>"
                                                        simpleValue={true}
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "className": "class",
                                                              "component": "select",
                                                              "id": "class",
                                                              "isSearchable": true,
                                                              "label": "Class",
                                                              "name": "associations[0].class",
                                                              "options": Array [
                                                                Object {
                                                                  "label": "Bottleneck Event",
                                                                  "value": "BottleneckEvent",
                                                                },
                                                                Object {
                                                                  "label": "Performance - Container Project",
                                                                  "value": "ContainerProjectPerformance",
                                                                },
                                                              ],
                                                              "placeholder": "<Choose>",
                                                              "simpleValue": true,
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <SelectWithOnChange
                                                              className="class"
                                                              component="select"
                                                              id="class"
                                                              isSearchable={true}
                                                              label="Class"
                                                              name="associations[0].class"
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "label": "Bottleneck Event",
                                                                    "value": "BottleneckEvent",
                                                                  },
                                                                  Object {
                                                                    "label": "Performance - Container Project",
                                                                    "value": "ContainerProjectPerformance",
                                                                  },
                                                                ]
                                                              }
                                                              placeholder="<Choose>"
                                                              simpleValue={true}
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <Select
                                                                className="class"
                                                                component="select"
                                                                id="class"
                                                                isSearchable={true}
                                                                label="Class"
                                                                loadingMessage="Loading..."
                                                                name="associations[0].class"
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "label": "Bottleneck Event",
                                                                      "value": "BottleneckEvent",
                                                                    },
                                                                    Object {
                                                                      "label": "Performance - Container Project",
                                                                      "value": "ContainerProjectPerformance",
                                                                    },
                                                                  ]
                                                                }
                                                                placeholder="<Choose>"
                                                                simpleValue={true}
                                                                validate={
                                                                  Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Select
                                                                  SelectComponent={[Function]}
                                                                  className="class"
                                                                  id="class"
                                                                  invalidText=""
                                                                  labelText="Class"
                                                                  loadOptionsChangeCounter={1}
                                                                  loadingMessage="Loading..."
                                                                  name="associations[0].class"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "Bottleneck Event",
                                                                        "value": "BottleneckEvent",
                                                                      },
                                                                      Object {
                                                                        "label": "Performance - Container Project",
                                                                        "value": "ContainerProjectPerformance",
                                                                      },
                                                                    ]
                                                                  }
                                                                  placeholder="<Choose>"
                                                                  simpleValue={true}
                                                                  value="BottleneckEvent"
                                                                >
                                                                  <ClearedSelectSearchable
                                                                    className="class"
                                                                    closeMenuOnSelect={true}
                                                                    hideSelectedOptions={false}
                                                                    id="class"
                                                                    invalidText=""
                                                                    isClearable={false}
                                                                    isFetching={false}
                                                                    isSearchable={false}
                                                                    labelText="Class"
                                                                    name="associations[0].class"
                                                                    noOptionsMessage={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onInputChange={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Bottleneck Event",
                                                                          "value": "BottleneckEvent",
                                                                        },
                                                                        Object {
                                                                          "label": "Performance - Container Project",
                                                                          "value": "ContainerProjectPerformance",
                                                                        },
                                                                      ]
                                                                    }
                                                                    placeholder="<Choose>"
                                                                    value={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Bottleneck Event",
                                                                          "value": "BottleneckEvent",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <ComboBox
                                                                      ariaLabel="Choose an item"
                                                                      className="class"
                                                                      direction="bottom"
                                                                      disabled={false}
                                                                      id="associations[0].class"
                                                                      initialSelectedItem={
                                                                        Object {
                                                                          "label": "Bottleneck Event",
                                                                          "value": "BottleneckEvent",
                                                                        }
                                                                      }
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      itemToElement={null}
                                                                      itemToString={[Function]}
                                                                      items={
                                                                        Array [
                                                                          Object {
                                                                            "label": "Bottleneck Event",
                                                                            "value": "BottleneckEvent",
                                                                          },
                                                                          Object {
                                                                            "label": "Performance - Container Project",
                                                                            "value": "ContainerProjectPerformance",
                                                                          },
                                                                        ]
                                                                      }
                                                                      light={false}
                                                                      name="associations[0].class"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      placeholder="<Choose>"
                                                                      shouldFilterItem={[Function]}
                                                                      titleText="Class"
                                                                      type="default"
                                                                    >
                                                                      <Downshift
                                                                        defaultHighlightedIndex={null}
                                                                        defaultIsOpen={false}
                                                                        environment={[Window]}
                                                                        getA11yStatusMessage={[Function]}
                                                                        initialSelectedItem={
                                                                          Object {
                                                                            "label": "Bottleneck Event",
                                                                            "value": "BottleneckEvent",
                                                                          }
                                                                        }
                                                                        inputId="associations[0].class"
                                                                        inputValue="Bottleneck Event"
                                                                        itemToString={[Function]}
                                                                        onChange={[Function]}
                                                                        onInputValueChange={[Function]}
                                                                        onOuterClick={[Function]}
                                                                        onSelect={[Function]}
                                                                        onStateChange={[Function]}
                                                                        onUserAction={[Function]}
                                                                        scrollIntoView={[Function]}
                                                                        selectedItemChanged={[Function]}
                                                                        stateReducer={[Function]}
                                                                        suppressRefError={false}
                                                                      >
                                                                        <div
                                                                          className="bx--list-box__wrapper"
                                                                        >
                                                                          <Text
                                                                            as="label"
                                                                            className="bx--label"
                                                                            htmlFor="associations[0].class"
                                                                            id="downshift-2-label"
                                                                          >
                                                                            <label
                                                                              className="bx--label"
                                                                              dir="auto"
                                                                              htmlFor="associations[0].class"
                                                                              id="downshift-2-label"
                                                                            >
                                                                              Class
                                                                            </label>
                                                                          </Text>
                                                                          <ListBox
                                                                            className="bx--combo-box class"
                                                                            disabled={false}
                                                                            invalid={false}
                                                                            invalidText=""
                                                                            isOpen={false}
                                                                            light={false}
                                                                            type="default"
                                                                          >
                                                                            <div
                                                                              className="bx--combo-box class bx--list-box"
                                                                              onClick={[Function]}
                                                                              onKeyDown={[Function]}
                                                                            >
                                                                              <div
                                                                                className="bx--list-box__field"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant={null}
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls={null}
                                                                                  aria-expanded={false}
                                                                                  aria-haspopup="listbox"
                                                                                  aria-labelledby={null}
                                                                                  autoComplete="off"
                                                                                  className="bx--text-input"
                                                                                  disabled={false}
                                                                                  id="associations[0].class"
                                                                                  name="associations[0].class"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  placeholder="<Choose>"
                                                                                  role="combobox"
                                                                                  tabIndex="0"
                                                                                  title="Bottleneck Event"
                                                                                  type="text"
                                                                                  value="Bottleneck Event"
                                                                                />
                                                                                <ListBoxSelection
                                                                                  clearSelection={[Function]}
                                                                                  disabled={false}
                                                                                  onClearSelection={[Function]}
                                                                                  translateWithId={[Function]}
                                                                                >
                                                                                  <button
                                                                                    aria-label="Clear selected item"
                                                                                    className="bx--list-box__selection"
                                                                                    onClick={[Function]}
                                                                                    tabIndex={-1}
                                                                                    title="Clear selected item"
                                                                                    type="button"
                                                                                  >
                                                                                    <ForwardRef(Close16)>
                                                                                      <Icon
                                                                                        fill="currentColor"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        viewBox="0 0 32 32"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height={16}
                                                                                          preserveAspectRatio="xMidYMid meet"
                                                                                          viewBox="0 0 32 32"
                                                                                          width={16}
                                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                                        >
                                                                                          <path
                                                                                            d="M17.4141 16L24 9.4141 22.5859 8 16 14.5859 9.4143 8 8 9.4141 14.5859 16 8 22.5859 9.4143 24 16 17.4141 22.5859 24 24 22.5859 17.4141 16z"
                                                                                          />
                                                                                        </svg>
                                                                                      </Icon>
                                                                                    </ForwardRef(Close16)>
                                                                                  </button>
                                                                                </ListBoxSelection>
                                                                                <ListBoxTrigger
                                                                                  aria-haspopup={true}
                                                                                  aria-label="open menu"
                                                                                  data-toggle={true}
                                                                                  disabled={false}
                                                                                  isOpen={false}
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  role="button"
                                                                                  translateWithId={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <button
                                                                                    aria-haspopup={true}
                                                                                    aria-label="Open"
                                                                                    className="bx--list-box__menu-icon"
                                                                                    data-toggle={true}
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    role="button"
                                                                                    tabIndex="-1"
                                                                                    title="Open"
                                                                                    type="button"
                                                                                  >
                                                                                    <ForwardRef(ChevronDown16)>
                                                                                      <Icon
                                                                                        fill="currentColor"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        viewBox="0 0 16 16"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height={16}
                                                                                          preserveAspectRatio="xMidYMid meet"
                                                                                          viewBox="0 0 16 16"
                                                                                          width={16}
                                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                                        >
                                                                                          <path
                                                                                            d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                                          />
                                                                                        </svg>
                                                                                      </Icon>
                                                                                    </ForwardRef(ChevronDown16)>
                                                                                  </button>
                                                                                </ListBoxTrigger>
                                                                              </div>
                                                                              <ListBoxMenu
                                                                                aria-label="Choose an item"
                                                                                aria-labelledby={null}
                                                                                id="downshift-2-menu"
                                                                                role="listbox"
                                                                              >
                                                                                <div
                                                                                  aria-label="Choose an item"
                                                                                  aria-labelledby={null}
                                                                                  className="bx--list-box__menu"
                                                                                  id="downshift-2-menu"
                                                                                  role="listbox"
                                                                                />
                                                                              </ListBoxMenu>
                                                                            </div>
                                                                          </ListBox>
                                                                        </div>
                                                                      </Downshift>
                                                                    </ComboBox>
                                                                  </ClearedSelectSearchable>
                                                                </Select>
                                                              </Select>
                                                            </SelectWithOnChange>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <Button
                                                        className="remove-0-2-8"
                                                        disabled={false}
                                                        id="remove-associations[0]"
                                                        kind="danger"
                                                        onClick={[Function]}
                                                        renderIcon={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          }
                                                        }
                                                        size="small"
                                                      >
                                                        <button
                                                          aria-describedby="danger-description-19"
                                                          aria-pressed={null}
                                                          className="remove-0-2-8 bx--btn bx--btn--sm bx--btn--danger"
                                                          disabled={false}
                                                          id="remove-associations[0]"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="bx--visually-hidden"
                                                            id="danger-description-19"
                                                          >
                                                            danger
                                                          </span>
                                                          Remove
                                                          <ForwardRef(Subtract32)
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                          >
                                                            <Icon
                                                              aria-hidden="true"
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="bx--btn__icon"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height={32}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                viewBox="0 0 32 32"
                                                                width={32}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M8 15H24V17H8z"
                                                                />
                                                              </svg>
                                                            </Icon>
                                                          </ForwardRef(Subtract32)>
                                                        </button>
                                                      </Button>
                                                    </div>
                                                  </Component>
                                                  <Component
                                                    ArrayItemProps={Object {}}
                                                    RemoveButtonProps={
                                                      Object {
                                                        "size": "small",
                                                      }
                                                    }
                                                    buttonDisabled={false}
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "label": "Name",
                                                          "name": "associations_name",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ],
                                                        },
                                                        Object {
                                                          "className": "class",
                                                          "component": "select",
                                                          "id": "class",
                                                          "isSearchable": true,
                                                          "label": "Class",
                                                          "name": "class",
                                                          "options": Array [
                                                            Object {
                                                              "label": "Bottleneck Event",
                                                              "value": "BottleneckEvent",
                                                            },
                                                            Object {
                                                              "label": "Performance - Container Project",
                                                              "value": "ContainerProjectPerformance",
                                                            },
                                                          ],
                                                          "placeholder": "<Choose>",
                                                          "simpleValue": true,
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    key="1"
                                                    name="associations[1]"
                                                    remove={[Function]}
                                                    removeText="Remove"
                                                  >
                                                    <div>
                                                      <SingleField
                                                        component="text-field"
                                                        key="associations[1].associations_name"
                                                        label="Name"
                                                        name="associations[1].associations_name"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "label": "Name",
                                                              "name": "associations[1].associations_name",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                                Object {
                                                                  "type": "syntax",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <TextField
                                                              component="text-field"
                                                              label="Name"
                                                              name="associations[1].associations_name"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                  Object {
                                                                    "type": "syntax",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <TextInput
                                                                id="associations[1].associations_name"
                                                                invalid={false}
                                                                invalidText=""
                                                                key="associations[1].associations_name"
                                                                labelText="Name"
                                                                name="associations[1].associations_name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="project"
                                                                warn={false}
                                                                warnText=""
                                                              >
                                                                <div
                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                >
                                                                  <label
                                                                    className="bx--label"
                                                                    htmlFor="associations[1].associations_name"
                                                                  >
                                                                    Name
                                                                  </label>
                                                                  <div
                                                                    className="bx--text-input__field-outer-wrapper"
                                                                  >
                                                                    <div
                                                                      className="bx--text-input__field-wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <input
                                                                        className="bx--text-input bx--text-input--md"
                                                                        disabled={false}
                                                                        id="associations[1].associations_name"
                                                                        name="associations[1].associations_name"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        value="project"
                                                                      />
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </TextInput>
                                                            </TextField>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <SingleField
                                                        className="class"
                                                        component="select"
                                                        id="class"
                                                        isSearchable={true}
                                                        key="associations[1].class"
                                                        label="Class"
                                                        name="associations[1].class"
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "Bottleneck Event",
                                                              "value": "BottleneckEvent",
                                                            },
                                                            Object {
                                                              "label": "Performance - Container Project",
                                                              "value": "ContainerProjectPerformance",
                                                            },
                                                          ]
                                                        }
                                                        placeholder="<Choose>"
                                                        simpleValue={true}
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "className": "class",
                                                              "component": "select",
                                                              "id": "class",
                                                              "isSearchable": true,
                                                              "label": "Class",
                                                              "name": "associations[1].class",
                                                              "options": Array [
                                                                Object {
                                                                  "label": "Bottleneck Event",
                                                                  "value": "BottleneckEvent",
                                                                },
                                                                Object {
                                                                  "label": "Performance - Container Project",
                                                                  "value": "ContainerProjectPerformance",
                                                                },
                                                              ],
                                                              "placeholder": "<Choose>",
                                                              "simpleValue": true,
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <SelectWithOnChange
                                                              className="class"
                                                              component="select"
                                                              id="class"
                                                              isSearchable={true}
                                                              label="Class"
                                                              name="associations[1].class"
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "label": "Bottleneck Event",
                                                                    "value": "BottleneckEvent",
                                                                  },
                                                                  Object {
                                                                    "label": "Performance - Container Project",
                                                                    "value": "ContainerProjectPerformance",
                                                                  },
                                                                ]
                                                              }
                                                              placeholder="<Choose>"
                                                              simpleValue={true}
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <Select
                                                                className="class"
                                                                component="select"
                                                                id="class"
                                                                isSearchable={true}
                                                                label="Class"
                                                                loadingMessage="Loading..."
                                                                name="associations[1].class"
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "label": "Bottleneck Event",
                                                                      "value": "BottleneckEvent",
                                                                    },
                                                                    Object {
                                                                      "label": "Performance - Container Project",
                                                                      "value": "ContainerProjectPerformance",
                                                                    },
                                                                  ]
                                                                }
                                                                placeholder="<Choose>"
                                                                simpleValue={true}
                                                                validate={
                                                                  Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Select
                                                                  SelectComponent={[Function]}
                                                                  className="class"
                                                                  id="class"
                                                                  invalidText=""
                                                                  labelText="Class"
                                                                  loadOptionsChangeCounter={1}
                                                                  loadingMessage="Loading..."
                                                                  name="associations[1].class"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "Bottleneck Event",
                                                                        "value": "BottleneckEvent",
                                                                      },
                                                                      Object {
                                                                        "label": "Performance - Container Project",
                                                                        "value": "ContainerProjectPerformance",
                                                                      },
                                                                    ]
                                                                  }
                                                                  placeholder="<Choose>"
                                                                  simpleValue={true}
                                                                  value="ContainerProjectPerformance"
                                                                >
                                                                  <ClearedSelectSearchable
                                                                    className="class"
                                                                    closeMenuOnSelect={true}
                                                                    hideSelectedOptions={false}
                                                                    id="class"
                                                                    invalidText=""
                                                                    isClearable={false}
                                                                    isFetching={false}
                                                                    isSearchable={false}
                                                                    labelText="Class"
                                                                    name="associations[1].class"
                                                                    noOptionsMessage={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onInputChange={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Bottleneck Event",
                                                                          "value": "BottleneckEvent",
                                                                        },
                                                                        Object {
                                                                          "label": "Performance - Container Project",
                                                                          "value": "ContainerProjectPerformance",
                                                                        },
                                                                      ]
                                                                    }
                                                                    placeholder="<Choose>"
                                                                    value={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Performance - Container Project",
                                                                          "value": "ContainerProjectPerformance",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <ComboBox
                                                                      ariaLabel="Choose an item"
                                                                      className="class"
                                                                      direction="bottom"
                                                                      disabled={false}
                                                                      id="associations[1].class"
                                                                      initialSelectedItem={
                                                                        Object {
                                                                          "label": "Performance - Container Project",
                                                                          "value": "ContainerProjectPerformance",
                                                                        }
                                                                      }
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      itemToElement={null}
                                                                      itemToString={[Function]}
                                                                      items={
                                                                        Array [
                                                                          Object {
                                                                            "label": "Bottleneck Event",
                                                                            "value": "BottleneckEvent",
                                                                          },
                                                                          Object {
                                                                            "label": "Performance - Container Project",
                                                                            "value": "ContainerProjectPerformance",
                                                                          },
                                                                        ]
                                                                      }
                                                                      light={false}
                                                                      name="associations[1].class"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      placeholder="<Choose>"
                                                                      shouldFilterItem={[Function]}
                                                                      titleText="Class"
                                                                      type="default"
                                                                    >
                                                                      <Downshift
                                                                        defaultHighlightedIndex={null}
                                                                        defaultIsOpen={false}
                                                                        environment={[Window]}
                                                                        getA11yStatusMessage={[Function]}
                                                                        initialSelectedItem={
                                                                          Object {
                                                                            "label": "Performance - Container Project",
                                                                            "value": "ContainerProjectPerformance",
                                                                          }
                                                                        }
                                                                        inputId="associations[1].class"
                                                                        inputValue="Performance - Container Project"
                                                                        itemToString={[Function]}
                                                                        onChange={[Function]}
                                                                        onInputValueChange={[Function]}
                                                                        onOuterClick={[Function]}
                                                                        onSelect={[Function]}
                                                                        onStateChange={[Function]}
                                                                        onUserAction={[Function]}
                                                                        scrollIntoView={[Function]}
                                                                        selectedItemChanged={[Function]}
                                                                        stateReducer={[Function]}
                                                                        suppressRefError={false}
                                                                      >
                                                                        <div
                                                                          className="bx--list-box__wrapper"
                                                                        >
                                                                          <Text
                                                                            as="label"
                                                                            className="bx--label"
                                                                            htmlFor="associations[1].class"
                                                                            id="downshift-3-label"
                                                                          >
                                                                            <label
                                                                              className="bx--label"
                                                                              dir="auto"
                                                                              htmlFor="associations[1].class"
                                                                              id="downshift-3-label"
                                                                            >
                                                                              Class
                                                                            </label>
                                                                          </Text>
                                                                          <ListBox
                                                                            className="bx--combo-box class"
                                                                            disabled={false}
                                                                            invalid={false}
                                                                            invalidText=""
                                                                            isOpen={false}
                                                                            light={false}
                                                                            type="default"
                                                                          >
                                                                            <div
                                                                              className="bx--combo-box class bx--list-box"
                                                                              onClick={[Function]}
                                                                              onKeyDown={[Function]}
                                                                            >
                                                                              <div
                                                                                className="bx--list-box__field"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant={null}
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls={null}
                                                                                  aria-expanded={false}
                                                                                  aria-haspopup="listbox"
                                                                                  aria-labelledby={null}
                                                                                  autoComplete="off"
                                                                                  className="bx--text-input"
                                                                                  disabled={false}
                                                                                  id="associations[1].class"
                                                                                  name="associations[1].class"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  placeholder="<Choose>"
                                                                                  role="combobox"
                                                                                  tabIndex="0"
                                                                                  title="Performance - Container Project"
                                                                                  type="text"
                                                                                  value="Performance - Container Project"
                                                                                />
                                                                                <ListBoxSelection
                                                                                  clearSelection={[Function]}
                                                                                  disabled={false}
                                                                                  onClearSelection={[Function]}
                                                                                  translateWithId={[Function]}
                                                                                >
                                                                                  <button
                                                                                    aria-label="Clear selected item"
                                                                                    className="bx--list-box__selection"
                                                                                    onClick={[Function]}
                                                                                    tabIndex={-1}
                                                                                    title="Clear selected item"
                                                                                    type="button"
                                                                                  >
                                                                                    <ForwardRef(Close16)>
                                                                                      <Icon
                                                                                        fill="currentColor"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        viewBox="0 0 32 32"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height={16}
                                                                                          preserveAspectRatio="xMidYMid meet"
                                                                                          viewBox="0 0 32 32"
                                                                                          width={16}
                                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                                        >
                                                                                          <path
                                                                                            d="M17.4141 16L24 9.4141 22.5859 8 16 14.5859 9.4143 8 8 9.4141 14.5859 16 8 22.5859 9.4143 24 16 17.4141 22.5859 24 24 22.5859 17.4141 16z"
                                                                                          />
                                                                                        </svg>
                                                                                      </Icon>
                                                                                    </ForwardRef(Close16)>
                                                                                  </button>
                                                                                </ListBoxSelection>
                                                                                <ListBoxTrigger
                                                                                  aria-haspopup={true}
                                                                                  aria-label="open menu"
                                                                                  data-toggle={true}
                                                                                  disabled={false}
                                                                                  isOpen={false}
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  role="button"
                                                                                  translateWithId={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <button
                                                                                    aria-haspopup={true}
                                                                                    aria-label="Open"
                                                                                    className="bx--list-box__menu-icon"
                                                                                    data-toggle={true}
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    role="button"
                                                                                    tabIndex="-1"
                                                                                    title="Open"
                                                                                    type="button"
                                                                                  >
                                                                                    <ForwardRef(ChevronDown16)>
                                                                                      <Icon
                                                                                        fill="currentColor"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        viewBox="0 0 16 16"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height={16}
                                                                                          preserveAspectRatio="xMidYMid meet"
                                                                                          viewBox="0 0 16 16"
                                                                                          width={16}
                                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                                        >
                                                                                          <path
                                                                                            d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                                                          />
                                                                                        </svg>
                                                                                      </Icon>
                                                                                    </ForwardRef(ChevronDown16)>
                                                                                  </button>
                                                                                </ListBoxTrigger>
                                                                              </div>
                                                                              <ListBoxMenu
                                                                                aria-label="Choose an item"
                                                                                aria-labelledby={null}
                                                                                id="downshift-3-menu"
                                                                                role="listbox"
                                                                              >
                                                                                <div
                                                                                  aria-label="Choose an item"
                                                                                  aria-labelledby={null}
                                                                                  className="bx--list-box__menu"
                                                                                  id="downshift-3-menu"
                                                                                  role="listbox"
                                                                                />
                                                                              </ListBoxMenu>
                                                                            </div>
                                                                          </ListBox>
                                                                        </div>
                                                                      </Downshift>
                                                                    </ComboBox>
                                                                  </ClearedSelectSearchable>
                                                                </Select>
                                                              </Select>
                                                            </SelectWithOnChange>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <Button
                                                        className="remove-0-2-8"
                                                        disabled={false}
                                                        id="remove-associations[1]"
                                                        kind="danger"
                                                        onClick={[Function]}
                                                        renderIcon={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          }
                                                        }
                                                        size="small"
                                                      >
                                                        <button
                                                          aria-describedby="danger-description-20"
                                                          aria-pressed={null}
                                                          className="remove-0-2-8 bx--btn bx--btn--sm bx--btn--danger"
                                                          disabled={false}
                                                          id="remove-associations[1]"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="bx--visually-hidden"
                                                            id="danger-description-20"
                                                          >
                                                            danger
                                                          </span>
                                                          Remove
                                                          <ForwardRef(Subtract32)
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                          >
                                                            <Icon
                                                              aria-hidden="true"
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="bx--btn__icon"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height={32}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                viewBox="0 0 32 32"
                                                                width={32}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M8 15H24V17H8z"
                                                                />
                                                              </svg>
                                                            </Icon>
                                                          </ForwardRef(Subtract32)>
                                                        </button>
                                                      </Button>
                                                    </div>
                                                  </Component>
                                                  <div
                                                    className="addContainer-0-2-7"
                                                  >
                                                    <Button
                                                      className="add-0-2-6"
                                                      disabled={false}
                                                      id="add-associations"
                                                      onClick={[Function]}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size="small"
                                                    >
                                                      <button
                                                        aria-describedby={null}
                                                        aria-pressed={null}
                                                        className="add-0-2-6 bx--btn bx--btn--sm bx--btn--primary"
                                                        disabled={false}
                                                        id="add-associations"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        Add
                                                        <ForwardRef(AddAlt32)
                                                          aria-hidden="true"
                                                          className="bx--btn__icon"
                                                        >
                                                          <Icon
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                            fill="currentColor"
                                                            height={32}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            viewBox="0 0 32 32"
                                                            width={32}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M16,4c6.6,0,12,5.4,12,12s-5.4,12-12,12S4,22.6,4,16S9.4,4,16,4 M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14	S23.7,2,16,2z"
                                                              />
                                                              <path
                                                                d="M24 15L17 15 17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17z"
                                                              />
                                                            </svg>
                                                          </Icon>
                                                        </ForwardRef(AddAlt32)>
                                                      </button>
                                                    </Button>
                                                  </div>
                                                </div>
                                              </FieldArray>
                                            </fieldset>
                                          </FormGroup>
                                        </FieldArray>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "AddButtonProps": Object {
                                  "size": "small",
                                },
                                "RemoveButtonProps": Object {
                                  "size": "small",
                                },
                                "buttonLabels": Object {
                                  "add": "Add",
                                  "remove": "Remove",
                                },
                                "component": "field-array",
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "label": "Name",
                                    "name": "methods_name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                      Object {
                                        "type": "syntax",
                                      },
                                    ],
                                  },
                                ],
                                "id": "methods",
                                "label": "Methods",
                                "name": "methods",
                                "noItemsMessage": "None",
                              },
                            ]
                          }
                          id="generic-objects-field-array-methods"
                          key="generic-objects-field-array-methods"
                          name="generic-objects-field-array-methods"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "AddButtonProps": Object {
                                      "size": "small",
                                    },
                                    "RemoveButtonProps": Object {
                                      "size": "small",
                                    },
                                    "buttonLabels": Object {
                                      "add": "Add",
                                      "remove": "Remove",
                                    },
                                    "component": "field-array",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "label": "Name",
                                        "name": "methods_name",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                          Object {
                                            "type": "syntax",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "methods",
                                    "label": "Methods",
                                    "name": "methods",
                                    "noItemsMessage": "None",
                                  },
                                ],
                                "id": "generic-objects-field-array-methods",
                                "name": "generic-objects-field-array-methods",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "AddButtonProps": Object {
                                        "size": "small",
                                      },
                                      "RemoveButtonProps": Object {
                                        "size": "small",
                                      },
                                      "buttonLabels": Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      },
                                      "component": "field-array",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "methods_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "methods",
                                      "label": "Methods",
                                      "name": "methods",
                                      "noItemsMessage": "None",
                                    },
                                  ]
                                }
                                id="generic-objects-field-array-methods"
                                name="generic-objects-field-array-methods"
                              >
                                <div
                                  className=""
                                  id="generic-objects-field-array-methods"
                                  name="generic-objects-field-array-methods"
                                >
                                  <SingleField
                                    AddButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    RemoveButtonProps={
                                      Object {
                                        "size": "small",
                                      }
                                    }
                                    buttonLabels={
                                      Object {
                                        "add": "Add",
                                        "remove": "Remove",
                                      }
                                    }
                                    component="field-array"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "text-field",
                                          "label": "Name",
                                          "name": "methods_name",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                            Object {
                                              "type": "syntax",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    id="methods"
                                    key="methods"
                                    label="Methods"
                                    name="methods"
                                    noItemsMessage="None"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "AddButtonProps": Object {
                                            "size": "small",
                                          },
                                          "RemoveButtonProps": Object {
                                            "size": "small",
                                          },
                                          "buttonLabels": Object {
                                            "add": "Add",
                                            "remove": "Remove",
                                          },
                                          "component": "field-array",
                                          "fields": Array [
                                            Object {
                                              "component": "text-field",
                                              "label": "Name",
                                              "name": "methods_name",
                                              "validate": Array [
                                                Object {
                                                  "type": "required",
                                                },
                                                Object {
                                                  "type": "syntax",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "methods",
                                          "label": "Methods",
                                          "name": "methods",
                                          "noItemsMessage": "None",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <FieldArray
                                          AddButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          AddContainerProps={Object {}}
                                          ArrayItemProps={Object {}}
                                          FormGroupProps={Object {}}
                                          RemoveButtonProps={
                                            Object {
                                              "size": "small",
                                            }
                                          }
                                          WrapperProps={Object {}}
                                          buttonLabels={
                                            Object {
                                              "add": "Add",
                                              "remove": "Remove",
                                            }
                                          }
                                          component="field-array"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "text-field",
                                                "label": "Name",
                                                "name": "methods_name",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                  Object {
                                                    "type": "syntax",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="methods"
                                          label="Methods"
                                          maxItems={Infinity}
                                          minItems={0}
                                          name="methods"
                                          noItemsMessage="None"
                                        >
                                          <FormGroup
                                            className="formGroup-0-2-9"
                                            hasMargin={true}
                                            invalid={false}
                                            legendText="Methods"
                                            message={false}
                                            messageText=""
                                          >
                                            <fieldset
                                              className="bx--fieldset formGroup-0-2-9"
                                            >
                                              <legend
                                                className="bx--label formGroup-0-2-9"
                                              >
                                                Methods
                                              </legend>
                                              <FieldArray
                                                name="methods"
                                              >
                                                <div>
                                                  <Component
                                                    ArrayItemProps={Object {}}
                                                    RemoveButtonProps={
                                                      Object {
                                                        "size": "small",
                                                      }
                                                    }
                                                    buttonDisabled={false}
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "label": "Name",
                                                          "name": "methods_name",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    key="0"
                                                    name="methods[0]"
                                                    remove={[Function]}
                                                    removeText="Remove"
                                                  >
                                                    <div>
                                                      <SingleField
                                                        component="text-field"
                                                        key="methods[0].methods_name"
                                                        label="Name"
                                                        name="methods[0].methods_name"
                                                        validate={
                                                          Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                            Object {
                                                              "type": "syntax",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <FormConditionWrapper
                                                          field={
                                                            Object {
                                                              "component": "text-field",
                                                              "label": "Name",
                                                              "name": "methods[0].methods_name",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                                Object {
                                                                  "type": "syntax",
                                                                },
                                                              ],
                                                            }
                                                          }
                                                        >
                                                          <FormFieldHideWrapper
                                                            hideField={false}
                                                          >
                                                            <TextField
                                                              component="text-field"
                                                              label="Name"
                                                              name="methods[0].methods_name"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                  Object {
                                                                    "type": "syntax",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <TextInput
                                                                id="methods[0].methods_name"
                                                                invalid={false}
                                                                invalidText=""
                                                                key="methods[0].methods_name"
                                                                labelText="Name"
                                                                name="methods[0].methods_name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="method"
                                                                warn={false}
                                                                warnText=""
                                                              >
                                                                <div
                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                >
                                                                  <label
                                                                    className="bx--label"
                                                                    htmlFor="methods[0].methods_name"
                                                                  >
                                                                    Name
                                                                  </label>
                                                                  <div
                                                                    className="bx--text-input__field-outer-wrapper"
                                                                  >
                                                                    <div
                                                                      className="bx--text-input__field-wrapper"
                                                                      data-invalid={null}
                                                                    >
                                                                      <input
                                                                        className="bx--text-input bx--text-input--md"
                                                                        disabled={false}
                                                                        id="methods[0].methods_name"
                                                                        name="methods[0].methods_name"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        value="method"
                                                                      />
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </TextInput>
                                                            </TextField>
                                                          </FormFieldHideWrapper>
                                                        </FormConditionWrapper>
                                                      </SingleField>
                                                      <Button
                                                        className="remove-0-2-8"
                                                        disabled={false}
                                                        id="remove-methods[0]"
                                                        kind="danger"
                                                        onClick={[Function]}
                                                        renderIcon={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          }
                                                        }
                                                        size="small"
                                                      >
                                                        <button
                                                          aria-describedby="danger-description-22"
                                                          aria-pressed={null}
                                                          className="remove-0-2-8 bx--btn bx--btn--sm bx--btn--danger"
                                                          disabled={false}
                                                          id="remove-methods[0]"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="bx--visually-hidden"
                                                            id="danger-description-22"
                                                          >
                                                            danger
                                                          </span>
                                                          Remove
                                                          <ForwardRef(Subtract32)
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                          >
                                                            <Icon
                                                              aria-hidden="true"
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="bx--btn__icon"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height={32}
                                                                preserveAspectRatio="xMidYMid meet"
                                                                viewBox="0 0 32 32"
                                                                width={32}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M8 15H24V17H8z"
                                                                />
                                                              </svg>
                                                            </Icon>
                                                          </ForwardRef(Subtract32)>
                                                        </button>
                                                      </Button>
                                                    </div>
                                                  </Component>
                                                  <div
                                                    className="addContainer-0-2-7"
                                                  >
                                                    <Button
                                                      className="add-0-2-6"
                                                      disabled={false}
                                                      id="add-methods"
                                                      onClick={[Function]}
                                                      renderIcon={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      size="small"
                                                    >
                                                      <button
                                                        aria-describedby={null}
                                                        aria-pressed={null}
                                                        className="add-0-2-6 bx--btn bx--btn--sm bx--btn--primary"
                                                        disabled={false}
                                                        id="add-methods"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        Add
                                                        <ForwardRef(AddAlt32)
                                                          aria-hidden="true"
                                                          className="bx--btn__icon"
                                                        >
                                                          <Icon
                                                            aria-hidden="true"
                                                            className="bx--btn__icon"
                                                            fill="currentColor"
                                                            height={32}
                                                            preserveAspectRatio="xMidYMid meet"
                                                            viewBox="0 0 32 32"
                                                            width={32}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="bx--btn__icon"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height={32}
                                                              preserveAspectRatio="xMidYMid meet"
                                                              viewBox="0 0 32 32"
                                                              width={32}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M16,4c6.6,0,12,5.4,12,12s-5.4,12-12,12S4,22.6,4,16S9.4,4,16,4 M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14	S23.7,2,16,2z"
                                                              />
                                                              <path
                                                                d="M24 15L17 15 17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17z"
                                                              />
                                                            </svg>
                                                          </Icon>
                                                        </ForwardRef(AddAlt32)>
                                                      </button>
                                                    </Button>
                                                  </div>
                                                </div>
                                              </FieldArray>
                                            </fieldset>
                                          </FormGroup>
                                        </FieldArray>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          condition={
                            Object {
                              "is": true,
                              "when": "image_update",
                            }
                          }
                          fields={
                            Array [
                              Object {
                                "component": "file-upload",
                                "label": "Custom Image File",
                                "name": "file_upload",
                                "type": "file",
                                "validate": Array [
                                  Object {
                                    "maxSize": 5000000,
                                    "type": "file",
                                  },
                                ],
                              },
                            ]
                          }
                          id="file_section"
                          key="file_section"
                          name="file_section"
                        >
                          <FormConditionWrapper
                            condition={
                              Object {
                                "is": true,
                                "when": "image_update",
                              }
                            }
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "file-upload",
                                    "label": "Custom Image File",
                                    "name": "file_upload",
                                    "type": "file",
                                    "validate": Array [
                                      Object {
                                        "maxSize": 5000000,
                                        "type": "file",
                                      },
                                    ],
                                  },
                                ],
                                "id": "file_section",
                                "name": "file_section",
                              }
                            }
                          >
                            <ConditionTriggerDetector
                              condition={
                                Object {
                                  "is": true,
                                  "when": "image_update",
                                }
                              }
                              field={
                                Object {
                                  "component": "sub-form",
                                  "fields": Array [
                                    Object {
                                      "component": "file-upload",
                                      "label": "Custom Image File",
                                      "name": "file_upload",
                                      "type": "file",
                                      "validate": Array [
                                        Object {
                                          "maxSize": 5000000,
                                          "type": "file",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "file_section",
                                  "name": "file_section",
                                }
                              }
                              triggers={
                                Array [
                                  "image_update",
                                ]
                              }
                            >
                              <ForwardRef(Field)
                                name="image_update"
                                subscription={
                                  Object {
                                    "value": true,
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "image_update",
                                    }
                                  }
                                  field={
                                    Object {
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "file-upload",
                                          "label": "Custom Image File",
                                          "name": "file_upload",
                                          "type": "file",
                                          "validate": Array [
                                            Object {
                                              "maxSize": 5000000,
                                              "type": "file",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "file_section",
                                      "name": "file_section",
                                    }
                                  }
                                  triggers={Array []}
                                  values={
                                    Object {
                                      "image_update": true,
                                    }
                                  }
                                >
                                  <ConditionTriggerWrapper
                                    condition={
                                      Object {
                                        "is": true,
                                        "when": "image_update",
                                      }
                                    }
                                    field={
                                      Object {
                                        "component": "sub-form",
                                        "fields": Array [
                                          Object {
                                            "component": "file-upload",
                                            "label": "Custom Image File",
                                            "name": "file_upload",
                                            "type": "file",
                                            "validate": Array [
                                              Object {
                                                "maxSize": 5000000,
                                                "type": "file",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "file_section",
                                        "name": "file_section",
                                      }
                                    }
                                    values={
                                      Object {
                                        "image_update": true,
                                      }
                                    }
                                  >
                                    <Component
                                      condition={
                                        Object {
                                          "is": true,
                                          "when": "image_update",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "file-upload",
                                              "label": "Custom Image File",
                                              "name": "file_upload",
                                              "type": "file",
                                              "validate": Array [
                                                Object {
                                                  "maxSize": 5000000,
                                                  "type": "file",
                                                },
                                              ],
                                            },
                                          ],
                                          "id": "file_section",
                                          "name": "file_section",
                                        }
                                      }
                                      values={
                                        Object {
                                          "image_update": true,
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <SubForm
                                          DescriptionElement="p"
                                          TitleElement="h3"
                                          component="sub-form"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "file-upload",
                                                "label": "Custom Image File",
                                                "name": "file_upload",
                                                "type": "file",
                                                "validate": Array [
                                                  Object {
                                                    "maxSize": 5000000,
                                                    "type": "file",
                                                  },
                                                ],
                                              },
                                            ]
                                          }
                                          id="file_section"
                                          name="file_section"
                                        >
                                          <div
                                            className=""
                                            id="file_section"
                                            name="file_section"
                                          >
                                            <SingleField
                                              component="file-upload"
                                              key="file_upload"
                                              label="Custom Image File"
                                              name="file_upload"
                                              type="file"
                                              validate={
                                                Array [
                                                  Object {
                                                    "maxSize": 5000000,
                                                    "type": "file",
                                                  },
                                                ]
                                              }
                                            >
                                              <FormConditionWrapper
                                                field={
                                                  Object {
                                                    "component": "file-upload",
                                                    "label": "Custom Image File",
                                                    "name": "file_upload",
                                                    "type": "file",
                                                    "validate": Array [
                                                      Object {
                                                        "maxSize": 5000000,
                                                        "type": "file",
                                                      },
                                                    ],
                                                  }
                                                }
                                              >
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FileUploadComponent
                                                    component="file-upload"
                                                    label="Custom Image File"
                                                    name="file_upload"
                                                    type="file"
                                                    validate={
                                                      Array [
                                                        Object {
                                                          "maxSize": 5000000,
                                                          "type": "file",
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <div
                                                      className="file-upload"
                                                    >
                                                      <label
                                                        className="bx--label"
                                                      >
                                                        Custom Image File
                                                      </label>
                                                      <br />
                                                      <label
                                                        className="file-upload-label"
                                                        disabled={true}
                                                      >
                                                        No File Chosen
                                                      </label>
                                                      <span
                                                        className="file-button"
                                                        tabIndex="0"
                                                      >
                                                        <label
                                                          className="file-button-label"
                                                          htmlFor="file_upload"
                                                        >
                                                          <span
                                                            className="buttonText"
                                                          >
                                                            Choose File
                                                          </span>
                                                          <input
                                                            className="file-upload-input"
                                                            id="file_upload"
                                                            name="file_upload"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            type="file"
                                                            value=""
                                                          />
                                                        </label>
                                                      </span>
                                                    </div>
                                                  </FileUploadComponent>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </SingleField>
                                          </div>
                                        </SubForm>
                                      </FormFieldHideWrapper>
                                    </Component>
                                  </ConditionTriggerWrapper>
                                </ConditionTriggerDetector>
                              </ForwardRef(Field)>
                            </ConditionTriggerDetector>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          condition={
                            Object {
                              "is": false,
                              "when": "image_update",
                            }
                          }
                          fields={
                            Array [
                              Object {
                                "component": "file-edit",
                                "description": "Delete File",
                                "label": "Current Custom Image File",
                                "name": "file_edit",
                                "src": "",
                              },
                            ]
                          }
                          id="edit_section"
                          key="edit_section"
                          name="edit_section"
                        >
                          <FormConditionWrapper
                            condition={
                              Object {
                                "is": false,
                                "when": "image_update",
                              }
                            }
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "file-edit",
                                    "description": "Delete File",
                                    "label": "Current Custom Image File",
                                    "name": "file_edit",
                                    "src": "",
                                  },
                                ],
                                "id": "edit_section",
                                "name": "edit_section",
                              }
                            }
                          >
                            <ConditionTriggerDetector
                              condition={
                                Object {
                                  "is": false,
                                  "when": "image_update",
                                }
                              }
                              field={
                                Object {
                                  "component": "sub-form",
                                  "fields": Array [
                                    Object {
                                      "component": "file-edit",
                                      "description": "Delete File",
                                      "label": "Current Custom Image File",
                                      "name": "file_edit",
                                      "src": "",
                                    },
                                  ],
                                  "id": "edit_section",
                                  "name": "edit_section",
                                }
                              }
                              triggers={
                                Array [
                                  "image_update",
                                ]
                              }
                            >
                              <ForwardRef(Field)
                                name="image_update"
                                subscription={
                                  Object {
                                    "value": true,
                                  }
                                }
                              >
                                <ConditionTriggerDetector
                                  condition={
                                    Object {
                                      "is": false,
                                      "when": "image_update",
                                    }
                                  }
                                  field={
                                    Object {
                                      "component": "sub-form",
                                      "fields": Array [
                                        Object {
                                          "component": "file-edit",
                                          "description": "Delete File",
                                          "label": "Current Custom Image File",
                                          "name": "file_edit",
                                          "src": "",
                                        },
                                      ],
                                      "id": "edit_section",
                                      "name": "edit_section",
                                    }
                                  }
                                  triggers={Array []}
                                  values={
                                    Object {
                                      "image_update": true,
                                    }
                                  }
                                >
                                  <ConditionTriggerWrapper
                                    condition={
                                      Object {
                                        "is": false,
                                        "when": "image_update",
                                      }
                                    }
                                    field={
                                      Object {
                                        "component": "sub-form",
                                        "fields": Array [
                                          Object {
                                            "component": "file-edit",
                                            "description": "Delete File",
                                            "label": "Current Custom Image File",
                                            "name": "file_edit",
                                            "src": "",
                                          },
                                        ],
                                        "id": "edit_section",
                                        "name": "edit_section",
                                      }
                                    }
                                    values={
                                      Object {
                                        "image_update": true,
                                      }
                                    }
                                  >
                                    <Component
                                      condition={
                                        Object {
                                          "is": false,
                                          "when": "image_update",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "sub-form",
                                          "fields": Array [
                                            Object {
                                              "component": "file-edit",
                                              "description": "Delete File",
                                              "label": "Current Custom Image File",
                                              "name": "file_edit",
                                              "src": "",
                                            },
                                          ],
                                          "id": "edit_section",
                                          "name": "edit_section",
                                        }
                                      }
                                      values={
                                        Object {
                                          "image_update": true,
                                        }
                                      }
                                    />
                                  </ConditionTriggerWrapper>
                                </ConditionTriggerDetector>
                              </ForwardRef(Field)>
                            </ConditionTriggerDetector>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="switch"
                          hideField={true}
                          key="image_update"
                          name="image_update"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "switch",
                                "name": "image_update",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={true}
                            >
                              <div
                                hidden={true}
                              >
                                <Switch
                                  component="switch"
                                  name="image_update"
                                >
                                  <div>
                                    <FeatureToggle(Toggle)
                                      id="image_update"
                                      key="image_update"
                                      name="image_update"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      toggled={true}
                                      type="checkbox"
                                    >
                                      <Toggle
                                        aria-label="Toggle"
                                        defaultToggled={false}
                                        id="image_update"
                                        labelA="Off"
                                        labelB="On"
                                        name="image_update"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onToggle={[Function]}
                                        toggled={true}
                                        type="checkbox"
                                      >
                                        <div
                                          className="bx--form-item"
                                        >
                                          <input
                                            aria-label={null}
                                            checked={true}
                                            className="bx--toggle-input"
                                            id="image_update"
                                            name="image_update"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyUp={[Function]}
                                            type="checkbox"
                                          />
                                          <label
                                            aria-label="Toggle"
                                            className="bx--toggle-input__label"
                                            htmlFor="image_update"
                                          >
                                            <span
                                              className="bx--toggle__switch"
                                            >
                                              <span
                                                aria-hidden="true"
                                                className="bx--toggle__text--off"
                                              >
                                                Off
                                              </span>
                                              <span
                                                aria-hidden="true"
                                                className="bx--toggle__text--on"
                                              >
                                                On
                                              </span>
                                            </span>
                                          </label>
                                        </div>
                                      </Toggle>
                                    </FeatureToggle(Toggle)>
                                    <HelperTextBlock />
                                  </div>
                                </Switch>
                              </div>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="spy-field"
                          key="spy-field"
                          name="spy-field"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "spy-field",
                                "initialize": undefined,
                                "name": "spy-field",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SpyField
                                component="spy-field"
                                name="spy-field"
                              >
                                <FormSpy
                                  onChange={[Function]}
                                  subscription={
                                    Object {
                                      "pristine": true,
                                      "valid": true,
                                    }
                                  }
                                />
                              </SpyField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <FormSpy>
                          <FormControls
                            Button={[Function]}
                            ButtonGroup={[Function]}
                            FormSpy={[Function]}
                            buttonOrder={
                              Array [
                                "submit",
                                "reset",
                                "cancel",
                              ]
                            }
                            canReset={true}
                            cancelLabel="Cancel"
                            disableSubmit={true}
                            formFields={
                              Array [
                                <SingleField
                                  component="text-field"
                                  id="name"
                                  isRequired={true}
                                  label="Name"
                                  maxLength={255}
                                  name="name"
                                  validate={
                                    Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ]
                                  }
                                />,
                                <SingleField
                                  component="text-field"
                                  id="description"
                                  isRequired={true}
                                  label="Description"
                                  maxLength={255}
                                  name="description"
                                  validate={
                                    Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ]
                                  }
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "attributes_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "component": "select",
                                            "includeEmpty": true,
                                            "label": "Type",
                                            "loadOptions": [Function],
                                            "name": "type",
                                            "placeholder": "<Choose>",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "attributes",
                                        "label": "Attributes",
                                        "name": "attributes",
                                        "noItemsMessage": "None",
                                      },
                                    ]
                                  }
                                  id="generic-objects-field-array-attributes"
                                  name="generic-objects-field-array-attributes"
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "associations_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "className": "class",
                                            "component": "select",
                                            "id": "class",
                                            "isSearchable": true,
                                            "label": "Class",
                                            "name": "class",
                                            "options": Array [
                                              Object {
                                                "label": "Bottleneck Event",
                                                "value": "BottleneckEvent",
                                              },
                                              Object {
                                                "label": "Performance - Container Project",
                                                "value": "ContainerProjectPerformance",
                                              },
                                            ],
                                            "placeholder": "<Choose>",
                                            "simpleValue": true,
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "associations",
                                        "label": "Associations",
                                        "name": "associations",
                                        "noItemsMessage": "None",
                                      },
                                    ]
                                  }
                                  id="generic-objects-field-array-associations"
                                  name="generic-objects-field-array-associations"
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "methods_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "methods",
                                        "label": "Methods",
                                        "name": "methods",
                                        "noItemsMessage": "None",
                                      },
                                    ]
                                  }
                                  id="generic-objects-field-array-methods"
                                  name="generic-objects-field-array-methods"
                                />,
                                <SingleField
                                  component="sub-form"
                                  condition={
                                    Object {
                                      "is": true,
                                      "when": "image_update",
                                    }
                                  }
                                  fields={
                                    Array [
                                      Object {
                                        "component": "file-upload",
                                        "label": "Custom Image File",
                                        "name": "file_upload",
                                        "type": "file",
                                        "validate": Array [
                                          Object {
                                            "maxSize": 5000000,
                                            "type": "file",
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                  id="file_section"
                                  name="file_section"
                                />,
                                <SingleField
                                  component="sub-form"
                                  condition={
                                    Object {
                                      "is": false,
                                      "when": "image_update",
                                    }
                                  }
                                  fields={
                                    Array [
                                      Object {
                                        "component": "file-edit",
                                        "description": "Delete File",
                                        "label": "Current Custom Image File",
                                        "name": "file_edit",
                                        "src": "",
                                      },
                                    ]
                                  }
                                  id="edit_section"
                                  name="edit_section"
                                />,
                                <SingleField
                                  component="switch"
                                  hideField={true}
                                  name="image_update"
                                />,
                                <SingleField
                                  component="spy-field"
                                  name="spy-field"
                                />,
                              ]
                            }
                            formSpyProps={
                              Object {
                                "active": undefined,
                                "dirty": false,
                                "dirtyFields": Object {},
                                "dirtyFieldsSinceLastSubmit": Object {
                                  "associations": true,
                                  "associations[0].associations_name": true,
                                  "associations[0].class": true,
                                  "associations[1].associations_name": true,
                                  "associations[1].class": true,
                                  "attributes": true,
                                  "attributes[0].attributes_name": true,
                                  "attributes[0].type": true,
                                  "description": true,
                                  "image_update": true,
                                  "methods": true,
                                  "methods[0].methods_name": true,
                                  "name": true,
                                },
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "errors": Object {
                                  "associations": Array [],
                                  "attributes": Array [],
                                  "methods": Array [],
                                },
                                "form": Object {
                                  "batch": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "destroyOnUnregister": false,
                                  "focus": [Function],
                                  "getFieldState": [Function],
                                  "getRegisteredFields": [Function],
                                  "getState": [Function],
                                  "initialize": [Function],
                                  "isValidationPaused": [Function],
                                  "mutators": Object {
                                    "concat": [Function],
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeBatch": [Function],
                                    "shift": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                    "update": [Function],
                                  },
                                  "pauseValidation": [Function],
                                  "registerField": [Function],
                                  "reset": [Function],
                                  "resetFieldState": [Function],
                                  "restart": [Function],
                                  "resumeValidation": [Function],
                                  "setConfig": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "hasSubmitErrors": false,
                                "hasValidationErrors": false,
                                "initialValues": Object {
                                  "associations": Array [
                                    Object {
                                      "associations_name": "bottle_neck",
                                      "class": "BottleneckEvent",
                                    },
                                    Object {
                                      "associations_name": "project",
                                      "class": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "attributes": Array [
                                    Object {
                                      "attributes_name": "this_is_a_string",
                                      "type": "string",
                                    },
                                  ],
                                  "description": "this is a test",
                                  "image_update": true,
                                  "methods": Array [
                                    Object {
                                      "methods_name": "method",
                                    },
                                  ],
                                  "name": "Generic Object",
                                },
                                "invalid": false,
                                "modified": Object {
                                  "associations": false,
                                  "associations[0].associations_name": false,
                                  "associations[0].class": false,
                                  "associations[1].associations_name": false,
                                  "associations[1].class": false,
                                  "attributes": false,
                                  "attributes[0].attributes_name": false,
                                  "attributes[0].type": false,
                                  "description": false,
                                  "file_upload": false,
                                  "image_update": false,
                                  "methods": false,
                                  "methods[0].methods_name": false,
                                  "name": false,
                                },
                                "modifiedSinceLastSubmit": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitErrors": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "touched": Object {
                                  "associations": false,
                                  "associations[0].associations_name": false,
                                  "associations[0].class": false,
                                  "associations[1].associations_name": false,
                                  "associations[1].class": false,
                                  "attributes": false,
                                  "attributes[0].attributes_name": false,
                                  "attributes[0].type": false,
                                  "description": false,
                                  "file_upload": false,
                                  "image_update": false,
                                  "methods": false,
                                  "methods[0].methods_name": false,
                                  "name": false,
                                },
                                "valid": true,
                                "validating": false,
                                "values": Object {
                                  "associations": Array [
                                    Object {
                                      "associations_name": "bottle_neck",
                                      "class": "BottleneckEvent",
                                    },
                                    Object {
                                      "associations_name": "project",
                                      "class": "ContainerProjectPerformance",
                                    },
                                  ],
                                  "attributes": Array [
                                    Object {
                                      "attributes_name": "this_is_a_string",
                                      "type": "string",
                                    },
                                  ],
                                  "description": "this is a test",
                                  "image_update": true,
                                  "methods": Array [
                                    Object {
                                      "methods_name": "method",
                                    },
                                  ],
                                  "name": "Generic Object",
                                },
                                "visited": Object {
                                  "associations": false,
                                  "associations[0].associations_name": false,
                                  "associations[0].class": false,
                                  "associations[1].associations_name": false,
                                  "associations[1].class": false,
                                  "attributes": false,
                                  "attributes[0].attributes_name": false,
                                  "attributes[0].type": false,
                                  "description": false,
                                  "file_upload": false,
                                  "image_update": false,
                                  "methods": false,
                                  "methods[0].methods_name": false,
                                  "name": false,
                                },
                              }
                            }
                            onCancel={[Function]}
                            onReset={[Function]}
                            resetLabel="Reset"
                            schema={
                              Object {
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "id": "name",
                                    "isRequired": true,
                                    "label": "Name",
                                    "maxLength": 255,
                                    "name": "name",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "description",
                                    "isRequired": true,
                                    "label": "Description",
                                    "maxLength": 255,
                                    "name": "description",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "attributes_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "component": "select",
                                            "includeEmpty": true,
                                            "label": "Type",
                                            "loadOptions": [Function],
                                            "name": "type",
                                            "placeholder": "<Choose>",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "attributes",
                                        "label": "Attributes",
                                        "name": "attributes",
                                        "noItemsMessage": "None",
                                      },
                                    ],
                                    "id": "generic-objects-field-array-attributes",
                                    "key": "generic-objects-field-array-attributes",
                                    "name": "generic-objects-field-array-attributes",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "associations_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                          Object {
                                            "className": "class",
                                            "component": "select",
                                            "id": "class",
                                            "isSearchable": true,
                                            "label": "Class",
                                            "name": "class",
                                            "options": Array [
                                              Object {
                                                "label": "Bottleneck Event",
                                                "value": "BottleneckEvent",
                                              },
                                              Object {
                                                "label": "Performance - Container Project",
                                                "value": "ContainerProjectPerformance",
                                              },
                                            ],
                                            "placeholder": "<Choose>",
                                            "simpleValue": true,
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "associations",
                                        "label": "Associations",
                                        "name": "associations",
                                        "noItemsMessage": "None",
                                      },
                                    ],
                                    "id": "generic-objects-field-array-associations",
                                    "key": "generic-objects-field-array-associations",
                                    "name": "generic-objects-field-array-associations",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "AddButtonProps": Object {
                                          "size": "small",
                                        },
                                        "RemoveButtonProps": Object {
                                          "size": "small",
                                        },
                                        "buttonLabels": Object {
                                          "add": "Add",
                                          "remove": "Remove",
                                        },
                                        "component": "field-array",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "label": "Name",
                                            "name": "methods_name",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                              Object {
                                                "type": "syntax",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "methods",
                                        "label": "Methods",
                                        "name": "methods",
                                        "noItemsMessage": "None",
                                      },
                                    ],
                                    "id": "generic-objects-field-array-methods",
                                    "key": "generic-objects-field-array-methods",
                                    "name": "generic-objects-field-array-methods",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "condition": Object {
                                      "is": true,
                                      "when": "image_update",
                                    },
                                    "fields": Array [
                                      Object {
                                        "component": "file-upload",
                                        "label": "Custom Image File",
                                        "name": "file_upload",
                                        "type": "file",
                                        "validate": Array [
                                          Object {
                                            "maxSize": 5000000,
                                            "type": "file",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "file_section",
                                    "name": "file_section",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "condition": Object {
                                      "is": false,
                                      "when": "image_update",
                                    },
                                    "fields": Array [
                                      Object {
                                        "component": "file-edit",
                                        "description": "Delete File",
                                        "label": "Current Custom Image File",
                                        "name": "file_edit",
                                        "src": "",
                                      },
                                    ],
                                    "id": "edit_section",
                                    "name": "edit_section",
                                  },
                                  Object {
                                    "component": "switch",
                                    "hideField": true,
                                    "name": "image_update",
                                  },
                                  Object {
                                    "component": "spy-field",
                                    "initialize": undefined,
                                    "name": "spy-field",
                                  },
                                ],
                              }
                            }
                            submitLabel="Save"
                          >
                            <ButtonGroup>
                              <ButtonSet
                                className=""
                              >
                                <div
                                  className="bx--btn-set"
                                >
                                  <Button
                                    buttonType="submit"
                                    disabled={true}
                                    key="form-submit"
                                    label="Save"
                                    type="submit"
                                    variant="primary"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="primary"
                                      type="submit"
                                      variant="primary"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--primary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="submit"
                                        variant="primary"
                                      >
                                        Save
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="reset"
                                    disabled={true}
                                    key="form-reset"
                                    label="Reset"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Reset
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="cancel"
                                    key="form-cancel"
                                    label="Cancel"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Cancel
                                      </button>
                                    </Button>
                                  </Button>
                                </div>
                              </ButtonSet>
                            </ButtonGroup>
                          </FormControls>
                        </FormSpy>
                         
                      </form>
                    </Form>
                  </Form>
                </FormTemplate>
              </WrappedFormTemplate>
            </Component>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </GenericObjectForm>
</Provider>
`;
