// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`evacuate form component should render evacuate form when hosts empty 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <EvacuateForm
    recordId="40"
  >
    <Connect(MiqFormRenderer)
      buttonsLabels={
        Object {
          "submitLabel": "Submit",
        }
      }
      canReset={false}
      className="evacuate_form"
      disableSubmit={
        Array [
          "invalid",
        ]
      }
      initialValues={
        Object {
          "auto_select_host": true,
          "on_shared_storage": true,
        }
      }
      onCancel={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "component": "checkbox",
                  "id": "auto_select_host",
                  "isDisabled": true,
                  "label": "Auto-select Host?",
                  "name": "auto_select_host",
                  "validateOnMount": true,
                },
                Object {
                  "component": "checkbox",
                  "id": "on_shared_storage",
                  "label": "On Shared Storage",
                  "name": "on_shared_storage",
                  "validateOnMount": true,
                },
                Object {
                  "component": "password-field",
                  "condition": Object {
                    "is": false,
                    "when": "on_shared_storage",
                  },
                  "id": "admin_password",
                  "isRequired": true,
                  "label": "Admin Password",
                  "name": "admin_password",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "select",
                  "condition": Object {
                    "is": false,
                    "when": "auto_select_host",
                  },
                  "id": "destination_host",
                  "includeEmpty": true,
                  "isRequired": true,
                  "labelText": "Hosts",
                  "name": "destination_host",
                  "options": Array [],
                  "placeholder": "<Choose>",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
              ],
              "name": "EvacuateInstance",
              "title": "Evacuate Host",
            },
          ],
        }
      }
    >
      <MiqFormRenderer
        buttonsLabels={
          Object {
            "submitLabel": "Submit",
          }
        }
        canReset={false}
        className="evacuate_form"
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "auto_select_host": true,
            "on_shared_storage": true,
          }
        }
        onCancel={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "component": "checkbox",
                    "id": "auto_select_host",
                    "isDisabled": true,
                    "label": "Auto-select Host?",
                    "name": "auto_select_host",
                    "validateOnMount": true,
                  },
                  Object {
                    "component": "checkbox",
                    "id": "on_shared_storage",
                    "label": "On Shared Storage",
                    "name": "on_shared_storage",
                    "validateOnMount": true,
                  },
                  Object {
                    "component": "password-field",
                    "condition": Object {
                      "is": false,
                      "when": "on_shared_storage",
                    },
                    "id": "admin_password",
                    "isRequired": true,
                    "label": "Admin Password",
                    "name": "admin_password",
                    "validate": Array [
                      Object {
                        "type": "required",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "condition": Object {
                      "is": false,
                      "when": "auto_select_host",
                    },
                    "id": "destination_host",
                    "includeEmpty": true,
                    "isRequired": true,
                    "labelText": "Hosts",
                    "name": "destination_host",
                    "options": Array [],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "type": "required",
                      },
                    ],
                  },
                ],
                "name": "EvacuateInstance",
                "title": "Evacuate Host",
              },
            ],
          }
        }
        showFormControls={true}
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "auto_select_host": true,
              "on_shared_storage": true,
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "component": "checkbox",
                      "id": "auto_select_host",
                      "isDisabled": true,
                      "label": "Auto-select Host?",
                      "name": "auto_select_host",
                      "validateOnMount": true,
                    },
                    Object {
                      "component": "checkbox",
                      "id": "on_shared_storage",
                      "label": "On Shared Storage",
                      "name": "on_shared_storage",
                      "validateOnMount": true,
                    },
                    Object {
                      "component": "password-field",
                      "condition": Object {
                        "is": false,
                        "when": "on_shared_storage",
                      },
                      "id": "admin_password",
                      "isRequired": true,
                      "label": "Admin Password",
                      "name": "admin_password",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "condition": Object {
                        "is": false,
                        "when": "auto_select_host",
                      },
                      "id": "destination_host",
                      "includeEmpty": true,
                      "isRequired": true,
                      "labelText": "Hosts",
                      "name": "destination_host",
                      "options": Array [],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                  "name": "EvacuateInstance",
                  "title": "Evacuate Host",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "auto_select_host": true,
                "on_shared_storage": true,
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <Component
              formFields={
                Array [
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "component": "checkbox",
                          "id": "auto_select_host",
                          "isDisabled": true,
                          "label": "Auto-select Host?",
                          "name": "auto_select_host",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "checkbox",
                          "id": "on_shared_storage",
                          "label": "On Shared Storage",
                          "name": "on_shared_storage",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "password-field",
                          "condition": Object {
                            "is": false,
                            "when": "on_shared_storage",
                          },
                          "id": "admin_password",
                          "isRequired": true,
                          "label": "Admin Password",
                          "name": "admin_password",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": false,
                            "when": "auto_select_host",
                          },
                          "id": "destination_host",
                          "includeEmpty": true,
                          "isRequired": true,
                          "labelText": "Hosts",
                          "name": "destination_host",
                          "options": Array [],
                          "placeholder": "<Choose>",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ]
                    }
                    name="EvacuateInstance"
                    title="Evacuate Host"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "component": "checkbox",
                          "id": "auto_select_host",
                          "isDisabled": true,
                          "label": "Auto-select Host?",
                          "name": "auto_select_host",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "checkbox",
                          "id": "on_shared_storage",
                          "label": "On Shared Storage",
                          "name": "on_shared_storage",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "password-field",
                          "condition": Object {
                            "is": false,
                            "when": "on_shared_storage",
                          },
                          "id": "admin_password",
                          "isRequired": true,
                          "label": "Admin Password",
                          "name": "admin_password",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": false,
                            "when": "auto_select_host",
                          },
                          "id": "destination_host",
                          "includeEmpty": true,
                          "isRequired": true,
                          "labelText": "Hosts",
                          "name": "destination_host",
                          "options": Array [],
                          "placeholder": "<Choose>",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ],
                      "name": "EvacuateInstance",
                      "title": "Evacuate Host",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <WrappedFormTemplate
                canReset={false}
                cancelLabel="Cancel"
                disableSubmit={
                  Array [
                    "invalid",
                  ]
                }
                formFields={
                  Array [
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "component": "checkbox",
                            "id": "auto_select_host",
                            "isDisabled": true,
                            "label": "Auto-select Host?",
                            "name": "auto_select_host",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "checkbox",
                            "id": "on_shared_storage",
                            "label": "On Shared Storage",
                            "name": "on_shared_storage",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "password-field",
                            "condition": Object {
                              "is": false,
                              "when": "on_shared_storage",
                            },
                            "id": "admin_password",
                            "isRequired": true,
                            "label": "Admin Password",
                            "name": "admin_password",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": false,
                              "when": "auto_select_host",
                            },
                            "id": "destination_host",
                            "includeEmpty": true,
                            "isRequired": true,
                            "labelText": "Hosts",
                            "name": "destination_host",
                            "options": Array [],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                        ]
                      }
                      name="EvacuateInstance"
                      title="Evacuate Host"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                formWrapperProps={
                  Object {
                    "className": "evacuate_form",
                  }
                }
                resetLabel="Reset"
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "component": "checkbox",
                            "id": "auto_select_host",
                            "isDisabled": true,
                            "label": "Auto-select Host?",
                            "name": "auto_select_host",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "checkbox",
                            "id": "on_shared_storage",
                            "label": "On Shared Storage",
                            "name": "on_shared_storage",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "password-field",
                            "condition": Object {
                              "is": false,
                              "when": "on_shared_storage",
                            },
                            "id": "admin_password",
                            "isRequired": true,
                            "label": "Admin Password",
                            "name": "admin_password",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": false,
                              "when": "auto_select_host",
                            },
                            "id": "destination_host",
                            "includeEmpty": true,
                            "isRequired": true,
                            "labelText": "Hosts",
                            "name": "destination_host",
                            "options": Array [],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                        ],
                        "name": "EvacuateInstance",
                        "title": "Evacuate Host",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
                showFormControls={true}
                submitLabel="Submit"
              >
                <FormTemplate
                  Button={[Function]}
                  ButtonGroup={[Function]}
                  Description={[Function]}
                  FormWrapper={[Function]}
                  Header={[Function]}
                  Title={[Function]}
                  buttonOrder={
                    Array [
                      "submit",
                      "reset",
                      "cancel",
                    ]
                  }
                  canReset={false}
                  cancelLabel="Cancel"
                  disableSubmit={
                    Array [
                      "invalid",
                    ]
                  }
                  formFields={
                    Array [
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "component": "checkbox",
                              "id": "auto_select_host",
                              "isDisabled": true,
                              "label": "Auto-select Host?",
                              "name": "auto_select_host",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "checkbox",
                              "id": "on_shared_storage",
                              "label": "On Shared Storage",
                              "name": "on_shared_storage",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "password-field",
                              "condition": Object {
                                "is": false,
                                "when": "on_shared_storage",
                              },
                              "id": "admin_password",
                              "isRequired": true,
                              "label": "Admin Password",
                              "name": "admin_password",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "condition": Object {
                                "is": false,
                                "when": "auto_select_host",
                              },
                              "id": "destination_host",
                              "includeEmpty": true,
                              "isRequired": true,
                              "labelText": "Hosts",
                              "name": "destination_host",
                              "options": Array [],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ]
                        }
                        name="EvacuateInstance"
                        title="Evacuate Host"
                      />,
                      <SingleField
                        component="spy-field"
                        name="spy-field"
                      />,
                    ]
                  }
                  formWrapperProps={
                    Object {
                      "className": "evacuate_form",
                    }
                  }
                  resetLabel="Reset"
                  schema={
                    Object {
                      "fields": Array [
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "component": "checkbox",
                              "id": "auto_select_host",
                              "isDisabled": true,
                              "label": "Auto-select Host?",
                              "name": "auto_select_host",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "checkbox",
                              "id": "on_shared_storage",
                              "label": "On Shared Storage",
                              "name": "on_shared_storage",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "password-field",
                              "condition": Object {
                                "is": false,
                                "when": "on_shared_storage",
                              },
                              "id": "admin_password",
                              "isRequired": true,
                              "label": "Admin Password",
                              "name": "admin_password",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "condition": Object {
                                "is": false,
                                "when": "auto_select_host",
                              },
                              "id": "destination_host",
                              "includeEmpty": true,
                              "isRequired": true,
                              "labelText": "Hosts",
                              "name": "destination_host",
                              "options": Array [],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "name": "EvacuateInstance",
                          "title": "Evacuate Host",
                        },
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        },
                      ],
                    }
                  }
                  showFormControls={true}
                  submitLabel="Submit"
                >
                  <Form
                    className="evacuate_form"
                    onSubmit={[Function]}
                  >
                    <Form
                      className="form-0-2-3 evacuate_form"
                      noValidate={true}
                      onSubmit={[Function]}
                    >
                      <form
                        className="bx--form form-0-2-3 evacuate_form"
                        noValidate={true}
                        onSubmit={[Function]}
                      >
                         
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "component": "checkbox",
                                "id": "auto_select_host",
                                "isDisabled": true,
                                "label": "Auto-select Host?",
                                "name": "auto_select_host",
                                "validateOnMount": true,
                              },
                              Object {
                                "component": "checkbox",
                                "id": "on_shared_storage",
                                "label": "On Shared Storage",
                                "name": "on_shared_storage",
                                "validateOnMount": true,
                              },
                              Object {
                                "component": "password-field",
                                "condition": Object {
                                  "is": false,
                                  "when": "on_shared_storage",
                                },
                                "id": "admin_password",
                                "isRequired": true,
                                "label": "Admin Password",
                                "name": "admin_password",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": false,
                                  "when": "auto_select_host",
                                },
                                "id": "destination_host",
                                "includeEmpty": true,
                                "isRequired": true,
                                "labelText": "Hosts",
                                "name": "destination_host",
                                "options": Array [],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ]
                          }
                          key="EvacuateInstance"
                          name="EvacuateInstance"
                          title="Evacuate Host"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "checkbox",
                                    "id": "auto_select_host",
                                    "isDisabled": true,
                                    "label": "Auto-select Host?",
                                    "name": "auto_select_host",
                                    "validateOnMount": true,
                                  },
                                  Object {
                                    "component": "checkbox",
                                    "id": "on_shared_storage",
                                    "label": "On Shared Storage",
                                    "name": "on_shared_storage",
                                    "validateOnMount": true,
                                  },
                                  Object {
                                    "component": "password-field",
                                    "condition": Object {
                                      "is": false,
                                      "when": "on_shared_storage",
                                    },
                                    "id": "admin_password",
                                    "isRequired": true,
                                    "label": "Admin Password",
                                    "name": "admin_password",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": false,
                                      "when": "auto_select_host",
                                    },
                                    "id": "destination_host",
                                    "includeEmpty": true,
                                    "isRequired": true,
                                    "labelText": "Hosts",
                                    "name": "destination_host",
                                    "options": Array [],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                ],
                                "name": "EvacuateInstance",
                                "title": "Evacuate Host",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "component": "checkbox",
                                      "id": "auto_select_host",
                                      "isDisabled": true,
                                      "label": "Auto-select Host?",
                                      "name": "auto_select_host",
                                      "validateOnMount": true,
                                    },
                                    Object {
                                      "component": "checkbox",
                                      "id": "on_shared_storage",
                                      "label": "On Shared Storage",
                                      "name": "on_shared_storage",
                                      "validateOnMount": true,
                                    },
                                    Object {
                                      "component": "password-field",
                                      "condition": Object {
                                        "is": false,
                                        "when": "on_shared_storage",
                                      },
                                      "id": "admin_password",
                                      "isRequired": true,
                                      "label": "Admin Password",
                                      "name": "admin_password",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "condition": Object {
                                        "is": false,
                                        "when": "auto_select_host",
                                      },
                                      "id": "destination_host",
                                      "includeEmpty": true,
                                      "isRequired": true,
                                      "labelText": "Hosts",
                                      "name": "destination_host",
                                      "options": Array [],
                                      "placeholder": "<Choose>",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                  ]
                                }
                                name="EvacuateInstance"
                                title="Evacuate Host"
                              >
                                <div
                                  className=""
                                  name="EvacuateInstance"
                                >
                                  <div>
                                    <h3>
                                      Evacuate Host
                                    </h3>
                                  </div>
                                  <SingleField
                                    component="checkbox"
                                    id="auto_select_host"
                                    isDisabled={true}
                                    key="auto_select_host"
                                    label="Auto-select Host?"
                                    name="auto_select_host"
                                    validateOnMount={true}
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "component": "checkbox",
                                          "id": "auto_select_host",
                                          "isDisabled": true,
                                          "label": "Auto-select Host?",
                                          "name": "auto_select_host",
                                          "validateOnMount": true,
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <Checkbox
                                          component="checkbox"
                                          id="auto_select_host"
                                          isDisabled={true}
                                          label="Auto-select Host?"
                                          name="auto_select_host"
                                          validateOnMount={true}
                                        >
                                          <SingleCheckbox
                                            component="checkbox"
                                            id="auto_select_host"
                                            isDisabled={true}
                                            label="Auto-select Host?"
                                            name="auto_select_host"
                                            validateOnMount={true}
                                          >
                                            <div>
                                              <Checkbox
                                                checked={true}
                                                disabled={true}
                                                id="auto_select_host"
                                                indeterminate={false}
                                                labelText="Auto-select Host?"
                                                name="auto_select_host"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                type="checkbox"
                                              >
                                                <div
                                                  className="bx--form-item bx--checkbox-wrapper"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="bx--checkbox"
                                                    disabled={true}
                                                    id="auto_select_host"
                                                    name="auto_select_host"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <label
                                                    className="bx--checkbox-label"
                                                    htmlFor="auto_select_host"
                                                    title={null}
                                                  >
                                                    <Text
                                                      className="bx--checkbox-label-text"
                                                    >
                                                      <span
                                                        className="bx--checkbox-label-text"
                                                        dir="auto"
                                                      >
                                                        Auto-select Host?
                                                      </span>
                                                    </Text>
                                                  </label>
                                                </div>
                                              </Checkbox>
                                              <HelperTextBlock />
                                            </div>
                                          </SingleCheckbox>
                                        </Checkbox>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                  <SingleField
                                    component="checkbox"
                                    id="on_shared_storage"
                                    key="on_shared_storage"
                                    label="On Shared Storage"
                                    name="on_shared_storage"
                                    validateOnMount={true}
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "component": "checkbox",
                                          "id": "on_shared_storage",
                                          "label": "On Shared Storage",
                                          "name": "on_shared_storage",
                                          "validateOnMount": true,
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <Checkbox
                                          component="checkbox"
                                          id="on_shared_storage"
                                          label="On Shared Storage"
                                          name="on_shared_storage"
                                          validateOnMount={true}
                                        >
                                          <SingleCheckbox
                                            component="checkbox"
                                            id="on_shared_storage"
                                            label="On Shared Storage"
                                            name="on_shared_storage"
                                            validateOnMount={true}
                                          >
                                            <div>
                                              <Checkbox
                                                checked={true}
                                                id="on_shared_storage"
                                                indeterminate={false}
                                                labelText="On Shared Storage"
                                                name="on_shared_storage"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                type="checkbox"
                                              >
                                                <div
                                                  className="bx--form-item bx--checkbox-wrapper"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="bx--checkbox"
                                                    id="on_shared_storage"
                                                    name="on_shared_storage"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <label
                                                    className="bx--checkbox-label"
                                                    htmlFor="on_shared_storage"
                                                    title={null}
                                                  >
                                                    <Text
                                                      className="bx--checkbox-label-text"
                                                    >
                                                      <span
                                                        className="bx--checkbox-label-text"
                                                        dir="auto"
                                                      >
                                                        On Shared Storage
                                                      </span>
                                                    </Text>
                                                  </label>
                                                </div>
                                              </Checkbox>
                                              <HelperTextBlock />
                                            </div>
                                          </SingleCheckbox>
                                        </Checkbox>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                  <SingleField
                                    component="password-field"
                                    condition={
                                      Object {
                                        "is": false,
                                        "when": "on_shared_storage",
                                      }
                                    }
                                    id="admin_password"
                                    isRequired={true}
                                    key="admin_password"
                                    label="Admin Password"
                                    name="admin_password"
                                    validate={
                                      Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ]
                                    }
                                  >
                                    <FormConditionWrapper
                                      condition={
                                        Object {
                                          "is": false,
                                          "when": "on_shared_storage",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "password-field",
                                          "id": "admin_password",
                                          "isRequired": true,
                                          "label": "Admin Password",
                                          "name": "admin_password",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        }
                                      }
                                    >
                                      <ConditionTriggerDetector
                                        condition={
                                          Object {
                                            "is": false,
                                            "when": "on_shared_storage",
                                          }
                                        }
                                        field={
                                          Object {
                                            "component": "password-field",
                                            "id": "admin_password",
                                            "isRequired": true,
                                            "label": "Admin Password",
                                            "name": "admin_password",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          }
                                        }
                                        triggers={
                                          Array [
                                            "on_shared_storage",
                                          ]
                                        }
                                      >
                                        <ForwardRef(Field)
                                          name="on_shared_storage"
                                          subscription={
                                            Object {
                                              "value": true,
                                            }
                                          }
                                        >
                                          <ConditionTriggerDetector
                                            condition={
                                              Object {
                                                "is": false,
                                                "when": "on_shared_storage",
                                              }
                                            }
                                            field={
                                              Object {
                                                "component": "password-field",
                                                "id": "admin_password",
                                                "isRequired": true,
                                                "label": "Admin Password",
                                                "name": "admin_password",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              }
                                            }
                                            triggers={Array []}
                                            values={
                                              Object {
                                                "on_shared_storage": true,
                                              }
                                            }
                                          >
                                            <ConditionTriggerWrapper
                                              condition={
                                                Object {
                                                  "is": false,
                                                  "when": "on_shared_storage",
                                                }
                                              }
                                              field={
                                                Object {
                                                  "component": "password-field",
                                                  "id": "admin_password",
                                                  "isRequired": true,
                                                  "label": "Admin Password",
                                                  "name": "admin_password",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                }
                                              }
                                              values={
                                                Object {
                                                  "on_shared_storage": true,
                                                }
                                              }
                                            >
                                              <Component
                                                condition={
                                                  Object {
                                                    "is": false,
                                                    "when": "on_shared_storage",
                                                  }
                                                }
                                                field={
                                                  Object {
                                                    "component": "password-field",
                                                    "id": "admin_password",
                                                    "isRequired": true,
                                                    "label": "Admin Password",
                                                    "name": "admin_password",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  }
                                                }
                                                values={
                                                  Object {
                                                    "on_shared_storage": true,
                                                  }
                                                }
                                              />
                                            </ConditionTriggerWrapper>
                                          </ConditionTriggerDetector>
                                        </ForwardRef(Field)>
                                      </ConditionTriggerDetector>
                                    </FormConditionWrapper>
                                  </SingleField>
                                  <SingleField
                                    component="select"
                                    condition={
                                      Object {
                                        "is": false,
                                        "when": "auto_select_host",
                                      }
                                    }
                                    id="destination_host"
                                    includeEmpty={true}
                                    isRequired={true}
                                    key="destination_host"
                                    labelText="Hosts"
                                    name="destination_host"
                                    options={Array []}
                                    placeholder="<Choose>"
                                    validate={
                                      Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ]
                                    }
                                  >
                                    <FormConditionWrapper
                                      condition={
                                        Object {
                                          "is": false,
                                          "when": "auto_select_host",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "select",
                                          "id": "destination_host",
                                          "includeEmpty": true,
                                          "isRequired": true,
                                          "labelText": "Hosts",
                                          "name": "destination_host",
                                          "options": Array [],
                                          "placeholder": "<Choose>",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        }
                                      }
                                    >
                                      <ConditionTriggerDetector
                                        condition={
                                          Object {
                                            "is": false,
                                            "when": "auto_select_host",
                                          }
                                        }
                                        field={
                                          Object {
                                            "component": "select",
                                            "id": "destination_host",
                                            "includeEmpty": true,
                                            "isRequired": true,
                                            "labelText": "Hosts",
                                            "name": "destination_host",
                                            "options": Array [],
                                            "placeholder": "<Choose>",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          }
                                        }
                                        triggers={
                                          Array [
                                            "auto_select_host",
                                          ]
                                        }
                                      >
                                        <ForwardRef(Field)
                                          name="auto_select_host"
                                          subscription={
                                            Object {
                                              "value": true,
                                            }
                                          }
                                        >
                                          <ConditionTriggerDetector
                                            condition={
                                              Object {
                                                "is": false,
                                                "when": "auto_select_host",
                                              }
                                            }
                                            field={
                                              Object {
                                                "component": "select",
                                                "id": "destination_host",
                                                "includeEmpty": true,
                                                "isRequired": true,
                                                "labelText": "Hosts",
                                                "name": "destination_host",
                                                "options": Array [],
                                                "placeholder": "<Choose>",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              }
                                            }
                                            triggers={Array []}
                                            values={
                                              Object {
                                                "auto_select_host": true,
                                              }
                                            }
                                          >
                                            <ConditionTriggerWrapper
                                              condition={
                                                Object {
                                                  "is": false,
                                                  "when": "auto_select_host",
                                                }
                                              }
                                              field={
                                                Object {
                                                  "component": "select",
                                                  "id": "destination_host",
                                                  "includeEmpty": true,
                                                  "isRequired": true,
                                                  "labelText": "Hosts",
                                                  "name": "destination_host",
                                                  "options": Array [],
                                                  "placeholder": "<Choose>",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                }
                                              }
                                              values={
                                                Object {
                                                  "auto_select_host": true,
                                                }
                                              }
                                            >
                                              <Component
                                                condition={
                                                  Object {
                                                    "is": false,
                                                    "when": "auto_select_host",
                                                  }
                                                }
                                                field={
                                                  Object {
                                                    "component": "select",
                                                    "id": "destination_host",
                                                    "includeEmpty": true,
                                                    "isRequired": true,
                                                    "labelText": "Hosts",
                                                    "name": "destination_host",
                                                    "options": Array [],
                                                    "placeholder": "<Choose>",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  }
                                                }
                                                values={
                                                  Object {
                                                    "auto_select_host": true,
                                                  }
                                                }
                                              />
                                            </ConditionTriggerWrapper>
                                          </ConditionTriggerDetector>
                                        </ForwardRef(Field)>
                                      </ConditionTriggerDetector>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="spy-field"
                          key="spy-field"
                          name="spy-field"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "spy-field",
                                "initialize": undefined,
                                "name": "spy-field",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SpyField
                                component="spy-field"
                                name="spy-field"
                              >
                                <FormSpy
                                  onChange={[Function]}
                                  subscription={
                                    Object {
                                      "pristine": true,
                                      "valid": true,
                                    }
                                  }
                                />
                              </SpyField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <FormSpy>
                          <FormControls
                            Button={[Function]}
                            ButtonGroup={[Function]}
                            FormSpy={[Function]}
                            buttonOrder={
                              Array [
                                "submit",
                                "reset",
                                "cancel",
                              ]
                            }
                            buttonsProps={Object {}}
                            canReset={false}
                            canSubmit={false}
                            cancelLabel="Cancel"
                            formFields={
                              Array [
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "component": "checkbox",
                                        "id": "auto_select_host",
                                        "isDisabled": true,
                                        "label": "Auto-select Host?",
                                        "name": "auto_select_host",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "checkbox",
                                        "id": "on_shared_storage",
                                        "label": "On Shared Storage",
                                        "name": "on_shared_storage",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "password-field",
                                        "condition": Object {
                                          "is": false,
                                          "when": "on_shared_storage",
                                        },
                                        "id": "admin_password",
                                        "isRequired": true,
                                        "label": "Admin Password",
                                        "name": "admin_password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": false,
                                          "when": "auto_select_host",
                                        },
                                        "id": "destination_host",
                                        "includeEmpty": true,
                                        "isRequired": true,
                                        "labelText": "Hosts",
                                        "name": "destination_host",
                                        "options": Array [],
                                        "placeholder": "<Choose>",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                  name="EvacuateInstance"
                                  title="Evacuate Host"
                                />,
                                <SingleField
                                  component="spy-field"
                                  name="spy-field"
                                />,
                              ]
                            }
                            formSpyProps={
                              Object {
                                "active": undefined,
                                "dirty": false,
                                "dirtyFields": Object {},
                                "dirtyFieldsSinceLastSubmit": Object {},
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "errors": Object {},
                                "form": Object {
                                  "batch": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "destroyOnUnregister": false,
                                  "focus": [Function],
                                  "getFieldState": [Function],
                                  "getRegisteredFields": [Function],
                                  "getState": [Function],
                                  "initialize": [Function],
                                  "isValidationPaused": [Function],
                                  "mutators": Object {
                                    "concat": [Function],
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeBatch": [Function],
                                    "shift": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                    "update": [Function],
                                  },
                                  "pauseValidation": [Function],
                                  "registerField": [Function],
                                  "reset": [Function],
                                  "resetFieldState": [Function],
                                  "restart": [Function],
                                  "resumeValidation": [Function],
                                  "setConfig": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "hasSubmitErrors": false,
                                "hasValidationErrors": false,
                                "initialValues": Object {
                                  "auto_select_host": true,
                                  "on_shared_storage": true,
                                },
                                "invalid": false,
                                "modified": Object {},
                                "modifiedSinceLastSubmit": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitErrors": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "touched": Object {},
                                "valid": true,
                                "validating": false,
                                "values": Object {
                                  "auto_select_host": true,
                                  "on_shared_storage": true,
                                },
                                "visited": Object {},
                              }
                            }
                            onCancel={[Function]}
                            onReset={[Function]}
                            resetLabel="Reset"
                            schema={
                              Object {
                                "fields": Array [
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "checkbox",
                                        "id": "auto_select_host",
                                        "isDisabled": true,
                                        "label": "Auto-select Host?",
                                        "name": "auto_select_host",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "checkbox",
                                        "id": "on_shared_storage",
                                        "label": "On Shared Storage",
                                        "name": "on_shared_storage",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "password-field",
                                        "condition": Object {
                                          "is": false,
                                          "when": "on_shared_storage",
                                        },
                                        "id": "admin_password",
                                        "isRequired": true,
                                        "label": "Admin Password",
                                        "name": "admin_password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": false,
                                          "when": "auto_select_host",
                                        },
                                        "id": "destination_host",
                                        "includeEmpty": true,
                                        "isRequired": true,
                                        "labelText": "Hosts",
                                        "name": "destination_host",
                                        "options": Array [],
                                        "placeholder": "<Choose>",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "name": "EvacuateInstance",
                                    "title": "Evacuate Host",
                                  },
                                  Object {
                                    "component": "spy-field",
                                    "initialize": undefined,
                                    "name": "spy-field",
                                  },
                                ],
                              }
                            }
                            submitLabel="Submit"
                          >
                            <ButtonGroup>
                              <ButtonSet
                                className=""
                              >
                                <div
                                  className="bx--btn-set"
                                >
                                  <Button
                                    buttonType="submit"
                                    key="form-submit"
                                    label="Submit"
                                    type="submit"
                                    variant="primary"
                                  >
                                    <Button
                                      kind="primary"
                                      type="submit"
                                      variant="primary"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--primary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="submit"
                                        variant="primary"
                                      >
                                        Submit
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="cancel"
                                    key="form-cancel"
                                    label="Cancel"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Cancel
                                      </button>
                                    </Button>
                                  </Button>
                                </div>
                              </ButtonSet>
                            </ButtonGroup>
                          </FormControls>
                        </FormSpy>
                         
                      </form>
                    </Form>
                  </Form>
                </FormTemplate>
              </WrappedFormTemplate>
            </Component>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </EvacuateForm>
</Provider>
`;

exports[`evacuate form component should render evacuate form with host options 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <EvacuateForm
    recordId="40"
  >
    <Connect(MiqFormRenderer)
      buttonsLabels={
        Object {
          "submitLabel": "Submit",
        }
      }
      canReset={false}
      className="evacuate_form"
      disableSubmit={
        Array [
          "invalid",
        ]
      }
      initialValues={
        Object {
          "auto_select_host": true,
          "on_shared_storage": true,
        }
      }
      onCancel={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "component": "checkbox",
                  "id": "auto_select_host",
                  "isDisabled": false,
                  "label": "Auto-select Host?",
                  "name": "auto_select_host",
                  "validateOnMount": true,
                },
                Object {
                  "component": "checkbox",
                  "id": "on_shared_storage",
                  "label": "On Shared Storage",
                  "name": "on_shared_storage",
                  "validateOnMount": true,
                },
                Object {
                  "component": "password-field",
                  "condition": Object {
                    "is": false,
                    "when": "on_shared_storage",
                  },
                  "id": "admin_password",
                  "isRequired": true,
                  "label": "Admin Password",
                  "name": "admin_password",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "select",
                  "condition": Object {
                    "is": false,
                    "when": "auto_select_host",
                  },
                  "id": "destination_host",
                  "includeEmpty": true,
                  "isRequired": true,
                  "labelText": "Hosts",
                  "name": "destination_host",
                  "options": Array [
                    Object {
                      "label": "hostone",
                      "value": "hostone",
                    },
                    Object {
                      "label": "hosttwo",
                      "value": "hosttwo",
                    },
                    Object {
                      "label": "hostthree",
                      "value": "hostthree",
                    },
                    Object {
                      "label": "hostfour",
                      "value": "hostfour",
                    },
                    Object {
                      "label": "hostfive",
                      "value": "hostfive",
                    },
                  ],
                  "placeholder": "<Choose>",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
              ],
              "name": "EvacuateInstance",
              "title": "Evacuate Host",
            },
          ],
        }
      }
    >
      <MiqFormRenderer
        buttonsLabels={
          Object {
            "submitLabel": "Submit",
          }
        }
        canReset={false}
        className="evacuate_form"
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "auto_select_host": true,
            "on_shared_storage": true,
          }
        }
        onCancel={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "component": "checkbox",
                    "id": "auto_select_host",
                    "isDisabled": false,
                    "label": "Auto-select Host?",
                    "name": "auto_select_host",
                    "validateOnMount": true,
                  },
                  Object {
                    "component": "checkbox",
                    "id": "on_shared_storage",
                    "label": "On Shared Storage",
                    "name": "on_shared_storage",
                    "validateOnMount": true,
                  },
                  Object {
                    "component": "password-field",
                    "condition": Object {
                      "is": false,
                      "when": "on_shared_storage",
                    },
                    "id": "admin_password",
                    "isRequired": true,
                    "label": "Admin Password",
                    "name": "admin_password",
                    "validate": Array [
                      Object {
                        "type": "required",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "condition": Object {
                      "is": false,
                      "when": "auto_select_host",
                    },
                    "id": "destination_host",
                    "includeEmpty": true,
                    "isRequired": true,
                    "labelText": "Hosts",
                    "name": "destination_host",
                    "options": Array [
                      Object {
                        "label": "hostone",
                        "value": "hostone",
                      },
                      Object {
                        "label": "hosttwo",
                        "value": "hosttwo",
                      },
                      Object {
                        "label": "hostthree",
                        "value": "hostthree",
                      },
                      Object {
                        "label": "hostfour",
                        "value": "hostfour",
                      },
                      Object {
                        "label": "hostfive",
                        "value": "hostfive",
                      },
                    ],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "type": "required",
                      },
                    ],
                  },
                ],
                "name": "EvacuateInstance",
                "title": "Evacuate Host",
              },
            ],
          }
        }
        showFormControls={true}
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "auto_select_host": true,
              "on_shared_storage": true,
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "component": "checkbox",
                      "id": "auto_select_host",
                      "isDisabled": false,
                      "label": "Auto-select Host?",
                      "name": "auto_select_host",
                      "validateOnMount": true,
                    },
                    Object {
                      "component": "checkbox",
                      "id": "on_shared_storage",
                      "label": "On Shared Storage",
                      "name": "on_shared_storage",
                      "validateOnMount": true,
                    },
                    Object {
                      "component": "password-field",
                      "condition": Object {
                        "is": false,
                        "when": "on_shared_storage",
                      },
                      "id": "admin_password",
                      "isRequired": true,
                      "label": "Admin Password",
                      "name": "admin_password",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "condition": Object {
                        "is": false,
                        "when": "auto_select_host",
                      },
                      "id": "destination_host",
                      "includeEmpty": true,
                      "isRequired": true,
                      "labelText": "Hosts",
                      "name": "destination_host",
                      "options": Array [
                        Object {
                          "label": "hostone",
                          "value": "hostone",
                        },
                        Object {
                          "label": "hosttwo",
                          "value": "hosttwo",
                        },
                        Object {
                          "label": "hostthree",
                          "value": "hostthree",
                        },
                        Object {
                          "label": "hostfour",
                          "value": "hostfour",
                        },
                        Object {
                          "label": "hostfive",
                          "value": "hostfive",
                        },
                      ],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                  "name": "EvacuateInstance",
                  "title": "Evacuate Host",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "auto_select_host": true,
                "on_shared_storage": true,
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <Component
              formFields={
                Array [
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "component": "checkbox",
                          "id": "auto_select_host",
                          "isDisabled": false,
                          "label": "Auto-select Host?",
                          "name": "auto_select_host",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "checkbox",
                          "id": "on_shared_storage",
                          "label": "On Shared Storage",
                          "name": "on_shared_storage",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "password-field",
                          "condition": Object {
                            "is": false,
                            "when": "on_shared_storage",
                          },
                          "id": "admin_password",
                          "isRequired": true,
                          "label": "Admin Password",
                          "name": "admin_password",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": false,
                            "when": "auto_select_host",
                          },
                          "id": "destination_host",
                          "includeEmpty": true,
                          "isRequired": true,
                          "labelText": "Hosts",
                          "name": "destination_host",
                          "options": Array [
                            Object {
                              "label": "hostone",
                              "value": "hostone",
                            },
                            Object {
                              "label": "hosttwo",
                              "value": "hosttwo",
                            },
                            Object {
                              "label": "hostthree",
                              "value": "hostthree",
                            },
                            Object {
                              "label": "hostfour",
                              "value": "hostfour",
                            },
                            Object {
                              "label": "hostfive",
                              "value": "hostfive",
                            },
                          ],
                          "placeholder": "<Choose>",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ]
                    }
                    name="EvacuateInstance"
                    title="Evacuate Host"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "component": "checkbox",
                          "id": "auto_select_host",
                          "isDisabled": false,
                          "label": "Auto-select Host?",
                          "name": "auto_select_host",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "checkbox",
                          "id": "on_shared_storage",
                          "label": "On Shared Storage",
                          "name": "on_shared_storage",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "password-field",
                          "condition": Object {
                            "is": false,
                            "when": "on_shared_storage",
                          },
                          "id": "admin_password",
                          "isRequired": true,
                          "label": "Admin Password",
                          "name": "admin_password",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": false,
                            "when": "auto_select_host",
                          },
                          "id": "destination_host",
                          "includeEmpty": true,
                          "isRequired": true,
                          "labelText": "Hosts",
                          "name": "destination_host",
                          "options": Array [
                            Object {
                              "label": "hostone",
                              "value": "hostone",
                            },
                            Object {
                              "label": "hosttwo",
                              "value": "hosttwo",
                            },
                            Object {
                              "label": "hostthree",
                              "value": "hostthree",
                            },
                            Object {
                              "label": "hostfour",
                              "value": "hostfour",
                            },
                            Object {
                              "label": "hostfive",
                              "value": "hostfive",
                            },
                          ],
                          "placeholder": "<Choose>",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ],
                      "name": "EvacuateInstance",
                      "title": "Evacuate Host",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <WrappedFormTemplate
                canReset={false}
                cancelLabel="Cancel"
                disableSubmit={
                  Array [
                    "invalid",
                  ]
                }
                formFields={
                  Array [
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "component": "checkbox",
                            "id": "auto_select_host",
                            "isDisabled": false,
                            "label": "Auto-select Host?",
                            "name": "auto_select_host",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "checkbox",
                            "id": "on_shared_storage",
                            "label": "On Shared Storage",
                            "name": "on_shared_storage",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "password-field",
                            "condition": Object {
                              "is": false,
                              "when": "on_shared_storage",
                            },
                            "id": "admin_password",
                            "isRequired": true,
                            "label": "Admin Password",
                            "name": "admin_password",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": false,
                              "when": "auto_select_host",
                            },
                            "id": "destination_host",
                            "includeEmpty": true,
                            "isRequired": true,
                            "labelText": "Hosts",
                            "name": "destination_host",
                            "options": Array [
                              Object {
                                "label": "hostone",
                                "value": "hostone",
                              },
                              Object {
                                "label": "hosttwo",
                                "value": "hosttwo",
                              },
                              Object {
                                "label": "hostthree",
                                "value": "hostthree",
                              },
                              Object {
                                "label": "hostfour",
                                "value": "hostfour",
                              },
                              Object {
                                "label": "hostfive",
                                "value": "hostfive",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                        ]
                      }
                      name="EvacuateInstance"
                      title="Evacuate Host"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                formWrapperProps={
                  Object {
                    "className": "evacuate_form",
                  }
                }
                resetLabel="Reset"
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "component": "checkbox",
                            "id": "auto_select_host",
                            "isDisabled": false,
                            "label": "Auto-select Host?",
                            "name": "auto_select_host",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "checkbox",
                            "id": "on_shared_storage",
                            "label": "On Shared Storage",
                            "name": "on_shared_storage",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "password-field",
                            "condition": Object {
                              "is": false,
                              "when": "on_shared_storage",
                            },
                            "id": "admin_password",
                            "isRequired": true,
                            "label": "Admin Password",
                            "name": "admin_password",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": false,
                              "when": "auto_select_host",
                            },
                            "id": "destination_host",
                            "includeEmpty": true,
                            "isRequired": true,
                            "labelText": "Hosts",
                            "name": "destination_host",
                            "options": Array [
                              Object {
                                "label": "hostone",
                                "value": "hostone",
                              },
                              Object {
                                "label": "hosttwo",
                                "value": "hosttwo",
                              },
                              Object {
                                "label": "hostthree",
                                "value": "hostthree",
                              },
                              Object {
                                "label": "hostfour",
                                "value": "hostfour",
                              },
                              Object {
                                "label": "hostfive",
                                "value": "hostfive",
                              },
                            ],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                        ],
                        "name": "EvacuateInstance",
                        "title": "Evacuate Host",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
                showFormControls={true}
                submitLabel="Submit"
              >
                <FormTemplate
                  Button={[Function]}
                  ButtonGroup={[Function]}
                  Description={[Function]}
                  FormWrapper={[Function]}
                  Header={[Function]}
                  Title={[Function]}
                  buttonOrder={
                    Array [
                      "submit",
                      "reset",
                      "cancel",
                    ]
                  }
                  canReset={false}
                  cancelLabel="Cancel"
                  disableSubmit={
                    Array [
                      "invalid",
                    ]
                  }
                  formFields={
                    Array [
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "component": "checkbox",
                              "id": "auto_select_host",
                              "isDisabled": false,
                              "label": "Auto-select Host?",
                              "name": "auto_select_host",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "checkbox",
                              "id": "on_shared_storage",
                              "label": "On Shared Storage",
                              "name": "on_shared_storage",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "password-field",
                              "condition": Object {
                                "is": false,
                                "when": "on_shared_storage",
                              },
                              "id": "admin_password",
                              "isRequired": true,
                              "label": "Admin Password",
                              "name": "admin_password",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "condition": Object {
                                "is": false,
                                "when": "auto_select_host",
                              },
                              "id": "destination_host",
                              "includeEmpty": true,
                              "isRequired": true,
                              "labelText": "Hosts",
                              "name": "destination_host",
                              "options": Array [
                                Object {
                                  "label": "hostone",
                                  "value": "hostone",
                                },
                                Object {
                                  "label": "hosttwo",
                                  "value": "hosttwo",
                                },
                                Object {
                                  "label": "hostthree",
                                  "value": "hostthree",
                                },
                                Object {
                                  "label": "hostfour",
                                  "value": "hostfour",
                                },
                                Object {
                                  "label": "hostfive",
                                  "value": "hostfive",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ]
                        }
                        name="EvacuateInstance"
                        title="Evacuate Host"
                      />,
                      <SingleField
                        component="spy-field"
                        name="spy-field"
                      />,
                    ]
                  }
                  formWrapperProps={
                    Object {
                      "className": "evacuate_form",
                    }
                  }
                  resetLabel="Reset"
                  schema={
                    Object {
                      "fields": Array [
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "component": "checkbox",
                              "id": "auto_select_host",
                              "isDisabled": false,
                              "label": "Auto-select Host?",
                              "name": "auto_select_host",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "checkbox",
                              "id": "on_shared_storage",
                              "label": "On Shared Storage",
                              "name": "on_shared_storage",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "password-field",
                              "condition": Object {
                                "is": false,
                                "when": "on_shared_storage",
                              },
                              "id": "admin_password",
                              "isRequired": true,
                              "label": "Admin Password",
                              "name": "admin_password",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "condition": Object {
                                "is": false,
                                "when": "auto_select_host",
                              },
                              "id": "destination_host",
                              "includeEmpty": true,
                              "isRequired": true,
                              "labelText": "Hosts",
                              "name": "destination_host",
                              "options": Array [
                                Object {
                                  "label": "hostone",
                                  "value": "hostone",
                                },
                                Object {
                                  "label": "hosttwo",
                                  "value": "hosttwo",
                                },
                                Object {
                                  "label": "hostthree",
                                  "value": "hostthree",
                                },
                                Object {
                                  "label": "hostfour",
                                  "value": "hostfour",
                                },
                                Object {
                                  "label": "hostfive",
                                  "value": "hostfive",
                                },
                              ],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "name": "EvacuateInstance",
                          "title": "Evacuate Host",
                        },
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        },
                      ],
                    }
                  }
                  showFormControls={true}
                  submitLabel="Submit"
                >
                  <Form
                    className="evacuate_form"
                    onSubmit={[Function]}
                  >
                    <Form
                      className="form-0-2-3 evacuate_form"
                      noValidate={true}
                      onSubmit={[Function]}
                    >
                      <form
                        className="bx--form form-0-2-3 evacuate_form"
                        noValidate={true}
                        onSubmit={[Function]}
                      >
                         
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "component": "checkbox",
                                "id": "auto_select_host",
                                "isDisabled": false,
                                "label": "Auto-select Host?",
                                "name": "auto_select_host",
                                "validateOnMount": true,
                              },
                              Object {
                                "component": "checkbox",
                                "id": "on_shared_storage",
                                "label": "On Shared Storage",
                                "name": "on_shared_storage",
                                "validateOnMount": true,
                              },
                              Object {
                                "component": "password-field",
                                "condition": Object {
                                  "is": false,
                                  "when": "on_shared_storage",
                                },
                                "id": "admin_password",
                                "isRequired": true,
                                "label": "Admin Password",
                                "name": "admin_password",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": false,
                                  "when": "auto_select_host",
                                },
                                "id": "destination_host",
                                "includeEmpty": true,
                                "isRequired": true,
                                "labelText": "Hosts",
                                "name": "destination_host",
                                "options": Array [
                                  Object {
                                    "label": "hostone",
                                    "value": "hostone",
                                  },
                                  Object {
                                    "label": "hosttwo",
                                    "value": "hosttwo",
                                  },
                                  Object {
                                    "label": "hostthree",
                                    "value": "hostthree",
                                  },
                                  Object {
                                    "label": "hostfour",
                                    "value": "hostfour",
                                  },
                                  Object {
                                    "label": "hostfive",
                                    "value": "hostfive",
                                  },
                                ],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ]
                          }
                          key="EvacuateInstance"
                          name="EvacuateInstance"
                          title="Evacuate Host"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "checkbox",
                                    "id": "auto_select_host",
                                    "isDisabled": false,
                                    "label": "Auto-select Host?",
                                    "name": "auto_select_host",
                                    "validateOnMount": true,
                                  },
                                  Object {
                                    "component": "checkbox",
                                    "id": "on_shared_storage",
                                    "label": "On Shared Storage",
                                    "name": "on_shared_storage",
                                    "validateOnMount": true,
                                  },
                                  Object {
                                    "component": "password-field",
                                    "condition": Object {
                                      "is": false,
                                      "when": "on_shared_storage",
                                    },
                                    "id": "admin_password",
                                    "isRequired": true,
                                    "label": "Admin Password",
                                    "name": "admin_password",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": false,
                                      "when": "auto_select_host",
                                    },
                                    "id": "destination_host",
                                    "includeEmpty": true,
                                    "isRequired": true,
                                    "labelText": "Hosts",
                                    "name": "destination_host",
                                    "options": Array [
                                      Object {
                                        "label": "hostone",
                                        "value": "hostone",
                                      },
                                      Object {
                                        "label": "hosttwo",
                                        "value": "hosttwo",
                                      },
                                      Object {
                                        "label": "hostthree",
                                        "value": "hostthree",
                                      },
                                      Object {
                                        "label": "hostfour",
                                        "value": "hostfour",
                                      },
                                      Object {
                                        "label": "hostfive",
                                        "value": "hostfive",
                                      },
                                    ],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                ],
                                "name": "EvacuateInstance",
                                "title": "Evacuate Host",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "component": "checkbox",
                                      "id": "auto_select_host",
                                      "isDisabled": false,
                                      "label": "Auto-select Host?",
                                      "name": "auto_select_host",
                                      "validateOnMount": true,
                                    },
                                    Object {
                                      "component": "checkbox",
                                      "id": "on_shared_storage",
                                      "label": "On Shared Storage",
                                      "name": "on_shared_storage",
                                      "validateOnMount": true,
                                    },
                                    Object {
                                      "component": "password-field",
                                      "condition": Object {
                                        "is": false,
                                        "when": "on_shared_storage",
                                      },
                                      "id": "admin_password",
                                      "isRequired": true,
                                      "label": "Admin Password",
                                      "name": "admin_password",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "condition": Object {
                                        "is": false,
                                        "when": "auto_select_host",
                                      },
                                      "id": "destination_host",
                                      "includeEmpty": true,
                                      "isRequired": true,
                                      "labelText": "Hosts",
                                      "name": "destination_host",
                                      "options": Array [
                                        Object {
                                          "label": "hostone",
                                          "value": "hostone",
                                        },
                                        Object {
                                          "label": "hosttwo",
                                          "value": "hosttwo",
                                        },
                                        Object {
                                          "label": "hostthree",
                                          "value": "hostthree",
                                        },
                                        Object {
                                          "label": "hostfour",
                                          "value": "hostfour",
                                        },
                                        Object {
                                          "label": "hostfive",
                                          "value": "hostfive",
                                        },
                                      ],
                                      "placeholder": "<Choose>",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                  ]
                                }
                                name="EvacuateInstance"
                                title="Evacuate Host"
                              >
                                <div
                                  className=""
                                  name="EvacuateInstance"
                                >
                                  <div>
                                    <h3>
                                      Evacuate Host
                                    </h3>
                                  </div>
                                  <SingleField
                                    component="checkbox"
                                    id="auto_select_host"
                                    isDisabled={false}
                                    key="auto_select_host"
                                    label="Auto-select Host?"
                                    name="auto_select_host"
                                    validateOnMount={true}
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "component": "checkbox",
                                          "id": "auto_select_host",
                                          "isDisabled": false,
                                          "label": "Auto-select Host?",
                                          "name": "auto_select_host",
                                          "validateOnMount": true,
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <Checkbox
                                          component="checkbox"
                                          id="auto_select_host"
                                          isDisabled={false}
                                          label="Auto-select Host?"
                                          name="auto_select_host"
                                          validateOnMount={true}
                                        >
                                          <SingleCheckbox
                                            component="checkbox"
                                            id="auto_select_host"
                                            isDisabled={false}
                                            label="Auto-select Host?"
                                            name="auto_select_host"
                                            validateOnMount={true}
                                          >
                                            <div>
                                              <Checkbox
                                                checked={true}
                                                disabled={false}
                                                id="auto_select_host"
                                                indeterminate={false}
                                                labelText="Auto-select Host?"
                                                name="auto_select_host"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                type="checkbox"
                                              >
                                                <div
                                                  className="bx--form-item bx--checkbox-wrapper"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="bx--checkbox"
                                                    disabled={false}
                                                    id="auto_select_host"
                                                    name="auto_select_host"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <label
                                                    className="bx--checkbox-label"
                                                    htmlFor="auto_select_host"
                                                    title={null}
                                                  >
                                                    <Text
                                                      className="bx--checkbox-label-text"
                                                    >
                                                      <span
                                                        className="bx--checkbox-label-text"
                                                        dir="auto"
                                                      >
                                                        Auto-select Host?
                                                      </span>
                                                    </Text>
                                                  </label>
                                                </div>
                                              </Checkbox>
                                              <HelperTextBlock />
                                            </div>
                                          </SingleCheckbox>
                                        </Checkbox>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                  <SingleField
                                    component="checkbox"
                                    id="on_shared_storage"
                                    key="on_shared_storage"
                                    label="On Shared Storage"
                                    name="on_shared_storage"
                                    validateOnMount={true}
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "component": "checkbox",
                                          "id": "on_shared_storage",
                                          "label": "On Shared Storage",
                                          "name": "on_shared_storage",
                                          "validateOnMount": true,
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <Checkbox
                                          component="checkbox"
                                          id="on_shared_storage"
                                          label="On Shared Storage"
                                          name="on_shared_storage"
                                          validateOnMount={true}
                                        >
                                          <SingleCheckbox
                                            component="checkbox"
                                            id="on_shared_storage"
                                            label="On Shared Storage"
                                            name="on_shared_storage"
                                            validateOnMount={true}
                                          >
                                            <div>
                                              <Checkbox
                                                checked={true}
                                                id="on_shared_storage"
                                                indeterminate={false}
                                                labelText="On Shared Storage"
                                                name="on_shared_storage"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                type="checkbox"
                                              >
                                                <div
                                                  className="bx--form-item bx--checkbox-wrapper"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="bx--checkbox"
                                                    id="on_shared_storage"
                                                    name="on_shared_storage"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <label
                                                    className="bx--checkbox-label"
                                                    htmlFor="on_shared_storage"
                                                    title={null}
                                                  >
                                                    <Text
                                                      className="bx--checkbox-label-text"
                                                    >
                                                      <span
                                                        className="bx--checkbox-label-text"
                                                        dir="auto"
                                                      >
                                                        On Shared Storage
                                                      </span>
                                                    </Text>
                                                  </label>
                                                </div>
                                              </Checkbox>
                                              <HelperTextBlock />
                                            </div>
                                          </SingleCheckbox>
                                        </Checkbox>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                  <SingleField
                                    component="password-field"
                                    condition={
                                      Object {
                                        "is": false,
                                        "when": "on_shared_storage",
                                      }
                                    }
                                    id="admin_password"
                                    isRequired={true}
                                    key="admin_password"
                                    label="Admin Password"
                                    name="admin_password"
                                    validate={
                                      Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ]
                                    }
                                  >
                                    <FormConditionWrapper
                                      condition={
                                        Object {
                                          "is": false,
                                          "when": "on_shared_storage",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "password-field",
                                          "id": "admin_password",
                                          "isRequired": true,
                                          "label": "Admin Password",
                                          "name": "admin_password",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        }
                                      }
                                    >
                                      <ConditionTriggerDetector
                                        condition={
                                          Object {
                                            "is": false,
                                            "when": "on_shared_storage",
                                          }
                                        }
                                        field={
                                          Object {
                                            "component": "password-field",
                                            "id": "admin_password",
                                            "isRequired": true,
                                            "label": "Admin Password",
                                            "name": "admin_password",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          }
                                        }
                                        triggers={
                                          Array [
                                            "on_shared_storage",
                                          ]
                                        }
                                      >
                                        <ForwardRef(Field)
                                          name="on_shared_storage"
                                          subscription={
                                            Object {
                                              "value": true,
                                            }
                                          }
                                        >
                                          <ConditionTriggerDetector
                                            condition={
                                              Object {
                                                "is": false,
                                                "when": "on_shared_storage",
                                              }
                                            }
                                            field={
                                              Object {
                                                "component": "password-field",
                                                "id": "admin_password",
                                                "isRequired": true,
                                                "label": "Admin Password",
                                                "name": "admin_password",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              }
                                            }
                                            triggers={Array []}
                                            values={
                                              Object {
                                                "on_shared_storage": true,
                                              }
                                            }
                                          >
                                            <ConditionTriggerWrapper
                                              condition={
                                                Object {
                                                  "is": false,
                                                  "when": "on_shared_storage",
                                                }
                                              }
                                              field={
                                                Object {
                                                  "component": "password-field",
                                                  "id": "admin_password",
                                                  "isRequired": true,
                                                  "label": "Admin Password",
                                                  "name": "admin_password",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                }
                                              }
                                              values={
                                                Object {
                                                  "on_shared_storage": true,
                                                }
                                              }
                                            >
                                              <Component
                                                condition={
                                                  Object {
                                                    "is": false,
                                                    "when": "on_shared_storage",
                                                  }
                                                }
                                                field={
                                                  Object {
                                                    "component": "password-field",
                                                    "id": "admin_password",
                                                    "isRequired": true,
                                                    "label": "Admin Password",
                                                    "name": "admin_password",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  }
                                                }
                                                values={
                                                  Object {
                                                    "on_shared_storage": true,
                                                  }
                                                }
                                              />
                                            </ConditionTriggerWrapper>
                                          </ConditionTriggerDetector>
                                        </ForwardRef(Field)>
                                      </ConditionTriggerDetector>
                                    </FormConditionWrapper>
                                  </SingleField>
                                  <SingleField
                                    component="select"
                                    condition={
                                      Object {
                                        "is": false,
                                        "when": "auto_select_host",
                                      }
                                    }
                                    id="destination_host"
                                    includeEmpty={true}
                                    isRequired={true}
                                    key="destination_host"
                                    labelText="Hosts"
                                    name="destination_host"
                                    options={
                                      Array [
                                        Object {
                                          "label": "hostone",
                                          "value": "hostone",
                                        },
                                        Object {
                                          "label": "hosttwo",
                                          "value": "hosttwo",
                                        },
                                        Object {
                                          "label": "hostthree",
                                          "value": "hostthree",
                                        },
                                        Object {
                                          "label": "hostfour",
                                          "value": "hostfour",
                                        },
                                        Object {
                                          "label": "hostfive",
                                          "value": "hostfive",
                                        },
                                      ]
                                    }
                                    placeholder="<Choose>"
                                    validate={
                                      Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ]
                                    }
                                  >
                                    <FormConditionWrapper
                                      condition={
                                        Object {
                                          "is": false,
                                          "when": "auto_select_host",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "select",
                                          "id": "destination_host",
                                          "includeEmpty": true,
                                          "isRequired": true,
                                          "labelText": "Hosts",
                                          "name": "destination_host",
                                          "options": Array [
                                            Object {
                                              "label": "hostone",
                                              "value": "hostone",
                                            },
                                            Object {
                                              "label": "hosttwo",
                                              "value": "hosttwo",
                                            },
                                            Object {
                                              "label": "hostthree",
                                              "value": "hostthree",
                                            },
                                            Object {
                                              "label": "hostfour",
                                              "value": "hostfour",
                                            },
                                            Object {
                                              "label": "hostfive",
                                              "value": "hostfive",
                                            },
                                          ],
                                          "placeholder": "<Choose>",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        }
                                      }
                                    >
                                      <ConditionTriggerDetector
                                        condition={
                                          Object {
                                            "is": false,
                                            "when": "auto_select_host",
                                          }
                                        }
                                        field={
                                          Object {
                                            "component": "select",
                                            "id": "destination_host",
                                            "includeEmpty": true,
                                            "isRequired": true,
                                            "labelText": "Hosts",
                                            "name": "destination_host",
                                            "options": Array [
                                              Object {
                                                "label": "hostone",
                                                "value": "hostone",
                                              },
                                              Object {
                                                "label": "hosttwo",
                                                "value": "hosttwo",
                                              },
                                              Object {
                                                "label": "hostthree",
                                                "value": "hostthree",
                                              },
                                              Object {
                                                "label": "hostfour",
                                                "value": "hostfour",
                                              },
                                              Object {
                                                "label": "hostfive",
                                                "value": "hostfive",
                                              },
                                            ],
                                            "placeholder": "<Choose>",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          }
                                        }
                                        triggers={
                                          Array [
                                            "auto_select_host",
                                          ]
                                        }
                                      >
                                        <ForwardRef(Field)
                                          name="auto_select_host"
                                          subscription={
                                            Object {
                                              "value": true,
                                            }
                                          }
                                        >
                                          <ConditionTriggerDetector
                                            condition={
                                              Object {
                                                "is": false,
                                                "when": "auto_select_host",
                                              }
                                            }
                                            field={
                                              Object {
                                                "component": "select",
                                                "id": "destination_host",
                                                "includeEmpty": true,
                                                "isRequired": true,
                                                "labelText": "Hosts",
                                                "name": "destination_host",
                                                "options": Array [
                                                  Object {
                                                    "label": "hostone",
                                                    "value": "hostone",
                                                  },
                                                  Object {
                                                    "label": "hosttwo",
                                                    "value": "hosttwo",
                                                  },
                                                  Object {
                                                    "label": "hostthree",
                                                    "value": "hostthree",
                                                  },
                                                  Object {
                                                    "label": "hostfour",
                                                    "value": "hostfour",
                                                  },
                                                  Object {
                                                    "label": "hostfive",
                                                    "value": "hostfive",
                                                  },
                                                ],
                                                "placeholder": "<Choose>",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              }
                                            }
                                            triggers={Array []}
                                            values={
                                              Object {
                                                "auto_select_host": true,
                                              }
                                            }
                                          >
                                            <ConditionTriggerWrapper
                                              condition={
                                                Object {
                                                  "is": false,
                                                  "when": "auto_select_host",
                                                }
                                              }
                                              field={
                                                Object {
                                                  "component": "select",
                                                  "id": "destination_host",
                                                  "includeEmpty": true,
                                                  "isRequired": true,
                                                  "labelText": "Hosts",
                                                  "name": "destination_host",
                                                  "options": Array [
                                                    Object {
                                                      "label": "hostone",
                                                      "value": "hostone",
                                                    },
                                                    Object {
                                                      "label": "hosttwo",
                                                      "value": "hosttwo",
                                                    },
                                                    Object {
                                                      "label": "hostthree",
                                                      "value": "hostthree",
                                                    },
                                                    Object {
                                                      "label": "hostfour",
                                                      "value": "hostfour",
                                                    },
                                                    Object {
                                                      "label": "hostfive",
                                                      "value": "hostfive",
                                                    },
                                                  ],
                                                  "placeholder": "<Choose>",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                }
                                              }
                                              values={
                                                Object {
                                                  "auto_select_host": true,
                                                }
                                              }
                                            >
                                              <Component
                                                condition={
                                                  Object {
                                                    "is": false,
                                                    "when": "auto_select_host",
                                                  }
                                                }
                                                field={
                                                  Object {
                                                    "component": "select",
                                                    "id": "destination_host",
                                                    "includeEmpty": true,
                                                    "isRequired": true,
                                                    "labelText": "Hosts",
                                                    "name": "destination_host",
                                                    "options": Array [
                                                      Object {
                                                        "label": "hostone",
                                                        "value": "hostone",
                                                      },
                                                      Object {
                                                        "label": "hosttwo",
                                                        "value": "hosttwo",
                                                      },
                                                      Object {
                                                        "label": "hostthree",
                                                        "value": "hostthree",
                                                      },
                                                      Object {
                                                        "label": "hostfour",
                                                        "value": "hostfour",
                                                      },
                                                      Object {
                                                        "label": "hostfive",
                                                        "value": "hostfive",
                                                      },
                                                    ],
                                                    "placeholder": "<Choose>",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  }
                                                }
                                                values={
                                                  Object {
                                                    "auto_select_host": true,
                                                  }
                                                }
                                              />
                                            </ConditionTriggerWrapper>
                                          </ConditionTriggerDetector>
                                        </ForwardRef(Field)>
                                      </ConditionTriggerDetector>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="spy-field"
                          key="spy-field"
                          name="spy-field"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "spy-field",
                                "initialize": undefined,
                                "name": "spy-field",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SpyField
                                component="spy-field"
                                name="spy-field"
                              >
                                <FormSpy
                                  onChange={[Function]}
                                  subscription={
                                    Object {
                                      "pristine": true,
                                      "valid": true,
                                    }
                                  }
                                />
                              </SpyField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <FormSpy>
                          <FormControls
                            Button={[Function]}
                            ButtonGroup={[Function]}
                            FormSpy={[Function]}
                            buttonOrder={
                              Array [
                                "submit",
                                "reset",
                                "cancel",
                              ]
                            }
                            buttonsProps={Object {}}
                            canReset={false}
                            canSubmit={false}
                            cancelLabel="Cancel"
                            formFields={
                              Array [
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "component": "checkbox",
                                        "id": "auto_select_host",
                                        "isDisabled": false,
                                        "label": "Auto-select Host?",
                                        "name": "auto_select_host",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "checkbox",
                                        "id": "on_shared_storage",
                                        "label": "On Shared Storage",
                                        "name": "on_shared_storage",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "password-field",
                                        "condition": Object {
                                          "is": false,
                                          "when": "on_shared_storage",
                                        },
                                        "id": "admin_password",
                                        "isRequired": true,
                                        "label": "Admin Password",
                                        "name": "admin_password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": false,
                                          "when": "auto_select_host",
                                        },
                                        "id": "destination_host",
                                        "includeEmpty": true,
                                        "isRequired": true,
                                        "labelText": "Hosts",
                                        "name": "destination_host",
                                        "options": Array [
                                          Object {
                                            "label": "hostone",
                                            "value": "hostone",
                                          },
                                          Object {
                                            "label": "hosttwo",
                                            "value": "hosttwo",
                                          },
                                          Object {
                                            "label": "hostthree",
                                            "value": "hostthree",
                                          },
                                          Object {
                                            "label": "hostfour",
                                            "value": "hostfour",
                                          },
                                          Object {
                                            "label": "hostfive",
                                            "value": "hostfive",
                                          },
                                        ],
                                        "placeholder": "<Choose>",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                  name="EvacuateInstance"
                                  title="Evacuate Host"
                                />,
                                <SingleField
                                  component="spy-field"
                                  name="spy-field"
                                />,
                              ]
                            }
                            formSpyProps={
                              Object {
                                "active": undefined,
                                "dirty": false,
                                "dirtyFields": Object {},
                                "dirtyFieldsSinceLastSubmit": Object {},
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "errors": Object {},
                                "form": Object {
                                  "batch": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "destroyOnUnregister": false,
                                  "focus": [Function],
                                  "getFieldState": [Function],
                                  "getRegisteredFields": [Function],
                                  "getState": [Function],
                                  "initialize": [Function],
                                  "isValidationPaused": [Function],
                                  "mutators": Object {
                                    "concat": [Function],
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeBatch": [Function],
                                    "shift": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                    "update": [Function],
                                  },
                                  "pauseValidation": [Function],
                                  "registerField": [Function],
                                  "reset": [Function],
                                  "resetFieldState": [Function],
                                  "restart": [Function],
                                  "resumeValidation": [Function],
                                  "setConfig": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "hasSubmitErrors": false,
                                "hasValidationErrors": false,
                                "initialValues": Object {
                                  "auto_select_host": true,
                                  "on_shared_storage": true,
                                },
                                "invalid": false,
                                "modified": Object {},
                                "modifiedSinceLastSubmit": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitErrors": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "touched": Object {},
                                "valid": true,
                                "validating": false,
                                "values": Object {
                                  "auto_select_host": true,
                                  "on_shared_storage": true,
                                },
                                "visited": Object {},
                              }
                            }
                            onCancel={[Function]}
                            onReset={[Function]}
                            resetLabel="Reset"
                            schema={
                              Object {
                                "fields": Array [
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "checkbox",
                                        "id": "auto_select_host",
                                        "isDisabled": false,
                                        "label": "Auto-select Host?",
                                        "name": "auto_select_host",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "checkbox",
                                        "id": "on_shared_storage",
                                        "label": "On Shared Storage",
                                        "name": "on_shared_storage",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "password-field",
                                        "condition": Object {
                                          "is": false,
                                          "when": "on_shared_storage",
                                        },
                                        "id": "admin_password",
                                        "isRequired": true,
                                        "label": "Admin Password",
                                        "name": "admin_password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": false,
                                          "when": "auto_select_host",
                                        },
                                        "id": "destination_host",
                                        "includeEmpty": true,
                                        "isRequired": true,
                                        "labelText": "Hosts",
                                        "name": "destination_host",
                                        "options": Array [
                                          Object {
                                            "label": "hostone",
                                            "value": "hostone",
                                          },
                                          Object {
                                            "label": "hosttwo",
                                            "value": "hosttwo",
                                          },
                                          Object {
                                            "label": "hostthree",
                                            "value": "hostthree",
                                          },
                                          Object {
                                            "label": "hostfour",
                                            "value": "hostfour",
                                          },
                                          Object {
                                            "label": "hostfive",
                                            "value": "hostfive",
                                          },
                                        ],
                                        "placeholder": "<Choose>",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "name": "EvacuateInstance",
                                    "title": "Evacuate Host",
                                  },
                                  Object {
                                    "component": "spy-field",
                                    "initialize": undefined,
                                    "name": "spy-field",
                                  },
                                ],
                              }
                            }
                            submitLabel="Submit"
                          >
                            <ButtonGroup>
                              <ButtonSet
                                className=""
                              >
                                <div
                                  className="bx--btn-set"
                                >
                                  <Button
                                    buttonType="submit"
                                    key="form-submit"
                                    label="Submit"
                                    type="submit"
                                    variant="primary"
                                  >
                                    <Button
                                      kind="primary"
                                      type="submit"
                                      variant="primary"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--primary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="submit"
                                        variant="primary"
                                      >
                                        Submit
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="cancel"
                                    key="form-cancel"
                                    label="Cancel"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Cancel
                                      </button>
                                    </Button>
                                  </Button>
                                </div>
                              </ButtonSet>
                            </ButtonGroup>
                          </FormControls>
                        </FormSpy>
                         
                      </form>
                    </Form>
                  </Form>
                </FormTemplate>
              </WrappedFormTemplate>
            </Component>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </EvacuateForm>
</Provider>
`;

exports[`evacuate form component should render evacuate form with multiple instances 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <EvacuateForm
    recordId=""
  >
    <Connect(MiqFormRenderer)
      buttonsLabels={
        Object {
          "submitLabel": "Submit",
        }
      }
      canReset={false}
      className="evacuate_form"
      disableSubmit={
        Array [
          "invalid",
        ]
      }
      initialValues={
        Object {
          "auto_select_host": true,
          "on_shared_storage": true,
        }
      }
      onCancel={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "component": "checkbox",
                  "id": "auto_select_host",
                  "isDisabled": true,
                  "label": "Auto-select Host?",
                  "name": "auto_select_host",
                  "validateOnMount": true,
                },
                Object {
                  "component": "checkbox",
                  "id": "on_shared_storage",
                  "label": "On Shared Storage",
                  "name": "on_shared_storage",
                  "validateOnMount": true,
                },
                Object {
                  "component": "password-field",
                  "condition": Object {
                    "is": false,
                    "when": "on_shared_storage",
                  },
                  "id": "admin_password",
                  "isRequired": true,
                  "label": "Admin Password",
                  "name": "admin_password",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "select",
                  "condition": Object {
                    "is": false,
                    "when": "auto_select_host",
                  },
                  "id": "destination_host",
                  "includeEmpty": true,
                  "isRequired": true,
                  "labelText": "Hosts",
                  "name": "destination_host",
                  "options": Array [],
                  "placeholder": "<Choose>",
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
              ],
              "name": "EvacuateInstance",
              "title": "Evacuate Host",
            },
          ],
        }
      }
    >
      <MiqFormRenderer
        buttonsLabels={
          Object {
            "submitLabel": "Submit",
          }
        }
        canReset={false}
        className="evacuate_form"
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "radio": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "auto_select_host": true,
            "on_shared_storage": true,
          }
        }
        onCancel={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "component": "checkbox",
                    "id": "auto_select_host",
                    "isDisabled": true,
                    "label": "Auto-select Host?",
                    "name": "auto_select_host",
                    "validateOnMount": true,
                  },
                  Object {
                    "component": "checkbox",
                    "id": "on_shared_storage",
                    "label": "On Shared Storage",
                    "name": "on_shared_storage",
                    "validateOnMount": true,
                  },
                  Object {
                    "component": "password-field",
                    "condition": Object {
                      "is": false,
                      "when": "on_shared_storage",
                    },
                    "id": "admin_password",
                    "isRequired": true,
                    "label": "Admin Password",
                    "name": "admin_password",
                    "validate": Array [
                      Object {
                        "type": "required",
                      },
                    ],
                  },
                  Object {
                    "component": "select",
                    "condition": Object {
                      "is": false,
                      "when": "auto_select_host",
                    },
                    "id": "destination_host",
                    "includeEmpty": true,
                    "isRequired": true,
                    "labelText": "Hosts",
                    "name": "destination_host",
                    "options": Array [],
                    "placeholder": "<Choose>",
                    "validate": Array [
                      Object {
                        "type": "required",
                      },
                    ],
                  },
                ],
                "name": "EvacuateInstance",
                "title": "Evacuate Host",
              },
            ],
          }
        }
        showFormControls={true}
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "radio": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "auto_select_host": true,
              "on_shared_storage": true,
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "component": "checkbox",
                      "id": "auto_select_host",
                      "isDisabled": true,
                      "label": "Auto-select Host?",
                      "name": "auto_select_host",
                      "validateOnMount": true,
                    },
                    Object {
                      "component": "checkbox",
                      "id": "on_shared_storage",
                      "label": "On Shared Storage",
                      "name": "on_shared_storage",
                      "validateOnMount": true,
                    },
                    Object {
                      "component": "password-field",
                      "condition": Object {
                        "is": false,
                        "when": "on_shared_storage",
                      },
                      "id": "admin_password",
                      "isRequired": true,
                      "label": "Admin Password",
                      "name": "admin_password",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "select",
                      "condition": Object {
                        "is": false,
                        "when": "auto_select_host",
                      },
                      "id": "destination_host",
                      "includeEmpty": true,
                      "isRequired": true,
                      "labelText": "Hosts",
                      "name": "destination_host",
                      "options": Array [],
                      "placeholder": "<Choose>",
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                  ],
                  "name": "EvacuateInstance",
                  "title": "Evacuate Host",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "auto_select_host": true,
                "on_shared_storage": true,
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <Component
              formFields={
                Array [
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "component": "checkbox",
                          "id": "auto_select_host",
                          "isDisabled": true,
                          "label": "Auto-select Host?",
                          "name": "auto_select_host",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "checkbox",
                          "id": "on_shared_storage",
                          "label": "On Shared Storage",
                          "name": "on_shared_storage",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "password-field",
                          "condition": Object {
                            "is": false,
                            "when": "on_shared_storage",
                          },
                          "id": "admin_password",
                          "isRequired": true,
                          "label": "Admin Password",
                          "name": "admin_password",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": false,
                            "when": "auto_select_host",
                          },
                          "id": "destination_host",
                          "includeEmpty": true,
                          "isRequired": true,
                          "labelText": "Hosts",
                          "name": "destination_host",
                          "options": Array [],
                          "placeholder": "<Choose>",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ]
                    }
                    name="EvacuateInstance"
                    title="Evacuate Host"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "component": "checkbox",
                          "id": "auto_select_host",
                          "isDisabled": true,
                          "label": "Auto-select Host?",
                          "name": "auto_select_host",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "checkbox",
                          "id": "on_shared_storage",
                          "label": "On Shared Storage",
                          "name": "on_shared_storage",
                          "validateOnMount": true,
                        },
                        Object {
                          "component": "password-field",
                          "condition": Object {
                            "is": false,
                            "when": "on_shared_storage",
                          },
                          "id": "admin_password",
                          "isRequired": true,
                          "label": "Admin Password",
                          "name": "admin_password",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "select",
                          "condition": Object {
                            "is": false,
                            "when": "auto_select_host",
                          },
                          "id": "destination_host",
                          "includeEmpty": true,
                          "isRequired": true,
                          "labelText": "Hosts",
                          "name": "destination_host",
                          "options": Array [],
                          "placeholder": "<Choose>",
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                      ],
                      "name": "EvacuateInstance",
                      "title": "Evacuate Host",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <WrappedFormTemplate
                canReset={false}
                cancelLabel="Cancel"
                disableSubmit={
                  Array [
                    "invalid",
                  ]
                }
                formFields={
                  Array [
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "component": "checkbox",
                            "id": "auto_select_host",
                            "isDisabled": true,
                            "label": "Auto-select Host?",
                            "name": "auto_select_host",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "checkbox",
                            "id": "on_shared_storage",
                            "label": "On Shared Storage",
                            "name": "on_shared_storage",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "password-field",
                            "condition": Object {
                              "is": false,
                              "when": "on_shared_storage",
                            },
                            "id": "admin_password",
                            "isRequired": true,
                            "label": "Admin Password",
                            "name": "admin_password",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": false,
                              "when": "auto_select_host",
                            },
                            "id": "destination_host",
                            "includeEmpty": true,
                            "isRequired": true,
                            "labelText": "Hosts",
                            "name": "destination_host",
                            "options": Array [],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                        ]
                      }
                      name="EvacuateInstance"
                      title="Evacuate Host"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                formWrapperProps={
                  Object {
                    "className": "evacuate_form",
                  }
                }
                resetLabel="Reset"
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "component": "checkbox",
                            "id": "auto_select_host",
                            "isDisabled": true,
                            "label": "Auto-select Host?",
                            "name": "auto_select_host",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "checkbox",
                            "id": "on_shared_storage",
                            "label": "On Shared Storage",
                            "name": "on_shared_storage",
                            "validateOnMount": true,
                          },
                          Object {
                            "component": "password-field",
                            "condition": Object {
                              "is": false,
                              "when": "on_shared_storage",
                            },
                            "id": "admin_password",
                            "isRequired": true,
                            "label": "Admin Password",
                            "name": "admin_password",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                          Object {
                            "component": "select",
                            "condition": Object {
                              "is": false,
                              "when": "auto_select_host",
                            },
                            "id": "destination_host",
                            "includeEmpty": true,
                            "isRequired": true,
                            "labelText": "Hosts",
                            "name": "destination_host",
                            "options": Array [],
                            "placeholder": "<Choose>",
                            "validate": Array [
                              Object {
                                "type": "required",
                              },
                            ],
                          },
                        ],
                        "name": "EvacuateInstance",
                        "title": "Evacuate Host",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
                showFormControls={true}
                submitLabel="Submit"
              >
                <FormTemplate
                  Button={[Function]}
                  ButtonGroup={[Function]}
                  Description={[Function]}
                  FormWrapper={[Function]}
                  Header={[Function]}
                  Title={[Function]}
                  buttonOrder={
                    Array [
                      "submit",
                      "reset",
                      "cancel",
                    ]
                  }
                  canReset={false}
                  cancelLabel="Cancel"
                  disableSubmit={
                    Array [
                      "invalid",
                    ]
                  }
                  formFields={
                    Array [
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "component": "checkbox",
                              "id": "auto_select_host",
                              "isDisabled": true,
                              "label": "Auto-select Host?",
                              "name": "auto_select_host",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "checkbox",
                              "id": "on_shared_storage",
                              "label": "On Shared Storage",
                              "name": "on_shared_storage",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "password-field",
                              "condition": Object {
                                "is": false,
                                "when": "on_shared_storage",
                              },
                              "id": "admin_password",
                              "isRequired": true,
                              "label": "Admin Password",
                              "name": "admin_password",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "condition": Object {
                                "is": false,
                                "when": "auto_select_host",
                              },
                              "id": "destination_host",
                              "includeEmpty": true,
                              "isRequired": true,
                              "labelText": "Hosts",
                              "name": "destination_host",
                              "options": Array [],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ]
                        }
                        name="EvacuateInstance"
                        title="Evacuate Host"
                      />,
                      <SingleField
                        component="spy-field"
                        name="spy-field"
                      />,
                    ]
                  }
                  formWrapperProps={
                    Object {
                      "className": "evacuate_form",
                    }
                  }
                  resetLabel="Reset"
                  schema={
                    Object {
                      "fields": Array [
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "component": "checkbox",
                              "id": "auto_select_host",
                              "isDisabled": true,
                              "label": "Auto-select Host?",
                              "name": "auto_select_host",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "checkbox",
                              "id": "on_shared_storage",
                              "label": "On Shared Storage",
                              "name": "on_shared_storage",
                              "validateOnMount": true,
                            },
                            Object {
                              "component": "password-field",
                              "condition": Object {
                                "is": false,
                                "when": "on_shared_storage",
                              },
                              "id": "admin_password",
                              "isRequired": true,
                              "label": "Admin Password",
                              "name": "admin_password",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "select",
                              "condition": Object {
                                "is": false,
                                "when": "auto_select_host",
                              },
                              "id": "destination_host",
                              "includeEmpty": true,
                              "isRequired": true,
                              "labelText": "Hosts",
                              "name": "destination_host",
                              "options": Array [],
                              "placeholder": "<Choose>",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "name": "EvacuateInstance",
                          "title": "Evacuate Host",
                        },
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        },
                      ],
                    }
                  }
                  showFormControls={true}
                  submitLabel="Submit"
                >
                  <Form
                    className="evacuate_form"
                    onSubmit={[Function]}
                  >
                    <Form
                      className="form-0-2-3 evacuate_form"
                      noValidate={true}
                      onSubmit={[Function]}
                    >
                      <form
                        className="bx--form form-0-2-3 evacuate_form"
                        noValidate={true}
                        onSubmit={[Function]}
                      >
                         
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "component": "checkbox",
                                "id": "auto_select_host",
                                "isDisabled": true,
                                "label": "Auto-select Host?",
                                "name": "auto_select_host",
                                "validateOnMount": true,
                              },
                              Object {
                                "component": "checkbox",
                                "id": "on_shared_storage",
                                "label": "On Shared Storage",
                                "name": "on_shared_storage",
                                "validateOnMount": true,
                              },
                              Object {
                                "component": "password-field",
                                "condition": Object {
                                  "is": false,
                                  "when": "on_shared_storage",
                                },
                                "id": "admin_password",
                                "isRequired": true,
                                "label": "Admin Password",
                                "name": "admin_password",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                              Object {
                                "component": "select",
                                "condition": Object {
                                  "is": false,
                                  "when": "auto_select_host",
                                },
                                "id": "destination_host",
                                "includeEmpty": true,
                                "isRequired": true,
                                "labelText": "Hosts",
                                "name": "destination_host",
                                "options": Array [],
                                "placeholder": "<Choose>",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ]
                          }
                          key="EvacuateInstance"
                          name="EvacuateInstance"
                          title="Evacuate Host"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "checkbox",
                                    "id": "auto_select_host",
                                    "isDisabled": true,
                                    "label": "Auto-select Host?",
                                    "name": "auto_select_host",
                                    "validateOnMount": true,
                                  },
                                  Object {
                                    "component": "checkbox",
                                    "id": "on_shared_storage",
                                    "label": "On Shared Storage",
                                    "name": "on_shared_storage",
                                    "validateOnMount": true,
                                  },
                                  Object {
                                    "component": "password-field",
                                    "condition": Object {
                                      "is": false,
                                      "when": "on_shared_storage",
                                    },
                                    "id": "admin_password",
                                    "isRequired": true,
                                    "label": "Admin Password",
                                    "name": "admin_password",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "select",
                                    "condition": Object {
                                      "is": false,
                                      "when": "auto_select_host",
                                    },
                                    "id": "destination_host",
                                    "includeEmpty": true,
                                    "isRequired": true,
                                    "labelText": "Hosts",
                                    "name": "destination_host",
                                    "options": Array [],
                                    "placeholder": "<Choose>",
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                ],
                                "name": "EvacuateInstance",
                                "title": "Evacuate Host",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "component": "checkbox",
                                      "id": "auto_select_host",
                                      "isDisabled": true,
                                      "label": "Auto-select Host?",
                                      "name": "auto_select_host",
                                      "validateOnMount": true,
                                    },
                                    Object {
                                      "component": "checkbox",
                                      "id": "on_shared_storage",
                                      "label": "On Shared Storage",
                                      "name": "on_shared_storage",
                                      "validateOnMount": true,
                                    },
                                    Object {
                                      "component": "password-field",
                                      "condition": Object {
                                        "is": false,
                                        "when": "on_shared_storage",
                                      },
                                      "id": "admin_password",
                                      "isRequired": true,
                                      "label": "Admin Password",
                                      "name": "admin_password",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "select",
                                      "condition": Object {
                                        "is": false,
                                        "when": "auto_select_host",
                                      },
                                      "id": "destination_host",
                                      "includeEmpty": true,
                                      "isRequired": true,
                                      "labelText": "Hosts",
                                      "name": "destination_host",
                                      "options": Array [],
                                      "placeholder": "<Choose>",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                  ]
                                }
                                name="EvacuateInstance"
                                title="Evacuate Host"
                              >
                                <div
                                  className=""
                                  name="EvacuateInstance"
                                >
                                  <div>
                                    <h3>
                                      Evacuate Host
                                    </h3>
                                  </div>
                                  <SingleField
                                    component="checkbox"
                                    id="auto_select_host"
                                    isDisabled={true}
                                    key="auto_select_host"
                                    label="Auto-select Host?"
                                    name="auto_select_host"
                                    validateOnMount={true}
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "component": "checkbox",
                                          "id": "auto_select_host",
                                          "isDisabled": true,
                                          "label": "Auto-select Host?",
                                          "name": "auto_select_host",
                                          "validateOnMount": true,
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <Checkbox
                                          component="checkbox"
                                          id="auto_select_host"
                                          isDisabled={true}
                                          label="Auto-select Host?"
                                          name="auto_select_host"
                                          validateOnMount={true}
                                        >
                                          <SingleCheckbox
                                            component="checkbox"
                                            id="auto_select_host"
                                            isDisabled={true}
                                            label="Auto-select Host?"
                                            name="auto_select_host"
                                            validateOnMount={true}
                                          >
                                            <div>
                                              <Checkbox
                                                checked={true}
                                                disabled={true}
                                                id="auto_select_host"
                                                indeterminate={false}
                                                labelText="Auto-select Host?"
                                                name="auto_select_host"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                type="checkbox"
                                              >
                                                <div
                                                  className="bx--form-item bx--checkbox-wrapper"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="bx--checkbox"
                                                    disabled={true}
                                                    id="auto_select_host"
                                                    name="auto_select_host"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <label
                                                    className="bx--checkbox-label"
                                                    htmlFor="auto_select_host"
                                                    title={null}
                                                  >
                                                    <Text
                                                      className="bx--checkbox-label-text"
                                                    >
                                                      <span
                                                        className="bx--checkbox-label-text"
                                                        dir="auto"
                                                      >
                                                        Auto-select Host?
                                                      </span>
                                                    </Text>
                                                  </label>
                                                </div>
                                              </Checkbox>
                                              <HelperTextBlock />
                                            </div>
                                          </SingleCheckbox>
                                        </Checkbox>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                  <SingleField
                                    component="checkbox"
                                    id="on_shared_storage"
                                    key="on_shared_storage"
                                    label="On Shared Storage"
                                    name="on_shared_storage"
                                    validateOnMount={true}
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "component": "checkbox",
                                          "id": "on_shared_storage",
                                          "label": "On Shared Storage",
                                          "name": "on_shared_storage",
                                          "validateOnMount": true,
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <Checkbox
                                          component="checkbox"
                                          id="on_shared_storage"
                                          label="On Shared Storage"
                                          name="on_shared_storage"
                                          validateOnMount={true}
                                        >
                                          <SingleCheckbox
                                            component="checkbox"
                                            id="on_shared_storage"
                                            label="On Shared Storage"
                                            name="on_shared_storage"
                                            validateOnMount={true}
                                          >
                                            <div>
                                              <Checkbox
                                                checked={true}
                                                id="on_shared_storage"
                                                indeterminate={false}
                                                labelText="On Shared Storage"
                                                name="on_shared_storage"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                type="checkbox"
                                              >
                                                <div
                                                  className="bx--form-item bx--checkbox-wrapper"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="bx--checkbox"
                                                    id="on_shared_storage"
                                                    name="on_shared_storage"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <label
                                                    className="bx--checkbox-label"
                                                    htmlFor="on_shared_storage"
                                                    title={null}
                                                  >
                                                    <Text
                                                      className="bx--checkbox-label-text"
                                                    >
                                                      <span
                                                        className="bx--checkbox-label-text"
                                                        dir="auto"
                                                      >
                                                        On Shared Storage
                                                      </span>
                                                    </Text>
                                                  </label>
                                                </div>
                                              </Checkbox>
                                              <HelperTextBlock />
                                            </div>
                                          </SingleCheckbox>
                                        </Checkbox>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                  <SingleField
                                    component="password-field"
                                    condition={
                                      Object {
                                        "is": false,
                                        "when": "on_shared_storage",
                                      }
                                    }
                                    id="admin_password"
                                    isRequired={true}
                                    key="admin_password"
                                    label="Admin Password"
                                    name="admin_password"
                                    validate={
                                      Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ]
                                    }
                                  >
                                    <FormConditionWrapper
                                      condition={
                                        Object {
                                          "is": false,
                                          "when": "on_shared_storage",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "password-field",
                                          "id": "admin_password",
                                          "isRequired": true,
                                          "label": "Admin Password",
                                          "name": "admin_password",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        }
                                      }
                                    >
                                      <ConditionTriggerDetector
                                        condition={
                                          Object {
                                            "is": false,
                                            "when": "on_shared_storage",
                                          }
                                        }
                                        field={
                                          Object {
                                            "component": "password-field",
                                            "id": "admin_password",
                                            "isRequired": true,
                                            "label": "Admin Password",
                                            "name": "admin_password",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          }
                                        }
                                        triggers={
                                          Array [
                                            "on_shared_storage",
                                          ]
                                        }
                                      >
                                        <ForwardRef(Field)
                                          name="on_shared_storage"
                                          subscription={
                                            Object {
                                              "value": true,
                                            }
                                          }
                                        >
                                          <ConditionTriggerDetector
                                            condition={
                                              Object {
                                                "is": false,
                                                "when": "on_shared_storage",
                                              }
                                            }
                                            field={
                                              Object {
                                                "component": "password-field",
                                                "id": "admin_password",
                                                "isRequired": true,
                                                "label": "Admin Password",
                                                "name": "admin_password",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              }
                                            }
                                            triggers={Array []}
                                            values={
                                              Object {
                                                "on_shared_storage": true,
                                              }
                                            }
                                          >
                                            <ConditionTriggerWrapper
                                              condition={
                                                Object {
                                                  "is": false,
                                                  "when": "on_shared_storage",
                                                }
                                              }
                                              field={
                                                Object {
                                                  "component": "password-field",
                                                  "id": "admin_password",
                                                  "isRequired": true,
                                                  "label": "Admin Password",
                                                  "name": "admin_password",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                }
                                              }
                                              values={
                                                Object {
                                                  "on_shared_storage": true,
                                                }
                                              }
                                            >
                                              <Component
                                                condition={
                                                  Object {
                                                    "is": false,
                                                    "when": "on_shared_storage",
                                                  }
                                                }
                                                field={
                                                  Object {
                                                    "component": "password-field",
                                                    "id": "admin_password",
                                                    "isRequired": true,
                                                    "label": "Admin Password",
                                                    "name": "admin_password",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  }
                                                }
                                                values={
                                                  Object {
                                                    "on_shared_storage": true,
                                                  }
                                                }
                                              />
                                            </ConditionTriggerWrapper>
                                          </ConditionTriggerDetector>
                                        </ForwardRef(Field)>
                                      </ConditionTriggerDetector>
                                    </FormConditionWrapper>
                                  </SingleField>
                                  <SingleField
                                    component="select"
                                    condition={
                                      Object {
                                        "is": false,
                                        "when": "auto_select_host",
                                      }
                                    }
                                    id="destination_host"
                                    includeEmpty={true}
                                    isRequired={true}
                                    key="destination_host"
                                    labelText="Hosts"
                                    name="destination_host"
                                    options={Array []}
                                    placeholder="<Choose>"
                                    validate={
                                      Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ]
                                    }
                                  >
                                    <FormConditionWrapper
                                      condition={
                                        Object {
                                          "is": false,
                                          "when": "auto_select_host",
                                        }
                                      }
                                      field={
                                        Object {
                                          "component": "select",
                                          "id": "destination_host",
                                          "includeEmpty": true,
                                          "isRequired": true,
                                          "labelText": "Hosts",
                                          "name": "destination_host",
                                          "options": Array [],
                                          "placeholder": "<Choose>",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        }
                                      }
                                    >
                                      <ConditionTriggerDetector
                                        condition={
                                          Object {
                                            "is": false,
                                            "when": "auto_select_host",
                                          }
                                        }
                                        field={
                                          Object {
                                            "component": "select",
                                            "id": "destination_host",
                                            "includeEmpty": true,
                                            "isRequired": true,
                                            "labelText": "Hosts",
                                            "name": "destination_host",
                                            "options": Array [],
                                            "placeholder": "<Choose>",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          }
                                        }
                                        triggers={
                                          Array [
                                            "auto_select_host",
                                          ]
                                        }
                                      >
                                        <ForwardRef(Field)
                                          name="auto_select_host"
                                          subscription={
                                            Object {
                                              "value": true,
                                            }
                                          }
                                        >
                                          <ConditionTriggerDetector
                                            condition={
                                              Object {
                                                "is": false,
                                                "when": "auto_select_host",
                                              }
                                            }
                                            field={
                                              Object {
                                                "component": "select",
                                                "id": "destination_host",
                                                "includeEmpty": true,
                                                "isRequired": true,
                                                "labelText": "Hosts",
                                                "name": "destination_host",
                                                "options": Array [],
                                                "placeholder": "<Choose>",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              }
                                            }
                                            triggers={Array []}
                                            values={
                                              Object {
                                                "auto_select_host": true,
                                              }
                                            }
                                          >
                                            <ConditionTriggerWrapper
                                              condition={
                                                Object {
                                                  "is": false,
                                                  "when": "auto_select_host",
                                                }
                                              }
                                              field={
                                                Object {
                                                  "component": "select",
                                                  "id": "destination_host",
                                                  "includeEmpty": true,
                                                  "isRequired": true,
                                                  "labelText": "Hosts",
                                                  "name": "destination_host",
                                                  "options": Array [],
                                                  "placeholder": "<Choose>",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                }
                                              }
                                              values={
                                                Object {
                                                  "auto_select_host": true,
                                                }
                                              }
                                            >
                                              <Component
                                                condition={
                                                  Object {
                                                    "is": false,
                                                    "when": "auto_select_host",
                                                  }
                                                }
                                                field={
                                                  Object {
                                                    "component": "select",
                                                    "id": "destination_host",
                                                    "includeEmpty": true,
                                                    "isRequired": true,
                                                    "labelText": "Hosts",
                                                    "name": "destination_host",
                                                    "options": Array [],
                                                    "placeholder": "<Choose>",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  }
                                                }
                                                values={
                                                  Object {
                                                    "auto_select_host": true,
                                                  }
                                                }
                                              />
                                            </ConditionTriggerWrapper>
                                          </ConditionTriggerDetector>
                                        </ForwardRef(Field)>
                                      </ConditionTriggerDetector>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="spy-field"
                          key="spy-field"
                          name="spy-field"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "spy-field",
                                "initialize": undefined,
                                "name": "spy-field",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SpyField
                                component="spy-field"
                                name="spy-field"
                              >
                                <FormSpy
                                  onChange={[Function]}
                                  subscription={
                                    Object {
                                      "pristine": true,
                                      "valid": true,
                                    }
                                  }
                                />
                              </SpyField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <FormSpy>
                          <FormControls
                            Button={[Function]}
                            ButtonGroup={[Function]}
                            FormSpy={[Function]}
                            buttonOrder={
                              Array [
                                "submit",
                                "reset",
                                "cancel",
                              ]
                            }
                            buttonsProps={Object {}}
                            canReset={false}
                            canSubmit={false}
                            cancelLabel="Cancel"
                            formFields={
                              Array [
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "component": "checkbox",
                                        "id": "auto_select_host",
                                        "isDisabled": true,
                                        "label": "Auto-select Host?",
                                        "name": "auto_select_host",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "checkbox",
                                        "id": "on_shared_storage",
                                        "label": "On Shared Storage",
                                        "name": "on_shared_storage",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "password-field",
                                        "condition": Object {
                                          "is": false,
                                          "when": "on_shared_storage",
                                        },
                                        "id": "admin_password",
                                        "isRequired": true,
                                        "label": "Admin Password",
                                        "name": "admin_password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": false,
                                          "when": "auto_select_host",
                                        },
                                        "id": "destination_host",
                                        "includeEmpty": true,
                                        "isRequired": true,
                                        "labelText": "Hosts",
                                        "name": "destination_host",
                                        "options": Array [],
                                        "placeholder": "<Choose>",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                  name="EvacuateInstance"
                                  title="Evacuate Host"
                                />,
                                <SingleField
                                  component="spy-field"
                                  name="spy-field"
                                />,
                              ]
                            }
                            formSpyProps={
                              Object {
                                "active": undefined,
                                "dirty": false,
                                "dirtyFields": Object {},
                                "dirtyFieldsSinceLastSubmit": Object {},
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "errors": Object {},
                                "form": Object {
                                  "batch": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "destroyOnUnregister": false,
                                  "focus": [Function],
                                  "getFieldState": [Function],
                                  "getRegisteredFields": [Function],
                                  "getState": [Function],
                                  "initialize": [Function],
                                  "isValidationPaused": [Function],
                                  "mutators": Object {
                                    "concat": [Function],
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeBatch": [Function],
                                    "shift": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                    "update": [Function],
                                  },
                                  "pauseValidation": [Function],
                                  "registerField": [Function],
                                  "reset": [Function],
                                  "resetFieldState": [Function],
                                  "restart": [Function],
                                  "resumeValidation": [Function],
                                  "setConfig": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "hasSubmitErrors": false,
                                "hasValidationErrors": false,
                                "initialValues": Object {
                                  "auto_select_host": true,
                                  "on_shared_storage": true,
                                },
                                "invalid": false,
                                "modified": Object {},
                                "modifiedSinceLastSubmit": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitErrors": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "touched": Object {},
                                "valid": true,
                                "validating": false,
                                "values": Object {
                                  "auto_select_host": true,
                                  "on_shared_storage": true,
                                },
                                "visited": Object {},
                              }
                            }
                            onCancel={[Function]}
                            onReset={[Function]}
                            resetLabel="Reset"
                            schema={
                              Object {
                                "fields": Array [
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "checkbox",
                                        "id": "auto_select_host",
                                        "isDisabled": true,
                                        "label": "Auto-select Host?",
                                        "name": "auto_select_host",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "checkbox",
                                        "id": "on_shared_storage",
                                        "label": "On Shared Storage",
                                        "name": "on_shared_storage",
                                        "validateOnMount": true,
                                      },
                                      Object {
                                        "component": "password-field",
                                        "condition": Object {
                                          "is": false,
                                          "when": "on_shared_storage",
                                        },
                                        "id": "admin_password",
                                        "isRequired": true,
                                        "label": "Admin Password",
                                        "name": "admin_password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "select",
                                        "condition": Object {
                                          "is": false,
                                          "when": "auto_select_host",
                                        },
                                        "id": "destination_host",
                                        "includeEmpty": true,
                                        "isRequired": true,
                                        "labelText": "Hosts",
                                        "name": "destination_host",
                                        "options": Array [],
                                        "placeholder": "<Choose>",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "name": "EvacuateInstance",
                                    "title": "Evacuate Host",
                                  },
                                  Object {
                                    "component": "spy-field",
                                    "initialize": undefined,
                                    "name": "spy-field",
                                  },
                                ],
                              }
                            }
                            submitLabel="Submit"
                          >
                            <ButtonGroup>
                              <ButtonSet
                                className=""
                              >
                                <div
                                  className="bx--btn-set"
                                >
                                  <Button
                                    buttonType="submit"
                                    key="form-submit"
                                    label="Submit"
                                    type="submit"
                                    variant="primary"
                                  >
                                    <Button
                                      kind="primary"
                                      type="submit"
                                      variant="primary"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--primary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="submit"
                                        variant="primary"
                                      >
                                        Submit
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="cancel"
                                    key="form-cancel"
                                    label="Cancel"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Cancel
                                      </button>
                                    </Button>
                                  </Button>
                                </div>
                              </ButtonSet>
                            </ButtonGroup>
                          </FormControls>
                        </FormSpy>
                         
                      </form>
                    </Form>
                  </Form>
                </FormTemplate>
              </WrappedFormTemplate>
            </Component>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </EvacuateForm>
</Provider>
`;
