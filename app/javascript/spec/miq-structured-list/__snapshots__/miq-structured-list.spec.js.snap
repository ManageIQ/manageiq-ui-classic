// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Structured list component should render a miq_policy_set show page without double escaping strings 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion miq_policy_set"
>
  <AccordionItem
    open={true}
    title="Policies"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list miq_policy_set"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Description
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Description",
                "value": "& Application SLA &",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className="clickable"
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title="View this Policy"
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "icon": "pficon pficon-image",
                "onclick": "DoNav('/miq_policy/show/1');",
                "title": "View this Policy",
                "value": "description one &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className="clickable"
          key="2"
          onClick={[Function]}
          tabIndex={2}
          title="View this Policy"
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "icon": "pficon pficon-container-node",
                "onclick": "DoNav('/miq_policy/show/2');",
                "title": "View this Policy",
                "value": "description two &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className="clickable"
          key="3"
          onClick={[Function]}
          tabIndex={3}
          title="View this Policy"
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "icon": "pficon pficon-virtual-machine",
                "onclick": "DoNav('/miq_policy/show/3');",
                "title": "View this Policy",
                "value": "description three &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render a multilink_list table 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion multilink_table"
>
  <AccordionItem
    open={true}
    title="Some OpenStack Stuff"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list bordered-list multilink_table"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "sub_items": Array [
                  Object {
                    "icon": "pficon pficon-ok",
                    "link": "/host/host_services/18?db=host&host_service_group=1&status=running",
                    "title": "Show list of running Aodh",
                    "value": "Running (3)",
                  },
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of failed Aodh",
                    "value": "Failed (0)",
                  },
                  Object {
                    "icon": "pficon pficon-service",
                    "link": "/host/host_services/18?db=host&host_service_group=1&status=all",
                    "title": "Show list of all Aodh",
                    "value": "All (3)",
                  },
                  Object {
                    "icon": "fa fa-file-o",
                    "link": null,
                    "title": "Show list of configuration files of Aodh",
                    "value": "Configuration (0)",
                  },
                ],
                "value": "Aodh",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "sub_items": Array [
                  Object {
                    "icon": "pficon pficon-ok",
                    "link": "/host/host_services/18?db=host&host_service_group=2&status=running",
                    "title": "Show list of running Ceilometer",
                    "value": "Running (3)",
                  },
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of failed Ceilometer",
                    "value": "Failed (0)",
                  },
                  Object {
                    "icon": "pficon pficon-service",
                    "link": "/host/host_services/18?db=host&host_service_group=2&status=all",
                    "title": "Show list of all Ceilometer",
                    "value": "All (3)",
                  },
                  Object {
                    "icon": "fa fa-file-o",
                    "link": null,
                    "title": "Show list of configuration files of Ceilometer",
                    "value": "Configuration (0)",
                  },
                ],
                "value": "Ceilometer",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="2"
          onClick={[Function]}
          tabIndex={2}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "sub_items": Array [
                  Object {
                    "icon": "pficon pficon-ok",
                    "link": "/host/host_services/18?db=host&host_service_group=3&status=running",
                    "title": "Show list of running Cinder",
                    "value": "Running (3)",
                  },
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of failed Cinder",
                    "value": "Failed (0)",
                  },
                  Object {
                    "icon": "pficon pficon-service",
                    "link": "/host/host_services/18?db=host&host_service_group=3&status=all",
                    "title": "Show list of all Cinder",
                    "value": "All (3)",
                  },
                  Object {
                    "icon": "fa fa-file-o",
                    "link": null,
                    "title": "Show list of configuration files of Cinder",
                    "value": "Configuration (0)",
                  },
                ],
                "value": "Cinder",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="3"
          onClick={[Function]}
          tabIndex={3}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "sub_items": Array [
                  Object {
                    "icon": "pficon pficon-ok",
                    "link": "/host/host_services/18?db=host&host_service_group=4&status=running",
                    "title": "Show list of running Glance",
                    "value": "Running (2)",
                  },
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of failed Glance",
                    "value": "Failed (0)",
                  },
                  Object {
                    "icon": "pficon pficon-service",
                    "link": "/host/host_services/18?db=host&host_service_group=4&status=all",
                    "title": "Show list of all Glance",
                    "value": "All (2)",
                  },
                  Object {
                    "icon": "fa fa-file-o",
                    "link": null,
                    "title": "Show list of configuration files of Glance",
                    "value": "Configuration (0)",
                  },
                ],
                "value": "Glance",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="4"
          onClick={[Function]}
          tabIndex={4}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "sub_items": Array [
                  Object {
                    "icon": "pficon pficon-ok",
                    "link": "/host/host_services/18?db=host&host_service_group=5&status=running",
                    "title": "Show list of running Gnocchi",
                    "value": "Running (2)",
                  },
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of failed Gnocchi",
                    "value": "Failed (0)",
                  },
                  Object {
                    "icon": "pficon pficon-service",
                    "link": "/host/host_services/18?db=host&host_service_group=5&status=all",
                    "title": "Show list of all Gnocchi",
                    "value": "All (2)",
                  },
                  Object {
                    "icon": "fa fa-file-o",
                    "link": null,
                    "title": "Show list of configuration files of Gnocchi",
                    "value": "Configuration (0)",
                  },
                ],
                "value": "Gnocchi",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="5"
          onClick={[Function]}
          tabIndex={5}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "sub_items": Array [
                  Object {
                    "icon": "pficon pficon-ok",
                    "link": "/host/host_services/18?db=host&host_service_group=6&status=running",
                    "title": "Show list of running Heat",
                    "value": "Running (4)",
                  },
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of failed Heat",
                    "value": "Failed (0)",
                  },
                  Object {
                    "icon": "pficon pficon-service",
                    "link": "/host/host_services/18?db=host&host_service_group=6&status=all",
                    "title": "Show list of all Heat",
                    "value": "All (4)",
                  },
                  Object {
                    "icon": "fa fa-file-o",
                    "link": null,
                    "title": "Show list of configuration files of Heat",
                    "value": "Configuration (0)",
                  },
                ],
                "value": "Heat",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="6"
          onClick={[Function]}
          tabIndex={6}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "sub_items": Array [
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of running Keystone",
                    "value": "Running (0)",
                  },
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of failed Keystone",
                    "value": "Failed (0)",
                  },
                  Object {
                    "icon": "pficon pficon-service",
                    "link": "/host/host_services/18?db=host&host_service_group=7&status=all",
                    "title": "Show list of all Keystone",
                    "value": "All (1)",
                  },
                  Object {
                    "icon": "fa fa-file-o",
                    "link": null,
                    "title": "Show list of configuration files of Keystone",
                    "value": "Configuration (0)",
                  },
                ],
                "value": "Keystone",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="7"
          onClick={[Function]}
          tabIndex={7}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "sub_items": Array [
                  Object {
                    "icon": "pficon pficon-ok",
                    "link": "/host/host_services/18?db=host&host_service_group=8&status=running",
                    "title": "Show list of running Nova",
                    "value": "Running (5)",
                  },
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of failed Nova",
                    "value": "Failed (0)",
                  },
                  Object {
                    "icon": "pficon pficon-service",
                    "link": "/host/host_services/18?db=host&host_service_group=8&status=all",
                    "title": "Show list of all Nova",
                    "value": "All (10)",
                  },
                  Object {
                    "icon": "fa fa-file-o",
                    "link": null,
                    "title": "Show list of configuration files of Nova",
                    "value": "Configuration (0)",
                  },
                ],
                "value": "Nova",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="8"
          onClick={[Function]}
          tabIndex={8}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "sub_items": Array [
                  Object {
                    "icon": "pficon pficon-ok",
                    "link": "/host/host_services/18?db=host&host_service_group=9&status=running",
                    "title": "Show list of running Swift",
                    "value": "Running (14)",
                  },
                  Object {
                    "icon": null,
                    "link": null,
                    "title": "Show list of failed Swift",
                    "value": "Failed (0)",
                  },
                  Object {
                    "icon": "pficon pficon-service",
                    "link": "/host/host_services/18?db=host&host_service_group=9&status=all",
                    "title": "Show list of all Swift",
                    "value": "All (14)",
                  },
                  Object {
                    "icon": "fa fa-file-o",
                    "link": null,
                    "title": "Show list of configuration files of Swift",
                    "value": "Configuration (0)",
                  },
                ],
                "value": "Swift",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render a operation_range table 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion operation_ranges"
>
  <AccordionItem
    open={true}
    title="Operation Ranges"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list operation_ranges"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            CPU
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "hoverClass": "no-hover",
                "label": "CPU",
                "value": Array [
                  Object {
                    "label": "Max",
                    "value": "Not Available",
                  },
                  Object {
                    "label": "High",
                    "value": "0 MHz",
                  },
                  Object {
                    "label": "Average",
                    "value": "0 MHz",
                  },
                  Object {
                    "label": "Low",
                    "value": "0 MHz",
                  },
                ],
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            CPU Usage
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "hoverClass": "no-hover",
                "label": "CPU Usage",
                "value": Array [
                  Object {
                    "label": "Max",
                    "value": "Not Available",
                  },
                  Object {
                    "label": "High",
                    "value": "0.00%",
                  },
                  Object {
                    "label": "Average",
                    "value": "0.00%",
                  },
                  Object {
                    "label": "Low",
                    "value": "0.00%",
                  },
                ],
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render a report_information page without double escaping strings 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion miq_report_schedules"
>
  <AccordionItem
    open={true}
    title="report_information"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list miq_report_schedules"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Last Run Time
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Last Run Time",
                "value": "& 2022-12-07 02:00:00 UTC &",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Next Run Time
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Next Run Time",
                "value": "& 2022-12-07 02:00:00 UTC &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render a simple_table 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion simple_table"
>
  <AccordionItem
    open={true}
    title="Firewall Rules"
  >
    <NotificationMessage
      message="No entries found for firewall rules"
      type="info"
    />
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render a simple_table with generic data 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion simple_table"
>
  <AccordionItem
    open={true}
    title="Foo Bar"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list bordered-list simple_table"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            foo
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "hoverClass": "bar",
                "label": "foo",
                "value": "bar",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            mrkef?
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "hoverClass": "bar",
                "label": "mrkef?",
                "value": "v zime!",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render a simple_table with sortable and expandable data 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion simple_table"
>
  <AccordionItem
    open={true}
    title="Build Instances"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list bordered-list simple_table"
    >
      <MiqStructuredListHeader
        headers={
          Array [
            "Name",
            "Phase",
            "Message",
            "Reason",
            "Pod",
            "Output Image",
            "Start Timestamp",
            Object {
              "sortable": "desc",
              "value": "Completion Timestamp",
            },
            "Duration",
          ]
        }
      />
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Array [
                "cart-1",
                "Complete",
                Object {
                  "expandable": true,
                  "value": null,
                },
                null,
                "No Pod",
                Object {
                  "expandable": true,
                  "value": "docker-registry.default.svc:5000/coolstore/cart:latest",
                },
                "2018-01-13T23:53:59Z",
                "2018-01-13T23:57:57Z",
                "3m58s",
              ]
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render a table_list_view table 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion table_list_view"
>
  <AccordionItem
    open={true}
    title="Tables with the Most Rows"
  >
    <NotificationMessage
      message="No entries found for tables with the most rows"
      type="info"
    />
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render a tag_group table 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion tag_group"
>
  <AccordionItem
    open={true}
    title="Smart Management"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list tag_group"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Managed by Zone
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "hoverClass": "no-hover",
                "icon": "pficon pficon-zone",
                "label": "Managed by Zone",
                "value": "default",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            My Company X Tags
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "hoverClass": "no-hover",
                "label": "My Company X Tags",
                "value": Array [
                  Object {
                    "icon": "fa fa-tag",
                    "label": "Dan Test",
                    "value": Array [
                      "Test 1",
                    ],
                  },
                  Object {
                    "icon": "fa fa-tag",
                    "label": "Demo bla",
                    "value": Array [
                      "Policy",
                      "2",
                    ],
                  },
                ],
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="2"
          onClick={[Function]}
          tabIndex={2}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Other Tags
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Other Tags",
                "title": "All Other Tags",
                "value": Array [
                  Object {
                    "icon": "fa fa-tag",
                    "label": "Test",
                    "value": Array [
                      "Test 1",
                    ],
                  },
                  Object {
                    "icon": "fa fa-tag",
                    "label": "Demo 2",
                    "value": Array [
                      "Policy",
                      "2",
                      "3",
                    ],
                  },
                  Object {
                    "link": "You clicked on Demo 3",
                    "title": "Click to display the item",
                    "value": Array [
                      "Demo 3",
                    ],
                  },
                ],
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render catalog_data with escaped strings 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion catalog_list_view"
>
  <AccordionItem
    open={true}
    title="Basic Information"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list catalog_list_view"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Name / Description
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Name / Description",
                "value": "GCE Catalog item / Test &",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Catalog
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Catalog",
                "value": "My Own && Catalog",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="2"
          onClick={[Function]}
          tabIndex={2}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Zone
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Zone",
                "value": "Google",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render miq policy data without double escaping strings 1`] = `
<FeatureToggle(StructuredListWrapper)
  ariaLabel="Structured list"
  className="miq-structured-list miq_policy_details"
>
  <FeatureToggle(StructuredListBody)>
    <FeatureToggle(StructuredListRow)
      className=""
      key="0"
      onClick={[Function]}
      tabIndex={0}
      title=""
    >
      <FeatureToggle(StructuredListCell)
        className="label_header"
      >
        Active
      </FeatureToggle(StructuredListCell)>
      <SummaryValue
        onClick={[Function]}
        row={
          Object {
            "label": "Active",
            "value": "Yes &",
          }
        }
      />
    </FeatureToggle(StructuredListRow)>
    <FeatureToggle(StructuredListRow)
      className=""
      key="1"
      onClick={[Function]}
      tabIndex={1}
      title=""
    >
      <FeatureToggle(StructuredListCell)
        className="label_header"
      >
        Created
      </FeatureToggle(StructuredListCell)>
      <SummaryValue
        onClick={[Function]}
        row={
          Object {
            "label": "Created",
            "value": "By Username Thor Odinson && at 2020-10-10 15T $UTC",
          }
        }
      />
    </FeatureToggle(StructuredListRow)>
    <FeatureToggle(StructuredListRow)
      className=""
      key="2"
      onClick={[Function]}
      tabIndex={2}
      title=""
    >
      <FeatureToggle(StructuredListCell)
        className="label_header"
      >
        Last Updated
      </FeatureToggle(StructuredListCell)>
      <SummaryValue
        onClick={[Function]}
        row={
          Object {
            "label": "Last Updated",
            "value": "By Username Lord Loki && at 2020-10-10 15T $UTC &",
          }
        }
      />
    </FeatureToggle(StructuredListRow)>
    <FeatureToggle(StructuredListRow)
      className="clickable"
      key="3"
      onClick={[Function]}
      tabIndex={3}
      title="View this Action"
    >
      <SummaryValue
        onClick={[Function]}
        row={
          Object {
            "icon": "pficon pficon-close",
            "onclick": "DoNav('/miq_action/show/1');",
            "title": "View this Action",
            "value": "Test &&",
          }
        }
      />
    </FeatureToggle(StructuredListRow)>
  </FeatureToggle(StructuredListBody)>
</FeatureToggle(StructuredListWrapper)>
`;

exports[`Structured list component should render miq_ae_class_list_view with escaped strings 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion table_list_view"
>
  <AccordionItem
    open={true}
    title="Properties"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list table_list_view"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Fully Qualified Name
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Fully Qualified Name",
                "value": "ManageIQ / Automation Management / Test &",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Name
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Name",
                "value": "Thor Odinson",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="2"
          onClick={[Function]}
          tabIndex={2}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Instances
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Instances",
                "value": "1 &",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render miq_alert_show page without double escaping strings 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion miq_alert_id"
>
  <AccordionItem
    open={true}
    title="Belongs to Alert profiles"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list miq_alert_id"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className="clickable"
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title="View this Alert Profile"
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "icon": "pficon pficon-warning-triangle-o",
                "onclick": "DoNav('/miq_alert_set/show/1');",
                "title": "View this Alert Profile",
                "value": "view this &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render miq_reports_data without double escaping strings 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion miq_policy_set"
>
  <AccordionItem
    open={true}
    title="Policies"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list miq_policy_set"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Description
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Description",
                "value": "& Application SLA &",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className="clickable"
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title="View this Policy"
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "icon": "pficon pficon-image",
                "onclick": "DoNav('/miq_policy/show/1');",
                "title": "View this Policy",
                "value": "description one &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className="clickable"
          key="2"
          onClick={[Function]}
          tabIndex={2}
          title="View this Policy"
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "icon": "pficon pficon-container-node",
                "onclick": "DoNav('/miq_policy/show/2');",
                "title": "View this Policy",
                "value": "description two &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className="clickable"
          key="3"
          onClick={[Function]}
          tabIndex={3}
          title="View this Policy"
        >
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "icon": "pficon pficon-virtual-machine",
                "onclick": "DoNav('/miq_policy/show/3');",
                "title": "View this Policy",
                "value": "description three &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render report_schedule page without double escaping strings 1`] = `
<Accordion
  align="start"
  className="miq-structured-list-accordion miq_report_schedule_info"
>
  <AccordionItem
    open={true}
    title="Schedule Info"
  >
    <FeatureToggle(StructuredListWrapper)
      ariaLabel="Structured list"
      className="miq-structured-list miq_report_schedule_info"
    >
      <FeatureToggle(StructuredListBody)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="0"
          onClick={[Function]}
          tabIndex={0}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Description
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Description",
                "value": "My_Host Network Information &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="1"
          onClick={[Function]}
          tabIndex={1}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Active
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Active",
                "value": "True &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="2"
          onClick={[Function]}
          tabIndex={2}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            E-Mail after Running
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "E-Mail after Running",
                "value": "True &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="3"
          onClick={[Function]}
          tabIndex={3}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            From E-mail
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "From E-mail",
                "value": "(Default: test@test.com) &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
        <FeatureToggle(StructuredListRow)
          className=""
          key="4"
          onClick={[Function]}
          tabIndex={4}
          title=""
        >
          <FeatureToggle(StructuredListCell)
            className="label_header"
          >
            Run At
          </FeatureToggle(StructuredListCell)>
          <SummaryValue
            onClick={[Function]}
            row={
              Object {
                "label": "Run At",
                "value": "&& Run once on Thu Nov 15 01:10:00 UTC 2018 &&",
              }
            }
          />
        </FeatureToggle(StructuredListRow)>
      </FeatureToggle(StructuredListBody)>
    </FeatureToggle(StructuredListWrapper)>
  </AccordionItem>
</Accordion>
`;

exports[`Structured list component should render settings list 1`] = `
<FeatureToggle(StructuredListWrapper)
  ariaLabel="Structured list"
  className="miq-structured-list selected_server_roles"
>
  <FeatureToggle(StructuredListBody)>
    <FeatureToggle(StructuredListRow)
      className=""
      key="0"
      onClick={[Function]}
      tabIndex={0}
      title=""
    >
      <SummaryValue
        onClick={[Function]}
        row={
          Object {
            "icon": "pficon pficon-server fa-5x",
          }
        }
      />
    </FeatureToggle(StructuredListRow)>
    <FeatureToggle(StructuredListRow)
      className=""
      key="1"
      onClick={[Function]}
      tabIndex={1}
      title=""
    >
      <FeatureToggle(StructuredListCell)
        className="label_header"
      >
        Server
      </FeatureToggle(StructuredListCell)>
      <SummaryValue
        onClick={[Function]}
        row={
          Object {
            "label": "Server",
            "value": "EVM(17)",
          }
        }
      />
    </FeatureToggle(StructuredListRow)>
    <FeatureToggle(StructuredListRow)
      className=""
      key="2"
      onClick={[Function]}
      tabIndex={2}
      title=""
    >
      <FeatureToggle(StructuredListCell)
        className="label_header"
      >
        IP Address
      </FeatureToggle(StructuredListCell)>
      <SummaryValue
        onClick={[Function]}
        row={
          Object {
            "label": "IP Address",
            "value": "127.1.1.0",
          }
        }
      />
    </FeatureToggle(StructuredListRow)>
    <FeatureToggle(StructuredListRow)
      className=""
      key="3"
      onClick={[Function]}
      tabIndex={3}
      title=""
    >
      <FeatureToggle(StructuredListCell)
        className="label_header"
      >
        Status
      </FeatureToggle(StructuredListCell)>
      <SummaryValue
        onClick={[Function]}
        row={
          Object {
            "label": "Status",
            "value": "Active",
          }
        }
      />
    </FeatureToggle(StructuredListRow)>
  </FeatureToggle(StructuredListBody)>
</FeatureToggle(StructuredListWrapper)>
`;

exports[`Structured list component should render strings without double escaping strings 1`] = `
<FeatureToggle(StructuredListWrapper)
  ariaLabel="Structured list"
  className="miq-structured-list miq_summary miq_host_devices"
>
  <FeatureToggle(StructuredListBody)>
    <FeatureToggle(StructuredListRow)
      className=""
      key="0"
      onClick={[Function]}
      tabIndex={0}
      title=""
    >
      <FeatureToggle(StructuredListCell)
        className="label_header"
      >
        Catch All
      </FeatureToggle(StructuredListCell)>
      <SummaryValue
        onClick={[Function]}
        row={
          Object {
            "icon": "pficon pficon-unknown",
            "label": "Catch All",
            "value": "< A test to HTML's \\"Escape\\" logic Hello&Goodbye >",
          }
        }
      />
    </FeatureToggle(StructuredListRow)>
  </FeatureToggle(StructuredListBody)>
</FeatureToggle(StructuredListWrapper)>
`;
