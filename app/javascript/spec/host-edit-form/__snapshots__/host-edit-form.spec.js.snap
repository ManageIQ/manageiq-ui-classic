// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Show Edit Host Form Component should render form for *one* host 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <HostEditForm
    ids={
      Array [
        1,
      ]
    }
  >
    <Connect(MiqFormRenderer)
      canReset={true}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "protocol-selector": [Function],
          "radio": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "validate-host-credentials": [Function],
          "wizard": [Function],
        }
      }
      initialValues={
        Object {
          "authentications": Object {},
          "ems_id": "2",
          "host_validate_against": 1,
          "hostname": null,
          "id": "1",
          "ipaddress": "10.197.65.254",
          "name": "10.197.65.254",
          "type": "ManageIQ::Providers::IbmPowerHmc::InfraManager::Host",
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "text-field",
              "id": "name",
              "isDisabled": true,
              "label": "Name:",
              "name": "name",
            },
            Object {
              "component": "text-field",
              "id": "hostname",
              "isDisabled": true,
              "label": "Hostname (or IPv4 or IPv6 address:",
              "name": "hostname",
            },
            Object {
              "component": "text-field",
              "id": "custom_identifier",
              "isDisabled": true,
              "label": "Custom Identifier:",
              "name": "custom_identifier",
            },
            Object {
              "component": "sub-form",
              "fields": Array [
                Object {
                  "component": "tabs",
                  "fields": Array [
                    Object {
                      "component": "tab-item",
                      "fields": Array [
                        Object {
                          "component": "validate-host-credentials",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "id": "authentications.default.userid",
                              "isRequired": true,
                              "label": "Username",
                              "name": "authentications.default.userid",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "password-field",
                              "id": "authentications.default.password",
                              "isRequired": true,
                              "label": "Password",
                              "name": "authentications.default.password",
                              "type": "password",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "endpoints.default.valid",
                          "isRequired": true,
                          "name": "endpoints.default.valid",
                          "skipSubmit": true,
                        },
                      ],
                      "id": "default-tab",
                      "name": "default-tab",
                      "title": "Default",
                    },
                    Object {
                      "component": "tab-item",
                      "fields": Array [
                        Object {
                          "component": "validate-host-credentials",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "id": "authentications.remote.userid",
                              "isRequired": true,
                              "label": "Username",
                              "name": "authentications.remote.userid",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "password-field",
                              "helperText": "Required if SSH login is disabled for the Default account.",
                              "id": "authentications.remote.password",
                              "isRequired": true,
                              "label": "Password",
                              "name": "authentications.remote.password",
                              "type": "password",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "endpoints.remote.valid",
                          "isRequired": true,
                          "name": "endpoints.remote.valid",
                          "skipSubmit": true,
                        },
                      ],
                      "id": "remote-tab",
                      "name": "remote-tab",
                      "title": "Remote Login",
                    },
                    Object {
                      "component": "tab-item",
                      "fields": Array [
                        Object {
                          "component": "validate-host-credentials",
                          "fields": Array [
                            Object {
                              "component": "text-field",
                              "id": "authentications.ws.userid",
                              "isRequired": true,
                              "label": "Username",
                              "name": "authentications.ws.userid",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                            Object {
                              "component": "password-field",
                              "helperText": "Used for access to Web Services.",
                              "id": "authentications.ws.password",
                              "isRequired": true,
                              "label": "Password",
                              "name": "authentications.ws.password",
                              "type": "password",
                              "validate": Array [
                                Object {
                                  "type": "required",
                                },
                              ],
                            },
                          ],
                          "id": "endpoints.ws.valid",
                          "isRequired": true,
                          "name": "endpoints.ws.valid",
                          "skipSubmit": true,
                        },
                      ],
                      "id": "ws-tab",
                      "name": "ws-tab",
                      "title": "Web Service",
                    },
                  ],
                  "name": "tabs",
                },
              ],
              "id": "endpoints-subform",
              "name": "endpoints-subform",
              "title": "Endpoints",
            },
          ],
        }
      }
    >
      <MiqFormRenderer
        buttonsLabels={Object {}}
        canReset={true}
        className="form-react"
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "protocol-selector": [Function],
            "radio": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "validate-host-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        initialValues={
          Object {
            "authentications": Object {},
            "ems_id": "2",
            "host_validate_against": 1,
            "hostname": null,
            "id": "1",
            "ipaddress": "10.197.65.254",
            "name": "10.197.65.254",
            "type": "ManageIQ::Providers::IbmPowerHmc::InfraManager::Host",
          }
        }
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "text-field",
                "id": "name",
                "isDisabled": true,
                "label": "Name:",
                "name": "name",
              },
              Object {
                "component": "text-field",
                "id": "hostname",
                "isDisabled": true,
                "label": "Hostname (or IPv4 or IPv6 address:",
                "name": "hostname",
              },
              Object {
                "component": "text-field",
                "id": "custom_identifier",
                "isDisabled": true,
                "label": "Custom Identifier:",
                "name": "custom_identifier",
              },
              Object {
                "component": "sub-form",
                "fields": Array [
                  Object {
                    "component": "tabs",
                    "fields": Array [
                      Object {
                        "component": "tab-item",
                        "fields": Array [
                          Object {
                            "component": "validate-host-credentials",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "id": "authentications.default.userid",
                                "isRequired": true,
                                "label": "Username",
                                "name": "authentications.default.userid",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                              Object {
                                "component": "password-field",
                                "id": "authentications.default.password",
                                "isRequired": true,
                                "label": "Password",
                                "name": "authentications.default.password",
                                "type": "password",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "endpoints.default.valid",
                            "isRequired": true,
                            "name": "endpoints.default.valid",
                            "skipSubmit": true,
                          },
                        ],
                        "id": "default-tab",
                        "name": "default-tab",
                        "title": "Default",
                      },
                      Object {
                        "component": "tab-item",
                        "fields": Array [
                          Object {
                            "component": "validate-host-credentials",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "id": "authentications.remote.userid",
                                "isRequired": true,
                                "label": "Username",
                                "name": "authentications.remote.userid",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                              Object {
                                "component": "password-field",
                                "helperText": "Required if SSH login is disabled for the Default account.",
                                "id": "authentications.remote.password",
                                "isRequired": true,
                                "label": "Password",
                                "name": "authentications.remote.password",
                                "type": "password",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "endpoints.remote.valid",
                            "isRequired": true,
                            "name": "endpoints.remote.valid",
                            "skipSubmit": true,
                          },
                        ],
                        "id": "remote-tab",
                        "name": "remote-tab",
                        "title": "Remote Login",
                      },
                      Object {
                        "component": "tab-item",
                        "fields": Array [
                          Object {
                            "component": "validate-host-credentials",
                            "fields": Array [
                              Object {
                                "component": "text-field",
                                "id": "authentications.ws.userid",
                                "isRequired": true,
                                "label": "Username",
                                "name": "authentications.ws.userid",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                              Object {
                                "component": "password-field",
                                "helperText": "Used for access to Web Services.",
                                "id": "authentications.ws.password",
                                "isRequired": true,
                                "label": "Password",
                                "name": "authentications.ws.password",
                                "type": "password",
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              },
                            ],
                            "id": "endpoints.ws.valid",
                            "isRequired": true,
                            "name": "endpoints.ws.valid",
                            "skipSubmit": true,
                          },
                        ],
                        "id": "ws-tab",
                        "name": "ws-tab",
                        "title": "Web Service",
                      },
                    ],
                    "name": "tabs",
                  },
                ],
                "id": "endpoints-subform",
                "name": "endpoints-subform",
                "title": "Endpoints",
              },
            ],
          }
        }
        showFormControls={true}
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "protocol-selector": [Function],
              "radio": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "validate-host-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={
            Object {
              "authentications": Object {},
              "ems_id": "2",
              "host_validate_against": 1,
              "hostname": null,
              "id": "1",
              "ipaddress": "10.197.65.254",
              "name": "10.197.65.254",
              "type": "ManageIQ::Providers::IbmPowerHmc::InfraManager::Host",
            }
          }
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "text-field",
                  "id": "name",
                  "isDisabled": true,
                  "label": "Name:",
                  "name": "name",
                },
                Object {
                  "component": "text-field",
                  "id": "hostname",
                  "isDisabled": true,
                  "label": "Hostname (or IPv4 or IPv6 address:",
                  "name": "hostname",
                },
                Object {
                  "component": "text-field",
                  "id": "custom_identifier",
                  "isDisabled": true,
                  "label": "Custom Identifier:",
                  "name": "custom_identifier",
                },
                Object {
                  "component": "sub-form",
                  "fields": Array [
                    Object {
                      "component": "tabs",
                      "fields": Array [
                        Object {
                          "component": "tab-item",
                          "fields": Array [
                            Object {
                              "component": "validate-host-credentials",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "id": "authentications.default.userid",
                                  "isRequired": true,
                                  "label": "Username",
                                  "name": "authentications.default.userid",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "password-field",
                                  "id": "authentications.default.password",
                                  "isRequired": true,
                                  "label": "Password",
                                  "name": "authentications.default.password",
                                  "type": "password",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "endpoints.default.valid",
                              "isRequired": true,
                              "name": "endpoints.default.valid",
                              "skipSubmit": true,
                            },
                          ],
                          "id": "default-tab",
                          "name": "default-tab",
                          "title": "Default",
                        },
                        Object {
                          "component": "tab-item",
                          "fields": Array [
                            Object {
                              "component": "validate-host-credentials",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "id": "authentications.remote.userid",
                                  "isRequired": true,
                                  "label": "Username",
                                  "name": "authentications.remote.userid",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "password-field",
                                  "helperText": "Required if SSH login is disabled for the Default account.",
                                  "id": "authentications.remote.password",
                                  "isRequired": true,
                                  "label": "Password",
                                  "name": "authentications.remote.password",
                                  "type": "password",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "endpoints.remote.valid",
                              "isRequired": true,
                              "name": "endpoints.remote.valid",
                              "skipSubmit": true,
                            },
                          ],
                          "id": "remote-tab",
                          "name": "remote-tab",
                          "title": "Remote Login",
                        },
                        Object {
                          "component": "tab-item",
                          "fields": Array [
                            Object {
                              "component": "validate-host-credentials",
                              "fields": Array [
                                Object {
                                  "component": "text-field",
                                  "id": "authentications.ws.userid",
                                  "isRequired": true,
                                  "label": "Username",
                                  "name": "authentications.ws.userid",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                                Object {
                                  "component": "password-field",
                                  "helperText": "Used for access to Web Services.",
                                  "id": "authentications.ws.password",
                                  "isRequired": true,
                                  "label": "Password",
                                  "name": "authentications.ws.password",
                                  "type": "password",
                                  "validate": Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ],
                                },
                              ],
                              "id": "endpoints.ws.valid",
                              "isRequired": true,
                              "name": "endpoints.ws.valid",
                              "skipSubmit": true,
                            },
                          ],
                          "id": "ws-tab",
                          "name": "ws-tab",
                          "title": "Web Service",
                        },
                      ],
                      "name": "tabs",
                    },
                  ],
                  "id": "endpoints-subform",
                  "name": "endpoints-subform",
                  "title": "Endpoints",
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={
              Object {
                "authentications": Object {},
                "ems_id": "2",
                "host_validate_against": 1,
                "hostname": null,
                "id": "1",
                "ipaddress": "10.197.65.254",
                "name": "10.197.65.254",
                "type": "ManageIQ::Providers::IbmPowerHmc::InfraManager::Host",
              }
            }
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <Component
              formFields={
                Array [
                  <SingleField
                    component="text-field"
                    id="name"
                    isDisabled={true}
                    label="Name:"
                    name="name"
                  />,
                  <SingleField
                    component="text-field"
                    id="hostname"
                    isDisabled={true}
                    label="Hostname (or IPv4 or IPv6 address:"
                    name="hostname"
                  />,
                  <SingleField
                    component="text-field"
                    id="custom_identifier"
                    isDisabled={true}
                    label="Custom Identifier:"
                    name="custom_identifier"
                  />,
                  <SingleField
                    component="sub-form"
                    fields={
                      Array [
                        Object {
                          "component": "tabs",
                          "fields": Array [
                            Object {
                              "component": "tab-item",
                              "fields": Array [
                                Object {
                                  "component": "validate-host-credentials",
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "id": "authentications.default.userid",
                                      "isRequired": true,
                                      "label": "Username",
                                      "name": "authentications.default.userid",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "password-field",
                                      "id": "authentications.default.password",
                                      "isRequired": true,
                                      "label": "Password",
                                      "name": "authentications.default.password",
                                      "type": "password",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "endpoints.default.valid",
                                  "isRequired": true,
                                  "name": "endpoints.default.valid",
                                  "skipSubmit": true,
                                },
                              ],
                              "id": "default-tab",
                              "name": "default-tab",
                              "title": "Default",
                            },
                            Object {
                              "component": "tab-item",
                              "fields": Array [
                                Object {
                                  "component": "validate-host-credentials",
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "id": "authentications.remote.userid",
                                      "isRequired": true,
                                      "label": "Username",
                                      "name": "authentications.remote.userid",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "password-field",
                                      "helperText": "Required if SSH login is disabled for the Default account.",
                                      "id": "authentications.remote.password",
                                      "isRequired": true,
                                      "label": "Password",
                                      "name": "authentications.remote.password",
                                      "type": "password",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "endpoints.remote.valid",
                                  "isRequired": true,
                                  "name": "endpoints.remote.valid",
                                  "skipSubmit": true,
                                },
                              ],
                              "id": "remote-tab",
                              "name": "remote-tab",
                              "title": "Remote Login",
                            },
                            Object {
                              "component": "tab-item",
                              "fields": Array [
                                Object {
                                  "component": "validate-host-credentials",
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "id": "authentications.ws.userid",
                                      "isRequired": true,
                                      "label": "Username",
                                      "name": "authentications.ws.userid",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "password-field",
                                      "helperText": "Used for access to Web Services.",
                                      "id": "authentications.ws.password",
                                      "isRequired": true,
                                      "label": "Password",
                                      "name": "authentications.ws.password",
                                      "type": "password",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "endpoints.ws.valid",
                                  "isRequired": true,
                                  "name": "endpoints.ws.valid",
                                  "skipSubmit": true,
                                },
                              ],
                              "id": "ws-tab",
                              "name": "ws-tab",
                              "title": "Web Service",
                            },
                          ],
                          "name": "tabs",
                        },
                      ]
                    }
                    id="endpoints-subform"
                    name="endpoints-subform"
                    title="Endpoints"
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "component": "text-field",
                      "id": "name",
                      "isDisabled": true,
                      "label": "Name:",
                      "name": "name",
                    },
                    Object {
                      "component": "text-field",
                      "id": "hostname",
                      "isDisabled": true,
                      "label": "Hostname (or IPv4 or IPv6 address:",
                      "name": "hostname",
                    },
                    Object {
                      "component": "text-field",
                      "id": "custom_identifier",
                      "isDisabled": true,
                      "label": "Custom Identifier:",
                      "name": "custom_identifier",
                    },
                    Object {
                      "component": "sub-form",
                      "fields": Array [
                        Object {
                          "component": "tabs",
                          "fields": Array [
                            Object {
                              "component": "tab-item",
                              "fields": Array [
                                Object {
                                  "component": "validate-host-credentials",
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "id": "authentications.default.userid",
                                      "isRequired": true,
                                      "label": "Username",
                                      "name": "authentications.default.userid",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "password-field",
                                      "id": "authentications.default.password",
                                      "isRequired": true,
                                      "label": "Password",
                                      "name": "authentications.default.password",
                                      "type": "password",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "endpoints.default.valid",
                                  "isRequired": true,
                                  "name": "endpoints.default.valid",
                                  "skipSubmit": true,
                                },
                              ],
                              "id": "default-tab",
                              "name": "default-tab",
                              "title": "Default",
                            },
                            Object {
                              "component": "tab-item",
                              "fields": Array [
                                Object {
                                  "component": "validate-host-credentials",
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "id": "authentications.remote.userid",
                                      "isRequired": true,
                                      "label": "Username",
                                      "name": "authentications.remote.userid",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "password-field",
                                      "helperText": "Required if SSH login is disabled for the Default account.",
                                      "id": "authentications.remote.password",
                                      "isRequired": true,
                                      "label": "Password",
                                      "name": "authentications.remote.password",
                                      "type": "password",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "endpoints.remote.valid",
                                  "isRequired": true,
                                  "name": "endpoints.remote.valid",
                                  "skipSubmit": true,
                                },
                              ],
                              "id": "remote-tab",
                              "name": "remote-tab",
                              "title": "Remote Login",
                            },
                            Object {
                              "component": "tab-item",
                              "fields": Array [
                                Object {
                                  "component": "validate-host-credentials",
                                  "fields": Array [
                                    Object {
                                      "component": "text-field",
                                      "id": "authentications.ws.userid",
                                      "isRequired": true,
                                      "label": "Username",
                                      "name": "authentications.ws.userid",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                    Object {
                                      "component": "password-field",
                                      "helperText": "Used for access to Web Services.",
                                      "id": "authentications.ws.password",
                                      "isRequired": true,
                                      "label": "Password",
                                      "name": "authentications.ws.password",
                                      "type": "password",
                                      "validate": Array [
                                        Object {
                                          "type": "required",
                                        },
                                      ],
                                    },
                                  ],
                                  "id": "endpoints.ws.valid",
                                  "isRequired": true,
                                  "name": "endpoints.ws.valid",
                                  "skipSubmit": true,
                                },
                              ],
                              "id": "ws-tab",
                              "name": "ws-tab",
                              "title": "Web Service",
                            },
                          ],
                          "name": "tabs",
                        },
                      ],
                      "id": "endpoints-subform",
                      "name": "endpoints-subform",
                      "title": "Endpoints",
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <WrappedFormTemplate
                canReset={true}
                cancelLabel="Cancel"
                disableSubmit={
                  Array [
                    "pristine",
                    "invalid",
                  ]
                }
                formFields={
                  Array [
                    <SingleField
                      component="text-field"
                      id="name"
                      isDisabled={true}
                      label="Name:"
                      name="name"
                    />,
                    <SingleField
                      component="text-field"
                      id="hostname"
                      isDisabled={true}
                      label="Hostname (or IPv4 or IPv6 address:"
                      name="hostname"
                    />,
                    <SingleField
                      component="text-field"
                      id="custom_identifier"
                      isDisabled={true}
                      label="Custom Identifier:"
                      name="custom_identifier"
                    />,
                    <SingleField
                      component="sub-form"
                      fields={
                        Array [
                          Object {
                            "component": "tabs",
                            "fields": Array [
                              Object {
                                "component": "tab-item",
                                "fields": Array [
                                  Object {
                                    "component": "validate-host-credentials",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "id": "authentications.default.userid",
                                        "isRequired": true,
                                        "label": "Username",
                                        "name": "authentications.default.userid",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "password-field",
                                        "id": "authentications.default.password",
                                        "isRequired": true,
                                        "label": "Password",
                                        "name": "authentications.default.password",
                                        "type": "password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "endpoints.default.valid",
                                    "isRequired": true,
                                    "name": "endpoints.default.valid",
                                    "skipSubmit": true,
                                  },
                                ],
                                "id": "default-tab",
                                "name": "default-tab",
                                "title": "Default",
                              },
                              Object {
                                "component": "tab-item",
                                "fields": Array [
                                  Object {
                                    "component": "validate-host-credentials",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "id": "authentications.remote.userid",
                                        "isRequired": true,
                                        "label": "Username",
                                        "name": "authentications.remote.userid",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "password-field",
                                        "helperText": "Required if SSH login is disabled for the Default account.",
                                        "id": "authentications.remote.password",
                                        "isRequired": true,
                                        "label": "Password",
                                        "name": "authentications.remote.password",
                                        "type": "password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "endpoints.remote.valid",
                                    "isRequired": true,
                                    "name": "endpoints.remote.valid",
                                    "skipSubmit": true,
                                  },
                                ],
                                "id": "remote-tab",
                                "name": "remote-tab",
                                "title": "Remote Login",
                              },
                              Object {
                                "component": "tab-item",
                                "fields": Array [
                                  Object {
                                    "component": "validate-host-credentials",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "id": "authentications.ws.userid",
                                        "isRequired": true,
                                        "label": "Username",
                                        "name": "authentications.ws.userid",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "password-field",
                                        "helperText": "Used for access to Web Services.",
                                        "id": "authentications.ws.password",
                                        "isRequired": true,
                                        "label": "Password",
                                        "name": "authentications.ws.password",
                                        "type": "password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "endpoints.ws.valid",
                                    "isRequired": true,
                                    "name": "endpoints.ws.valid",
                                    "skipSubmit": true,
                                  },
                                ],
                                "id": "ws-tab",
                                "name": "ws-tab",
                                "title": "Web Service",
                              },
                            ],
                            "name": "tabs",
                          },
                        ]
                      }
                      id="endpoints-subform"
                      name="endpoints-subform"
                      title="Endpoints"
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                formWrapperProps={
                  Object {
                    "className": "form-react",
                  }
                }
                resetLabel="Reset"
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "component": "text-field",
                        "id": "name",
                        "isDisabled": true,
                        "label": "Name:",
                        "name": "name",
                      },
                      Object {
                        "component": "text-field",
                        "id": "hostname",
                        "isDisabled": true,
                        "label": "Hostname (or IPv4 or IPv6 address:",
                        "name": "hostname",
                      },
                      Object {
                        "component": "text-field",
                        "id": "custom_identifier",
                        "isDisabled": true,
                        "label": "Custom Identifier:",
                        "name": "custom_identifier",
                      },
                      Object {
                        "component": "sub-form",
                        "fields": Array [
                          Object {
                            "component": "tabs",
                            "fields": Array [
                              Object {
                                "component": "tab-item",
                                "fields": Array [
                                  Object {
                                    "component": "validate-host-credentials",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "id": "authentications.default.userid",
                                        "isRequired": true,
                                        "label": "Username",
                                        "name": "authentications.default.userid",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "password-field",
                                        "id": "authentications.default.password",
                                        "isRequired": true,
                                        "label": "Password",
                                        "name": "authentications.default.password",
                                        "type": "password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "endpoints.default.valid",
                                    "isRequired": true,
                                    "name": "endpoints.default.valid",
                                    "skipSubmit": true,
                                  },
                                ],
                                "id": "default-tab",
                                "name": "default-tab",
                                "title": "Default",
                              },
                              Object {
                                "component": "tab-item",
                                "fields": Array [
                                  Object {
                                    "component": "validate-host-credentials",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "id": "authentications.remote.userid",
                                        "isRequired": true,
                                        "label": "Username",
                                        "name": "authentications.remote.userid",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "password-field",
                                        "helperText": "Required if SSH login is disabled for the Default account.",
                                        "id": "authentications.remote.password",
                                        "isRequired": true,
                                        "label": "Password",
                                        "name": "authentications.remote.password",
                                        "type": "password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "endpoints.remote.valid",
                                    "isRequired": true,
                                    "name": "endpoints.remote.valid",
                                    "skipSubmit": true,
                                  },
                                ],
                                "id": "remote-tab",
                                "name": "remote-tab",
                                "title": "Remote Login",
                              },
                              Object {
                                "component": "tab-item",
                                "fields": Array [
                                  Object {
                                    "component": "validate-host-credentials",
                                    "fields": Array [
                                      Object {
                                        "component": "text-field",
                                        "id": "authentications.ws.userid",
                                        "isRequired": true,
                                        "label": "Username",
                                        "name": "authentications.ws.userid",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                      Object {
                                        "component": "password-field",
                                        "helperText": "Used for access to Web Services.",
                                        "id": "authentications.ws.password",
                                        "isRequired": true,
                                        "label": "Password",
                                        "name": "authentications.ws.password",
                                        "type": "password",
                                        "validate": Array [
                                          Object {
                                            "type": "required",
                                          },
                                        ],
                                      },
                                    ],
                                    "id": "endpoints.ws.valid",
                                    "isRequired": true,
                                    "name": "endpoints.ws.valid",
                                    "skipSubmit": true,
                                  },
                                ],
                                "id": "ws-tab",
                                "name": "ws-tab",
                                "title": "Web Service",
                              },
                            ],
                            "name": "tabs",
                          },
                        ],
                        "id": "endpoints-subform",
                        "name": "endpoints-subform",
                        "title": "Endpoints",
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
                showFormControls={true}
                submitLabel="Save"
              >
                <FormTemplate
                  Button={[Function]}
                  ButtonGroup={[Function]}
                  Description={[Function]}
                  FormWrapper={[Function]}
                  Header={[Function]}
                  Title={[Function]}
                  buttonOrder={
                    Array [
                      "submit",
                      "reset",
                      "cancel",
                    ]
                  }
                  canReset={true}
                  cancelLabel="Cancel"
                  disableSubmit={
                    Array [
                      "pristine",
                      "invalid",
                    ]
                  }
                  formFields={
                    Array [
                      <SingleField
                        component="text-field"
                        id="name"
                        isDisabled={true}
                        label="Name:"
                        name="name"
                      />,
                      <SingleField
                        component="text-field"
                        id="hostname"
                        isDisabled={true}
                        label="Hostname (or IPv4 or IPv6 address:"
                        name="hostname"
                      />,
                      <SingleField
                        component="text-field"
                        id="custom_identifier"
                        isDisabled={true}
                        label="Custom Identifier:"
                        name="custom_identifier"
                      />,
                      <SingleField
                        component="sub-form"
                        fields={
                          Array [
                            Object {
                              "component": "tabs",
                              "fields": Array [
                                Object {
                                  "component": "tab-item",
                                  "fields": Array [
                                    Object {
                                      "component": "validate-host-credentials",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "id": "authentications.default.userid",
                                          "isRequired": true,
                                          "label": "Username",
                                          "name": "authentications.default.userid",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "password-field",
                                          "id": "authentications.default.password",
                                          "isRequired": true,
                                          "label": "Password",
                                          "name": "authentications.default.password",
                                          "type": "password",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "endpoints.default.valid",
                                      "isRequired": true,
                                      "name": "endpoints.default.valid",
                                      "skipSubmit": true,
                                    },
                                  ],
                                  "id": "default-tab",
                                  "name": "default-tab",
                                  "title": "Default",
                                },
                                Object {
                                  "component": "tab-item",
                                  "fields": Array [
                                    Object {
                                      "component": "validate-host-credentials",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "id": "authentications.remote.userid",
                                          "isRequired": true,
                                          "label": "Username",
                                          "name": "authentications.remote.userid",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "password-field",
                                          "helperText": "Required if SSH login is disabled for the Default account.",
                                          "id": "authentications.remote.password",
                                          "isRequired": true,
                                          "label": "Password",
                                          "name": "authentications.remote.password",
                                          "type": "password",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "endpoints.remote.valid",
                                      "isRequired": true,
                                      "name": "endpoints.remote.valid",
                                      "skipSubmit": true,
                                    },
                                  ],
                                  "id": "remote-tab",
                                  "name": "remote-tab",
                                  "title": "Remote Login",
                                },
                                Object {
                                  "component": "tab-item",
                                  "fields": Array [
                                    Object {
                                      "component": "validate-host-credentials",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "id": "authentications.ws.userid",
                                          "isRequired": true,
                                          "label": "Username",
                                          "name": "authentications.ws.userid",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "password-field",
                                          "helperText": "Used for access to Web Services.",
                                          "id": "authentications.ws.password",
                                          "isRequired": true,
                                          "label": "Password",
                                          "name": "authentications.ws.password",
                                          "type": "password",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "endpoints.ws.valid",
                                      "isRequired": true,
                                      "name": "endpoints.ws.valid",
                                      "skipSubmit": true,
                                    },
                                  ],
                                  "id": "ws-tab",
                                  "name": "ws-tab",
                                  "title": "Web Service",
                                },
                              ],
                              "name": "tabs",
                            },
                          ]
                        }
                        id="endpoints-subform"
                        name="endpoints-subform"
                        title="Endpoints"
                      />,
                      <SingleField
                        component="spy-field"
                        name="spy-field"
                      />,
                    ]
                  }
                  formWrapperProps={
                    Object {
                      "className": "form-react",
                    }
                  }
                  resetLabel="Reset"
                  schema={
                    Object {
                      "fields": Array [
                        Object {
                          "component": "text-field",
                          "id": "name",
                          "isDisabled": true,
                          "label": "Name:",
                          "name": "name",
                        },
                        Object {
                          "component": "text-field",
                          "id": "hostname",
                          "isDisabled": true,
                          "label": "Hostname (or IPv4 or IPv6 address:",
                          "name": "hostname",
                        },
                        Object {
                          "component": "text-field",
                          "id": "custom_identifier",
                          "isDisabled": true,
                          "label": "Custom Identifier:",
                          "name": "custom_identifier",
                        },
                        Object {
                          "component": "sub-form",
                          "fields": Array [
                            Object {
                              "component": "tabs",
                              "fields": Array [
                                Object {
                                  "component": "tab-item",
                                  "fields": Array [
                                    Object {
                                      "component": "validate-host-credentials",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "id": "authentications.default.userid",
                                          "isRequired": true,
                                          "label": "Username",
                                          "name": "authentications.default.userid",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "password-field",
                                          "id": "authentications.default.password",
                                          "isRequired": true,
                                          "label": "Password",
                                          "name": "authentications.default.password",
                                          "type": "password",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "endpoints.default.valid",
                                      "isRequired": true,
                                      "name": "endpoints.default.valid",
                                      "skipSubmit": true,
                                    },
                                  ],
                                  "id": "default-tab",
                                  "name": "default-tab",
                                  "title": "Default",
                                },
                                Object {
                                  "component": "tab-item",
                                  "fields": Array [
                                    Object {
                                      "component": "validate-host-credentials",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "id": "authentications.remote.userid",
                                          "isRequired": true,
                                          "label": "Username",
                                          "name": "authentications.remote.userid",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "password-field",
                                          "helperText": "Required if SSH login is disabled for the Default account.",
                                          "id": "authentications.remote.password",
                                          "isRequired": true,
                                          "label": "Password",
                                          "name": "authentications.remote.password",
                                          "type": "password",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "endpoints.remote.valid",
                                      "isRequired": true,
                                      "name": "endpoints.remote.valid",
                                      "skipSubmit": true,
                                    },
                                  ],
                                  "id": "remote-tab",
                                  "name": "remote-tab",
                                  "title": "Remote Login",
                                },
                                Object {
                                  "component": "tab-item",
                                  "fields": Array [
                                    Object {
                                      "component": "validate-host-credentials",
                                      "fields": Array [
                                        Object {
                                          "component": "text-field",
                                          "id": "authentications.ws.userid",
                                          "isRequired": true,
                                          "label": "Username",
                                          "name": "authentications.ws.userid",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                        Object {
                                          "component": "password-field",
                                          "helperText": "Used for access to Web Services.",
                                          "id": "authentications.ws.password",
                                          "isRequired": true,
                                          "label": "Password",
                                          "name": "authentications.ws.password",
                                          "type": "password",
                                          "validate": Array [
                                            Object {
                                              "type": "required",
                                            },
                                          ],
                                        },
                                      ],
                                      "id": "endpoints.ws.valid",
                                      "isRequired": true,
                                      "name": "endpoints.ws.valid",
                                      "skipSubmit": true,
                                    },
                                  ],
                                  "id": "ws-tab",
                                  "name": "ws-tab",
                                  "title": "Web Service",
                                },
                              ],
                              "name": "tabs",
                            },
                          ],
                          "id": "endpoints-subform",
                          "name": "endpoints-subform",
                          "title": "Endpoints",
                        },
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        },
                      ],
                    }
                  }
                  showFormControls={true}
                  submitLabel="Save"
                >
                  <Form
                    className="form-react"
                    onSubmit={[Function]}
                  >
                    <Form
                      className="form-0-2-3 form-react"
                      noValidate={true}
                      onSubmit={[Function]}
                    >
                      <form
                        className="bx--form form-0-2-3 form-react"
                        noValidate={true}
                        onSubmit={[Function]}
                      >
                         
                        <SingleField
                          component="text-field"
                          id="name"
                          isDisabled={true}
                          key="name"
                          label="Name:"
                          name="name"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "text-field",
                                "id": "name",
                                "isDisabled": true,
                                "label": "Name:",
                                "name": "name",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <TextField
                                component="text-field"
                                id="name"
                                isDisabled={true}
                                label="Name:"
                                name="name"
                              >
                                <TextInput
                                  disabled={true}
                                  id="name"
                                  invalid={false}
                                  invalidText=""
                                  key="name"
                                  labelText="Name:"
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value="10.197.65.254"
                                  warn={false}
                                  warnText=""
                                >
                                  <div
                                    className="bx--form-item bx--text-input-wrapper"
                                  >
                                    <label
                                      className="bx--label bx--label--disabled"
                                      htmlFor="name"
                                    >
                                      Name:
                                    </label>
                                    <div
                                      className="bx--text-input__field-outer-wrapper"
                                    >
                                      <div
                                        className="bx--text-input__field-wrapper"
                                        data-invalid={null}
                                      >
                                        <input
                                          className="bx--text-input bx--text-input--md"
                                          disabled={true}
                                          id="name"
                                          name="name"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          type="text"
                                          value="10.197.65.254"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </TextInput>
                              </TextField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="text-field"
                          id="hostname"
                          isDisabled={true}
                          key="hostname"
                          label="Hostname (or IPv4 or IPv6 address:"
                          name="hostname"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "text-field",
                                "id": "hostname",
                                "isDisabled": true,
                                "label": "Hostname (or IPv4 or IPv6 address:",
                                "name": "hostname",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <TextField
                                component="text-field"
                                id="hostname"
                                isDisabled={true}
                                label="Hostname (or IPv4 or IPv6 address:"
                                name="hostname"
                              >
                                <TextInput
                                  disabled={true}
                                  id="hostname"
                                  invalid={false}
                                  invalidText=""
                                  key="hostname"
                                  labelText="Hostname (or IPv4 or IPv6 address:"
                                  name="hostname"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value=""
                                  warn={false}
                                  warnText=""
                                >
                                  <div
                                    className="bx--form-item bx--text-input-wrapper"
                                  >
                                    <label
                                      className="bx--label bx--label--disabled"
                                      htmlFor="hostname"
                                    >
                                      Hostname (or IPv4 or IPv6 address:
                                    </label>
                                    <div
                                      className="bx--text-input__field-outer-wrapper"
                                    >
                                      <div
                                        className="bx--text-input__field-wrapper"
                                        data-invalid={null}
                                      >
                                        <input
                                          className="bx--text-input bx--text-input--md"
                                          disabled={true}
                                          id="hostname"
                                          name="hostname"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </TextInput>
                              </TextField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="text-field"
                          id="custom_identifier"
                          isDisabled={true}
                          key="custom_identifier"
                          label="Custom Identifier:"
                          name="custom_identifier"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "text-field",
                                "id": "custom_identifier",
                                "isDisabled": true,
                                "label": "Custom Identifier:",
                                "name": "custom_identifier",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <TextField
                                component="text-field"
                                id="custom_identifier"
                                isDisabled={true}
                                label="Custom Identifier:"
                                name="custom_identifier"
                              >
                                <TextInput
                                  disabled={true}
                                  id="custom_identifier"
                                  invalid={false}
                                  invalidText=""
                                  key="custom_identifier"
                                  labelText="Custom Identifier:"
                                  name="custom_identifier"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value=""
                                  warn={false}
                                  warnText=""
                                >
                                  <div
                                    className="bx--form-item bx--text-input-wrapper"
                                  >
                                    <label
                                      className="bx--label bx--label--disabled"
                                      htmlFor="custom_identifier"
                                    >
                                      Custom Identifier:
                                    </label>
                                    <div
                                      className="bx--text-input__field-outer-wrapper"
                                    >
                                      <div
                                        className="bx--text-input__field-wrapper"
                                        data-invalid={null}
                                      >
                                        <input
                                          className="bx--text-input bx--text-input--md"
                                          disabled={true}
                                          id="custom_identifier"
                                          name="custom_identifier"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </TextInput>
                              </TextField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="sub-form"
                          fields={
                            Array [
                              Object {
                                "component": "tabs",
                                "fields": Array [
                                  Object {
                                    "component": "tab-item",
                                    "fields": Array [
                                      Object {
                                        "component": "validate-host-credentials",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "id": "authentications.default.userid",
                                            "isRequired": true,
                                            "label": "Username",
                                            "name": "authentications.default.userid",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                          Object {
                                            "component": "password-field",
                                            "id": "authentications.default.password",
                                            "isRequired": true,
                                            "label": "Password",
                                            "name": "authentications.default.password",
                                            "type": "password",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "endpoints.default.valid",
                                        "isRequired": true,
                                        "name": "endpoints.default.valid",
                                        "skipSubmit": true,
                                      },
                                    ],
                                    "id": "default-tab",
                                    "name": "default-tab",
                                    "title": "Default",
                                  },
                                  Object {
                                    "component": "tab-item",
                                    "fields": Array [
                                      Object {
                                        "component": "validate-host-credentials",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "id": "authentications.remote.userid",
                                            "isRequired": true,
                                            "label": "Username",
                                            "name": "authentications.remote.userid",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                          Object {
                                            "component": "password-field",
                                            "helperText": "Required if SSH login is disabled for the Default account.",
                                            "id": "authentications.remote.password",
                                            "isRequired": true,
                                            "label": "Password",
                                            "name": "authentications.remote.password",
                                            "type": "password",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "endpoints.remote.valid",
                                        "isRequired": true,
                                        "name": "endpoints.remote.valid",
                                        "skipSubmit": true,
                                      },
                                    ],
                                    "id": "remote-tab",
                                    "name": "remote-tab",
                                    "title": "Remote Login",
                                  },
                                  Object {
                                    "component": "tab-item",
                                    "fields": Array [
                                      Object {
                                        "component": "validate-host-credentials",
                                        "fields": Array [
                                          Object {
                                            "component": "text-field",
                                            "id": "authentications.ws.userid",
                                            "isRequired": true,
                                            "label": "Username",
                                            "name": "authentications.ws.userid",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                          Object {
                                            "component": "password-field",
                                            "helperText": "Used for access to Web Services.",
                                            "id": "authentications.ws.password",
                                            "isRequired": true,
                                            "label": "Password",
                                            "name": "authentications.ws.password",
                                            "type": "password",
                                            "validate": Array [
                                              Object {
                                                "type": "required",
                                              },
                                            ],
                                          },
                                        ],
                                        "id": "endpoints.ws.valid",
                                        "isRequired": true,
                                        "name": "endpoints.ws.valid",
                                        "skipSubmit": true,
                                      },
                                    ],
                                    "id": "ws-tab",
                                    "name": "ws-tab",
                                    "title": "Web Service",
                                  },
                                ],
                                "name": "tabs",
                              },
                            ]
                          }
                          id="endpoints-subform"
                          key="endpoints-subform"
                          name="endpoints-subform"
                          title="Endpoints"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "sub-form",
                                "fields": Array [
                                  Object {
                                    "component": "tabs",
                                    "fields": Array [
                                      Object {
                                        "component": "tab-item",
                                        "fields": Array [
                                          Object {
                                            "component": "validate-host-credentials",
                                            "fields": Array [
                                              Object {
                                                "component": "text-field",
                                                "id": "authentications.default.userid",
                                                "isRequired": true,
                                                "label": "Username",
                                                "name": "authentications.default.userid",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "password-field",
                                                "id": "authentications.default.password",
                                                "isRequired": true,
                                                "label": "Password",
                                                "name": "authentications.default.password",
                                                "type": "password",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                            ],
                                            "id": "endpoints.default.valid",
                                            "isRequired": true,
                                            "name": "endpoints.default.valid",
                                            "skipSubmit": true,
                                          },
                                        ],
                                        "id": "default-tab",
                                        "name": "default-tab",
                                        "title": "Default",
                                      },
                                      Object {
                                        "component": "tab-item",
                                        "fields": Array [
                                          Object {
                                            "component": "validate-host-credentials",
                                            "fields": Array [
                                              Object {
                                                "component": "text-field",
                                                "id": "authentications.remote.userid",
                                                "isRequired": true,
                                                "label": "Username",
                                                "name": "authentications.remote.userid",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "password-field",
                                                "helperText": "Required if SSH login is disabled for the Default account.",
                                                "id": "authentications.remote.password",
                                                "isRequired": true,
                                                "label": "Password",
                                                "name": "authentications.remote.password",
                                                "type": "password",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                            ],
                                            "id": "endpoints.remote.valid",
                                            "isRequired": true,
                                            "name": "endpoints.remote.valid",
                                            "skipSubmit": true,
                                          },
                                        ],
                                        "id": "remote-tab",
                                        "name": "remote-tab",
                                        "title": "Remote Login",
                                      },
                                      Object {
                                        "component": "tab-item",
                                        "fields": Array [
                                          Object {
                                            "component": "validate-host-credentials",
                                            "fields": Array [
                                              Object {
                                                "component": "text-field",
                                                "id": "authentications.ws.userid",
                                                "isRequired": true,
                                                "label": "Username",
                                                "name": "authentications.ws.userid",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "component": "password-field",
                                                "helperText": "Used for access to Web Services.",
                                                "id": "authentications.ws.password",
                                                "isRequired": true,
                                                "label": "Password",
                                                "name": "authentications.ws.password",
                                                "type": "password",
                                                "validate": Array [
                                                  Object {
                                                    "type": "required",
                                                  },
                                                ],
                                              },
                                            ],
                                            "id": "endpoints.ws.valid",
                                            "isRequired": true,
                                            "name": "endpoints.ws.valid",
                                            "skipSubmit": true,
                                          },
                                        ],
                                        "id": "ws-tab",
                                        "name": "ws-tab",
                                        "title": "Web Service",
                                      },
                                    ],
                                    "name": "tabs",
                                  },
                                ],
                                "id": "endpoints-subform",
                                "name": "endpoints-subform",
                                "title": "Endpoints",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SubForm
                                DescriptionElement="p"
                                TitleElement="h3"
                                component="sub-form"
                                fields={
                                  Array [
                                    Object {
                                      "component": "tabs",
                                      "fields": Array [
                                        Object {
                                          "component": "tab-item",
                                          "fields": Array [
                                            Object {
                                              "component": "validate-host-credentials",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "id": "authentications.default.userid",
                                                  "isRequired": true,
                                                  "label": "Username",
                                                  "name": "authentications.default.userid",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "password-field",
                                                  "id": "authentications.default.password",
                                                  "isRequired": true,
                                                  "label": "Password",
                                                  "name": "authentications.default.password",
                                                  "type": "password",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "endpoints.default.valid",
                                              "isRequired": true,
                                              "name": "endpoints.default.valid",
                                              "skipSubmit": true,
                                            },
                                          ],
                                          "id": "default-tab",
                                          "name": "default-tab",
                                          "title": "Default",
                                        },
                                        Object {
                                          "component": "tab-item",
                                          "fields": Array [
                                            Object {
                                              "component": "validate-host-credentials",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "id": "authentications.remote.userid",
                                                  "isRequired": true,
                                                  "label": "Username",
                                                  "name": "authentications.remote.userid",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "password-field",
                                                  "helperText": "Required if SSH login is disabled for the Default account.",
                                                  "id": "authentications.remote.password",
                                                  "isRequired": true,
                                                  "label": "Password",
                                                  "name": "authentications.remote.password",
                                                  "type": "password",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "endpoints.remote.valid",
                                              "isRequired": true,
                                              "name": "endpoints.remote.valid",
                                              "skipSubmit": true,
                                            },
                                          ],
                                          "id": "remote-tab",
                                          "name": "remote-tab",
                                          "title": "Remote Login",
                                        },
                                        Object {
                                          "component": "tab-item",
                                          "fields": Array [
                                            Object {
                                              "component": "validate-host-credentials",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "id": "authentications.ws.userid",
                                                  "isRequired": true,
                                                  "label": "Username",
                                                  "name": "authentications.ws.userid",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "password-field",
                                                  "helperText": "Used for access to Web Services.",
                                                  "id": "authentications.ws.password",
                                                  "isRequired": true,
                                                  "label": "Password",
                                                  "name": "authentications.ws.password",
                                                  "type": "password",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "endpoints.ws.valid",
                                              "isRequired": true,
                                              "name": "endpoints.ws.valid",
                                              "skipSubmit": true,
                                            },
                                          ],
                                          "id": "ws-tab",
                                          "name": "ws-tab",
                                          "title": "Web Service",
                                        },
                                      ],
                                      "name": "tabs",
                                    },
                                  ]
                                }
                                id="endpoints-subform"
                                name="endpoints-subform"
                                title="Endpoints"
                              >
                                <div
                                  className=""
                                  id="endpoints-subform"
                                  name="endpoints-subform"
                                >
                                  <div>
                                    <h3>
                                      Endpoints
                                    </h3>
                                  </div>
                                  <SingleField
                                    component="tabs"
                                    fields={
                                      Array [
                                        Object {
                                          "component": "tab-item",
                                          "fields": Array [
                                            Object {
                                              "component": "validate-host-credentials",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "id": "authentications.default.userid",
                                                  "isRequired": true,
                                                  "label": "Username",
                                                  "name": "authentications.default.userid",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "password-field",
                                                  "id": "authentications.default.password",
                                                  "isRequired": true,
                                                  "label": "Password",
                                                  "name": "authentications.default.password",
                                                  "type": "password",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "endpoints.default.valid",
                                              "isRequired": true,
                                              "name": "endpoints.default.valid",
                                              "skipSubmit": true,
                                            },
                                          ],
                                          "id": "default-tab",
                                          "name": "default-tab",
                                          "title": "Default",
                                        },
                                        Object {
                                          "component": "tab-item",
                                          "fields": Array [
                                            Object {
                                              "component": "validate-host-credentials",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "id": "authentications.remote.userid",
                                                  "isRequired": true,
                                                  "label": "Username",
                                                  "name": "authentications.remote.userid",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "password-field",
                                                  "helperText": "Required if SSH login is disabled for the Default account.",
                                                  "id": "authentications.remote.password",
                                                  "isRequired": true,
                                                  "label": "Password",
                                                  "name": "authentications.remote.password",
                                                  "type": "password",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "endpoints.remote.valid",
                                              "isRequired": true,
                                              "name": "endpoints.remote.valid",
                                              "skipSubmit": true,
                                            },
                                          ],
                                          "id": "remote-tab",
                                          "name": "remote-tab",
                                          "title": "Remote Login",
                                        },
                                        Object {
                                          "component": "tab-item",
                                          "fields": Array [
                                            Object {
                                              "component": "validate-host-credentials",
                                              "fields": Array [
                                                Object {
                                                  "component": "text-field",
                                                  "id": "authentications.ws.userid",
                                                  "isRequired": true,
                                                  "label": "Username",
                                                  "name": "authentications.ws.userid",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "component": "password-field",
                                                  "helperText": "Used for access to Web Services.",
                                                  "id": "authentications.ws.password",
                                                  "isRequired": true,
                                                  "label": "Password",
                                                  "name": "authentications.ws.password",
                                                  "type": "password",
                                                  "validate": Array [
                                                    Object {
                                                      "type": "required",
                                                    },
                                                  ],
                                                },
                                              ],
                                              "id": "endpoints.ws.valid",
                                              "isRequired": true,
                                              "name": "endpoints.ws.valid",
                                              "skipSubmit": true,
                                            },
                                          ],
                                          "id": "ws-tab",
                                          "name": "ws-tab",
                                          "title": "Web Service",
                                        },
                                      ]
                                    }
                                    key="tabs"
                                    name="tabs"
                                  >
                                    <FormConditionWrapper
                                      field={
                                        Object {
                                          "component": "tabs",
                                          "fields": Array [
                                            Object {
                                              "component": "tab-item",
                                              "fields": Array [
                                                Object {
                                                  "component": "validate-host-credentials",
                                                  "fields": Array [
                                                    Object {
                                                      "component": "text-field",
                                                      "id": "authentications.default.userid",
                                                      "isRequired": true,
                                                      "label": "Username",
                                                      "name": "authentications.default.userid",
                                                      "validate": Array [
                                                        Object {
                                                          "type": "required",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "component": "password-field",
                                                      "id": "authentications.default.password",
                                                      "isRequired": true,
                                                      "label": "Password",
                                                      "name": "authentications.default.password",
                                                      "type": "password",
                                                      "validate": Array [
                                                        Object {
                                                          "type": "required",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                  "id": "endpoints.default.valid",
                                                  "isRequired": true,
                                                  "name": "endpoints.default.valid",
                                                  "skipSubmit": true,
                                                },
                                              ],
                                              "id": "default-tab",
                                              "name": "default-tab",
                                              "title": "Default",
                                            },
                                            Object {
                                              "component": "tab-item",
                                              "fields": Array [
                                                Object {
                                                  "component": "validate-host-credentials",
                                                  "fields": Array [
                                                    Object {
                                                      "component": "text-field",
                                                      "id": "authentications.remote.userid",
                                                      "isRequired": true,
                                                      "label": "Username",
                                                      "name": "authentications.remote.userid",
                                                      "validate": Array [
                                                        Object {
                                                          "type": "required",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "component": "password-field",
                                                      "helperText": "Required if SSH login is disabled for the Default account.",
                                                      "id": "authentications.remote.password",
                                                      "isRequired": true,
                                                      "label": "Password",
                                                      "name": "authentications.remote.password",
                                                      "type": "password",
                                                      "validate": Array [
                                                        Object {
                                                          "type": "required",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                  "id": "endpoints.remote.valid",
                                                  "isRequired": true,
                                                  "name": "endpoints.remote.valid",
                                                  "skipSubmit": true,
                                                },
                                              ],
                                              "id": "remote-tab",
                                              "name": "remote-tab",
                                              "title": "Remote Login",
                                            },
                                            Object {
                                              "component": "tab-item",
                                              "fields": Array [
                                                Object {
                                                  "component": "validate-host-credentials",
                                                  "fields": Array [
                                                    Object {
                                                      "component": "text-field",
                                                      "id": "authentications.ws.userid",
                                                      "isRequired": true,
                                                      "label": "Username",
                                                      "name": "authentications.ws.userid",
                                                      "validate": Array [
                                                        Object {
                                                          "type": "required",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "component": "password-field",
                                                      "helperText": "Used for access to Web Services.",
                                                      "id": "authentications.ws.password",
                                                      "isRequired": true,
                                                      "label": "Password",
                                                      "name": "authentications.ws.password",
                                                      "type": "password",
                                                      "validate": Array [
                                                        Object {
                                                          "type": "required",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                  "id": "endpoints.ws.valid",
                                                  "isRequired": true,
                                                  "name": "endpoints.ws.valid",
                                                  "skipSubmit": true,
                                                },
                                              ],
                                              "id": "ws-tab",
                                              "name": "ws-tab",
                                              "title": "Web Service",
                                            },
                                          ],
                                          "name": "tabs",
                                        }
                                      }
                                    >
                                      <FormFieldHideWrapper
                                        hideField={false}
                                      >
                                        <Tabs
                                          TabWrapperProps={Object {}}
                                          component="tabs"
                                          fields={
                                            Array [
                                              Object {
                                                "component": "tab-item",
                                                "fields": Array [
                                                  Object {
                                                    "component": "validate-host-credentials",
                                                    "fields": Array [
                                                      Object {
                                                        "component": "text-field",
                                                        "id": "authentications.default.userid",
                                                        "isRequired": true,
                                                        "label": "Username",
                                                        "name": "authentications.default.userid",
                                                        "validate": Array [
                                                          Object {
                                                            "type": "required",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "component": "password-field",
                                                        "id": "authentications.default.password",
                                                        "isRequired": true,
                                                        "label": "Password",
                                                        "name": "authentications.default.password",
                                                        "type": "password",
                                                        "validate": Array [
                                                          Object {
                                                            "type": "required",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "id": "endpoints.default.valid",
                                                    "isRequired": true,
                                                    "name": "endpoints.default.valid",
                                                    "skipSubmit": true,
                                                  },
                                                ],
                                                "id": "default-tab",
                                                "name": "default-tab",
                                                "title": "Default",
                                              },
                                              Object {
                                                "component": "tab-item",
                                                "fields": Array [
                                                  Object {
                                                    "component": "validate-host-credentials",
                                                    "fields": Array [
                                                      Object {
                                                        "component": "text-field",
                                                        "id": "authentications.remote.userid",
                                                        "isRequired": true,
                                                        "label": "Username",
                                                        "name": "authentications.remote.userid",
                                                        "validate": Array [
                                                          Object {
                                                            "type": "required",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "component": "password-field",
                                                        "helperText": "Required if SSH login is disabled for the Default account.",
                                                        "id": "authentications.remote.password",
                                                        "isRequired": true,
                                                        "label": "Password",
                                                        "name": "authentications.remote.password",
                                                        "type": "password",
                                                        "validate": Array [
                                                          Object {
                                                            "type": "required",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "id": "endpoints.remote.valid",
                                                    "isRequired": true,
                                                    "name": "endpoints.remote.valid",
                                                    "skipSubmit": true,
                                                  },
                                                ],
                                                "id": "remote-tab",
                                                "name": "remote-tab",
                                                "title": "Remote Login",
                                              },
                                              Object {
                                                "component": "tab-item",
                                                "fields": Array [
                                                  Object {
                                                    "component": "validate-host-credentials",
                                                    "fields": Array [
                                                      Object {
                                                        "component": "text-field",
                                                        "id": "authentications.ws.userid",
                                                        "isRequired": true,
                                                        "label": "Username",
                                                        "name": "authentications.ws.userid",
                                                        "validate": Array [
                                                          Object {
                                                            "type": "required",
                                                          },
                                                        ],
                                                      },
                                                      Object {
                                                        "component": "password-field",
                                                        "helperText": "Used for access to Web Services.",
                                                        "id": "authentications.ws.password",
                                                        "isRequired": true,
                                                        "label": "Password",
                                                        "name": "authentications.ws.password",
                                                        "type": "password",
                                                        "validate": Array [
                                                          Object {
                                                            "type": "required",
                                                          },
                                                        ],
                                                      },
                                                    ],
                                                    "id": "endpoints.ws.valid",
                                                    "isRequired": true,
                                                    "name": "endpoints.ws.valid",
                                                    "skipSubmit": true,
                                                  },
                                                ],
                                                "id": "ws-tab",
                                                "name": "ws-tab",
                                                "title": "Web Service",
                                              },
                                            ]
                                          }
                                          name="tabs"
                                        >
                                          <Tabs
                                            scrollDebounceWait={150}
                                            scrollIntoView={true}
                                            selected={0}
                                            selectionMode="automatic"
                                            type="default"
                                          >
                                            <div
                                              className="bx--tabs--scrollable"
                                              selected={0}
                                            >
                                              <button
                                                aria-hidden="true"
                                                aria-label="Scroll left"
                                                className="bx--tab--overflow-nav-button--hidden"
                                                onClick={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseUp={[Function]}
                                                tabIndex="-1"
                                                type="button"
                                              >
                                                <ForwardRef(ChevronLeft16)>
                                                  <Icon
                                                    fill="currentColor"
                                                    height={16}
                                                    preserveAspectRatio="xMidYMid meet"
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M5 8L10 3 10.7 3.7 6.4 8 10.7 12.3 10 13z"
                                                      />
                                                    </svg>
                                                  </Icon>
                                                </ForwardRef(ChevronLeft16)>
                                              </button>
                                              <ul
                                                className="bx--tabs--scrollable__nav"
                                                onScroll={[Function]}
                                                role="tablist"
                                                tabIndex={-1}
                                              >
                                                <Tab
                                                  component="tab-item"
                                                  handleTabClick={[Function]}
                                                  handleTabKeyDown={[Function]}
                                                  id="default-tab"
                                                  index={0}
                                                  key=".$default-tab"
                                                  label="Default"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  selected={true}
                                                  tabIndex={0}
                                                >
                                                  <li
                                                    className="bx--tabs--scrollable__nav-item bx--tabs__nav-item--selected bx--tabs--scrollable__nav-item--selected"
                                                    component="tab-item"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="presentation"
                                                  >
                                                    <button
                                                      aria-controls="default-tab__panel"
                                                      aria-selected={true}
                                                      className="bx--tabs--scrollable__nav-link"
                                                      href="#"
                                                      id="default-tab"
                                                      role="tab"
                                                      tabIndex={0}
                                                      type="button"
                                                    >
                                                      Default
                                                    </button>
                                                  </li>
                                                </Tab>
                                                <Tab
                                                  component="tab-item"
                                                  handleTabClick={[Function]}
                                                  handleTabKeyDown={[Function]}
                                                  id="remote-tab"
                                                  index={1}
                                                  key=".$remote-tab"
                                                  label="Remote Login"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  selected={false}
                                                  tabIndex={-1}
                                                >
                                                  <li
                                                    className="bx--tabs--scrollable__nav-item"
                                                    component="tab-item"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="presentation"
                                                  >
                                                    <button
                                                      aria-controls="remote-tab__panel"
                                                      aria-selected={false}
                                                      className="bx--tabs--scrollable__nav-link"
                                                      href="#"
                                                      id="remote-tab"
                                                      role="tab"
                                                      tabIndex={-1}
                                                      type="button"
                                                    >
                                                      Remote Login
                                                    </button>
                                                  </li>
                                                </Tab>
                                                <Tab
                                                  component="tab-item"
                                                  handleTabClick={[Function]}
                                                  handleTabKeyDown={[Function]}
                                                  id="ws-tab"
                                                  index={2}
                                                  key=".$ws-tab"
                                                  label="Web Service"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  selected={false}
                                                  tabIndex={-1}
                                                >
                                                  <li
                                                    className="bx--tabs--scrollable__nav-item"
                                                    component="tab-item"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="presentation"
                                                  >
                                                    <button
                                                      aria-controls="ws-tab__panel"
                                                      aria-selected={false}
                                                      className="bx--tabs--scrollable__nav-link"
                                                      href="#"
                                                      id="ws-tab"
                                                      role="tab"
                                                      tabIndex={-1}
                                                      type="button"
                                                    >
                                                      Web Service
                                                    </button>
                                                  </li>
                                                </Tab>
                                              </ul>
                                              <button
                                                aria-hidden="true"
                                                aria-label="Scroll right"
                                                className="bx--tab--overflow-nav-button--hidden"
                                                onClick={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseUp={[Function]}
                                                tabIndex="-1"
                                                type="button"
                                              >
                                                <ForwardRef(ChevronRight16)>
                                                  <Icon
                                                    fill="currentColor"
                                                    height={16}
                                                    preserveAspectRatio="xMidYMid meet"
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height={16}
                                                      preserveAspectRatio="xMidYMid meet"
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M11 8L6 13 5.3 12.3 9.6 8 5.3 3.7 6 3z"
                                                      />
                                                    </svg>
                                                  </Icon>
                                                </ForwardRef(ChevronRight16)>
                                              </button>
                                            </div>
                                            <TabContent
                                              aria-labelledby="default-tab"
                                              hidden={false}
                                              id="default-tab__panel"
                                              key=".$.$default-tab"
                                              selected={true}
                                            >
                                              <div
                                                aria-labelledby="default-tab"
                                                className="bx--tab-content"
                                                hidden={false}
                                                id="default-tab__panel"
                                                role="tabpanel"
                                                selected={true}
                                              >
                                                <div
                                                  className="tab-0-2-5"
                                                >
                                                  <SingleField
                                                    component="validate-host-credentials"
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "id": "authentications.default.userid",
                                                          "isRequired": true,
                                                          "label": "Username",
                                                          "name": "authentications.default.userid",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                        Object {
                                                          "component": "password-field",
                                                          "id": "authentications.default.password",
                                                          "isRequired": true,
                                                          "label": "Password",
                                                          "name": "authentications.default.password",
                                                          "type": "password",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    id="endpoints.default.valid"
                                                    isRequired={true}
                                                    key="endpoints.default.valid"
                                                    name="endpoints.default.valid"
                                                    skipSubmit={true}
                                                  >
                                                    <FormConditionWrapper
                                                      field={
                                                        Object {
                                                          "component": "validate-host-credentials",
                                                          "fields": Array [
                                                            Object {
                                                              "component": "text-field",
                                                              "id": "authentications.default.userid",
                                                              "isRequired": true,
                                                              "label": "Username",
                                                              "name": "authentications.default.userid",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            },
                                                            Object {
                                                              "component": "password-field",
                                                              "id": "authentications.default.password",
                                                              "isRequired": true,
                                                              "label": "Password",
                                                              "name": "authentications.default.password",
                                                              "type": "password",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            },
                                                          ],
                                                          "id": "endpoints.default.valid",
                                                          "isRequired": true,
                                                          "name": "endpoints.default.valid",
                                                          "skipSubmit": true,
                                                        }
                                                      }
                                                    >
                                                      <FormFieldHideWrapper
                                                        hideField={false}
                                                      >
                                                        <ValidateHostCredentials
                                                          component="validate-host-credentials"
                                                          edit={false}
                                                          fields={
                                                            Array [
                                                              Object {
                                                                "component": "text-field",
                                                                "id": "authentications.default.userid",
                                                                "isRequired": true,
                                                                "label": "Username",
                                                                "name": "authentications.default.userid",
                                                                "validate": Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ],
                                                              },
                                                              Object {
                                                                "component": "password-field",
                                                                "id": "authentications.default.password",
                                                                "isRequired": true,
                                                                "label": "Password",
                                                                "name": "authentications.default.password",
                                                                "type": "password",
                                                                "validate": Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ],
                                                              },
                                                            ]
                                                          }
                                                          id="endpoints.default.valid"
                                                          isRequired={true}
                                                          name="endpoints.default.valid"
                                                          skipSubmit={true}
                                                          validateDefaultError="Validation Required"
                                                          validateLabel="Validate"
                                                          validation={true}
                                                          validationDependencies={Array []}
                                                          validationProgressLabel="Validating"
                                                          validationSuccessLabel="Validation successful"
                                                        >
                                                          <AsyncCredentials
                                                            asyncValidate={[Function]}
                                                            component="validate-host-credentials"
                                                            edit={true}
                                                            fields={
                                                              Array [
                                                                Object {
                                                                  "component": "text-field",
                                                                  "id": "authentications.default.userid",
                                                                  "isRequired": true,
                                                                  "label": "Username",
                                                                  "name": "authentications.default.userid",
                                                                  "validate": Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ],
                                                                },
                                                                Object {
                                                                  "component": "password-field",
                                                                  "id": "authentications.default.password",
                                                                  "isRequired": true,
                                                                  "label": "Password",
                                                                  "name": "authentications.default.password",
                                                                  "type": "password",
                                                                  "validate": Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ],
                                                                },
                                                              ]
                                                            }
                                                            id="endpoints.default.valid"
                                                            isRequired={true}
                                                            name="endpoints.default.valid"
                                                            skipSubmit={true}
                                                            validateDefaultError="Validation Required"
                                                            validateLabel="Validate"
                                                            validation={true}
                                                            validationDependencies={Array []}
                                                            validationProgressLabel="Validating"
                                                            validationSuccessLabel="Validation successful"
                                                          >
                                                            <SingleField
                                                              component="text-field"
                                                              id="authentications.default.userid"
                                                              isRequired={true}
                                                              key="authentications.default.userid"
                                                              label="Username"
                                                              name="authentications.default.userid"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <FormConditionWrapper
                                                                field={
                                                                  Object {
                                                                    "component": "text-field",
                                                                    "id": "authentications.default.userid",
                                                                    "isDisabled": undefined,
                                                                    "isRequired": true,
                                                                    "label": "Username",
                                                                    "name": "authentications.default.userid",
                                                                    "validate": Array [
                                                                      Object {
                                                                        "type": "required",
                                                                      },
                                                                    ],
                                                                  }
                                                                }
                                                              >
                                                                <FormFieldHideWrapper
                                                                  hideField={false}
                                                                >
                                                                  <TextField
                                                                    component="text-field"
                                                                    id="authentications.default.userid"
                                                                    isRequired={true}
                                                                    label="Username"
                                                                    name="authentications.default.userid"
                                                                    validate={
                                                                      Array [
                                                                        Object {
                                                                          "type": "required",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <TextInput
                                                                      id="authentications.default.userid"
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      key="authentications.default.userid"
                                                                      labelText={
                                                                        <IsRequired>
                                                                          Username
                                                                        </IsRequired>
                                                                      }
                                                                      name="authentications.default.userid"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value=""
                                                                      warn={false}
                                                                      warnText=""
                                                                    >
                                                                      <div
                                                                        className="bx--form-item bx--text-input-wrapper"
                                                                      >
                                                                        <label
                                                                          className="bx--label"
                                                                          htmlFor="authentications.default.userid"
                                                                        >
                                                                          <IsRequired>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="ddorg__carbon-component-mapper_is-required isRequired-0-2-6"
                                                                            >
                                                                              *
                                                                            </span>
                                                                            Username
                                                                          </IsRequired>
                                                                        </label>
                                                                        <div
                                                                          className="bx--text-input__field-outer-wrapper"
                                                                        >
                                                                          <div
                                                                            className="bx--text-input__field-wrapper"
                                                                            data-invalid={null}
                                                                          >
                                                                            <input
                                                                              className="bx--text-input bx--text-input--md"
                                                                              disabled={false}
                                                                              id="authentications.default.userid"
                                                                              name="authentications.default.userid"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onClick={[Function]}
                                                                              onFocus={[Function]}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </TextInput>
                                                                  </TextField>
                                                                </FormFieldHideWrapper>
                                                              </FormConditionWrapper>
                                                            </SingleField>
                                                            <SingleField
                                                              component="password-field"
                                                              edit={true}
                                                              id="authentications.default.password"
                                                              isRequired={true}
                                                              key="authentications.default.password"
                                                              label="Password"
                                                              name="authentications.default.password"
                                                              parent="endpoints.default.valid"
                                                              type="password"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <FormConditionWrapper
                                                                field={
                                                                  Object {
                                                                    "component": "password-field",
                                                                    "edit": true,
                                                                    "id": "authentications.default.password",
                                                                    "isDisabled": undefined,
                                                                    "isRequired": true,
                                                                    "label": "Password",
                                                                    "name": "authentications.default.password",
                                                                    "parent": "endpoints.default.valid",
                                                                    "type": "password",
                                                                    "validate": Array [
                                                                      Object {
                                                                        "type": "required",
                                                                      },
                                                                    ],
                                                                  }
                                                                }
                                                              >
                                                                <FormFieldHideWrapper
                                                                  hideField={false}
                                                                >
                                                                  <PasswordField
                                                                    cancelEditLabel="Cancel"
                                                                    changeEditLabel="Change"
                                                                    component="password-field"
                                                                    componentClass="text-field"
                                                                    edit={true}
                                                                    id="authentications.default.password"
                                                                    isRequired={true}
                                                                    label="Password"
                                                                    name="authentications.default.password"
                                                                    parent="endpoints.default.valid"
                                                                    type="password"
                                                                    validate={
                                                                      Array [
                                                                        Object {
                                                                          "type": "required",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <FormGroup
                                                                      hasMargin={true}
                                                                      invalid={false}
                                                                      legendText="Password"
                                                                      message={false}
                                                                      messageText=""
                                                                    >
                                                                      <fieldset
                                                                        className="bx--fieldset"
                                                                      >
                                                                        <legend
                                                                          className="bx--label"
                                                                        >
                                                                          Password
                                                                        </legend>
                                                                        <div
                                                                          className="bx--grid"
                                                                          style={
                                                                            Object {
                                                                              "marginLeft": 0,
                                                                              "paddingLeft": 0,
                                                                            }
                                                                          }
                                                                        >
                                                                          <div
                                                                            className="bx--row"
                                                                          >
                                                                            <div
                                                                              className="bx--col-lg-15 bx--col-md-7 bx--col-sm-3"
                                                                            >
                                                                              <TextInput
                                                                                autoComplete="new-password"
                                                                                disabled={true}
                                                                                id="authentications.default.password-password-placeholder"
                                                                                labelText=""
                                                                                placeholder="●●●●●●●●"
                                                                                type="password"
                                                                              >
                                                                                <div
                                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                                >
                                                                                  <div
                                                                                    className="bx--text-input__field-outer-wrapper"
                                                                                  >
                                                                                    <div
                                                                                      className="bx--text-input__field-wrapper"
                                                                                      data-invalid={null}
                                                                                    >
                                                                                      <input
                                                                                        autoComplete="new-password"
                                                                                        className="bx--text-input bx--text-input--md"
                                                                                        disabled={true}
                                                                                        id="authentications.default.password-password-placeholder"
                                                                                        onChange={[Function]}
                                                                                        onClick={[Function]}
                                                                                        placeholder="●●●●●●●●"
                                                                                        title="●●●●●●●●"
                                                                                        type="password"
                                                                                      />
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                              </TextInput>
                                                                            </div>
                                                                            <div
                                                                              className="bx--col-sm-1 bx--col-md-1 bx--col-lg-1"
                                                                            >
                                                                              <Button
                                                                                hasIconOnly={true}
                                                                                iconDescription="Change"
                                                                                kind="primary"
                                                                                onClick={[Function]}
                                                                                renderIcon={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "render": [Function],
                                                                                  }
                                                                                }
                                                                                size="field"
                                                                              >
                                                                                <button
                                                                                  aria-describedby={null}
                                                                                  aria-pressed={null}
                                                                                  className="bx--btn bx--btn--md bx--btn--primary bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--top bx--tooltip--align-center"
                                                                                  disabled={false}
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onMouseEnter={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  tabIndex={0}
                                                                                  type="button"
                                                                                >
                                                                                  <div
                                                                                    className="bx--assistive-text"
                                                                                    onMouseEnter={[Function]}
                                                                                  >
                                                                                    Change
                                                                                  </div>
                                                                                  <ForwardRef(Edit16)
                                                                                    aria-hidden="true"
                                                                                    aria-label="Change"
                                                                                    className="bx--btn__icon"
                                                                                  >
                                                                                    <Icon
                                                                                      aria-hidden="true"
                                                                                      aria-label="Change"
                                                                                      className="bx--btn__icon"
                                                                                      fill="currentColor"
                                                                                      height={16}
                                                                                      preserveAspectRatio="xMidYMid meet"
                                                                                      viewBox="0 0 32 32"
                                                                                      width={16}
                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                    >
                                                                                      <svg
                                                                                        aria-hidden="true"
                                                                                        aria-label="Change"
                                                                                        className="bx--btn__icon"
                                                                                        fill="currentColor"
                                                                                        focusable="false"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        role="img"
                                                                                        viewBox="0 0 32 32"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <path
                                                                                          d="M2 26H30V28H2zM25.4 9c.8-.8.8-2 0-2.8 0 0 0 0 0 0l-3.6-3.6c-.8-.8-2-.8-2.8 0 0 0 0 0 0 0l-15 15V24h6.4L25.4 9zM20.4 4L24 7.6l-3 3L17.4 7 20.4 4zM6 22v-3.6l10-10 3.6 3.6-10 10H6z"
                                                                                        />
                                                                                      </svg>
                                                                                    </Icon>
                                                                                  </ForwardRef(Edit16)>
                                                                                </button>
                                                                              </Button>
                                                                            </div>
                                                                          </div>
                                                                        </div>
                                                                      </fieldset>
                                                                    </FormGroup>
                                                                  </PasswordField>
                                                                </FormFieldHideWrapper>
                                                              </FormConditionWrapper>
                                                            </SingleField>
                                                            <input
                                                              name="endpoints.default.valid"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              type="hidden"
                                                              value={true}
                                                            />
                                                            <FormSpy
                                                              subscription={
                                                                Object {
                                                                  "dirtyFields": true,
                                                                  "values": true,
                                                                }
                                                              }
                                                            >
                                                              <Button
                                                                disabled={true}
                                                                kind="tertiary"
                                                                onClick={[Function]}
                                                                size="small"
                                                              >
                                                                <button
                                                                  aria-describedby={null}
                                                                  aria-pressed={null}
                                                                  className="bx--btn bx--btn--sm bx--btn--tertiary bx--btn--disabled"
                                                                  disabled={true}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onFocus={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  Validate
                                                                </button>
                                                              </Button>
                                                              <HelperTextBlock
                                                                helperText={false}
                                                              />
                                                            </FormSpy>
                                                          </AsyncCredentials>
                                                        </ValidateHostCredentials>
                                                      </FormFieldHideWrapper>
                                                    </FormConditionWrapper>
                                                  </SingleField>
                                                </div>
                                              </div>
                                            </TabContent>
                                            <TabContent
                                              aria-labelledby="remote-tab"
                                              hidden={true}
                                              id="remote-tab__panel"
                                              key=".$.$remote-tab"
                                              selected={false}
                                            >
                                              <div
                                                aria-labelledby="remote-tab"
                                                className="bx--tab-content"
                                                hidden={true}
                                                id="remote-tab__panel"
                                                role="tabpanel"
                                                selected={false}
                                              >
                                                <div
                                                  className="tab-0-2-5"
                                                >
                                                  <SingleField
                                                    component="validate-host-credentials"
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "id": "authentications.remote.userid",
                                                          "isRequired": true,
                                                          "label": "Username",
                                                          "name": "authentications.remote.userid",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                        Object {
                                                          "component": "password-field",
                                                          "helperText": "Required if SSH login is disabled for the Default account.",
                                                          "id": "authentications.remote.password",
                                                          "isRequired": true,
                                                          "label": "Password",
                                                          "name": "authentications.remote.password",
                                                          "type": "password",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    id="endpoints.remote.valid"
                                                    isRequired={true}
                                                    key="endpoints.remote.valid"
                                                    name="endpoints.remote.valid"
                                                    skipSubmit={true}
                                                  >
                                                    <FormConditionWrapper
                                                      field={
                                                        Object {
                                                          "component": "validate-host-credentials",
                                                          "fields": Array [
                                                            Object {
                                                              "component": "text-field",
                                                              "id": "authentications.remote.userid",
                                                              "isRequired": true,
                                                              "label": "Username",
                                                              "name": "authentications.remote.userid",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            },
                                                            Object {
                                                              "component": "password-field",
                                                              "helperText": "Required if SSH login is disabled for the Default account.",
                                                              "id": "authentications.remote.password",
                                                              "isRequired": true,
                                                              "label": "Password",
                                                              "name": "authentications.remote.password",
                                                              "type": "password",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            },
                                                          ],
                                                          "id": "endpoints.remote.valid",
                                                          "isRequired": true,
                                                          "name": "endpoints.remote.valid",
                                                          "skipSubmit": true,
                                                        }
                                                      }
                                                    >
                                                      <FormFieldHideWrapper
                                                        hideField={false}
                                                      >
                                                        <ValidateHostCredentials
                                                          component="validate-host-credentials"
                                                          edit={false}
                                                          fields={
                                                            Array [
                                                              Object {
                                                                "component": "text-field",
                                                                "id": "authentications.remote.userid",
                                                                "isRequired": true,
                                                                "label": "Username",
                                                                "name": "authentications.remote.userid",
                                                                "validate": Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ],
                                                              },
                                                              Object {
                                                                "component": "password-field",
                                                                "helperText": "Required if SSH login is disabled for the Default account.",
                                                                "id": "authentications.remote.password",
                                                                "isRequired": true,
                                                                "label": "Password",
                                                                "name": "authentications.remote.password",
                                                                "type": "password",
                                                                "validate": Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ],
                                                              },
                                                            ]
                                                          }
                                                          id="endpoints.remote.valid"
                                                          isRequired={true}
                                                          name="endpoints.remote.valid"
                                                          skipSubmit={true}
                                                          validateDefaultError="Validation Required"
                                                          validateLabel="Validate"
                                                          validation={true}
                                                          validationDependencies={Array []}
                                                          validationProgressLabel="Validating"
                                                          validationSuccessLabel="Validation successful"
                                                        >
                                                          <AsyncCredentials
                                                            asyncValidate={[Function]}
                                                            component="validate-host-credentials"
                                                            edit={true}
                                                            fields={
                                                              Array [
                                                                Object {
                                                                  "component": "text-field",
                                                                  "id": "authentications.remote.userid",
                                                                  "isRequired": true,
                                                                  "label": "Username",
                                                                  "name": "authentications.remote.userid",
                                                                  "validate": Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ],
                                                                },
                                                                Object {
                                                                  "component": "password-field",
                                                                  "helperText": "Required if SSH login is disabled for the Default account.",
                                                                  "id": "authentications.remote.password",
                                                                  "isRequired": true,
                                                                  "label": "Password",
                                                                  "name": "authentications.remote.password",
                                                                  "type": "password",
                                                                  "validate": Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ],
                                                                },
                                                              ]
                                                            }
                                                            id="endpoints.remote.valid"
                                                            isRequired={true}
                                                            name="endpoints.remote.valid"
                                                            skipSubmit={true}
                                                            validateDefaultError="Validation Required"
                                                            validateLabel="Validate"
                                                            validation={true}
                                                            validationDependencies={Array []}
                                                            validationProgressLabel="Validating"
                                                            validationSuccessLabel="Validation successful"
                                                          >
                                                            <SingleField
                                                              component="text-field"
                                                              id="authentications.remote.userid"
                                                              isRequired={true}
                                                              key="authentications.remote.userid"
                                                              label="Username"
                                                              name="authentications.remote.userid"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <FormConditionWrapper
                                                                field={
                                                                  Object {
                                                                    "component": "text-field",
                                                                    "id": "authentications.remote.userid",
                                                                    "isDisabled": undefined,
                                                                    "isRequired": true,
                                                                    "label": "Username",
                                                                    "name": "authentications.remote.userid",
                                                                    "validate": Array [
                                                                      Object {
                                                                        "type": "required",
                                                                      },
                                                                    ],
                                                                  }
                                                                }
                                                              >
                                                                <FormFieldHideWrapper
                                                                  hideField={false}
                                                                >
                                                                  <TextField
                                                                    component="text-field"
                                                                    id="authentications.remote.userid"
                                                                    isRequired={true}
                                                                    label="Username"
                                                                    name="authentications.remote.userid"
                                                                    validate={
                                                                      Array [
                                                                        Object {
                                                                          "type": "required",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <TextInput
                                                                      id="authentications.remote.userid"
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      key="authentications.remote.userid"
                                                                      labelText={
                                                                        <IsRequired>
                                                                          Username
                                                                        </IsRequired>
                                                                      }
                                                                      name="authentications.remote.userid"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value=""
                                                                      warn={false}
                                                                      warnText=""
                                                                    >
                                                                      <div
                                                                        className="bx--form-item bx--text-input-wrapper"
                                                                      >
                                                                        <label
                                                                          className="bx--label"
                                                                          htmlFor="authentications.remote.userid"
                                                                        >
                                                                          <IsRequired>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="ddorg__carbon-component-mapper_is-required isRequired-0-2-6"
                                                                            >
                                                                              *
                                                                            </span>
                                                                            Username
                                                                          </IsRequired>
                                                                        </label>
                                                                        <div
                                                                          className="bx--text-input__field-outer-wrapper"
                                                                        >
                                                                          <div
                                                                            className="bx--text-input__field-wrapper"
                                                                            data-invalid={null}
                                                                          >
                                                                            <input
                                                                              className="bx--text-input bx--text-input--md"
                                                                              disabled={false}
                                                                              id="authentications.remote.userid"
                                                                              name="authentications.remote.userid"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onClick={[Function]}
                                                                              onFocus={[Function]}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </TextInput>
                                                                  </TextField>
                                                                </FormFieldHideWrapper>
                                                              </FormConditionWrapper>
                                                            </SingleField>
                                                            <SingleField
                                                              component="password-field"
                                                              edit={true}
                                                              helperText="Required if SSH login is disabled for the Default account."
                                                              id="authentications.remote.password"
                                                              isRequired={true}
                                                              key="authentications.remote.password"
                                                              label="Password"
                                                              name="authentications.remote.password"
                                                              parent="endpoints.remote.valid"
                                                              type="password"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <FormConditionWrapper
                                                                field={
                                                                  Object {
                                                                    "component": "password-field",
                                                                    "edit": true,
                                                                    "helperText": "Required if SSH login is disabled for the Default account.",
                                                                    "id": "authentications.remote.password",
                                                                    "isDisabled": undefined,
                                                                    "isRequired": true,
                                                                    "label": "Password",
                                                                    "name": "authentications.remote.password",
                                                                    "parent": "endpoints.remote.valid",
                                                                    "type": "password",
                                                                    "validate": Array [
                                                                      Object {
                                                                        "type": "required",
                                                                      },
                                                                    ],
                                                                  }
                                                                }
                                                              >
                                                                <FormFieldHideWrapper
                                                                  hideField={false}
                                                                >
                                                                  <PasswordField
                                                                    cancelEditLabel="Cancel"
                                                                    changeEditLabel="Change"
                                                                    component="password-field"
                                                                    componentClass="text-field"
                                                                    edit={true}
                                                                    helperText="Required if SSH login is disabled for the Default account."
                                                                    id="authentications.remote.password"
                                                                    isRequired={true}
                                                                    label="Password"
                                                                    name="authentications.remote.password"
                                                                    parent="endpoints.remote.valid"
                                                                    type="password"
                                                                    validate={
                                                                      Array [
                                                                        Object {
                                                                          "type": "required",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <FormGroup
                                                                      hasMargin={true}
                                                                      invalid={false}
                                                                      legendText="Password"
                                                                      message={false}
                                                                      messageText=""
                                                                    >
                                                                      <fieldset
                                                                        className="bx--fieldset"
                                                                      >
                                                                        <legend
                                                                          className="bx--label"
                                                                        >
                                                                          Password
                                                                        </legend>
                                                                        <div
                                                                          className="bx--grid"
                                                                          style={
                                                                            Object {
                                                                              "marginLeft": 0,
                                                                              "paddingLeft": 0,
                                                                            }
                                                                          }
                                                                        >
                                                                          <div
                                                                            className="bx--row"
                                                                          >
                                                                            <div
                                                                              className="bx--col-lg-15 bx--col-md-7 bx--col-sm-3"
                                                                            >
                                                                              <TextInput
                                                                                autoComplete="new-password"
                                                                                disabled={true}
                                                                                id="authentications.remote.password-password-placeholder"
                                                                                labelText=""
                                                                                placeholder="●●●●●●●●"
                                                                                type="password"
                                                                              >
                                                                                <div
                                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                                >
                                                                                  <div
                                                                                    className="bx--text-input__field-outer-wrapper"
                                                                                  >
                                                                                    <div
                                                                                      className="bx--text-input__field-wrapper"
                                                                                      data-invalid={null}
                                                                                    >
                                                                                      <input
                                                                                        autoComplete="new-password"
                                                                                        className="bx--text-input bx--text-input--md"
                                                                                        disabled={true}
                                                                                        id="authentications.remote.password-password-placeholder"
                                                                                        onChange={[Function]}
                                                                                        onClick={[Function]}
                                                                                        placeholder="●●●●●●●●"
                                                                                        title="●●●●●●●●"
                                                                                        type="password"
                                                                                      />
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                              </TextInput>
                                                                            </div>
                                                                            <div
                                                                              className="bx--col-sm-1 bx--col-md-1 bx--col-lg-1"
                                                                            >
                                                                              <Button
                                                                                hasIconOnly={true}
                                                                                iconDescription="Change"
                                                                                kind="primary"
                                                                                onClick={[Function]}
                                                                                renderIcon={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "render": [Function],
                                                                                  }
                                                                                }
                                                                                size="field"
                                                                              >
                                                                                <button
                                                                                  aria-describedby={null}
                                                                                  aria-pressed={null}
                                                                                  className="bx--btn bx--btn--md bx--btn--primary bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--top bx--tooltip--align-center"
                                                                                  disabled={false}
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onMouseEnter={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  tabIndex={0}
                                                                                  type="button"
                                                                                >
                                                                                  <div
                                                                                    className="bx--assistive-text"
                                                                                    onMouseEnter={[Function]}
                                                                                  >
                                                                                    Change
                                                                                  </div>
                                                                                  <ForwardRef(Edit16)
                                                                                    aria-hidden="true"
                                                                                    aria-label="Change"
                                                                                    className="bx--btn__icon"
                                                                                  >
                                                                                    <Icon
                                                                                      aria-hidden="true"
                                                                                      aria-label="Change"
                                                                                      className="bx--btn__icon"
                                                                                      fill="currentColor"
                                                                                      height={16}
                                                                                      preserveAspectRatio="xMidYMid meet"
                                                                                      viewBox="0 0 32 32"
                                                                                      width={16}
                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                    >
                                                                                      <svg
                                                                                        aria-hidden="true"
                                                                                        aria-label="Change"
                                                                                        className="bx--btn__icon"
                                                                                        fill="currentColor"
                                                                                        focusable="false"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        role="img"
                                                                                        viewBox="0 0 32 32"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <path
                                                                                          d="M2 26H30V28H2zM25.4 9c.8-.8.8-2 0-2.8 0 0 0 0 0 0l-3.6-3.6c-.8-.8-2-.8-2.8 0 0 0 0 0 0 0l-15 15V24h6.4L25.4 9zM20.4 4L24 7.6l-3 3L17.4 7 20.4 4zM6 22v-3.6l10-10 3.6 3.6-10 10H6z"
                                                                                        />
                                                                                      </svg>
                                                                                    </Icon>
                                                                                  </ForwardRef(Edit16)>
                                                                                </button>
                                                                              </Button>
                                                                            </div>
                                                                          </div>
                                                                        </div>
                                                                      </fieldset>
                                                                    </FormGroup>
                                                                  </PasswordField>
                                                                </FormFieldHideWrapper>
                                                              </FormConditionWrapper>
                                                            </SingleField>
                                                            <input
                                                              name="endpoints.remote.valid"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              type="hidden"
                                                              value={true}
                                                            />
                                                            <FormSpy
                                                              subscription={
                                                                Object {
                                                                  "dirtyFields": true,
                                                                  "values": true,
                                                                }
                                                              }
                                                            >
                                                              <Button
                                                                disabled={true}
                                                                kind="tertiary"
                                                                onClick={[Function]}
                                                                size="small"
                                                              >
                                                                <button
                                                                  aria-describedby={null}
                                                                  aria-pressed={null}
                                                                  className="bx--btn bx--btn--sm bx--btn--tertiary bx--btn--disabled"
                                                                  disabled={true}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onFocus={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  Validate
                                                                </button>
                                                              </Button>
                                                              <HelperTextBlock
                                                                helperText={false}
                                                              />
                                                            </FormSpy>
                                                          </AsyncCredentials>
                                                        </ValidateHostCredentials>
                                                      </FormFieldHideWrapper>
                                                    </FormConditionWrapper>
                                                  </SingleField>
                                                </div>
                                              </div>
                                            </TabContent>
                                            <TabContent
                                              aria-labelledby="ws-tab"
                                              hidden={true}
                                              id="ws-tab__panel"
                                              key=".$.$ws-tab"
                                              selected={false}
                                            >
                                              <div
                                                aria-labelledby="ws-tab"
                                                className="bx--tab-content"
                                                hidden={true}
                                                id="ws-tab__panel"
                                                role="tabpanel"
                                                selected={false}
                                              >
                                                <div
                                                  className="tab-0-2-5"
                                                >
                                                  <SingleField
                                                    component="validate-host-credentials"
                                                    fields={
                                                      Array [
                                                        Object {
                                                          "component": "text-field",
                                                          "id": "authentications.ws.userid",
                                                          "isRequired": true,
                                                          "label": "Username",
                                                          "name": "authentications.ws.userid",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                        Object {
                                                          "component": "password-field",
                                                          "helperText": "Used for access to Web Services.",
                                                          "id": "authentications.ws.password",
                                                          "isRequired": true,
                                                          "label": "Password",
                                                          "name": "authentications.ws.password",
                                                          "type": "password",
                                                          "validate": Array [
                                                            Object {
                                                              "type": "required",
                                                            },
                                                          ],
                                                        },
                                                      ]
                                                    }
                                                    id="endpoints.ws.valid"
                                                    isRequired={true}
                                                    key="endpoints.ws.valid"
                                                    name="endpoints.ws.valid"
                                                    skipSubmit={true}
                                                  >
                                                    <FormConditionWrapper
                                                      field={
                                                        Object {
                                                          "component": "validate-host-credentials",
                                                          "fields": Array [
                                                            Object {
                                                              "component": "text-field",
                                                              "id": "authentications.ws.userid",
                                                              "isRequired": true,
                                                              "label": "Username",
                                                              "name": "authentications.ws.userid",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            },
                                                            Object {
                                                              "component": "password-field",
                                                              "helperText": "Used for access to Web Services.",
                                                              "id": "authentications.ws.password",
                                                              "isRequired": true,
                                                              "label": "Password",
                                                              "name": "authentications.ws.password",
                                                              "type": "password",
                                                              "validate": Array [
                                                                Object {
                                                                  "type": "required",
                                                                },
                                                              ],
                                                            },
                                                          ],
                                                          "id": "endpoints.ws.valid",
                                                          "isRequired": true,
                                                          "name": "endpoints.ws.valid",
                                                          "skipSubmit": true,
                                                        }
                                                      }
                                                    >
                                                      <FormFieldHideWrapper
                                                        hideField={false}
                                                      >
                                                        <ValidateHostCredentials
                                                          component="validate-host-credentials"
                                                          edit={false}
                                                          fields={
                                                            Array [
                                                              Object {
                                                                "component": "text-field",
                                                                "id": "authentications.ws.userid",
                                                                "isRequired": true,
                                                                "label": "Username",
                                                                "name": "authentications.ws.userid",
                                                                "validate": Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ],
                                                              },
                                                              Object {
                                                                "component": "password-field",
                                                                "helperText": "Used for access to Web Services.",
                                                                "id": "authentications.ws.password",
                                                                "isRequired": true,
                                                                "label": "Password",
                                                                "name": "authentications.ws.password",
                                                                "type": "password",
                                                                "validate": Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ],
                                                              },
                                                            ]
                                                          }
                                                          id="endpoints.ws.valid"
                                                          isRequired={true}
                                                          name="endpoints.ws.valid"
                                                          skipSubmit={true}
                                                          validateDefaultError="Validation Required"
                                                          validateLabel="Validate"
                                                          validation={true}
                                                          validationDependencies={Array []}
                                                          validationProgressLabel="Validating"
                                                          validationSuccessLabel="Validation successful"
                                                        >
                                                          <AsyncCredentials
                                                            asyncValidate={[Function]}
                                                            component="validate-host-credentials"
                                                            edit={true}
                                                            fields={
                                                              Array [
                                                                Object {
                                                                  "component": "text-field",
                                                                  "id": "authentications.ws.userid",
                                                                  "isRequired": true,
                                                                  "label": "Username",
                                                                  "name": "authentications.ws.userid",
                                                                  "validate": Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ],
                                                                },
                                                                Object {
                                                                  "component": "password-field",
                                                                  "helperText": "Used for access to Web Services.",
                                                                  "id": "authentications.ws.password",
                                                                  "isRequired": true,
                                                                  "label": "Password",
                                                                  "name": "authentications.ws.password",
                                                                  "type": "password",
                                                                  "validate": Array [
                                                                    Object {
                                                                      "type": "required",
                                                                    },
                                                                  ],
                                                                },
                                                              ]
                                                            }
                                                            id="endpoints.ws.valid"
                                                            isRequired={true}
                                                            name="endpoints.ws.valid"
                                                            skipSubmit={true}
                                                            validateDefaultError="Validation Required"
                                                            validateLabel="Validate"
                                                            validation={true}
                                                            validationDependencies={Array []}
                                                            validationProgressLabel="Validating"
                                                            validationSuccessLabel="Validation successful"
                                                          >
                                                            <SingleField
                                                              component="text-field"
                                                              id="authentications.ws.userid"
                                                              isRequired={true}
                                                              key="authentications.ws.userid"
                                                              label="Username"
                                                              name="authentications.ws.userid"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <FormConditionWrapper
                                                                field={
                                                                  Object {
                                                                    "component": "text-field",
                                                                    "id": "authentications.ws.userid",
                                                                    "isDisabled": undefined,
                                                                    "isRequired": true,
                                                                    "label": "Username",
                                                                    "name": "authentications.ws.userid",
                                                                    "validate": Array [
                                                                      Object {
                                                                        "type": "required",
                                                                      },
                                                                    ],
                                                                  }
                                                                }
                                                              >
                                                                <FormFieldHideWrapper
                                                                  hideField={false}
                                                                >
                                                                  <TextField
                                                                    component="text-field"
                                                                    id="authentications.ws.userid"
                                                                    isRequired={true}
                                                                    label="Username"
                                                                    name="authentications.ws.userid"
                                                                    validate={
                                                                      Array [
                                                                        Object {
                                                                          "type": "required",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <TextInput
                                                                      id="authentications.ws.userid"
                                                                      invalid={false}
                                                                      invalidText=""
                                                                      key="authentications.ws.userid"
                                                                      labelText={
                                                                        <IsRequired>
                                                                          Username
                                                                        </IsRequired>
                                                                      }
                                                                      name="authentications.ws.userid"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value=""
                                                                      warn={false}
                                                                      warnText=""
                                                                    >
                                                                      <div
                                                                        className="bx--form-item bx--text-input-wrapper"
                                                                      >
                                                                        <label
                                                                          className="bx--label"
                                                                          htmlFor="authentications.ws.userid"
                                                                        >
                                                                          <IsRequired>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="ddorg__carbon-component-mapper_is-required isRequired-0-2-6"
                                                                            >
                                                                              *
                                                                            </span>
                                                                            Username
                                                                          </IsRequired>
                                                                        </label>
                                                                        <div
                                                                          className="bx--text-input__field-outer-wrapper"
                                                                        >
                                                                          <div
                                                                            className="bx--text-input__field-wrapper"
                                                                            data-invalid={null}
                                                                          >
                                                                            <input
                                                                              className="bx--text-input bx--text-input--md"
                                                                              disabled={false}
                                                                              id="authentications.ws.userid"
                                                                              name="authentications.ws.userid"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onClick={[Function]}
                                                                              onFocus={[Function]}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </TextInput>
                                                                  </TextField>
                                                                </FormFieldHideWrapper>
                                                              </FormConditionWrapper>
                                                            </SingleField>
                                                            <SingleField
                                                              component="password-field"
                                                              edit={true}
                                                              helperText="Used for access to Web Services."
                                                              id="authentications.ws.password"
                                                              isRequired={true}
                                                              key="authentications.ws.password"
                                                              label="Password"
                                                              name="authentications.ws.password"
                                                              parent="endpoints.ws.valid"
                                                              type="password"
                                                              validate={
                                                                Array [
                                                                  Object {
                                                                    "type": "required",
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <FormConditionWrapper
                                                                field={
                                                                  Object {
                                                                    "component": "password-field",
                                                                    "edit": true,
                                                                    "helperText": "Used for access to Web Services.",
                                                                    "id": "authentications.ws.password",
                                                                    "isDisabled": undefined,
                                                                    "isRequired": true,
                                                                    "label": "Password",
                                                                    "name": "authentications.ws.password",
                                                                    "parent": "endpoints.ws.valid",
                                                                    "type": "password",
                                                                    "validate": Array [
                                                                      Object {
                                                                        "type": "required",
                                                                      },
                                                                    ],
                                                                  }
                                                                }
                                                              >
                                                                <FormFieldHideWrapper
                                                                  hideField={false}
                                                                >
                                                                  <PasswordField
                                                                    cancelEditLabel="Cancel"
                                                                    changeEditLabel="Change"
                                                                    component="password-field"
                                                                    componentClass="text-field"
                                                                    edit={true}
                                                                    helperText="Used for access to Web Services."
                                                                    id="authentications.ws.password"
                                                                    isRequired={true}
                                                                    label="Password"
                                                                    name="authentications.ws.password"
                                                                    parent="endpoints.ws.valid"
                                                                    type="password"
                                                                    validate={
                                                                      Array [
                                                                        Object {
                                                                          "type": "required",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <FormGroup
                                                                      hasMargin={true}
                                                                      invalid={false}
                                                                      legendText="Password"
                                                                      message={false}
                                                                      messageText=""
                                                                    >
                                                                      <fieldset
                                                                        className="bx--fieldset"
                                                                      >
                                                                        <legend
                                                                          className="bx--label"
                                                                        >
                                                                          Password
                                                                        </legend>
                                                                        <div
                                                                          className="bx--grid"
                                                                          style={
                                                                            Object {
                                                                              "marginLeft": 0,
                                                                              "paddingLeft": 0,
                                                                            }
                                                                          }
                                                                        >
                                                                          <div
                                                                            className="bx--row"
                                                                          >
                                                                            <div
                                                                              className="bx--col-lg-15 bx--col-md-7 bx--col-sm-3"
                                                                            >
                                                                              <TextInput
                                                                                autoComplete="new-password"
                                                                                disabled={true}
                                                                                id="authentications.ws.password-password-placeholder"
                                                                                labelText=""
                                                                                placeholder="●●●●●●●●"
                                                                                type="password"
                                                                              >
                                                                                <div
                                                                                  className="bx--form-item bx--text-input-wrapper"
                                                                                >
                                                                                  <div
                                                                                    className="bx--text-input__field-outer-wrapper"
                                                                                  >
                                                                                    <div
                                                                                      className="bx--text-input__field-wrapper"
                                                                                      data-invalid={null}
                                                                                    >
                                                                                      <input
                                                                                        autoComplete="new-password"
                                                                                        className="bx--text-input bx--text-input--md"
                                                                                        disabled={true}
                                                                                        id="authentications.ws.password-password-placeholder"
                                                                                        onChange={[Function]}
                                                                                        onClick={[Function]}
                                                                                        placeholder="●●●●●●●●"
                                                                                        title="●●●●●●●●"
                                                                                        type="password"
                                                                                      />
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                              </TextInput>
                                                                            </div>
                                                                            <div
                                                                              className="bx--col-sm-1 bx--col-md-1 bx--col-lg-1"
                                                                            >
                                                                              <Button
                                                                                hasIconOnly={true}
                                                                                iconDescription="Change"
                                                                                kind="primary"
                                                                                onClick={[Function]}
                                                                                renderIcon={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "render": [Function],
                                                                                  }
                                                                                }
                                                                                size="field"
                                                                              >
                                                                                <button
                                                                                  aria-describedby={null}
                                                                                  aria-pressed={null}
                                                                                  className="bx--btn bx--btn--md bx--btn--primary bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--top bx--tooltip--align-center"
                                                                                  disabled={false}
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onMouseEnter={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  tabIndex={0}
                                                                                  type="button"
                                                                                >
                                                                                  <div
                                                                                    className="bx--assistive-text"
                                                                                    onMouseEnter={[Function]}
                                                                                  >
                                                                                    Change
                                                                                  </div>
                                                                                  <ForwardRef(Edit16)
                                                                                    aria-hidden="true"
                                                                                    aria-label="Change"
                                                                                    className="bx--btn__icon"
                                                                                  >
                                                                                    <Icon
                                                                                      aria-hidden="true"
                                                                                      aria-label="Change"
                                                                                      className="bx--btn__icon"
                                                                                      fill="currentColor"
                                                                                      height={16}
                                                                                      preserveAspectRatio="xMidYMid meet"
                                                                                      viewBox="0 0 32 32"
                                                                                      width={16}
                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                    >
                                                                                      <svg
                                                                                        aria-hidden="true"
                                                                                        aria-label="Change"
                                                                                        className="bx--btn__icon"
                                                                                        fill="currentColor"
                                                                                        focusable="false"
                                                                                        height={16}
                                                                                        preserveAspectRatio="xMidYMid meet"
                                                                                        role="img"
                                                                                        viewBox="0 0 32 32"
                                                                                        width={16}
                                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                                      >
                                                                                        <path
                                                                                          d="M2 26H30V28H2zM25.4 9c.8-.8.8-2 0-2.8 0 0 0 0 0 0l-3.6-3.6c-.8-.8-2-.8-2.8 0 0 0 0 0 0 0l-15 15V24h6.4L25.4 9zM20.4 4L24 7.6l-3 3L17.4 7 20.4 4zM6 22v-3.6l10-10 3.6 3.6-10 10H6z"
                                                                                        />
                                                                                      </svg>
                                                                                    </Icon>
                                                                                  </ForwardRef(Edit16)>
                                                                                </button>
                                                                              </Button>
                                                                            </div>
                                                                          </div>
                                                                        </div>
                                                                      </fieldset>
                                                                    </FormGroup>
                                                                  </PasswordField>
                                                                </FormFieldHideWrapper>
                                                              </FormConditionWrapper>
                                                            </SingleField>
                                                            <input
                                                              name="endpoints.ws.valid"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              type="hidden"
                                                              value={true}
                                                            />
                                                            <FormSpy
                                                              subscription={
                                                                Object {
                                                                  "dirtyFields": true,
                                                                  "values": true,
                                                                }
                                                              }
                                                            >
                                                              <Button
                                                                disabled={true}
                                                                kind="tertiary"
                                                                onClick={[Function]}
                                                                size="small"
                                                              >
                                                                <button
                                                                  aria-describedby={null}
                                                                  aria-pressed={null}
                                                                  className="bx--btn bx--btn--sm bx--btn--tertiary bx--btn--disabled"
                                                                  disabled={true}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onFocus={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  Validate
                                                                </button>
                                                              </Button>
                                                              <HelperTextBlock
                                                                helperText={false}
                                                              />
                                                            </FormSpy>
                                                          </AsyncCredentials>
                                                        </ValidateHostCredentials>
                                                      </FormFieldHideWrapper>
                                                    </FormConditionWrapper>
                                                  </SingleField>
                                                </div>
                                              </div>
                                            </TabContent>
                                          </Tabs>
                                        </Tabs>
                                      </FormFieldHideWrapper>
                                    </FormConditionWrapper>
                                  </SingleField>
                                </div>
                              </SubForm>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="spy-field"
                          key="spy-field"
                          name="spy-field"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "spy-field",
                                "initialize": undefined,
                                "name": "spy-field",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SpyField
                                component="spy-field"
                                name="spy-field"
                              >
                                <FormSpy
                                  onChange={[Function]}
                                  subscription={
                                    Object {
                                      "pristine": true,
                                      "valid": true,
                                    }
                                  }
                                />
                              </SpyField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <FormSpy>
                          <FormControls
                            Button={[Function]}
                            ButtonGroup={[Function]}
                            FormSpy={[Function]}
                            buttonOrder={
                              Array [
                                "submit",
                                "reset",
                                "cancel",
                              ]
                            }
                            buttonsProps={Object {}}
                            canReset={true}
                            canSubmit={false}
                            cancelLabel="Cancel"
                            disableSubmit={true}
                            formFields={
                              Array [
                                <SingleField
                                  component="text-field"
                                  id="name"
                                  isDisabled={true}
                                  label="Name:"
                                  name="name"
                                />,
                                <SingleField
                                  component="text-field"
                                  id="hostname"
                                  isDisabled={true}
                                  label="Hostname (or IPv4 or IPv6 address:"
                                  name="hostname"
                                />,
                                <SingleField
                                  component="text-field"
                                  id="custom_identifier"
                                  isDisabled={true}
                                  label="Custom Identifier:"
                                  name="custom_identifier"
                                />,
                                <SingleField
                                  component="sub-form"
                                  fields={
                                    Array [
                                      Object {
                                        "component": "tabs",
                                        "fields": Array [
                                          Object {
                                            "component": "tab-item",
                                            "fields": Array [
                                              Object {
                                                "component": "validate-host-credentials",
                                                "fields": Array [
                                                  Object {
                                                    "component": "text-field",
                                                    "id": "authentications.default.userid",
                                                    "isRequired": true,
                                                    "label": "Username",
                                                    "name": "authentications.default.userid",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "password-field",
                                                    "id": "authentications.default.password",
                                                    "isRequired": true,
                                                    "label": "Password",
                                                    "name": "authentications.default.password",
                                                    "type": "password",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                ],
                                                "id": "endpoints.default.valid",
                                                "isRequired": true,
                                                "name": "endpoints.default.valid",
                                                "skipSubmit": true,
                                              },
                                            ],
                                            "id": "default-tab",
                                            "name": "default-tab",
                                            "title": "Default",
                                          },
                                          Object {
                                            "component": "tab-item",
                                            "fields": Array [
                                              Object {
                                                "component": "validate-host-credentials",
                                                "fields": Array [
                                                  Object {
                                                    "component": "text-field",
                                                    "id": "authentications.remote.userid",
                                                    "isRequired": true,
                                                    "label": "Username",
                                                    "name": "authentications.remote.userid",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "password-field",
                                                    "helperText": "Required if SSH login is disabled for the Default account.",
                                                    "id": "authentications.remote.password",
                                                    "isRequired": true,
                                                    "label": "Password",
                                                    "name": "authentications.remote.password",
                                                    "type": "password",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                ],
                                                "id": "endpoints.remote.valid",
                                                "isRequired": true,
                                                "name": "endpoints.remote.valid",
                                                "skipSubmit": true,
                                              },
                                            ],
                                            "id": "remote-tab",
                                            "name": "remote-tab",
                                            "title": "Remote Login",
                                          },
                                          Object {
                                            "component": "tab-item",
                                            "fields": Array [
                                              Object {
                                                "component": "validate-host-credentials",
                                                "fields": Array [
                                                  Object {
                                                    "component": "text-field",
                                                    "id": "authentications.ws.userid",
                                                    "isRequired": true,
                                                    "label": "Username",
                                                    "name": "authentications.ws.userid",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "password-field",
                                                    "helperText": "Used for access to Web Services.",
                                                    "id": "authentications.ws.password",
                                                    "isRequired": true,
                                                    "label": "Password",
                                                    "name": "authentications.ws.password",
                                                    "type": "password",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                ],
                                                "id": "endpoints.ws.valid",
                                                "isRequired": true,
                                                "name": "endpoints.ws.valid",
                                                "skipSubmit": true,
                                              },
                                            ],
                                            "id": "ws-tab",
                                            "name": "ws-tab",
                                            "title": "Web Service",
                                          },
                                        ],
                                        "name": "tabs",
                                      },
                                    ]
                                  }
                                  id="endpoints-subform"
                                  name="endpoints-subform"
                                  title="Endpoints"
                                />,
                                <SingleField
                                  component="spy-field"
                                  name="spy-field"
                                />,
                              ]
                            }
                            formSpyProps={
                              Object {
                                "active": undefined,
                                "dirty": true,
                                "dirtyFields": Object {
                                  "endpoints.default.valid": true,
                                  "endpoints.remote.valid": true,
                                  "endpoints.ws.valid": true,
                                },
                                "dirtyFieldsSinceLastSubmit": Object {
                                  "endpoints.default.valid": true,
                                  "endpoints.remote.valid": true,
                                  "endpoints.ws.valid": true,
                                  "hostname": true,
                                  "name": true,
                                },
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "errors": Object {
                                  "authentications": Object {
                                    "default": Object {
                                      "userid": "Required",
                                    },
                                    "remote": Object {
                                      "userid": "Required",
                                    },
                                    "ws": Object {
                                      "userid": "Required",
                                    },
                                  },
                                },
                                "form": Object {
                                  "batch": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "destroyOnUnregister": false,
                                  "focus": [Function],
                                  "getFieldState": [Function],
                                  "getRegisteredFields": [Function],
                                  "getState": [Function],
                                  "initialize": [Function],
                                  "isValidationPaused": [Function],
                                  "mutators": Object {
                                    "concat": [Function],
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeBatch": [Function],
                                    "shift": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                    "update": [Function],
                                  },
                                  "pauseValidation": [Function],
                                  "registerField": [Function],
                                  "reset": [Function],
                                  "resetFieldState": [Function],
                                  "restart": [Function],
                                  "resumeValidation": [Function],
                                  "setConfig": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "hasSubmitErrors": false,
                                "hasValidationErrors": true,
                                "initialValues": Object {
                                  "authentications": Object {},
                                  "ems_id": "2",
                                  "host_validate_against": 1,
                                  "hostname": null,
                                  "id": "1",
                                  "ipaddress": "10.197.65.254",
                                  "name": "10.197.65.254",
                                  "type": "ManageIQ::Providers::IbmPowerHmc::InfraManager::Host",
                                },
                                "invalid": true,
                                "modified": Object {
                                  "authentications.default.userid": false,
                                  "authentications.remote.userid": false,
                                  "authentications.ws.userid": false,
                                  "custom_identifier": false,
                                  "endpoints.default.valid": true,
                                  "endpoints.remote.valid": true,
                                  "endpoints.ws.valid": true,
                                  "hostname": false,
                                  "name": false,
                                },
                                "modifiedSinceLastSubmit": false,
                                "pristine": false,
                                "submitError": undefined,
                                "submitErrors": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "touched": Object {
                                  "authentications.default.userid": false,
                                  "authentications.remote.userid": false,
                                  "authentications.ws.userid": false,
                                  "custom_identifier": false,
                                  "endpoints.default.valid": false,
                                  "endpoints.remote.valid": false,
                                  "endpoints.ws.valid": false,
                                  "hostname": false,
                                  "name": false,
                                },
                                "valid": false,
                                "validating": false,
                                "values": Object {
                                  "authentications": Object {},
                                  "ems_id": "2",
                                  "endpoints": Object {
                                    "default": Object {
                                      "valid": true,
                                    },
                                    "remote": Object {
                                      "valid": true,
                                    },
                                    "ws": Object {
                                      "valid": true,
                                    },
                                  },
                                  "host_validate_against": 1,
                                  "hostname": null,
                                  "id": "1",
                                  "ipaddress": "10.197.65.254",
                                  "name": "10.197.65.254",
                                  "type": "ManageIQ::Providers::IbmPowerHmc::InfraManager::Host",
                                },
                                "visited": Object {
                                  "authentications.default.userid": false,
                                  "authentications.remote.userid": false,
                                  "authentications.ws.userid": false,
                                  "custom_identifier": false,
                                  "endpoints.default.valid": false,
                                  "endpoints.remote.valid": false,
                                  "endpoints.ws.valid": false,
                                  "hostname": false,
                                  "name": false,
                                },
                              }
                            }
                            onCancel={[Function]}
                            onReset={[Function]}
                            resetLabel="Reset"
                            schema={
                              Object {
                                "fields": Array [
                                  Object {
                                    "component": "text-field",
                                    "id": "name",
                                    "isDisabled": true,
                                    "label": "Name:",
                                    "name": "name",
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "hostname",
                                    "isDisabled": true,
                                    "label": "Hostname (or IPv4 or IPv6 address:",
                                    "name": "hostname",
                                  },
                                  Object {
                                    "component": "text-field",
                                    "id": "custom_identifier",
                                    "isDisabled": true,
                                    "label": "Custom Identifier:",
                                    "name": "custom_identifier",
                                  },
                                  Object {
                                    "component": "sub-form",
                                    "fields": Array [
                                      Object {
                                        "component": "tabs",
                                        "fields": Array [
                                          Object {
                                            "component": "tab-item",
                                            "fields": Array [
                                              Object {
                                                "component": "validate-host-credentials",
                                                "fields": Array [
                                                  Object {
                                                    "component": "text-field",
                                                    "id": "authentications.default.userid",
                                                    "isRequired": true,
                                                    "label": "Username",
                                                    "name": "authentications.default.userid",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "password-field",
                                                    "id": "authentications.default.password",
                                                    "isRequired": true,
                                                    "label": "Password",
                                                    "name": "authentications.default.password",
                                                    "type": "password",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                ],
                                                "id": "endpoints.default.valid",
                                                "isRequired": true,
                                                "name": "endpoints.default.valid",
                                                "skipSubmit": true,
                                              },
                                            ],
                                            "id": "default-tab",
                                            "name": "default-tab",
                                            "title": "Default",
                                          },
                                          Object {
                                            "component": "tab-item",
                                            "fields": Array [
                                              Object {
                                                "component": "validate-host-credentials",
                                                "fields": Array [
                                                  Object {
                                                    "component": "text-field",
                                                    "id": "authentications.remote.userid",
                                                    "isRequired": true,
                                                    "label": "Username",
                                                    "name": "authentications.remote.userid",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "password-field",
                                                    "helperText": "Required if SSH login is disabled for the Default account.",
                                                    "id": "authentications.remote.password",
                                                    "isRequired": true,
                                                    "label": "Password",
                                                    "name": "authentications.remote.password",
                                                    "type": "password",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                ],
                                                "id": "endpoints.remote.valid",
                                                "isRequired": true,
                                                "name": "endpoints.remote.valid",
                                                "skipSubmit": true,
                                              },
                                            ],
                                            "id": "remote-tab",
                                            "name": "remote-tab",
                                            "title": "Remote Login",
                                          },
                                          Object {
                                            "component": "tab-item",
                                            "fields": Array [
                                              Object {
                                                "component": "validate-host-credentials",
                                                "fields": Array [
                                                  Object {
                                                    "component": "text-field",
                                                    "id": "authentications.ws.userid",
                                                    "isRequired": true,
                                                    "label": "Username",
                                                    "name": "authentications.ws.userid",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "component": "password-field",
                                                    "helperText": "Used for access to Web Services.",
                                                    "id": "authentications.ws.password",
                                                    "isRequired": true,
                                                    "label": "Password",
                                                    "name": "authentications.ws.password",
                                                    "type": "password",
                                                    "validate": Array [
                                                      Object {
                                                        "type": "required",
                                                      },
                                                    ],
                                                  },
                                                ],
                                                "id": "endpoints.ws.valid",
                                                "isRequired": true,
                                                "name": "endpoints.ws.valid",
                                                "skipSubmit": true,
                                              },
                                            ],
                                            "id": "ws-tab",
                                            "name": "ws-tab",
                                            "title": "Web Service",
                                          },
                                        ],
                                        "name": "tabs",
                                      },
                                    ],
                                    "id": "endpoints-subform",
                                    "name": "endpoints-subform",
                                    "title": "Endpoints",
                                  },
                                  Object {
                                    "component": "spy-field",
                                    "initialize": undefined,
                                    "name": "spy-field",
                                  },
                                ],
                              }
                            }
                            submitLabel="Save"
                          >
                            <ButtonGroup>
                              <ButtonSet
                                className=""
                              >
                                <div
                                  className="bx--btn-set"
                                >
                                  <Button
                                    buttonType="submit"
                                    disabled={true}
                                    key="form-submit"
                                    label="Save"
                                    type="submit"
                                    variant="primary"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="primary"
                                      type="submit"
                                      variant="primary"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--primary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="submit"
                                        variant="primary"
                                      >
                                        Save
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="reset"
                                    disabled={false}
                                    key="form-reset"
                                    label="Reset"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      disabled={false}
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Reset
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="cancel"
                                    key="form-cancel"
                                    label="Cancel"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Cancel
                                      </button>
                                    </Button>
                                  </Button>
                                </div>
                              </ButtonSet>
                            </ButtonGroup>
                          </FormControls>
                        </FormSpy>
                         
                      </form>
                    </Form>
                  </Form>
                </FormTemplate>
              </WrappedFormTemplate>
            </Component>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </HostEditForm>
</Provider>
`;

exports[`Show Edit Host Form Component should render form for multiple hosts 1`] = `
<Provider
  store={
    Object {
      "asyncReducers": Object {
        "FormButtons": [Function],
        "miqCustomTabReducer": [Function],
        "notificationReducer": [Function],
      },
      "dispatch": [Function],
      "getState": [Function],
      "injectReducers": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <HostEditForm
    ids={
      Array [
        1,
        2,
        3,
      ]
    }
  >
    <Connect(MiqFormRenderer)
      canReset={true}
      componentMapper={
        Object {
          "checkbox": [Function],
          "code-editor": [Function],
          "date-picker": [Function],
          "dual-list-select": [Function],
          "edit-password-field": [Function],
          "field-array": [Function],
          "file-upload": [Function],
          "font-icon-picker": [Function],
          "font-icon-picker-ddf": [Function],
          "multi-select": [Function],
          "password-field": [Function],
          "plain-text": [Function],
          "protocol-selector": [Function],
          "radio": [Function],
          "select": [Function],
          "slider": [Function],
          "sub-form": [Function],
          "switch": [Function],
          "tabs": [Function],
          "text-field": [Function],
          "textarea": [Function],
          "time-picker": [Function],
          "tree-selector": [Function],
          "tree-view": [Function],
          "validate-credentials": [Function],
          "validate-host-credentials": [Function],
          "wizard": [Function],
        }
      }
      onCancel={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      schema={
        Object {
          "fields": Array [
            Object {
              "component": "select",
              "id": "host_validate_against",
              "isRequired": true,
              "label": "Select a Host to validate against",
              "loadOptions": [Function],
              "name": "host_validate_against",
              "onChange": [Function],
              "validate": Array [
                Object {
                  "type": "required",
                },
              ],
            },
          ],
        }
      }
    >
      <MiqFormRenderer
        buttonsLabels={Object {}}
        canReset={true}
        className="form-react"
        componentMapper={
          Object {
            "checkbox": [Function],
            "code-editor": [Function],
            "date-picker": [Function],
            "dual-list-select": [Function],
            "edit-password-field": [Function],
            "field-array": [Function],
            "file-upload": [Function],
            "font-icon-picker": [Function],
            "font-icon-picker-ddf": [Function],
            "multi-select": [Function],
            "password-field": [Function],
            "plain-text": [Function],
            "protocol-selector": [Function],
            "radio": [Function],
            "select": [Function],
            "slider": [Function],
            "sub-form": [Function],
            "switch": [Function],
            "tabs": [Function],
            "text-field": [Function],
            "textarea": [Function],
            "time-picker": [Function],
            "tree-selector": [Function],
            "tree-view": [Function],
            "validate-credentials": [Function],
            "validate-host-credentials": [Function],
            "wizard": [Function],
          }
        }
        disableSubmit={
          Array [
            "pristine",
            "invalid",
          ]
        }
        dispatch={[Function]}
        onCancel={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        schema={
          Object {
            "fields": Array [
              Object {
                "component": "select",
                "id": "host_validate_against",
                "isRequired": true,
                "label": "Select a Host to validate against",
                "loadOptions": [Function],
                "name": "host_validate_against",
                "onChange": [Function],
                "validate": Array [
                  Object {
                    "type": "required",
                  },
                ],
              },
            ],
          }
        }
        showFormControls={true}
      >
        <FormRenderer
          FormTemplate={[Function]}
          clearOnUnmount={false}
          componentMapper={
            Object {
              "checkbox": [Function],
              "code-editor": [Function],
              "date-picker": [Function],
              "dual-list-select": [Function],
              "edit-password-field": [Function],
              "field-array": [Function],
              "file-upload": [Function],
              "font-icon-picker": [Function],
              "font-icon-picker-ddf": [Function],
              "multi-select": [Function],
              "password-field": [Function],
              "plain-text": [Function],
              "protocol-selector": [Function],
              "radio": [Function],
              "select": [Function],
              "slider": [Function],
              "spy-field": [Function],
              "sub-form": [Function],
              "switch": [Function],
              "tabs": [Function],
              "text-field": [Function],
              "textarea": [Function],
              "time-picker": [Function],
              "tree-selector": [Function],
              "tree-view": [Function],
              "validate-credentials": [Function],
              "validate-host-credentials": [Function],
              "wizard": [Function],
            }
          }
          dispatch={[Function]}
          initialValues={Object {}}
          onCancel={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          schema={
            Object {
              "fields": Array [
                Object {
                  "component": "select",
                  "id": "host_validate_against",
                  "isRequired": true,
                  "label": "Select a Host to validate against",
                  "loadOptions": [Function],
                  "name": "host_validate_against",
                  "onChange": [Function],
                  "validate": Array [
                    Object {
                      "type": "required",
                    },
                  ],
                },
                Object {
                  "component": "spy-field",
                  "initialize": undefined,
                  "name": "spy-field",
                },
              ],
            }
          }
        >
          <ReactFinalForm
            decorators={
              Array [
                [Function],
              ]
            }
            dispatch={[Function]}
            initialValues={Object {}}
            mutators={
              Object {
                "concat": [Function],
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeBatch": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
                "update": [Function],
              }
            }
            onSubmit={[Function]}
            render={[Function]}
            subscription={
              Object {
                "pristine": true,
                "submitting": true,
                "valid": true,
              }
            }
          >
            <Component
              formFields={
                Array [
                  <SingleField
                    component="select"
                    id="host_validate_against"
                    isRequired={true}
                    label="Select a Host to validate against"
                    loadOptions={[Function]}
                    name="host_validate_against"
                    onChange={[Function]}
                    validate={
                      Array [
                        Object {
                          "type": "required",
                        },
                      ]
                    }
                  />,
                  <SingleField
                    component="spy-field"
                    name="spy-field"
                  />,
                ]
              }
              schema={
                Object {
                  "fields": Array [
                    Object {
                      "component": "select",
                      "id": "host_validate_against",
                      "isRequired": true,
                      "label": "Select a Host to validate against",
                      "loadOptions": [Function],
                      "name": "host_validate_against",
                      "onChange": [Function],
                      "validate": Array [
                        Object {
                          "type": "required",
                        },
                      ],
                    },
                    Object {
                      "component": "spy-field",
                      "initialize": undefined,
                      "name": "spy-field",
                    },
                  ],
                }
              }
            >
              <WrappedFormTemplate
                canReset={true}
                cancelLabel="Cancel"
                disableSubmit={
                  Array [
                    "pristine",
                    "invalid",
                  ]
                }
                formFields={
                  Array [
                    <SingleField
                      component="select"
                      id="host_validate_against"
                      isRequired={true}
                      label="Select a Host to validate against"
                      loadOptions={[Function]}
                      name="host_validate_against"
                      onChange={[Function]}
                      validate={
                        Array [
                          Object {
                            "type": "required",
                          },
                        ]
                      }
                    />,
                    <SingleField
                      component="spy-field"
                      name="spy-field"
                    />,
                  ]
                }
                formWrapperProps={
                  Object {
                    "className": "form-react",
                  }
                }
                resetLabel="Reset"
                schema={
                  Object {
                    "fields": Array [
                      Object {
                        "component": "select",
                        "id": "host_validate_against",
                        "isRequired": true,
                        "label": "Select a Host to validate against",
                        "loadOptions": [Function],
                        "name": "host_validate_against",
                        "onChange": [Function],
                        "validate": Array [
                          Object {
                            "type": "required",
                          },
                        ],
                      },
                      Object {
                        "component": "spy-field",
                        "initialize": undefined,
                        "name": "spy-field",
                      },
                    ],
                  }
                }
                showFormControls={true}
                submitLabel="Save"
              >
                <FormTemplate
                  Button={[Function]}
                  ButtonGroup={[Function]}
                  Description={[Function]}
                  FormWrapper={[Function]}
                  Header={[Function]}
                  Title={[Function]}
                  buttonOrder={
                    Array [
                      "submit",
                      "reset",
                      "cancel",
                    ]
                  }
                  canReset={true}
                  cancelLabel="Cancel"
                  disableSubmit={
                    Array [
                      "pristine",
                      "invalid",
                    ]
                  }
                  formFields={
                    Array [
                      <SingleField
                        component="select"
                        id="host_validate_against"
                        isRequired={true}
                        label="Select a Host to validate against"
                        loadOptions={[Function]}
                        name="host_validate_against"
                        onChange={[Function]}
                        validate={
                          Array [
                            Object {
                              "type": "required",
                            },
                          ]
                        }
                      />,
                      <SingleField
                        component="spy-field"
                        name="spy-field"
                      />,
                    ]
                  }
                  formWrapperProps={
                    Object {
                      "className": "form-react",
                    }
                  }
                  resetLabel="Reset"
                  schema={
                    Object {
                      "fields": Array [
                        Object {
                          "component": "select",
                          "id": "host_validate_against",
                          "isRequired": true,
                          "label": "Select a Host to validate against",
                          "loadOptions": [Function],
                          "name": "host_validate_against",
                          "onChange": [Function],
                          "validate": Array [
                            Object {
                              "type": "required",
                            },
                          ],
                        },
                        Object {
                          "component": "spy-field",
                          "initialize": undefined,
                          "name": "spy-field",
                        },
                      ],
                    }
                  }
                  showFormControls={true}
                  submitLabel="Save"
                >
                  <Form
                    className="form-react"
                    onSubmit={[Function]}
                  >
                    <Form
                      className="form-0-2-3 form-react"
                      noValidate={true}
                      onSubmit={[Function]}
                    >
                      <form
                        className="bx--form form-0-2-3 form-react"
                        noValidate={true}
                        onSubmit={[Function]}
                      >
                         
                        <SingleField
                          component="select"
                          id="host_validate_against"
                          isRequired={true}
                          key="host_validate_against"
                          label="Select a Host to validate against"
                          loadOptions={[Function]}
                          name="host_validate_against"
                          onChange={[Function]}
                          validate={
                            Array [
                              Object {
                                "type": "required",
                              },
                            ]
                          }
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "select",
                                "id": "host_validate_against",
                                "isRequired": true,
                                "label": "Select a Host to validate against",
                                "loadOptions": [Function],
                                "name": "host_validate_against",
                                "onChange": [Function],
                                "validate": Array [
                                  Object {
                                    "type": "required",
                                  },
                                ],
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SelectWithOnChange
                                component="select"
                                id="host_validate_against"
                                isRequired={true}
                                label="Select a Host to validate against"
                                loadOptions={[Function]}
                                name="host_validate_against"
                                onChange={[Function]}
                                placeholder="<Choose>"
                                validate={
                                  Array [
                                    Object {
                                      "type": "required",
                                    },
                                  ]
                                }
                              >
                                <Select
                                  component="select"
                                  id="host_validate_against"
                                  isRequired={true}
                                  label="Select a Host to validate against"
                                  loadOptions={[Function]}
                                  loadingMessage="Loading..."
                                  name="host_validate_against"
                                  placeholder="<Choose>"
                                  validate={
                                    Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ]
                                  }
                                >
                                  <Select
                                    SelectComponent={[Function]}
                                    compareValues={[Function]}
                                    id="host_validate_against"
                                    invalid={false}
                                    invalidText=""
                                    isClearable={false}
                                    isSearchable={false}
                                    labelText={
                                      <IsRequired>
                                        Select a Host to validate against
                                      </IsRequired>
                                    }
                                    loadOptions={[Function]}
                                    loadOptionsChangeCounter={1}
                                    loadingMessage="Loading..."
                                    name="host_validate_against"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    options={Array []}
                                    placeholder="<Choose>"
                                    pluckSingleValue={true}
                                    simpleValue={false}
                                    value=""
                                  >
                                    <ClearedSelect
                                      className=""
                                      closeMenuOnSelect={true}
                                      hideSelectedOptions={false}
                                      id="host_validate_against"
                                      invalidText=""
                                      isClearable={false}
                                      isFetching={false}
                                      isSearchable={false}
                                      labelText={
                                        <IsRequired>
                                          Select a Host to validate against
                                        </IsRequired>
                                      }
                                      name="host_validate_against"
                                      noOptionsMessage={[Function]}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onInputChange={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "label": "<Choose>",
                                            "value": "-1",
                                          },
                                          Object {
                                            "label": "aramis",
                                            "value": "9",
                                          },
                                          Object {
                                            "label": "10.197.65.254",
                                            "value": "10",
                                          },
                                        ]
                                      }
                                      placeholder="<Choose>"
                                      value=""
                                    >
                                      <Select
                                        className=""
                                        disabled={false}
                                        helperText=""
                                        id="host_validate_against"
                                        inline={false}
                                        invalid={false}
                                        invalidText=""
                                        labelText={
                                          <IsRequired>
                                            Select a Host to validate against
                                          </IsRequired>
                                        }
                                        light={false}
                                        name="host_validate_against"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value=""
                                      >
                                        <div
                                          className="bx--form-item"
                                        >
                                          <div
                                            className="bx--select"
                                          >
                                            <label
                                              className="bx--label"
                                              htmlFor="host_validate_against"
                                            >
                                              <IsRequired>
                                                <span
                                                  aria-hidden="true"
                                                  className="ddorg__carbon-component-mapper_is-required isRequired-0-2-6"
                                                >
                                                  *
                                                </span>
                                                Select a Host to validate against
                                              </IsRequired>
                                            </label>
                                            <div
                                              className="bx--select-input__wrapper"
                                              data-invalid={null}
                                            >
                                              <select
                                                className="bx--select-input"
                                                id="host_validate_against"
                                                name="host_validate_against"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value=""
                                              >
                                                <SelectItem
                                                  disabled={false}
                                                  hidden={false}
                                                  key="-1"
                                                  label="<Choose>"
                                                  text="<Choose>"
                                                  value="-1"
                                                >
                                                  <option
                                                    className="bx--select-option"
                                                    disabled={false}
                                                    hidden={false}
                                                    label="<Choose>"
                                                    value="-1"
                                                  >
                                                    &lt;Choose&gt;
                                                  </option>
                                                </SelectItem>
                                                <SelectItem
                                                  disabled={false}
                                                  hidden={false}
                                                  key="9"
                                                  label="aramis"
                                                  text="aramis"
                                                  value="9"
                                                >
                                                  <option
                                                    className="bx--select-option"
                                                    disabled={false}
                                                    hidden={false}
                                                    label="aramis"
                                                    value="9"
                                                  >
                                                    aramis
                                                  </option>
                                                </SelectItem>
                                                <SelectItem
                                                  disabled={false}
                                                  hidden={false}
                                                  key="10"
                                                  label="10.197.65.254"
                                                  text="10.197.65.254"
                                                  value="10"
                                                >
                                                  <option
                                                    className="bx--select-option"
                                                    disabled={false}
                                                    hidden={false}
                                                    label="10.197.65.254"
                                                    value="10"
                                                  >
                                                    10.197.65.254
                                                  </option>
                                                </SelectItem>
                                              </select>
                                              <ForwardRef(ChevronDown16)
                                                className="bx--select__arrow"
                                              >
                                                <Icon
                                                  className="bx--select__arrow"
                                                  fill="currentColor"
                                                  height={16}
                                                  preserveAspectRatio="xMidYMid meet"
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="bx--select__arrow"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    height={16}
                                                    preserveAspectRatio="xMidYMid meet"
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                                                    />
                                                  </svg>
                                                </Icon>
                                              </ForwardRef(ChevronDown16)>
                                            </div>
                                          </div>
                                        </div>
                                      </Select>
                                    </ClearedSelect>
                                  </Select>
                                </Select>
                              </SelectWithOnChange>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <SingleField
                          component="spy-field"
                          key="spy-field"
                          name="spy-field"
                        >
                          <FormConditionWrapper
                            field={
                              Object {
                                "component": "spy-field",
                                "initialize": undefined,
                                "name": "spy-field",
                              }
                            }
                          >
                            <FormFieldHideWrapper
                              hideField={false}
                            >
                              <SpyField
                                component="spy-field"
                                name="spy-field"
                              >
                                <FormSpy
                                  onChange={[Function]}
                                  subscription={
                                    Object {
                                      "pristine": true,
                                      "valid": true,
                                    }
                                  }
                                />
                              </SpyField>
                            </FormFieldHideWrapper>
                          </FormConditionWrapper>
                        </SingleField>
                        <FormSpy>
                          <FormControls
                            Button={[Function]}
                            ButtonGroup={[Function]}
                            FormSpy={[Function]}
                            buttonOrder={
                              Array [
                                "submit",
                                "reset",
                                "cancel",
                              ]
                            }
                            buttonsProps={Object {}}
                            canReset={true}
                            canSubmit={false}
                            cancelLabel="Cancel"
                            disableSubmit={true}
                            formFields={
                              Array [
                                <SingleField
                                  component="select"
                                  id="host_validate_against"
                                  isRequired={true}
                                  label="Select a Host to validate against"
                                  loadOptions={[Function]}
                                  name="host_validate_against"
                                  onChange={[Function]}
                                  validate={
                                    Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ]
                                  }
                                />,
                                <SingleField
                                  component="spy-field"
                                  name="spy-field"
                                />,
                              ]
                            }
                            formSpyProps={
                              Object {
                                "active": undefined,
                                "dirty": false,
                                "dirtyFields": Object {},
                                "dirtyFieldsSinceLastSubmit": Object {},
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "errors": Object {
                                  "host_validate_against": "Required",
                                },
                                "form": Object {
                                  "batch": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "destroyOnUnregister": false,
                                  "focus": [Function],
                                  "getFieldState": [Function],
                                  "getRegisteredFields": [Function],
                                  "getState": [Function],
                                  "initialize": [Function],
                                  "isValidationPaused": [Function],
                                  "mutators": Object {
                                    "concat": [Function],
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeBatch": [Function],
                                    "shift": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                    "update": [Function],
                                  },
                                  "pauseValidation": [Function],
                                  "registerField": [Function],
                                  "reset": [Function],
                                  "resetFieldState": [Function],
                                  "restart": [Function],
                                  "resumeValidation": [Function],
                                  "setConfig": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "hasSubmitErrors": false,
                                "hasValidationErrors": true,
                                "initialValues": Object {},
                                "invalid": true,
                                "modified": Object {
                                  "host_validate_against": false,
                                },
                                "modifiedSinceLastSubmit": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitErrors": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "touched": Object {
                                  "host_validate_against": false,
                                },
                                "valid": false,
                                "validating": false,
                                "values": Object {},
                                "visited": Object {
                                  "host_validate_against": false,
                                },
                              }
                            }
                            onCancel={[Function]}
                            onReset={[Function]}
                            resetLabel="Reset"
                            schema={
                              Object {
                                "fields": Array [
                                  Object {
                                    "component": "select",
                                    "id": "host_validate_against",
                                    "isRequired": true,
                                    "label": "Select a Host to validate against",
                                    "loadOptions": [Function],
                                    "name": "host_validate_against",
                                    "onChange": [Function],
                                    "validate": Array [
                                      Object {
                                        "type": "required",
                                      },
                                    ],
                                  },
                                  Object {
                                    "component": "spy-field",
                                    "initialize": undefined,
                                    "name": "spy-field",
                                  },
                                ],
                              }
                            }
                            submitLabel="Save"
                          >
                            <ButtonGroup>
                              <ButtonSet
                                className=""
                              >
                                <div
                                  className="bx--btn-set"
                                >
                                  <Button
                                    buttonType="submit"
                                    disabled={true}
                                    key="form-submit"
                                    label="Save"
                                    type="submit"
                                    variant="primary"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="primary"
                                      type="submit"
                                      variant="primary"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--primary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="submit"
                                        variant="primary"
                                      >
                                        Save
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="reset"
                                    disabled={true}
                                    key="form-reset"
                                    label="Reset"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      disabled={true}
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary bx--btn--disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Reset
                                      </button>
                                    </Button>
                                  </Button>
                                  <Button
                                    buttonType="cancel"
                                    key="form-cancel"
                                    label="Cancel"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Button
                                      kind="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        aria-describedby={null}
                                        aria-pressed={null}
                                        className="bx--btn bx--btn--secondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        Cancel
                                      </button>
                                    </Button>
                                  </Button>
                                </div>
                              </ButtonSet>
                            </ButtonGroup>
                          </FormControls>
                        </FormSpy>
                         
                      </form>
                    </Form>
                  </Form>
                </FormTemplate>
              </WrappedFormTemplate>
            </Component>
          </ReactFinalForm>
        </FormRenderer>
      </MiqFormRenderer>
    </Connect(MiqFormRenderer)>
  </HostEditForm>
</Provider>
`;
