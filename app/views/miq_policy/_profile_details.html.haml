- if @edit
  - url = url_for_only_path(:action => 'profile_field_changed', :id => (@profile.id || 'new'))
  - observe_with_interval = {:interval => '.5', :url => url}.to_json
- if @profile
  #profile_info_div
    = render :partial => "layouts/flash_msg"
    - if @edit
      -# Don't show basic info box with description only unless in edit mode
      %h3
        = _("Basic Information")
      .form-horizontal
        .form-group
          %label.control-label.col-md-2
            = _("Description")
          - if @edit
            .col-md-8
              = text_field_tag("description", @edit[:new][:description],
                :maxlength         => ViewHelper::MAX_DESC_LEN,
                :class             => "form-control",
                "data-miq_observe" => observe_with_interval)
            = javascript_tag(javascript_focus('description'))
          - else
            .col-md-8
              = h(@profile.description)
      %hr

    - if @edit
      %h3= _("Policy Selection")
      .col-md-5
        = _("Available Policies:")
        %span#choices_chosen_div
          = select_tag('choices_chosen[]',
            options_for_select(@edit[:choices].sort),
            :multiple => true,
            :class    => "form-control",
            :style    => "overflow-x: scroll;",
            :size     => 8,
            :id       => "choices_chosen")

      .col-md-1{:style => "padding: 10px"}
        .spacer
        .spacer
        - [[_("Move selected Policies into this Profile"),   'choices_chosen_div', 'move_right',   'fa-angle-right'],
           [_("Remove all Policies from this Profile"),      nil,                  'move_allleft', 'fa-angle-double-left'],
           [_("Remove selected Policies from this Profile"), 'members_chosen_div', 'move_left',    'fa-angle-left']].each do |title, chosen_div, action, arrow_style|
          %button.btn.btn-default.btn-block{:title                 => title,
                                            :remote                => true,
                                            "data-submit"          => chosen_div,
                                            "data-method"          => :post,
                                            "data-miq_sparkle_on"  => true,
                                            "data-miq_sparkle_off" => true,
                                            "data-click_url"       => {:url => url_for_only_path(:action => 'profile_edit',
                                                                                                 :button => action,
                                                                                                 :id => @profile)}.to_json}
            %i.fa.fa-lg.hidden-xs.hidden-sm{:class => arrow_style}
            %i.fa.fa-lg.fa-rotate-90.hidden-md.hidden-lg{:class => arrow_style}
        .spacer

      .col-md-5
        = _("Profile Policies:")
        %span#members_chosen_div
          = select_tag('members_chosen[]',
            options_for_select(@edit[:new][:policies].sort),
            :multiple => true,
            :class    => "form-control",
            :style    => "overflow-x: scroll;",
            :size     => 8,
            :id       => "members_chosen")
      %br{:style => "clear: both"}
      %hr
    - else
      %h3= _("Policies")
      - if @profile_policies.empty?
        = render :partial => 'layouts/info_msg', :locals => {:message => _("No Policies are defined.")}
      - else
        %table.table.table-striped.table-bordered.table-hover
          %tbody
            - @profile_policies.each do |p|
              %tr{:title => _("View this %{model} Policy") % {:model => ui_lookup(:model => p.towhat)},
                :onclick => "miqTreeActivateNode('#{x_active_tree}', '#{x_node}_p-#{p.id}');"}
                %td.table-view-pf-select
                  %i{:class => p.decorate.fonticon}
                %td
                  %b
                    #{ui_lookup(:model => p.towhat)} #{p.mode.capitalize}:
                  &nbsp;
                  = h(p.description)
      %hr

    -# Notes field
    - if @edit
      %h3
        = _("Notes")
        (
        %span#notes_count= @edit[:new][:notes] ? @edit[:new][:notes].length : 0
        \/ 512)
      = text_area_tag("notes", @edit[:new][:notes],
        :rows                       => 4,
        :maxlength                  => "512",
        :counter                    => "notes_count",
        "data-miq_check_max_length" => true,
        "data-miq_observe"          => observe_with_interval)
      %hr
    - else
      %h3= _("Notes")
      - if @profile.notes.blank?
        = render :partial => 'layouts/info_msg', :locals => {:message => _("No notes have been entered.")}
      - else
        = text_area_tag("notes", @profile.notes, :readonly => true, :rows => 4)
      %hr
    %br/
