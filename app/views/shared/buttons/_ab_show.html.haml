= render :partial => "layouts/flash_msg"

%h3
  = _('Basic Information')
.form-horizontal.static
  .form-group
    %label.control-label.col-md-2
      = _('Text')
    .col-md-8
      = @custom_button.name
      - display = @custom_button.options.key?(:display) ? @custom_button.options[:display] : true
      &nbsp;
      .checkbox-inline
        %label{:style => "font-weight: normal"}
          = check_box_tag(display, true, display, :disabled => true)
          = _('Display on Button')

  .form-group
    %label.control-label.col-md-2
      = _('Hover Text')
    .col-md-8
      = @custom_button.description
  .form-group
    %label.control-label.col-md-2
      = _('Image')
    .col-md-8
      %span{:class => "miq-custom-button-#{@custom_button.options[:button_image]}"}
  .form-group
    %label.control-label.col-md-2
      = _('Dialog')
    .col-md-8
      = h(@sb[:dialog_label])
  .form-group
    %label.control-label.col-md-2
      = _('Open URL')
    .col-md-8
      = h(@custom_button.options.key?(:open_url) ? @custom_button.options[:open_url] : false)
  .form-group
    %label.control-label.col-md-2
      = _('Display for')
    .col-md-8
      - display_how_map = {'single' => _('Single entity'), 'list' => _('List'), 'both' => _('Single and list')}
      = display_how_map[@custom_button.options[:display_for]]
  .form-group
    %label.control-label.col-md-2
      = _('Submit')
    .col-md-8
      - submit_how_map = { 'all' => _('Submit all'), 'one' => _('One by one') }
      = submit_how_map[@custom_button.options[:submit_how]]
%hr

%h3
  = _('Object Details')
.form-horizontal.static
  .form-group
    %label.control-label.col-md-2
      = _('System/Process/')
    .col-md-8
      = h(@resolve[:new][:instance_name])
  .form-group
    %label.control-label.col-md-2
      = _('Message')
    .col-md-8
      = h(@resolve[:new][:object_message])
  .form-group
    %label.control-label.col-md-2
      = _('Request')
    .col-md-8
      = h(@resolve[:new][:object_request])
%hr

%h3
  = _('Object Attribute')
.form-horizontal.static
  .form-group
    %label.control-label.col-md-2
      = _('Type')
    .col-md-8
      = @resolve[:new][:target_class]
  - if @resolve[:new][:target_class] && !@resolve[:new][:target_class].blank?
    .form-group
      %label.control-label.col-md-2
        = _('Selection')
      .col-md-8
        = h(@resolve[:new][:target_id])
%hr

%h3
  = _('Visibility Expression')
.form-horizontal.static
  - if @custom_button && !@custom_button.visibility_expression.nil? && @custom_button.visibility_expression.kind_of?(MiqExpression)
    = h(@custom_button.visibility_expression.to_human)
  - else
    = render :partial => 'layouts/info_msg', :locals => {:message => _("No Visibility Expression defined, this button will be always visible")}
    %hr

%h3
  = _("Enablement Expression")
.form-horizontal.static
  - if @custom_button && !@custom_button.enablement_expression.nil? && @custom_button.enablement_expression.kind_of?(MiqExpression)
    = h(@custom_button.enablement_expression.to_human)
  - else
    = render :partial => 'layouts/info_msg', :locals => {:message => _("No Enablement Expression defined, this button will be always enabled")}
%hr

%h3
  = _('Attribute/Value Pairs')
- if @resolve[:new][:attrs].empty?
  = render :partial => 'layouts/info_msg', :locals => {:message => _("No Attribute/Value Pairs found.")}
- else
  .form-horizontal.static
    - @resolve[:new][:attrs].each_with_index do |attr, i|
      .form-group
        %label.control-label.col-md-2
          = (i + 1).to_s
        .col-md-2
          = h(attr[0])
        .col-md-2
          = h(attr[1])
%hr

