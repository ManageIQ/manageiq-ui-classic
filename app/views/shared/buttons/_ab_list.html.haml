-# showing list of CIs
- if @custom_button_entities
  = render :partial => "layouts/flash_msg"
  %table.table.table-bordered.table-hover.table-striped
    %thead
      %th
        = _('Object Types')
    %tbody
      -# CI node level
      - @custom_button_entities.sort.each do |obj|
        %tr{:title => _("Click to view details"), :onclick => "miqTreeActivateNode('ab_tree', 'xx-#{obj[1]}')"}
          %td
            = obj[0]

- elsif @sb[:button_groups]
  - if @sb[:button_groups].blank?
    %hr
    = render :partial => 'layouts/info_msg', :locals => {:message => _("No Items found.")}
  - else
    = render :partial => "layouts/flash_msg"
    %table.table.table-bordered.table-hover.table-striped
      %thead
        %th.table-view-pf-select
        %th
          = _('Text')
        - if x_active_tree == :sandt_tree
          %th
            = _('Type')
        %th
          = _('Hover Text')
      %tbody
        - @sb[:button_groups].each do |obj|
          - if obj.kind_of?(String)
            %tr{:title => _("Click to view details"), :onclick => "miqTreeActivateNode('ab_tree', '-ub-#{@nodetype[1]}')"}
              %td.table-view-pf-select
                %i{:class => "pficon pficon-folder-close"}
              %td
                = obj
              %td
                = obj
          - else
            - tree_box = x_active_tree == :sandt_tree ? 'sandt_tree' : 'ab_tree'
            - tree_id = x_node
            - if obj[:typ] == "CustomButton"
              - typ = "cb"
              - rec_type = "Button"
            - else
              - typ = "cbg"
              - rec_type = "Group"
            %tr{:title => _("Click to view details"), :onclick => "miqTreeActivateNode('#{tree_box}', '#{tree_id}_#{typ}-#{obj[:id]}')"}
              %td.table-view-pf-select
                %i{:class => obj[:button_icon], :style => obj.key?(:button_color) ? "color: #{obj[:button_color]};" : nil}
              %td
                = obj[:name].split("|").first
              - if x_active_tree == :sandt_tree
                %td
                  = rec_type
              %td
                = obj[:description]
- elsif @sb[:buttons]
  -# button node
  = render :partial => "layouts/flash_msg"
  - if @record && @record.kind_of?(CustomButtonSet)
    -# don't need basic info box for Unassigned button group
    %h3
      = _('Basic Information')
    .form-horizontal.static
      .form-group
        %label.control-label.col-md-2
          = _('Text')
        .col-md-8
          = @record.name.split('|').first
          - display = @record.set_data.present? && [true, "1"].include?(@record.set_data[:display])
          &nbsp;
          .checkbox-inline
            %label{:style => "font-weight: normal"}
              = check_box_tag(display, true, display, :disabled => true)
              = _('Display on Button')

      .form-group
        %label.control-label.col-md-2
          = _('Hover Text')
        .col-md-8
          = @record.description
      .form-group
        %label.control-label.col-md-2
          = _('Image')
        .col-md-8
          %span{:class => @record.set_data[:button_icon], :style => @record.set_data.key?(:button_color) ? "color: #{@record.set_data[:button_color]};" : nil}
  - if @sb[:buttons].blank?
    %hr
    = render :partial => 'layouts/info_msg', :locals => {:message => _("No Buttons found.")}
  - else
    %hr
    %table.table.table-bordered.table-hover.table-striped
      %thead
        %th.table-view-pf-select
        %th
          = _('Text')
        %th
          = _('Hover Text')
      %tbody
        - @sb[:buttons].each do |obj|
          - tree_box = x_active_tree == :sandt_tree ? 'sandt_tree' : 'ab_tree'
          - id = @nodetype[0].split('-')[1] == "ub" ? "#{@nodetype[0]}_cb-#{obj[:id]}" : "#{x_node}_cb-#{obj[:id]}"
          %tr{:title => _("Click to view details"), :onclick => "miqTreeActivateNode('#{tree_box}', '#{id}')"}
            %td.table-view-pf-select
              %i{:class => obj[:button_icon], :style => obj.key?(:button_color) ? "color: #{obj[:button_color]};" : nil}
            %td
              = obj[:name]
            %td
              = obj[:description]
- elsif %w(ab_group_edit ab_group_new).include?(params[:pressed]) || (params[:button] == "reset" && params[:action] == "group_update")
  = render :partial => 'shared/buttons/group_form'
- elsif %w(ab_button_edit ab_button_new).include?(params[:pressed]) || (params[:button] == "reset" && params[:action] == "button_update") || (params[:button] == "paste" && params[:action] == "resolve")
  = render :partial => 'shared/buttons/ab_form'
- elsif params[:pressed] == "ab_group_reorder" || (params[:button] == "reset" && params[:action] == "ab_group_reorder")
  = render :partial => 'shared/buttons/group_order_form'
- elsif @custom_button
  - if params[:action] == 'button_update' && (params[:button] == 'visibility_expression' || params[:button] == 'enablement_expression')
    = render :partial => 'shared/buttons/ab_form'
  - else
    = render :partial => 'shared/buttons/ab_show'
