- url = url_for_only_path(:action => 'dialog_field_changed', :id => @edit[:rec_id] || "new") if @edit
- dialog_mode = @edit[:dialog_mode] if @edit

- case dialog_mode
- when :reconfigure
  - edit = field.reconfigurable
- when :review
  - edit = false
- else
  - edit = !@edit.nil?

.form-group{:id => "field_#{field.id}_tr", :style => field.visible ? 'display:block' : 'display:none'}
  %label.control-label.col-md-2{:title => field.description}
    = field.label
  .col-md-8{:title => field.description}
    - current_index = auto_refreshable_field_indicies.find_index(:tab_index    => tab_index,
                                                                 :group_index  => group_index,
                                                                 :field_index  => field_index,
                                                                 :auto_refresh => !!field.auto_refresh)
    - auto_refresh_options = {:tab_index                       => tab_index,
                              :group_index                     => group_index,
                              :field_index                     => field_index,
                              :auto_refreshable_field_indicies => auto_refreshable_field_indicies,
                              :trigger                         => field.trigger_auto_refresh,
                              :current_index                   => current_index}
    - locals = {:edit => edit, :field => field, :url => url, :wf => wf, :auto_refresh_options => auto_refresh_options}
    - case field.type
    - when 'DialogFieldTextBox'
      = render(:partial => "shared/dialogs/dialog_field_text_box", :locals => locals)

    - when 'DialogFieldTextAreaBox'
      = render(:partial => "shared/dialogs/dialog_field_text_area_box", :locals => locals)

    - when 'DialogFieldCheckBox'
      = render(:partial => "shared/dialogs/dialog_field_check_box", :locals => locals)

    - when 'DialogFieldDateControl', 'DialogFieldDateTimeControl'
      = render(:partial => "shared/dialogs/dialog_field_date_and_date_time_control", :locals => locals)

    - when "DialogFieldRadioButton"
      = render(:partial => "shared/dialogs/dialog_field_radio_button", :locals => locals)

    - when "DialogFieldDropDownList"
      = render(:partial => "shared/dialogs/dialog_field_drop_down_list", :locals => locals)

    - when 'DialogFieldButton'
      = button_tag(_("Save"), :class => edit ? 'btn btn-primary' : 'btn btn-primary disabled')

    - when 'DialogFieldTagControl'
      - if edit         
        = select_tag(field.name,
                     options_for_select(dialog_dropdown_select_values(field), wf.value(field.name)),
                     drop_down_options(field, url))
        :javascript
          dialogFieldRefresh.initializeDialogSelectPicker('#{field.name}', undefined, '#{url}', JSON.parse('#{j(auto_refresh_options.to_json)}'));

      - else
        - value = wf.value(field.name) || ''
        - classification_ids = value.split(',')
        = h(Classification.where(:id => classification_ids).collect(&:description).join(', '))

    :javascript
      dialogFieldRefresh.setVisible($('#field_#{field.id}_tr'), #{field.visible});
