%form#form_div{:name           => "angularForm",
               'ng-controller' => "cloudObjectStoreContainerFormController as vm",
               "ng-show"       => "vm.afterGet",
               "ng-cloak"      => "",
               "miq-form"      => true,
               "model"         => "vm.cloudContainerModel",
               "model-copy"    => "vm.modelCopy"}
  = render :partial => "layouts/flash_msg"
  .form-horizontal
    .form-group{"ng-class" => "{'has-error': angularForm.storage_manager_id.$invalid}"}
      %label.col-md-2.control-label
        = _('Storage Manager')
      .col-md-8
        %select{"name"        => "storage_manager_id",
                "ng-model"    => "vm.cloudContainerModel.storage_manager_id",
                "ng-options"  => "mgr.id as mgr.name for mgr in vm.storageManagers",
                "ng-change"   => "vm.storageManagerChanged(vm.cloudContainerModel.storage_manager_id)",
                "required"    => "",
                "disabled"    => !@storage_manager.nil?,
                :checkchange  => true,
                "miq-select"  => true}
          %option{"value" => "", "disabled" => ""}
            = "<#{_('Choose')}>"
        %span.help-block{"ng-show" => "angularForm.storage_manager_id.$error.required"}
          = _("Required")

    .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
      %label.col-md-2.control-label
        = _('Container Name')
      .col-md-8
        %input.form-control{:type          => "text",
                            :name          => "name",
                            "ng-model"     => "vm.cloudContainerModel.name",
                            "ng-maxlength" => 255,
                            "required"     => "",
                            :miqrequired   => true,
                            :checkchange   => true}
        %span.help-block{"ng-show" => "angularForm.name.$error.required"}
          = _("Required")
  %div{"ng-if" => "vm.cloudContainerModel.emstype === 'ManageIQ::Providers::Amazon::StorageManager::S3'"}
    .form-horizontal
      .form-group{"ng-class"  => "{'has-error': angularForm.provider_region.$invalid}",
                  "ng-if"     => "#{@provider_regions.keys.to_json}.includes(vm.cloudContainerModel.parent_emstype)",
                  "ng-switch" => "",
                  "on"        => "vm.cloudContainerModel.parent_emstype"}
        %label.col-md-2.control-label{"for" => "ems_region"}
          = _('Region')
        .col-md-8
          - @provider_regions.each do |name, regions|
            = select_tag('provider_region',
                         options_for_select([["<#{_('Choose')}>", nil]] + regions, disabled: ["<#{_('Choose')}>", nil]),
                         "ng-model"                    => "vm.cloudContainerModel.provider_region",
                         "ng-switch-when"              => name,
                         "required"                    => "",
                         "checkchange"                 => "",
                         "selectpicker-for-select-tag" => "",
                         "multiple"                    => false,
                         "data-live-search"            => true)
          %span.help-block{"ng-show" => "angularForm.provider_region.$error.required"}
            = _("Required")
  = render :partial => "layouts/angular/generic_form_buttons"

:javascript
  ManageIQ.angular.app.value('storageManagerId', #{@storage_manager.try(:id) || "undefined"});
  miq_bootstrap('#form_div');
