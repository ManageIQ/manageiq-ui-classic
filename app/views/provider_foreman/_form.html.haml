- validate_url = url_for_only_path(:action => 'authentication_validate', :id => @provider_manager.id || "new", :type => nil, :button => "validate")
- @angular_form = true

.form-horizontal
  %form#form_div{:name           => "angularForm",
                 'ng-controller' => "providerForemanFormController as vm",
                 'ng-cloak'      => '',
                 'ng-show'       => "vm.afterGet",
                 "miq-form"      => true,
                 "model"         => "vm.providerForemanModel",
                 "model-copy"    => 'vm.modelCopy',
                 :novalidate     => true}
    = render :partial => "layouts/flash_msg"
    %br
    .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
      %label.col-md-2.control-label
        = _("Name")
      .col-md-8
        %input.form-control{:type        => "text",
                            :name        => "name",
                            'ng-model'   => "vm.providerForemanModel.name",
                            :maxlength   => ViewHelper::MAX_NAME_LEN,
                            :required    => "",
                            :checkchange => true,
                            "auto-focus" => ""}
        %span.help-block{"ng-show" => "angularForm.name.$error.required"}
          = _("Required")

    .form-group{"ng-class" => "{'has-error': angularForm.zone.$invalid}"}
      %label.col-md-2.control-label{"for" => "prov_zone"}
        = _("Zone")
      .col-md-8
        - if @server_zones.length <= 1
          %input.form-control{"type"        => "text",
                              "id"          => "prov_zone",
                              "name"        => "zone",
                              "ng-model"    => "vm.providerForemanModel.zone",
                              "maxlength"   => 15,
                              "required"    => "",
                              "checkchange" => "",
                              "readonly"    => true,
                              "style"       => "color: black;"}
        - else
          = select_tag('zone',
                       options_for_select(@server_zones.sort_by { |name, _name| name }),
                       "ng-model"                    => "vm.providerForemanModel.zone",
                       "checkchange"                 => "",
                       "required"                    => "",
                       "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.url.$invalid}"}
      %label.col-md-2.control-label{"for" => "provider_url"}
        = _("Url")
      .col-md-8
        %input.form-control{:type           => "text",
                            :name           => "url",
                            'ng-model'      => "vm.providerForemanModel.url",
                            :maxlength      => ViewHelper::MAX_DESC_LEN,
                            "id"            => "url",
                            :required       => "",
                            "ng-trim"       => false,
                            "detect_spaces" => "",
                            :checkchange    => true}
        %span.help-block{"ng-show" => "angularForm.url.$error.required"}
          = _("Required")
        %span.help-block{"ng-show" => "angularForm.url.$error.detectedSpaces"}
          = _("Spaces are prohibited")
    .form-group
      %label.col-md-2.control-label
        = _("Verify Peer Certificate")
      .col-md-8
        %input{:type            => "checkbox",
               :name            => "verify_ssl",
               'ng-model'       => "vm.providerForemanModel.verify_ssl",
               :checkchange     => true}


    %hr
    %h3
      = _("Credentials")
    %auth-credentials{'ng-show'             => true,
                      'model'               => 'providerForemanModel',
                      'model-copy'          => 'vm.modelCopy',
                      'user-required'       => true,
                      'password-required'   => true,
                      'prefix'              => 'log',
                      'enable-valid-button' => 'angularForm.$valid',
                      'validate-url'        => validate_url,
                      'valtype'             => nil,
                      'new-record'          => @provider_manager.id ? false : true,
                      'validate'            => 'validateClicked'}

    = render :partial => "layouts/angular/generic_form_buttons"
    %span{:style => "color:black"}= _("Required. Should have privileged access, such as root or administrator.")

:javascript
  ManageIQ.angular.app.value('providerForemanFormId', '#{@provider_manager.id || "new"}');
  miq_bootstrap('#form_div');
