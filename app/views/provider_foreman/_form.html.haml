- @angular_form = true

.form-horizontal{:id => "start_form_div", :style => "display:none"}
  %form#form_div{:name           => "angularForm",
                 'ng-controller' => "providerForemanFormController as vm",
                 'ng-show'       => "vm.afterGet",
                 "miq-form"      => true,
                 "model"         => "vm.providerForemanModel",
                 "model-copy"    => 'vm.modelCopy',
                 :novalidate     => true}
    = render :partial => "layouts/flash_msg"
    %br
    .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
      %label.col-md-2.control-label
        = _("Name")
      .col-md-8
        %input.form-control{:type            => "text",
                            :name            => "name",
                            'ng-model'       => "vm.providerForemanModel.name",
                            :maxlength       => MAX_NAME_LEN,
                            :required        => "",
                            :checkchange     => true,
                            "auto-focus"     => "",
                            "start-form-div" => "start_form_div"}
        %span.help-block{"ng-show" => "angularForm.name.$error.required"}
          = _("Required")

    .form-group{"ng-class" => "{'has-error': angularForm.zone.$invalid}"}
      %label.col-md-2.control-label{"for" => "prov_zone"}
        = _("Zone")
      .col-md-8
        - if @server_zones.length <= 1
          %input.form-control{"type"        => "text",
                              "id"          => "prov_zone",
                              "name"        => "zone",
                              "ng-model"    => "vm.providerForemanModel.zone",
                              "maxlength"   => 15,
                              "required"    => "",
                              "checkchange" => "",
                              "readonly"    => true,
                              "style"       => "color: black;"}
        - else
          = select_tag('zone',
                       options_for_select(@server_zones.sort_by { |name, _name| name }),
                       "ng-model"                    => "vm.providerForemanModel.zone",
                       "checkchange"                 => "",
                       "required"                    => "",
                       "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.url.$invalid}"}
      %label.col-md-2.control-label{"for" => "provider_url"}
        = _("Url")
      .col-md-8
        %input.form-control{:type           => "text",
                            :name           => "url",
                            'ng-model'      => "vm.providerForemanModel.url",
                            :maxlength      => MAX_DESC_LEN,
                            "id"            => "url",
                            :required       => "",
                            "ng-trim"       => false,
                            "detect_spaces" => "",
                            :checkchange    => true}
        %span.help-block{"ng-show" => "angularForm.url.$error.required"}
          = _("Required")
        %span.help-block{"ng-show" => "angularForm.url.$error.detectedSpaces"}
          = _("Spaces are prohibited")
    .form-group
      %label.col-md-2.control-label
        = _("Verify Peer Certificate")
      .col-md-8
        %input{:type            => "checkbox",
               :name            => "verify_ssl",
               'ng-model'       => "vm.providerForemanModel.verify_ssl",
               :checkchange     => true}


    %hr
    %h3
      = _("Credentials")
    = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
             :locals  => {:ng_show           => true,
                          :ng_model          => "providerForemanModel",
                          :ng_reqd_userid    => true,
                          :ng_reqd_password  => true,
                          :ng_reqd_verify    => true,
                          :validate_url      => "authentication_validate",
                          :id                => @provider_manager.id || "new",
                          :valtype           => nil,
                          :vm_scope          => true,
                          :basic_info_needed => true}

    = render :partial => "layouts/angular/generic_form_buttons"
    %span{:style => "color:black"}= _("Required. Should have privileged access, such as root or administrator.")

:javascript
  ManageIQ.angular.app.value('providerForemanFormId', '#{@provider_manager.id || "new"}');
  miq_bootstrap('#form_div');
