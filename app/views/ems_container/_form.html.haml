- @angular_form = true

.form-horizontal{'ng-cloak' => '',
                 'ng-show'  => 'afterGet'}
  = render :partial => "layouts/flash_msg"
  %div
    .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
      %label.col-md-2.control-label{"for" => "ems_name"}
        = _('Name')
      .col-md-4
        %input.form-control{"type"        => "text",
                            "id"          => "ems_name",
                            "name"        => "name",
                            "ng-model"    => "emsCommonModel.name",
                            "maxlength"   => ViewHelper::MAX_NAME_LEN,
                            "required"    => "",
                            "checkchange" => "",
                            "auto-focus"  => ""}
        %span.help-block{"ng-show" => "angularForm.name.$error.required"}
          = _("Required")

    .form-group{"ng-class" => "{'has-error': angularForm.emstype.$invalid}"}
      %label.col-md-2.control-label{"for" => "ems_type"}
        = _('Type')
      .col-md-8
        = select_tag('emstype',
                     options_for_select([["<#{_('Choose>')}", nil]] + @ems_types, :disabled => ["<#{_('Choose')}>", nil]),
                     "ng-if"                       => "newRecord",
                     "ng-model"                    => "emsCommonModel.emstype",
                     "ng-change"                   => "providerTypeChanged()",
                     "id"                          => "ems_type",
                     "required"                    => "",
                     "checkchange"                 => "",
                     "selectpicker-for-select-tag" => "")
        %div{"ng-if" => "!newRecord"}
          %label.form-control{"type"     => "text",
                              "id"       => "ems_type",
                              "name"     => "emstype",
                              "ng-if"    => "!newRecord",
                              "readonly" => true,
                              "style"    => "color: black; font-weight: normal;"}
            = @emstype_display

    .form-group{"ng-class" => "{'has-error': angularForm.zone.$invalid}", "ng-if" => "!emsCommonModel.zone_hidden"}
      %label.col-md-2.control-label{"for" => "ems_zone"}
        = _("Zone")
      .col-md-4
        - if @server_zones.length <= 1
          %input.form-control{"type"      => "text",
                              "id"        => "ems_zone",
                              "name"      => "zone",
                              "ng-model"  => "emsCommonModel.zone",
                              "maxlength" => 15,
                              "required"  => "",
                              "readonly"  => true,
                              "style"     => "color: black;"}
        - else
          = select_tag('zone',
                       options_for_select(@server_zones.sort_by { |name, _name| name }),
                       "ng-model"                    => "emsCommonModel.zone",
                       "id"                          => "ems_zone",
                       "checkchange"                 => "",
                       "required"                    => "",
                       "selectpicker-for-select-tag" => "")
    .form-group{"ng-class" => "{'has-error': angularForm.alerts.$invalid}"}
      %label.col-md-2.control-label{"for" => "prov_alerts"}
        = _("Alerts")
      .col-md-8
        = select_tag('alerts_selection', options_for_select([[_("Disabled"), "disabled"], [_("Prometheus"), "prometheus"]]),
                        "ng-model"                    => "emsCommonModel.alerts_selection",
                        "ng-change"                   => "alertsSelectionChanged()",
                        "checkchange"                 => "",
                        "required"                    => "",
                        "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.metrics.$invalid}"}
      %label.col-md-2.control-label{"for" => "prov_metrics"}
        = _("Metrics")
      .col-md-8
        = select_tag('metrics_selection', options_for_select([[_("Disabled"), "disabled"], [_("Hawkular"), "hawkular"],
                     [_("Prometheus"), "prometheus"]]),
                     "ng-model"                    => "emsCommonModel.metrics_selection",
                     "ng-change"                   => "metricSelectionChanged()",
                     "checkchange"                 => "",
                     "required"                    => "",
                     "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.virtualization.$invalid}"}
      %label.col-md-2.control-label{"for" => "prov_virtualization"}
        = _("Virtualization")
      .col-md-8
        = select_tag('virtualization_selection', options_for_select([[_("Disabled"), "disabled"], [_("KubeVirt"), "kubevirt"]]),
                        "ng-model"                    => "emsCommonModel.virtualization_selection",
                        "ng-change"                   => "virtualizationSelectionChanged()",
                        "checkchange"                 => "",
                        "required"                    => "",
                        "selectpicker-for-select-tag" => "")
    %input{:type      => 'text',
           :id        => "current_tab",
           :name      => "current_tab",
           "ng-model" => "currentTab",
           "ng-hide"  => "true"}

  %hr
  = render :partial => "layouts/angular/multi_auth_credentials", :locals => {:record => @ems, :ng_model => "emsCommonModel"}

  %div{"ng-if" => "emsOptionsModel.provider_options.hasOwnProperty('proxy_settings') || emsOptionsModel.provider_options.hasOwnProperty('advanced_settings')"}
    %hr
    = render :partial => "/layouts/angular/per_provider_settings"

  = render :partial => "layouts/angular/x_edit_buttons_angular", :locals => {:record => @ems, :restful => true}
