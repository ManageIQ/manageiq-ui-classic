= render :partial => "domain_overrides", :locals => {:node_prefix => "aei", :model => "Instance"}
%h3= _('Fields')
#instance_fields_div
  - if !@in_a_form
    - state_class = state_class?(@record.class_id)
    %table#instance_fields_grid.table.table-striped.table-bordered
      %thead
        %th= _('Name')
        %th= _('Value')
        - if state_class
          %th= _('On Entry')
          %th= _('On Exit')
          %th= _('On Error')
          %th= _('Max Retries')
          %th= _('Max Time')
        %th= _('Collect')
        %th= _('Message')
      %tbody
        - @ae_class.ae_fields.each do |field|
          - ae_value = field.ae_values.find_or_initialize_by(:instance_id => @record.id, :field_id => field.id)
          %tr
            %td.text-nowrap
              %i.fa-lg{:class => ae_field_fonticon(field.aetype), :title => _("Type: %{automation_type}") % {:automation_type => field.aetype}}
              - unless field.datatype.blank? || field.datatype == 'string'
                %i.fa-lg{:class => ae_field_fonticon(field.datatype), :title => _("Data type: %{data_type}") % {:data_type => field.datatype}}
              %i.pficon.fa-lg{:class => "pficon-ok#{field.substitute ? '' : '-closed'}", :title => _("Substitute: %{substitute}") % {:substitute => field.substitute}}
              &nbsp;
              = record_name(field)
            %td
              - if field.datatype == 'password'
                ********
              - else
                = nonblank(ae_value.value, field.default_value)
            - if state_class
              %td
                = nonblank(ae_value.on_entry, field.on_entry)
              %td
                = nonblank(ae_value.on_exit, field.on_exit)
              %td
                = nonblank(ae_value.on_error, field.on_error)
              %td
                = nonblank(ae_value.max_retries, field.max_retries)
              %td
                = nonblank(ae_value.max_time, field.max_time)
            %td
              = nonblank(ae_value.collect, field.collect)
            %td
              = field.message

  - else
    #form_div
      = render :partial => "instance_form", :locals => {:prefix => ""}
