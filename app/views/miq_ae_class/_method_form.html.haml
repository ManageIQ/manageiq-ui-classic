- if @sb[:active_tab] == "methods"
- url = url_for_only_path(:action => 'form_method_field_changed', :id => (@ae_method.id || 'new'))
- obs = {:url => url}.to_json
  %h3
    = _('Main Info')
  .form-horizontal
    .form-group
      %label.col-md-2.control-label
        = Dictionary.gettext('fqname', :type => :column, :notfound => :titleize)
      .col-md-8
        %p.form-control-static
          = h(@sb[:namespace_path])
    .form-group
      %label.col-md-2.control-label
        = _('Name')
      .col-md-8
        = text_field_tag("#{prefix}method_name",
                        @edit[:new][:name],
                        :maxlength         => ViewHelper::MAX_NAME_LEN,
                        :class => "form-control",
                        "data-miq_observe" => obs)
    .form-group
      %label.col-md-2.control-label
        = _('Display Name')
      .col-md-8
        = text_field_tag("#{prefix}method_display_name",
                        @edit[:new][:display_name],
                        :maxlength         => ViewHelper::MAX_NAME_LEN,
                        :class => "form-control",
                        "data-miq_observe" => obs)
    .form-group
      %label.col-md-2.control-label
        = _('Location')
      .col-md-8
        = select_tag("#{prefix}method_location",
                      options_for_select(@edit[:new][:available_locations].sort,
                      @edit[:new][:location]),
                      :class    => "selectpicker",
                      "data-miq_observe" => {:url => url}.to_json)
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("#{prefix}method_location", "#{url}")
    - if @ae_method.created_on
      .form-group
        %label.col-md-2.control-label
          = _("Created On")
        .col-md-8
          = h(format_timezone(@ae_method.created_on, Time.zone, "gtl"))
  %hr
  %h3= (@edit[:new][:location] == 'builtin') ? _('Builtin name') : _("Data")
  = render :partial => "method_data", :locals => {:field_name => "#{prefix}method"}
  %hr
  %h3= _("Input Parameters")
  %table.table.table-bordered.table-striped
    %thead
      %tr
        %th
          - icon = @sb[:squash_state] ? "down" : "up"
          - url2 = url_for_only_path(:action => 'expand_toggle', :id => "exp_collapse")
          %button.btn.btn-default{:title => (@sb[:squash_state] ? _("Show Input Parameters") : _("Hide Input Parameters")),
                  "data-miq_sparkle_on" => true,
                  :remote               => true,
                  "data-method"         => :post,
                  :id                   => 'exp_collapse_img',
                  'data-click_url'      => {:url => url2}.to_json}
            %i{:class => "fa fa-angle-#{icon} fa-lg"}
  = render :partial => "inputs"
