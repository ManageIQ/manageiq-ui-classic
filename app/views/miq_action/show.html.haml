#action_details_div
  = render :partial => "layouts/flash_msg"
  %h3
    = _('Basic Information')
  .form-horizontal
    -# Don't show description unless in edit mode
    - url = url_for_only_path(:action => 'action_field_changed', :id => (@edit[:rec_id] || 'new')) if @edit
    .form-group
      %label.col-md-2.control-label
        = _('Description')
      .col-md-8
        %p.form-control-static
          = h(@record.description)
    .form-group
      %label.col-md-2.control-label
        = _('Action Type')
      .col-md-8
        %p.form-control-static
          = h(@record.action_type == "default" ? _('Default') : _(MiqAction::TYPES[@record.action_type]))
  %hr
  - case @record.action_type
  - when "create_snapshot"
    %h3
      = _('Snapshot Settings')
    .form-horizontal
      .form-group
        %label.control-label.col-md-2= _('Name')
        .col-md-8
          %p.form-control-static= h(@record.options[:name])

    %hr
  - when "delete_snapshots_by_age"
    %h3= _('Snapshot Age Settings')
    .form-horizontal
      .form-group
        %label.control-label.col-md-2= _('Delete if older than')
        .col-md-8
          %p.form-control-static= h(MiqPolicyHelper::SNAPSHOT_AGES[@record.options[:age]])

    %hr
  - when "custom_automation"
    %h3
      = _('Custom Automation')
    .form-horizontal
      .form-group
        .col-md-8
          %h4
            = _('Object Details')
          .form-horizontal
            .form-group
              %label.control-label.col-md-2
                = _('Starting Message')
              .col-md-8
                = h(@record.options[:ae_message])
            .form-group
              %label.control-label.col-md-2
                = _('Request')
              .col-md-8
                = h(@record.options[:ae_request])
          %h4
            = _('Attribute/Value Pairs')
          .form-horizontal
            - if !@record.options[:ae_hash].blank?
              - @record.options[:ae_hash].each do |k, v|
                .form-group
                  %label.control-label.col-md-2
                    = h(k)
                  .col-md-8
                    = h(v)
            - else
              = _('No Attribute/Value Pairs found')
    %hr
  - when "email"
    %h3
      = _('E-mail Settings')
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _('From E-mail Address')
        .col-md-8
          = h(@record.options[:from])
      .form-group
        %label.control-label.col-md-2
          = _('To E-mail Address')
        .col-md-8
          = h(@record.options[:to])
    %hr
  - when "set_custom_attribute"
    %h3
      = _('Set Custom Attribute Settings')
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _('Attribute Name')
        .col-md-8
          = h(@record.options[:attribute])
      .form-group
        %label.control-label.col-md-2
          = _("Value to Set")
        .col-md-8
          = h(@record.options[:value])
    %hr
  - when "reconfigure_cpus"
    %h3
      = _("Reconfigure CPU")
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _("Number of CPU's")
        .col-md-8
          = h(@record.options[:value])
    %hr
  - when "reconfigure_memory"
    %h3
      = _("Reconfigure Memory")
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _("Memory Size")
        .col-md-8
          = "#{h(@record.options[:value])} MB"
    %hr
  - when "tag"
    %h3
      = _("Applied Tag")
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _("Tag")
        .col-md-8
          = h(Classification.tag2human(@record.options[:tags].first))
    %hr
  - when "snmp_trap"
    %h3
      = _("SNMP Trap")
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _("Host")
        .col-md-8
          = h(@record.options[:host])
      .form-group
        %label.control-label.col-md-2
          = _("Version")
        .col-md-8
          = h(@record.options[:snmp_version])
      - trap_text = @record.options[:snmp_version] == "v1" || @record.options[:snmp_version].nil? ? _("Trap Number") : _("Trap Object ID")
      .form-group
        %label.control-label.col-md-2
          = trap_text
        .col-md-8
          = h(@record.options[:trap_id])
    %hr
    %h3
      = _("Variables")
    - if @record.options.fetch(:variables, []).empty?
      = render :partial => 'layouts/info_msg', :locals => {:message => _('No variables configured.')}
    - else
      %table.table.table-striped.table-bordered.table-hover
        %thead
          %tr
            %th= _('Object ID')
            %th= _('Type')
            %th= _('Value')
        %tbody
          - @record.options[:variables].each do |var|
            - unless var[:oid].blank?
              %tr
                %td
                  = h(var[:oid])
                %td
                  = h(var[:var_type])
                %td
                  = h(var[:value])
    %hr
  - when "assign_scan_profile"
    %h3
      = _("Analysis Profile")
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _("Assigned Analysis Profile")
        .col-md-8
          = h(@record.options[:scan_item_set_name])
    %hr
  - when "run_ansible_playbook"
    %h3
      = _("Run Ansible Playbook")
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _("Playbook Catalog Item")
        .col-md-8
          = h(@record.options[:service_template_name].join)
      .form-group
        %label.control-label.col-md-2
          = _("Inventory")
        - if @record.options[:use_localhost]
          .col-md-8
            = _("Localhost")
        - elsif @record.options[:use_event_target]
          .col-md-8
            = _("Target Machine")
        - else
          .col-md-8
            = _("Specific Hosts ")
            = h(@record.options[:hosts])
    %hr  
  - when "evaluate_alerts"
    %h3
      = _("Alerts to Evaluate")
    - if @alert_guids.empty?
      = render :partial => 'layouts/info_msg', :locals => {:message => _("No Alerts have been selected.")}
    - else
      %table.table.table-striped.table-bordered.table-hover
        %tbody
          - @alert_guids.sort_by(&:description).each do |alert|
            - id = "al-#{alert.id}"
            %tr{:title => _('View This Alert'),
              :onclick => remote_function(:url => "/miq_policy/x_show/#{id}?accord=alert")}
              %td.table-view-pf-select
                %i.pficon.pficon-warning-triangle-o
                = alert.description
    %hr
  - when "inherit_parent_tags"
    %h3
      = _("Inherit Tags")
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _("Parent Type")
        .col-md-8
          = h(ui_lookup(:table => @record.options[:parent_type]))
      .form-group
        %label.control-label.col-md-2
          = _("Categories")
        .col-md-8
          = h(@cats)
    %hr
  - when "remove_tags"
    %h3
      = _("Remove Tags")
    .form-horizontal
      .form-group
        %label.control-label.col-md-2
          = _("Categories")
        .col-md-8
          = h(@cats)
    %hr

  %h3= _("Assigned to Policies")
  - if @action_policies
    %table.table.table-striped.table-bordered.table-hover
      %tbody
        - @action_policies.each do |p|
          %tr{:title => _("View this %{model} Policy"), :onclick => "DoNav('/miq_policy/show/#{p.id}');"}
            %td.table-view-pf-select
              %i{:class => p.decorate.fonticon}
            %td
              = p.description
  - else
    = render :partial => 'layouts/info_msg', :locals => {:message => _("This Action is not assigned to any Policies.")}

  %hr
