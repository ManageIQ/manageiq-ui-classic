- @angular_form = true
= react('MiqCustomTab', {:containerId => 'catalog-tabs-generic-edit',
                         :tabLabels => catalog_tab_edit_generic_configuration,
                         :type => 'CATALOG_EDIT'})

#catalog-tabs-generic-edit.miq_custom_tabs_container
  %form.form-horizontal#form_div{"name" => "angularForm",
                                "ng-controller" => "catalogItemFormController as vm",
                                "miq-form" => 'true',
                                "model" => "vm.catalogItemModel",
                                "model-copy" => 'vm.modelCopy',
                                "ng-cloak" => ''}
    = render :partial => "layouts/flash_msg"
    = catalog_tab_content(:basic) do
      %h3= _('Basic Information')
      %div{"ng-if" => "vm.afterGet"}
        %div
          %div
            .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
              %label.col-md-2.control-label{"for" => "name"}
                = _("Name")
              .col-md-8
                %input.form-control{"type" => "text",
                                    "id" => "name",
                                    "name" => "name",
                                    "ng-model" => "vm.catalogItemModel.name",
                                    "maxlength" => 40,
                                    "miqrequired" => "",
                                    "checkchange" => "",
                                    "auto-focus" => ""}
                %span.help-block{"ng-show" => "angularForm.name.$error.miqrequired"}
                  = _("Required")
            .form-group
              %label.col-md-2.control-label{"for" => "description"}
                = _("Description")
              .col-md-8
                %input.form-control{"type" => "text",
                                    "id" => "description",
                                    "name" => "description",
                                    "ng-model" => "vm.catalogItemModel.description",
                                    "maxlength" => 60,
                                    "checkchange" => ""}
            .form-group
              %label.col-md-2.control-label
                = _("Display in Catalog")
              .col-md-8
                %input#use_config{"bs-switch" => "",
                                  "type" => "checkbox",
                                  "name" => "display",
                                  "ng-model" => "vm.catalogItemModel.display",
                                  "switch-on-text" => _("Yes"),
                                  "switch-off-text" => _("No"),
                                  "checkchange" => ""}
            .form-group{"ng-if" => "vm.catalogItemModel.display == true"}
              %label.col-md-2.control-label{"for" => "long_description"}
                = _("Long Description")
              .col-md-8
                %textarea{"ui-codemirror" => "{mode: 'htmlmixed',
                                              lineNumbers: true,
                                              angular: true,
                                              lineWrapping: true}",
                          "name" => "long_description",
                          "ng-model" => "vm.catalogItemModel.long_description",
                          "checkchange" => ""}
          .form-group
            %label.col-md-2.control-label{"for" => "catalog_id"}
              = _('Catalog')
            .col-md-8
              %select{"ng-model" => "vm._catalog",
                      "name" => "catalog_id",
                      'ng-options' => 'catalog as catalog.name for catalog in vm.catalogs',
                      "data-live-search" => "true",
                      'miq-select' => true}
          - if role_allows?(:feature => 'rbac_tenant_view')
            = render(:partial => "tenants_tree_show")

          .form-group
            %label.col-md-2.control-label{"for" => "zone_id"}
              = _('Zone')
            .col-md-8
              %select{"ng-model" => "vm._zone",
                      "name" => "zone_id",
                      'ng-options' => 'zone as zone.description for zone in vm.zones',
                      "data-live-search" => "true",
                      'miq-select' => true}
                %option{"value" => ""} &lt;Choose&gt;

          .form-group
            %label.col-md-2.control-label{"for" => "currency_id"}
              = _('Select currency')
            .col-md-8
              %select{"ng-model" => "vm._currency",
                      "name" => "currency_id",
                      'ng-options' => 'currency as currency.symbol + " [" + currency.full_name + "]" for currency in vm.currencies',
                      "data-live-search" => "true",
                      'miq-select' => true}
                %option{"value" => ""} &lt;Choose&gt;

          .form-group{"ng-class" => "{'has-error': vm.priceRequired()}"}
            %label.col-md-2.control-label{"for" => "price"}
              = _("Price / Month (in {{vm.catalogItemModel.currency_name}})")
            .col-md-8
              %input.form-control{"type" => "text",
                                  "id" => "price",
                                  "name" => "price",
                                  "ng-model" => "vm.catalogItemModel.price",
                                  "ng-change" => "vm.priceRequired()",
                                  "ng-required" => "vm.priceRequired()",
                                  "ng-pattern" => "/(^([0-9]+)(\.)?([0-9]+)?)|(^([0-9]+)?(\.)([0-9]+))/",
                                  "maxlength" => 60,
                                  "checkchange" => ""}
              %span.help-block{"ng-show" => "vm.priceRequired()"}
                = _("Required")
              %span.help-block{"ng-show" => "angularForm.price.$error.pattern"}
                = _("Must be a numeric value")

    = render :partial => "layouts/angular/multi_tab_ansible_form_options",
             :locals => {:record => @record, :ng_model => "vm.catalogItemModel"}
    = render :partial => "layouts/angular/x_edit_buttons_angular"

:javascript
  ManageIQ.angular.app.value('catalogItemFormId', '#{@record.id || "new"}');
  ManageIQ.angular.app.value('currentRegion', '#{@current_region}');
  ManageIQ.angular.app.value('allCatalogsNames', #{@available_catalogs});
  ManageIQ.angular.app.value('additionalTenantIds', #{@additional_tenants});
  miq_bootstrap('#form_div');
