- @angular_form = true

.form-horizontal{'ng-cloak' => '',
                 'ng-show'  => 'afterGet'}
  = render :partial => "layouts/flash_msg"
  %div
    .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
      %label.col-md-2.control-label{"for" => "ems_name"}
        = _('Name')
      .col-md-4
        %input.form-control{"type"        => "text",
                            "id"          => "ems_name",
                            "name"        => "name",
                            "ng-model"    => "emsCommonModel.name",
                            "maxlength"   => "#{ViewHelper::MAX_NAME_LEN}",
                            "required"    => "",
                            "checkchange" => "",
                            "auto-focus"  => ""}
        %span.help-block{"ng-show" => "angularForm.name.$error.required"}
          = _("Required")

    .form-group{"ng-class" => "{'has-error': angularForm.emstype.$invalid}"}
      %label.col-md-2.control-label{"for" => "ems_type"}
        = _('Type')
      .col-md-8
        = select_tag('emstype',
                     options_for_select([["<#{_('Choose')}>", nil]] + @ems_types, disabled: ["<#{_('Choose')}>", nil]),
                     "ng-if"                       => "newRecord",
                     "ng-model"                    => "emsCommonModel.emstype",
                     "ng-change"                   => "providerTypeChanged()",
                     "required"                    => "",
                     "checkchange"                 => "",
                     "selectpicker-for-select-tag" => "")
        %div{"ng-if" => "!newRecord"}
          %label.form-control{"type"        => "text",
                              "id"          => "ems_type",
                              "name"        => "emstype",
                              "ng-if"       => "!newRecord",
                              "readonly"    => true,
                              "style"       => "color: black; font-weight: normal;"}
            = @emstype_display

    .form-group{"ng-class" => "{'has-error': angularForm.api_version.$invalid}", "ng-if" => "emsCommonModel.emstype == 'openstack_infra'"}
      %label.col-md-2.control-label{"for" => "ems_api_version"}
        = _("API Version")
      .col-md-8
        = select_tag('api_version',
                     options_for_select(@openstack_api_versions),
                     "ng-model"                    => "emsCommonModel.api_version",
                     "checkchange"                 => "",
                     "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.zone.$invalid}"}
      %label.col-md-2.control-label{"for" => "ems_zone"}
        = _("Zone")
      .col-md-4
        - if @server_zones.length <= 1
          %input.form-control{"type"        => "text",
                              "id"          => "ems_zone",
                              "name"        => "zone",
                              "ng-model"    => "emsCommonModel.zone",
                              "maxlength"   => 15,
                              "required"    => "",
                              "checkchange" => "",
                              "readonly"    => true,
                              "style"       => "color: black;"}
        - else
          = select_tag('zone',
                       options_for_select(@server_zones.sort_by { |name, _name| name }),
                       "ng-model"                    => "emsCommonModel.zone",
                       "checkchange"                 => "",
                       "required"                    => "",
                       "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.host_default_vnc_port_start.$invalid}", "ng-if" => "formId != 'new' && emsCommonModel.emstype == 'vmwarews'"}
      %label.col-md-2.control-label{"for" => "ems_vnc_start_port"}
        = _('Host Default VNC Start Port')
      .col-md-8
        %input.form-control{"type"        => "text",
                            "id"          => "ems_vnc_start_port",
                            "name"        => "host_default_vnc_port_start",
                            "ng-model"    => "emsCommonModel.host_default_vnc_port_start",
                            "maxlength"   => 6,
                            "checkchange" => ""}

    .form-group{"ng-class" => "{'has-error': angularForm.host_default_vnc_port_end.$invalid}", "ng-if" => "formId != 'new' && emsCommonModel.emstype == 'vmwarews'"}
      %label.col-md-2.control-label{"for" => "ems_vnc_end_port"}
        = _('Host Default VNC End Port')
      .col-md-8
        %input.form-control{"type"        => "text",
                            "id"          => "ems_vnc_end_port",
                            "name"        => "host_default_vnc_port_end",
                            "ng-model"    => "emsCommonModel.host_default_vnc_port_end",
                            "maxlength"   => 6,
                            "checkchange" => ""}

  %hr
  - if controller_name == "ems_container"
    = render :partial => "/layouts/container_auth", :locals  => {:record => @ems}
  - else
    %div{"ng-if" => "emsCommonModel.emstype !== '' && emsCommonModel.emstype === 'azure'"}
      %h3
        = _("Credentials")
      %auth-credentials{'ng-show'              => true,
                        'model'                => 'emsCommonModel',
                        'model-copy'           => 'modelCopy',
                        'password-required'    => "emsCommonModel.default_userid != ''",
                        'prefix'               => 'default',
                        'enable-valid-button'  => 'canValidateBasicInfo()',
                        'valtype'              => "default",
                        'validate'             => 'validateClicked',
                        'restful'             => true,
                        'check-authentication' => 'checkAuthentication',
                        'form-labels'          => 'formLabels'}

    %div{"ng-show" => "emsCommonModel.emstype != 'azure'"}
      = render :partial => "/layouts/angular/multi_auth_credentials", :locals  => {:record => @ems, :ng_model => "emsCommonModel"}

  = render :partial => "layouts/angular/x_edit_buttons_angular", :locals => {:record => @ems, :restful => true}
