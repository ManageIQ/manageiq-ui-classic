- if @edit
  - url = url_for_only_path(:action => 'rbac_role_field_changed', :id => (@edit[:role_id] || "new"))
= render :partial => "layouts/flash_msg"
#role_info
  .row
    .col-md-12.col-lg-6
      %h3
        = _("Role Information")
      .form-horizontal
        .form-group
          %label.col-md-4.control-label
            = _("Name")
          .col-md-8
            - if !@edit
              %p.form-control-static
                = h(@role.name)
            - else
              = text_field_tag("name",
                               @edit[:new][:name],
                               :maxlength         => 50,
                               :class => "form-control",
                               "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
              = javascript_tag(javascript_focus('name'))
        .form-group
          %label.col-md-4.control-label
            = _('Access Restriction for Services, VMs, and Templates')
          .col-md-8
            - if !@edit
              - if @role.settings.kind_of?(Hash) && @role.settings.fetch_path(:restrictions, :vms)
                = h(_(MiqUserRole::RESTRICTIONS[@role.settings.fetch_path(:restrictions, :vms)]))
              - else
                = _("None")
            - else
              - restrictions = MiqUserRole::RESTRICTIONS.map { |k, v| [_(v), k] }.sort_by { |name, _value| name.downcase }
              = select_tag('vm_restriction',
                           options_for_select([[_("None"), "none"]] + restrictions,
                           @edit[:new][:vm_restriction].to_sym),
                           :class    => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent('vm_restriction', "#{url}")
        - unless @edit
          .form-group
            %label.col-md-4.control-label
              = _("Groups Using this Role")
            .col-md-8
              - @role.miq_groups.sort_by { |a| a.description.downcase }.each do |g|
                - if role_allows?(:feature => "rbac_group_show")
                  - params = {:class   => "pointer",
                              :onclick => "miqOnClickSelectRbacTreeNode('g-#{g.id}');",
                              :title   => _("View this Group")}
                - else
                  - params = {}
                %i.ff.ff-group{params}
                = link_to(g.description, "#", params)
                %br
    .col-md-12.col-lg-6
      %hr
      - if @edit
        = _("Product Features (Editing)")
      - else
        = _("Product Features (Read Only)")
      %h3
      = render(:partial => "shared/tree", :locals => {:tree => @rbac_menu_tree, :name => @rbac_menu_tree.name})
