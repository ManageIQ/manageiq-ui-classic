/ begin: app/views/ops/_log_collection.html.haml
- @angular_form = true

%form.form-horizontal#form_div{:name                                 => "angularForm",
                               'ng-controller'                       => "logCollectionFormController as vm",
                               'ng-show'                             => "vm.afterGet",
                               'miq-form'                            => 'true',
                               'form-changed'                        => 'true',
                               'model'                               => 'vm.logCollectionModel',
                               'model-copy'                          => 'vm.modelCopy',
                               'data-log-collection-form-fields-url' => "/#{controller_name}/log_collection_form_fields/",
                               'data-save-url'                       => "/#{controller_name}/log_depot_edit/",
                               'data-log-protocol-changed-url'       => "/#{controller_name}/log_protocol_changed/",
                               :novalidate                           => 1}
  = render :partial => "layouts/flash_msg"

  %h3
    = _("Editing Log Depot Settings for %{class}: %{display}") % {:class   => Dictionary.gettext(@record.class.name,
                                                                                                   :type     => :model,
                                                                                                   :notfound => :titleize),
                                                                    :display => @record.display_name}
  .form-group
    %label.control-label.col-md-2
      = _("Type")
    .col-md-8
      - default_option = [_("<No Depot>"), nil]
      = select_tag('log_protocol', options_for_select([default_option] + @supported_depots_for_select),
                   "ng-model"                    => "vm.logCollectionModel.log_protocol",
                   "ng-change"                   => "vm.logProtocolChanged()",
                   "selectpicker-for-select-tag" => "")
      :javascript
        miqInitSelectPicker();

  = render :partial => "layouts/angular-bootstrap/edit_log_depot_settings_angular_bootstrap",
                       :locals  => {:ng_show             => "vm.miqDBBackupService.logProtocolSelected(vm.logCollectionModel)",
                                    :ng_reqd_depot_name  => "vm.miqDBBackupService.dbRequired(vm.logCollectionModel, vm.logCollectionModel.depot_name)",
                                    :ng_model_depot_name => "vm.logCollectionModel.depot_name",
                                    :ng_reqd_uri         => "vm.miqDBBackupService.dbRequired(vm.logCollectionModel, vm.logCollectionModel.uri)",
                                    :ng_model_uri        => "vm.logCollectionModel.uri",
                                    :ng_model_uri_prefix => "vm.logCollectionModel.uri_prefix",
                                    :ng_readonly         => "vm.logCollectionModel.log_protocol == 'Red Hat Dropbox'",
                                    :uri_prefix_display  =>  "{{vm.logCollectionModel.uri_prefix}}://"}

  %auth-credentials{'ng-if'                          => 'vm.miqDBBackupService.credsProtocol(vm.logCollectionModel)',
                    'form-model'                     => 'vm.logCollectionModel',
                    'model-copy'                     => 'vm.modelCopy',
                    'prefix'                         => '{{vm.prefix}}',
                    'user-required'                  => true,
                    'password-required'              => true,
                    'enable-valid-button'            => 'vm.canValidateBasicInfo()',
                    'validate'                       => 'vm.validateClicked',
                    'new-record'                     => 'vm.newRecord'}

  = render :partial => "layouts/angular/generic_form_buttons"

:javascript
  ManageIQ.angular.app.value('serverId', '#{@record.id || "new"}');
  miq_bootstrap('#form_div');
/ end: app/views/ops/_log_collection.html.haml
