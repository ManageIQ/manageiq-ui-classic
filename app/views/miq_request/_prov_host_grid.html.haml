#prov_host_div
  %table.table.table-bordered.table-hover.table-striped.table-selectable
    %thead
      %tr
        -# need to set options from @edit/@option based upon calling screen: show/edit
        - options = @edit ? @edit : @options
        - id = @edit && @edit[:req_id] || "new"
        - options[:host_columns].each_with_index do |h, i|
          %th
            -# Replaced to exclude non-view table fields from sorting
            -# dont show sort on show screen, need @edit variables for sort to work
            - if @edit
              = link_to(h(options[:host_headers][h]),
                {:action => "sort_host_grid", :sort_choice => h, :field_id => field_id, :id => id.to_s},
                "data-miq_sparkle_on"  => true,
                "data-miq_sparkle_off" => true,
                "data-method"          => :post,
                :remote                => true)
              - if options[:host_columns][i] == options[:host_sortcol]
                %i{:class => @edit[:host_sortdir] == 'ASC' ? 'fa fa-angle-up' : 'fa fa-angle-down'}
            - else
              = h(options[:host_headers][h])
    %tbody
      - cls = @edit[:new][:placement_host_name] && @edit[:new][:placement_host_name][0].nil? ? "selected" : ""
      %tr{:class => cls, :onclick => "miqAjax('/miq_request/prov_field_changed/?#{field_id}=__HOST__NONE__&id=#{id}');"}
        %td
          = "<#{_('None')}>"
        %td
        %td
        %td
        %td
        %td
      - @hosts.each do |row|
        - @id = row.id
        - cls = @edit[:new][:placement_host_name] && @edit[:new][:placement_host_name][0] == @id ? "selected" : ""
        %tr{:class => cls, :onclick => "miqAjax('/miq_request/prov_field_changed/?#{field_id}=#{@id}&id=#{id}');"}
          - options[:host_columns].each do |col|
            %td
              = h(row.send(col))
:javascript
  miqScrollToSelected('prov_host_div')
