- validate_url ||= (record.id || @selected_hosts) ? "update" : "create"
- legendtext ||= _("Endpoints")
- vm_scope   ||= false
- main_scope  = vm_scope ? "$parent.vm" : "$parent"

#auth_tabs
  %h3
    = legendtext
  %ul.nav.nav-tabs
    = miq_tab_header('default', nil, {'ng-click' => "changeAuthTab('default')"}) do
      %i{"error-on-tab" => "default", :style => "color:#cc0000"}
      = _("Default")
    - if %w(ems_cloud ems_infra).include?(controller_name)
      = miq_tab_header('metrics', nil, {'ng-click' => "changeAuthTab('metrics')"}) do
        %i{"error-on-tab" => "metrics", :style => "color:#cc0000"}
        = _("C & U Database")
      = miq_tab_header('amqp', nil, {'ng-click' => "changeAuthTab('amqp')"}) do
        %i{"error-on-tab" => "amqp", :style => "color:#cc0000"}
        = _("Events")
      = miq_tab_header('ssh_keypair', nil, {'ng-click' => "changeAuthTab('ssh_keypair')"}) do
        %i{"error-on-tab" => "ssh_keypair", :style => "color:#cc0000"}
        = _("RSA key pair")
      = miq_tab_header('console', nil, {'ng-click' => "changeAuthTab('console')"}) do
        %i{"error-on-tab" => "console", :style => "color:#cc0000"}
        = _("VMRC Console")
      - if ::Settings.ems.ems_amazon.agent_coordinator.docker_login_required
        = miq_tab_header('smartstate_docker', nil, 'ng-click' => "changeAuthTab('smartstate_docker')") do
          %i{"error-on-tab" => "smartstate_docker", :style => "color:#cc0000"}
          = _("SmartState Docker")
    - elsif controller_name == "ems_container"
      = miq_tab_header('container_metrics', nil, 'ng-click' => "changeAuthTab('container_metrics')") do
        %div{"ng-if" => "emsCommonModel.metrics_selection == 'prometheus' || emsCommonModel.metrics_selection == 'hawkular'"}
          %i{"error-on-tab" => "metrics", :style => "color:#cc0000"}
          = _("Metrics")
      = miq_tab_header('alerts', nil, 'ng-click' => "changeAuthTab('alerts')") do
        %div{"ng-if" => "emsCommonModel.alerts_selection == 'prometheus'"}
          %i{"error-on-tab" => "prometheus_alerts", :style => "color:#cc0000"}
          = _("Alerts")
      = miq_tab_header('virtualization', nil, 'ng-click' => "changeAuthTabToVirtualization('virtualization')") do
        %div{"ng-if" => "emsCommonModel.virtualization_selection == 'kubevirt'"}
          %i{"error-on-tab" => "kubevirt", :style => "color:#cc0000"}
          = _("Virtualization")
    - elsif controller_name == "host"
      = miq_tab_header('remote', nil, {'ng-click' => "changeAuthTab('remote')"}) do
        = _("Remote Login")
      = miq_tab_header('ws', nil, {'ng-click' => "changeAuthTab('ws')"}) do
        = _("Web Services")
      = miq_tab_header('ipmi', nil, {'ng-click' => "changeAuthTab('ipmi')"}) do
        = _("IPMI")
    - elsif %w(ems_network).include?(controller_name)
      = miq_tab_header('amqp', nil, {'ng-click' => "changeAuthTab('amqp')"}) do
        %i{"error-on-tab" => "amqp", :style => "color:#cc0000"}
        = _("Events")

  .tab-content
    = miq_tab_content('default', 'default') do
      .form-group
        .col-md-12{"ng-if" => "#{ng_model}.ems_controller == 'ems_container' || " +  |
                              "#{ng_model}.ems_controller == 'ems_middleware' || " + |
                              "#{ng_model}.ems_controller == 'ems_physical_infra' || " + |
                              "#{ng_model}.ems_controller == 'ems_network'"}         |
          = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => "#{ng_model}",
                                                :id                     => record.id,
                                                :prefix                 => "default"}
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'ec2'"}
          = render :partial => "layouts/angular-bootstrap/endpoints_for_url",
                               :locals => {:prefix => "default", :main_scope => main_scope, :ng_model => "#{ng_model}"}
          = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show                => true,
                                              :ng_model               => "#{ng_model}",
                                              :ng_reqd_userid         => true,
                                              :ng_reqd_password       => true,
                                              :validate_url           => validate_url,
                                              :userid_label           => _("Access Key ID"),
                                              :password_label         => _("Secret Access Key"),
                                              :verify_label           => _("Confirm Secret Access Key"),
                                              :passwd_mismatch        => _("Secret Access Keys do not match"),
                                              :change_stored_password => _("Change stored secret access key"),
                                              :cancel_password_change => _("Cancel secret access key change"),
                                              :id                     => record.id,
                                              :prefix                 => "default",
                                              :verify_title_off       => _("Access Key ID and matching Secret Access Key fields are needed to perform verification of credentials"),
                                              :basic_info_needed      => true}
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'gce'"}
          = render :partial => "layouts/angular/auth_service_account_angular",
                               :locals  => {:ng_show                => true,
                                            :ng_model               => "#{ng_model}",
                                            :validate_url           => validate_url,
                                            :id                     => record.id,
                                            :prefix                 => "service_account",
                                            :basic_info_needed      => true}
        .col-md-12{"ng-if" => "#{ng_model}.emstype != 'gce' && #{ng_model}.emstype != 'ec2'" || "#{ng_model}" != "emsCommonModel"}
          %div{"ng-if" => "#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'telefonica' || (#{ng_model}.ems_controller == 'ems_infra' && #{ng_model}.emstype != 'rhevm' && #{ng_model}.emstype != 'kubevirt')  || #{ng_model}.emstype == 'vmware_cloud'"}
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => "#{ng_model}",
                                                :id                     => record.id,
                                                :prefix                 => "default"}
          %div{"ng-if" => "#{ng_model}.ems_controller == 'ems_infra' && #{ng_model}.emstype == 'rhevm'"}
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => "#{ng_model}",
                                                :id                     => record.id,
                                                :prefix                 => "default",
                                                :ng_reqd_api_port       => "false"}
          %div{"ng-if" => "#{ng_model}.ems_controller == 'ems_infra' && #{ng_model}.emstype === 'kubevirt'"}
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                                     => "true",
                                                :ng_model                                    => ng_model.to_s,
                                                :id                                          => record.id,
                                                :ng_reqd_hostname                            => "true",
                                                :ng_reqd_api_port                            => "true",
                                                :prefix                                      => "kubevirt",
                                                :detection                                   => false,
                                                :ng_readonly_hostname                        => true,
                                                :ng_readonly_api_port                        => true,
                                                :ng_readonly_ems_container_security_protocol => true,
                                                :ng_readonly_tls_verify                      => true,
                                                :ng_readonly_tls_ca_certs                    => true,
                                                }
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                   :locals  => {:ng_show                => "true",
                                                :ng_model               => "#{ng_model}",
                                                :validate_url           => validate_url,
                                                :id                     => record.id,
                                                :prefix                 => "kubevirt",
                                                :ng_show_password       => "true",
                                                :ng_show_userid         => "false",
                                                :ng_reqd_password       => "true",
                                                :userid_disabled        => false,
                                                :password_label         => _("Token"),
                                                :verify_label           => _("Confirm Token"),
                                                :passwd_mismatch        => _("Tokens do not match"),
                                                :change_stored_password => _("Change stored token"),
                                                :cancel_password_change => _("Cancel stored token"),
                                                :basic_info_needed      => true}
          %div{"ng-if" => controller_name != "ems_container" && "#{ng_model}.emstype != 'kubevirt'"}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                   :locals  => {:ng_show           => "true",
                                                :ng_model          => "#{ng_model}",
                                                :ng_reqd_userid    => "#{ng_model}" == "hostModel" ? false : true,
                                                :ng_reqd_password  => "#{ng_model}" == "hostModel" ? false : true,
                                                :validate_url      => validate_url,
                                                :id                => record.id,
                                                :prefix            => "default",
                                                :basic_info_needed => true}
          %div{"ng-if" => controller_name == "ems_container"}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                   :locals  => {:ng_show                => "true",
                                                :ng_model               => "#{ng_model}",
                                                :validate_url           => validate_url,
                                                :id                     => record.id,
                                                :prefix                 => "default",
                                                :ng_show_userid         => "false",
                                                :ng_reqd_password       => true,
                                                :password_label         => _("Token"),
                                                :verify_label           => _("Confirm Token"),
                                                :passwd_mismatch        => _("Tokens do not match"),
                                                :change_stored_password => _("Change stored token"),
                                                :cancel_password_change => _("Cancel stored token"),
                                                :basic_info_needed      => true}
      .form-group
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'gce'"}
          %span{:style => "color:black"}
            = _("Copy and paste the contents of your Service Account JSON file above.")
      .form-group
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'gce'"}
          %span{:style => "color:black"}
            = _("Used to authenticate as a service account against your provider.")
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype != 'gce'" && "#{ng_model}.ems_controller != 'ems_container'" && "#{ng_model}.emstype != 'kubevirt'"}
          %span{:style => "color:black"}
            = _("Required. Should have privileged access, such as root or administrator.")
        .col-md-12{"ng-if" => "#{ng_model}.ems_controller == 'ems_container'"}
          %span{:style => "color:black"}
            = _("Required. Used to gather Utilization data.")

    - if %w(ems_cloud).include?(params[:controller]) && ::Settings.ems.ems_amazon.agent_coordinator.docker_login_required
      = miq_tab_content('smartstate_docker', 'default') do
        .form-group
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'ec2'"}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => "#{ng_model}",
                                                :ng_reqd_userid         => false,
                                                :ng_reqd_password       => false,
                                                :ng_show_userid         => "true",
                                                :ng_show_password       => "true",
                                                :validate_url           => validate_url,
                                                :id                     => record.id,
                                                :prefix                 => "smartstate_docker",
                                                :userid_label           => _("SmartState Docker User Name"),
                                                :password_label         => _("SmartState Docker Password"),
                                                :verify_label           => _("Confirm SmartState Password"),
                                                :passwd_mismatch        => _("SmartState Docker Passwords do not match"),
                                                :change_stored_password => _("Change stored SmartState Docker password"),
                                                :cancel_password_change => _("Cancel SmartState Docker password change"),
                                                :verify_title_off       => _("Docker Registry User Name and Password for SmartState Analysis on AWS"),
                                                :validate_button        => "false",
                                                :basic_info_needed      => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Used for Docker Registry credentials required to perform SmartState Analysis on AWS.")
    - if %w(ems_cloud ems_infra ems_network).include?(params[:controller])
      = miq_tab_content('metrics', 'default') do
        .form-group
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'rhevm'"}
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                 :locals  => {:ng_show                => true,
                                              :ng_model               => "#{ng_model}",
                                              :id                     => record.id,
                                              :ng_reqd_db_name        => "#{ng_model}.metrics_hostname != ''",
                                              :database_name_show     => true,
                                              :tls_verify_hide        => true,
                                              :tls_ca_certs_hide      => true,
                                              :prefix                 => "metrics",
                                              :ng_reqd_hostname       => "#{ng_model}.metrics_userid != '' && #{ng_model}.metrics_userid != undefined",
                                              :ng_reqd_api_port       => "false"}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "#{ng_model}",
                                              :ng_reqd_userid    => "#{ng_model}.metrics_hostname != ''",
                                              :ng_reqd_password  => "#{ng_model}.metrics_userid != ''",
                                              :validate_url      => validate_url,
                                              :id                => record.id,
                                              :prefix            => "metrics",
                                              :basic_info_needed => true}
        .form-group
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'rhevm'"}
            %span{:style => "color:black"}
              = _("Used to gather Capacity & Utilization metrics.")
      = miq_tab_content('amqp', 'default') do
        .form-group
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'openstack_infra' || #{ng_model}.emstype == 'telefonica' || #{ng_model}.emstype == 'vmware_cloud' || #{ng_model}.emstype == 'nuage_network'"}
            %label.radio-inline.control-label{"for" => "none_radio", "ng-show" => "#{ng_model}.emstype == 'vmware_cloud' || #{ng_model}.emstype == 'nuage_network'"}
              %input{:type         => "radio",
                     :name         => "event_stream_selection",
                     :id           => "none_radio",
                     "ng-checked"  => "emsCommonModel.event_stream_selection == none",
                     :value        => "none",
                     "ng-model"    => "emsCommonModel.event_stream_selection",
                     "ng-change"   => "radioSelectionChanged()",
                     "checkchange" => ""}
                = _("None")
            %label.radio-inline.control-label{"for" => "ceilometer_radio", "ng-show" => "#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'openstack_infra' || #{ng_model}.emstype == 'telefonica'"}
              %input{:type         => "radio",
                     :name         => "event_stream_selection",
                     :id           => "ceilometer_radio",
                     "ng-checked"  => "emsCommonModel.event_stream_selection == ceilometer",
                     :value        => "ceilometer",
                     "ng-model"    => "emsCommonModel.event_stream_selection",
                     "ng-change"   => "radioSelectionChanged()",
                     "checkchange" => ""} Ceilometer
            %label.radio-inline.control-label{"for" => "amqp_radio"}
              %input{:type         => "radio",
                     :name         => "event_stream_selection",
                     :id           => "amqp_radio",
                     "ng-checked"  => "emsCommonModel.event_stream_selection == amqp",
                     :value        => "amqp",
                     "ng-model"    => "emsCommonModel.event_stream_selection",
                     "checkchange" => ""} AMQP
            %hr

            %div{"ng-if" => "emsCommonModel.event_stream_selection == 'amqp'"}
              = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                       :locals  => {:ng_show                => true,
                                    :ng_model               => "#{ng_model}",
                                    :id                     => record.id,
                                    :prefix                 => "amqp",
                                    :ng_reqd_api_port       => "false",
                                    :fallback_hostnames     => "#{ng_model}.emstype == 'nuage_network'"}
              = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                       :locals  => {:ng_show           => true,
                                    :ng_model          => "#{ng_model}",
                                    :ng_reqd_userid    => true,
                                    :ng_reqd_password  => true,
                                    :validate_url      => validate_url,
                                    :id                => record.id,
                                    :prefix            => "amqp",
                                    :basic_info_needed => true}
        .form-group
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'openstack_infra' || #{ng_model}.emstype == 'telefonica'"}
            %span{:style => "color:black"}
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'amqp'"}
                = _("Used to authenticate with OpenStack/Telefonica AMQP Messaging Bus for event handling. Configure AMQP if eventing is not enabled on Ceilometer.")
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'ceilometer'"}
                = _("Select Ceilometer if eventing is not enabled on AMQP.")
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'vmware_cloud'"}
            %span{:style => "color:black"}
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'amqp'"}
                = _("Enable event monitoring. Used to automatically resync state when changes are performed on VMware vCloud Director directly.")
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'none'"}
                = _("Disable event monitoring.")
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'nuage_network'"}
            %span{:style => "color:black"}
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'amqp'"}
                = _("Used to authenticate with Nuage AMQP Messaging Bus for event handling.")
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'none'"}
                = _("Disable event monitoring.")
      = miq_tab_content('ssh_keypair', 'default') do
        .form-group
          .col-md-12.col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && ("#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'openstack_infra' || #{ng_model}.emstype == 'rhevm'") }
            = render :partial => "layouts/angular-bootstrap/auth_keypair_angular_bootstrap",
                                 :locals  => {:ng_show                => true,
                                              :ng_model               => "#{ng_model}",
                                              :ng_reqd_private_key    => "#{ng_model}.ssh_keypair_userid != ''",
                                              :validate_url           => validate_url,
                                              :id                     => record.id,
                                              :prefix                 => "ssh_keypair",
                                              :basic_info_needed      => true}
      = miq_tab_content('console', 'default') do
        .form-group
          .col-md-12.col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'vmwarews'"}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show                => true,
                                              :ng_model               => "#{ng_model}",
                                              :ng_reqd_userid         => false,
                                              :ng_reqd_password       => "#{ng_model}.console_userid != ''",
                                              :validate_url           => validate_url,
                                              :id                     => record.id,
                                              :verify_title_off       => _("Console userid and password fields are needed to perform validation."),
                                              :prefix                 => "console",
                                              :basic_info_needed      => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Used for VMRC connections to all VMs on this provider. If not set, the VMRC console access will be disabled for this provider.")
    - elsif controller_name == "ems_container"
      = miq_tab_content('container_metrics', 'default') do
        .form-group
          .col-md-12.col-md-12
            %div{"ng-if" => "emsCommonModel.metrics_selection == 'hawkular'"}
              = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => ng_model.to_s,
                                                :id                     => record.id,
                                                :ng_reqd_hostname       => "true",
                                                :ng_reqd_api_port       => "true",
                                                :prefix                 => "metrics",
                                                :detection              => true}
              = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                         :locals  => {:ng_show           => true,
                                      :ng_model          => ng_model.to_s,
                                      :main_scope        => main_scope,
                                      :ng_show_userid    => "false",
                                      :ng_show_password  => "false",
                                      :validate_url      => validate_url,
                                      :id                => record.id,
                                      :prefix            => "metrics",
                                      :verify_title_off  => _("hawkular URL and API port fields are needed to perform validation."),
                                      :basic_info_needed => true}

            %div{"ng-if" => "emsCommonModel.metrics_selection == 'prometheus'"}
              = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => ng_model.to_s,
                                                :id                     => record.id,
                                                :ng_reqd_hostname       => "true",
                                                :ng_reqd_api_port       => "true",
                                                :prefix                 => "metrics",
                                                :detection              => true}
              = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                         :locals  => {:ng_show           => true,
                                      :ng_model          => ng_model.to_s,
                                      :main_scope        => main_scope,
                                      :ng_show_userid    => "false",
                                      :ng_show_password  => "false",
                                      :ng_show_verify    => "false",
                                      :validate_url      => validate_url,
                                      :id                => record.id,
                                      :prefix            => "metrics",
                                      :verify_title_off  => _("prometheus URL and API port fields are needed to perform validation."),
                                      :basic_info_needed => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Used to gather Capacity & Utilization metrics.")
      = miq_tab_content('alerts', 'default') do
        %div{"ng-if" => "emsCommonModel.alerts_selection == 'prometheus'"}
          .form-group
            .col-md-12
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => ng_model.to_s,
                                                :id                     => record.id,
                                                :ng_reqd_hostname       => "true",
                                                :ng_reqd_api_port       => "true",
                                                :prefix                 => "prometheus_alerts",
                                                :detection              => true}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                         :locals  => {:ng_show           => true,
                                      :ng_model          => ng_model.to_s,
                                      :main_scope        => main_scope,
                                      :ng_show_userid    => "false",
                                      :ng_show_password  => "false",
                                      :validate_url      => validate_url,
                                      :id                => record.id,
                                      :prefix            => "prometheus_alerts",
                                      :verify_title_off  => _("prometheus URL and API port fields are needed to perform validation."),
                                      :basic_info_needed => true}

      = miq_tab_content('virtualization', 'default') do
        %div{"ng-if" => "emsCommonModel.virtualization_selection === 'kubevirt'" }
          .form-group
            .col-md-12
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                                     => true,
                                                :ng_model                                    => ng_model.to_s,
                                                :id                                          => record.id,
                                                :ng_reqd_hostname                            => "true",
                                                :ng_reqd_api_port                            => "true",
                                                :prefix                                      => "kubevirt",
                                                :detection                                   => false,
                                                :ng_readonly_hostname                        => true,
                                                :ng_readonly_api_port                        => true,
                                                :ng_readonly_ems_container_security_protocol => true,
                                                :ng_readonly_tls_verify                      => true,
                                                :ng_readonly_tls_ca_certs                    => true}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                         :locals  => {:ng_show                => true,
                                      :ng_model               => ng_model.to_s,
                                      :main_scope             => main_scope,
                                      :ng_show_userid         => "false",
                                      :ng_reqd_password       => true,
                                      :password_label         => _("Token"),
                                      :verify_label           => _("Confirm Token"),
                                      :passwd_mismatch        => _("Tokens do not match"),
                                      :change_stored_password => _("Change stored token"),
                                      :cancel_password_change => _("Cancel stored token"),
                                      :validate_url           => validate_url,
                                      :id                     => record.id,
                                      :prefix                 => "kubevirt",
                                      :verify_title_off       => _("kubevirt URL and API port fields are needed to perform validation."),
                                      :basic_info_needed      => true}
    - elsif controller_name == "host"
      = miq_tab_content('remote', 'default') do
        .form-group
          .col-md-12
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "#{ng_model}",
                                              :validate_url      => validate_url,
                                              :id                => record.id,
                                              :prefix            => "remote",
                                              :basic_info_needed => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Required if SSH login is disabled for the Default account.")
      = miq_tab_content('ws', 'default') do
        .form-group
          .col-md-12
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "#{ng_model}",
                                              :validate_url      => validate_url,
                                              :id                => record.id,
                                              :prefix            => "ws",
                                              :basic_info_needed => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Used for access to Web Services.")
      = miq_tab_content('ipmi', 'default') do
        .form-group
          .col-md-12
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "#{ng_model}",
                                              :validate_url      => validate_url,
                                              :id                => record.id,
                                              :prefix            => "ipmi",
                                              :verify_title_off => _("IPMI IP Address, Username and matching password fields are needed to perform verification of credentials"),
                                              :basic_info_needed => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Used for access to IPMI.")

%div{"ng-if" => "#{ng_model}.emstype == ''"}
  :javascript
    $('#auth_tabs').hide();
%div{"ng-if" => "#{ng_model}.emstype == 'gce'                    || " + |
                "#{ng_model}.emstype == 'scvmm'                  || " + |
                "#{ng_model}.emstype == 'lenovo_ph_infra'        || " + |
                "#{ng_model}.emstype == 'redfish_ph_infra'       || " + |
                "#{ng_model}.emstype == 'hawkular'"}                    |
  :javascript
    miq_tabs_show_hide("#amqp_tab", false);
    miq_tabs_show_hide("#alerts_tab", false);
    miq_tabs_show_hide("#container_metrics_tab", false);
    miq_tabs_show_hide("#virtualization_tab", false);
    miq_tabs_show_hide("#console_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", false);
    miq_tabs_show_hide("#smartstate_docker_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'vmwarews'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", false);
    miq_tabs_show_hide("#console_tab", true);
    miq_tabs_show_hide("#metrics_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", false);
    miq_tabs_show_hide("#smartstate_docker_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'ec2'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", false);
    miq_tabs_show_hide("#metrics_tab", false);
    miq_tabs_show_hide("#console_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", false);
    miq_tabs_show_hide("#smartstate_docker_tab", true);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'rhevm'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", false);
    miq_tabs_show_hide("#metrics_tab", true);
    miq_tabs_show_hide("#console_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", true);
    miq_tabs_show_hide("#smartstate_docker_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype === 'kubevirt'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", false);
    miq_tabs_show_hide("#metrics_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'vmware_cloud'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", true);
    miq_tabs_show_hide("#metrics_tab", false);
    miq_tabs_show_hide("#console_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", false);
    miq_tabs_show_hide("#smartstate_docker_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'openstack_infra' #{ng_model}.emstype == 'telefonica'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", true);
    miq_tabs_show_hide("#metrics_tab", false);
    miq_tabs_show_hide("#console_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", true);
    miq_tabs_show_hide("#smartstate_docker_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'nuage_network'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", true);
    miq_tabs_show_hide("#metrics_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.ems_controller == 'ems_container'"}
  :javascript
    miq_tabs_show_hide("#alerts_tab", true);
    miq_tabs_show_hide("#container_metrics_tab", true);
    miq_tabs_show_hide("#virtualization_tab", true);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();

- unless session[:host_items].nil?
  .col-md-12
    %div
      .form-group
        %label.col-md-2.control-label
          = _("Select Host to validate against")
        .col-md-10
          = select_tag('validate_id',
                       options_for_select([["<#{_('Choose')}>", '']] + @selected_hosts.invert.sort, disabled: ["<#{_('Choose')}>", nil]),
                       "ng-model"                    => "#{ng_model}.validate_id",
                       "checkchange"                 => "",
                       "selectpicker-for-select-tag" => "")

:javascript
  miq_tabs_init('#auth_tabs');
