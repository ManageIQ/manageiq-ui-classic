- current_model = controller.class.model if controller.class.respond_to?("model") && !controller.class.model.nil?
- current_model = params[:db].nil? ? current_model.to_s.tableize : h(j_str(params[:db]))
- current_model = current_model && (@display.nil? || @display == "main") ? current_model : @display
- gtl_type_string = j_str(@gtl_type)
- selected_records = @edit[:object_ids] unless @edit.nil? || @edit[:object_ids].nil?
- selected_records = @edit[:pol_items] unless @edit.nil? || @edit[:pol_items].nil?
- selected_records = params[:rec_ids] unless params.nil? || params[:rec_ids].nil?
- selected_records = selected_records.map(&:to_i) if !selected_records.nil? && selected_records.first.kind_of?(String)
- selected_records = selected_records.map(&:id) if !selected_records.nil? && !selected_records.first.kind_of?(Integer)
#miq-gtl-view{"ng-controller" => "reportDataController as dataCtrl"}
  .msg-info{"ng-show" => "dataCtrl.showMessage && dataCtrl.showMessage !== ''"}
    = render(:partial => "layouts/info_msg",
               :locals => {:message => "{{dataCtrl.showMessage}}"})
  %miq-tile-view{"ng-if"            => "dataCtrl.gtlType === 'grid' || dataCtrl.gtlType === 'tile'",
                 "settings"         => "dataCtrl.settings",
                 "per-page"         => "dataCtrl.perPage",
                 "rows"             => "dataCtrl.gtlData.rows",
                 "on-row-click"     => "dataCtrl.onItemClicked(item, event)",
                 "on-sort"          => "dataCtrl.onSort(headerId, isAscending)",
                 "on-item-selected" => "dataCtrl.onItemSelect(item, isSelected)",
                 "load-more-items"  => "dataCtrl.onLoadNext(start, perPage)",
                 "columns"          => "dataCtrl.gtlData.cols",
                 "type"             => "dataCtrl.gtlType === 'grid' ? 'small' : 'big'"}
  %miq-data-table{"ng-if"            =>"dataCtrl.gtlType === 'list'",
                  "settings"         => "dataCtrl.settings",
                  "per-page"         => "dataCtrl.perPage",
                  "rows"             => "dataCtrl.gtlData.rows",
                  "on-row-click"     => "dataCtrl.onItemClicked(item, event)",
                  "on-sort"          => "dataCtrl.onSort(headerId, isAscending)",
                  "load-more-items"  => "dataCtrl.onLoadNext(start, perPage)",
                  "on-item-selected" => "dataCtrl.onItemSelect(item, isSelected)",
                  "columns"          => "dataCtrl.gtlData.cols"}
  .no-record{"ng-show" => "!dataCtrl.settings.isLoading && dataCtrl.gtlData.rows.length === 0"}
    = render(:partial => "layouts/info_msg",
               :locals => {:message => _("No Records Found.")})
:javascript
  sendDataWithRx({unsubscribe: 'reportDataController'});
  miq_bootstrap('#miq-gtl-view', 'ManageIQ.report_data');
  sendDataWithRx({initController: {
    name: 'reportDataController',
    data: {
      modelName: '#{h(j_str(current_model))}',
      activeTree: '#{x_active_tree}',
      gtlType: '#{h(gtl_type_string)}',
      currId: '#{h(j_str(params[:id])) unless @display.nil?}',
      sortColIdx: '#{@sortcol}',
      sortDir: '#{@sortdir}',
      isExplorer: '#{@explorer}' === 'true' ? true : false,
      records: #{!selected_records.nil? ? h(j_str(selected_records.to_json)) : "\'\'"},
      hideSelect: #{selected_records.kind_of?(Array)},
      showUrl: '#{view_to_url(@view, @parent) if @view.present? && @view.db.present?}'
    }
  }});
