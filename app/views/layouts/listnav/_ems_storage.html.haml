- if @record.try(:name)
  #accordion.panel-group
    = miq_accordion_panel(truncate(@record.name, :length => truncate_length), true, "icon") do
      = render :partial => 'shared/quadicon', :locals => {:record => @record}

    = miq_accordion_panel(_("Properties"), false, "ems_prop") do
      %ul.nav.nav-pills.nav-stacked
        = li_link(:if => true,
          :text       => _('Summary'),
          :record_id  => @record.id,
          :display    => 'main',
          :title      => _("Show Summary"))
        = li_link(:if => (@record.has_events? || @record.has_events?(:policy_events)),
          :text       => _('Timelines'),
          :record_id  => @record.id,
          :display    => 'timeline',
          :title      => _("Show Timelines"),
          :disabled_title => _("No Timeline data has been collected for Policy or Management Events"))

    = miq_accordion_panel(_("Relationships"), false, "ems_rel") do
      %ul.nav.nav-pills.nav-stacked
        - if role_allows?(:feature => "cloud_volume_show_list") && @record.try(:cloud_volumes)
          = li_link(:count => @record.number_of(:cloud_volumes),
            :record        => @record,
            :display       => "cloud_volumes",
            :tables        => "cloud_volume",
            :controller    => "ems_storage")
        - if role_allows?(:feature => "cloud_object_store_container_show_list") && @record.try(:cloud_object_store_containers)
          = li_link(:count => @record.number_of(:cloud_object_store_containers),
            :record        => @record,
            :display       => 'cloud_object_store_containers',
            :tables        => 'cloud_object_store_container',
            :controller    => "ems_storage")
