- ng_show                ||= true
- validate_url           ||= 'log_depot_edit'
- prefix                 ||= 'log'
- userid_label           ||= _("Username")
- password_label         ||= _("Password")
- new_password_label     ||= _("New ") + password_label
- verify_label           ||= _("Confirm Password")
- ng_reqd_userid         ||= false
- ng_reqd_password       ||= false
- ng_reqd_verify         ||= false
- userid_disabled        ||= false
- password_disabled      ||= false
- passwd_mismatch        ||= _("Passwords do not match")
- change_stored_password ||= _("Change stored password")
- cancel_password_change ||= _("Cancel password change")
- verify_title_off       ||= _("Server information, Username and matching password fields are needed to perform verification of credentials")
- ng_show_userid         ||= true
- guid_regex             ||= false
- vm_scope               ||= false

%div{"ng-controller" => "CredentialsController as vm"}
  %div{"ng-show" => "#{ng_show} && #{ng_show_userid}"}
    - form_group = {"ng-class" => "{'has-error': angularForm.#{prefix}_userid.$invalid}"}
    - form_group['ng-class'] = "{'has-error': $parent.vm.angularForm.#{prefix}_userid.$invalid}" if vm_scope
    .form-group{form_group}
      %label.col-md-2.control-label{"for" => "#{prefix}_userid"}
        = userid_label
      .col-md-4
        - hash_for_userid = {"type"                    => "text",
                             "id"                      => "#{prefix}_userid",
                             "ng-required"             => "#{ng_reqd_userid}",
                             "ng-disabled"             => userid_disabled,
                             "name"                    => "#{prefix}_userid",
                             "ng-model"                => "#{ng_model}.#{prefix}_userid",
                             "checkchange"             => "",
                             "ng-trim"                 => false,
                             "detect_spaces"           => "",
                             "prefix"                  => "#{prefix}",
                             "reset-validation-status" => "#{prefix}_auth_status"}
        - hash_for_userid['is-uuid'] = 4 if guid_regex
        - hash_for_userid['ng-model'] = "$parent.vm.#{ng_model}.#{prefix}_userid" if vm_scope
        %input.form-control{hash_for_userid}
        - span_required = {"ng-show" => "angularForm.#{prefix}_userid.$error.required"}
        - span_required['ng-show'] = "$parent.vm.angularForm.#{prefix}_userid.$error.required" if vm_scope
        %span.help-block{span_required}
          = _("Required")
        - span_spaces = {"ng-show" => "angularForm.#{prefix}_userid.$error.detectedSpaces"}
        - span_spaces['ng-show'] = "$parent.vm.angularForm.#{prefix}_userid.$error.detectedSpaces" if vm_scope
        %span.help-block{span_spaces}
          = _("Spaces are prohibited")
        - span_guid = {"ng-show" => "angularForm.#{prefix}_userid.$error.isUuid"}
        - span_guid['ng-show'] = "$parent.vm.angularForm.#{prefix}_userid.$error.isUuid" if vm_scope
        %span.help-block{span_guid}
          = _("Invalid input format, please enter a GUID")
        .note
          {{note}}

  %div{"ng-show" => "#{ng_show}"}
    - form_group = {"ng-class" => "{'has-error': angularForm.#{prefix}_password.$invalid}"}
    - form_group['ng-class'] = "{'has-error': $parent.vm.angularForm.#{prefix}_password.$invalid}" if vm_scope
    .form-group{form_group}
      %label.col-md-2.control-label{"for" => "#{prefix}_password"}
        %div{"ng-show" => "vm.bChangeStoredPassword != true"}
          = password_label
        %div{"ng-show" => "vm.bChangeStoredPassword"}
          = new_password_label
      .col-md-4
        - hash_for_password = {"type"                    => "password",
                               "id"                      => "#{prefix}_password",
                               "ng-required"             => "#{ng_reqd_password}",
                               "ng-disabled"             => "!vm.showVerify('#{prefix}_userid')" || password_disabled,
                               "name"                    => "#{prefix}_password",
                               "ng-model"                => "#{ng_model}.#{prefix}_password",
                               "prefix"                  => "#{prefix}",
                               "clear-field-set-focus"   => "",
                               "verifypasswd"            => "",
                               "checkchange"             => "",
                               "reset-validation-status" => "#{prefix}_auth_status"}
        - hash_for_password['ng-model'] = "$parent.vm.#{ng_model}.#{prefix}_password" if vm_scope
        %input.form-control{hash_for_password}
        - span_required = {"ng-show" => "angularForm.#{prefix}_password.$error.required"}
        - span_required['ng-show'] = "$parent.vm.angularForm.#{prefix}_password.$error.required" if vm_scope
        %span.help-block{span_required}
          = _("Required")
      %div{"ng-if" => "vm.showChangePasswordLinks('#{prefix}_userid')"}
        %a{:href => "", "ng-hide" => "vm.bChangeStoredPassword", "ng-click" => "vm.changeStoredPassword()"}
          = change_stored_password
        %a{:href => "", "ng-show" => "vm.bChangeStoredPassword", "ng-click" => "vm.cancelPasswordChange()"}
          = cancel_password_change
    %div{"ng-show" => "#{ng_show}"}
    - form_group = {"ng-class" => "{'has-error': angularForm.#{prefix}_verify.$invalid}"}
    - form_group['ng-class'] = "{'has-error': $parent.vm.angularForm.#{prefix}_verify.$invalid}" if vm_scope
    .form-group{form_group}
      %label.col-md-2.control-label{"ng-show" => "vm.showVerify('#{prefix}_userid')", "for" => "#{prefix}_verify"}
        = verify_label
      .col-md-4
        - hash_for_verify = {"type"                    => "password",
                            "id"                      => "#{prefix}_verify",
                            "ng-required"             => "#{ng_reqd_verify}",
                            "ng-disabled"             => "!vm.showVerify('#{prefix}_userid')" || password_disabled,
                            "name"                    => "#{prefix}_verify",
                            "ng-model"                => "#{ng_model}.#{prefix}_verify",
                            "ng-show"                 => "vm.showVerify('#{prefix}_userid')",
                            "prefix"                  => "#{prefix}",
                            "clear-field-set-focus"   => "no-focus",
                            "verifypasswd"            => "",
                            "checkchange"             => "",
                            "reset-validation-status" => "#{prefix}_auth_status"}
        - hash_for_verify['ng-model'] = "$parent.vm.#{ng_model}.#{prefix}_verify" if vm_scope
        %input.form-control{hash_for_verify}
        %div{"ng-show" => "vm.showVerify('#{prefix}_userid')"}
          - span_required = {"ng-show" => "angularForm.#{prefix}_verify.$error.required"}
          - span_required['ng-show'] = "$parent.vm.angularForm.#{prefix}_verify.$error.required" if vm_scope
          %span.help-block{span_required}
            = _("Required")
          - if vm_scope
            - passwd_mismatch_hash = {"ng-show" => "!$parent.vm.angularForm.#{prefix}_verify.$error.required && $parent.vm.#{prefix}_VerifyCtrl != undefined && $parent.vm.#{prefix}_VerifyCtrl.$error.verifypasswd"}
          - else
            - passwd_mismatch_hash = {"ng-show" => "!angularForm.#{prefix}_verify.$error.required && #{prefix}_VerifyCtrl != undefined && #{prefix}_VerifyCtrl.$error.verifypasswd"}
          %span.help-block{passwd_mismatch_hash}
            = passwd_mismatch
    %div{"ng-show" => "#{ng_show}"}
      .form-group
        %label.col-md-2
        .col-md-4
          = render :partial => "layouts/angular/form_buttons_verify_angular",
                                       :locals  => {:ng_show          => "#{ng_show}",
                                                    :validate_url     => validate_url,
                                                    :id               => id,
                                                    :ng_model         => "#{ng_model}",
                                                    :valtype          => "#{prefix}",
                                                    :verify_title_off => verify_title_off,
                                                    :vm_scope         => vm_scope,
                                                    :basic_info_needed => defined?(basic_info_needed) ? basic_info_needed : nil}
