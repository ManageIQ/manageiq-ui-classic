- if @exp_atom_errors
  -# Errors in this atom, display them instead of the atom
  %fieldset.adminform
    %ul#message{:style => "padding-left: 30px;"}
      %li#message.error
        - @exp_atom_errors.each do |ae|
          = ae
          %br
- else
  - url = url_for_only_path(:action => 'exp_changed')
  -# Grab the model for this expression
  - exp_model = @edit[@expkey][:exp_model]
  #exp_atom_editor_div
    = react('ExpressionEditorWrapper', {:model => exp_model})

  :javascript
    // Set the expression value prefill images and hover text
    miqExpressionPrefill(ManageIQ.expEditor, true);

    // Clear the date from and to selection limiters
    ManageIQ.calendar.calDateFrom = null;
    ManageIQ.calendar.calDateTo = null;

    miqInitSelectPicker();
    miqSelectPickerEvent('chosen_typ', '#{url}');
