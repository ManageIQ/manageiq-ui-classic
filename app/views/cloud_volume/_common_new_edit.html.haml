.form-group{"ng-class" => "{'has-error': angularForm.storage_manager_id.$invalid}"}
  %label.col-md-2.control-label
    = _('Storage Manager')
  .col-md-8
    %select{"name"        => "storage_manager_id",
            "ng-model"    => "vm.cloudVolumeModel.storage_manager_id",
            "ng-options"  => "mgr.id|number as mgr.name for mgr in vm.storageManagers",
            "ng-change"   => "vm.storageManagerChanged(vm.cloudVolumeModel.storage_manager_id)",
            "required"    => "",
            "disabled"    => !@storage_manager.nil? || !@volume.id.nil?,
            :checkchange  => true,
            "pf-select"   => true}
      %option{"value" => "", "disabled" => ""}
        = "<#{_('Choose')}>"
    %span.help-block{"ng-show" => "angularForm.storage_manager_id.$error.required"}
      = _("Required")

.form-group{"ng-class" => "{'has-error': angularForm.cloud_tenant_id.$invalid}",
            "ng-if"    => "vm.cloudVolumeModel.emstype == 'ManageIQ::Providers::StorageManager::CinderManager'"}
  %label.col-md-2.control-label
    = _('Cloud Tenant')
  .col-md-8
    %select{"name"        => "cloud_tenant_id",
            "ng-model"    => "vm.cloudVolumeModel.cloud_tenant_id",
            "ng-options"  => "tenant.id as tenant.name for tenant in vm.cloudTenantChoices",
            "ng-disabled" => "!vm.newRecord",
            "required"    => "",
            :checkchange  => true,
            "pf-select"   => true}
      %option{"value" => "", "disabled" => ""}
        = "<#{_('Choose')}>"
    %span.help-block{"ng-show" => "angularForm.cloud_tenant_id.$error.required"}
      = _("Required")

.form-group{"ng-class" => "{'has-error': angularForm.aws_availability_zone_id.$invalid}",
            "ng-if"    => "vm.cloudVolumeModel.emstype == 'ManageIQ::Providers::Amazon::StorageManager::Ebs'"}
  %label.col-md-2.control-label
    = _('Availability Zone')
  .col-md-8
    %select{"name"        => "aws_availability_zone_id",
            "ng-model"    => "vm.cloudVolumeModel.aws_availability_zone_id",
            "ng-options"  => "az.ems_ref as az.name for az in vm.availabilityZoneChoices",
            "required"    => "",
            "ng-disabled" => "!vm.newRecord",
            :checkchange  => true,
            "pf-select"   => true}
      %option{"value" => "", "disabled" => ""}
        = "<#{_('Choose')}>"
    %span.help-block{"ng-show" => "angularForm.aws_availability_zone_id.$error.required"}
      = _("Required")

.form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
  %label.col-md-2.control-label
    = _('Volume Name')
  .col-md-8
    %input.form-control{:type          => "text",
                        :name          => "name",
                        'ng-model'     => "vm.cloudVolumeModel.name",
                        'ng-maxlength' => 128,
                        :required      => "",
                        :checkchange   => true}
    %span.help-block{"ng-show" => "angularForm.name.$error.required"}
      = _("Required")

.form-group{"ng-class" => "{'has-error': angularForm.aws_volume_type.$invalid}",
            "ng-if"    => "vm.cloudVolumeModel.emstype == 'ManageIQ::Providers::Amazon::StorageManager::Ebs'"}
  %label.col-md-2.control-label
    = _('Cloud Volume Type')
  .col-md-8
    %select{"name"        => "aws_volume_type",
            "ng-model"    => "vm.cloudVolumeModel.aws_volume_type",
            "ng-options"  => "voltype.type as voltype.name for voltype in vm.awsVolumeTypes",
            "ng-change"   => "vm.awsVolumeTypeChanged(vm.cloudVolumeModel.aws_volume_type)",
            "ng-disabled" => "!vm.newRecord && vm.cloudVolumeModel.aws_volume_type == 'standard'",
            "required"    => "",
            :checkchange  => true,
            "pf-select"   => true}
      %option{"value" => "", "disabled" => ""}
        = "<#{_('Choose')}>"
    %span.help-block{"ng-show" => "angularForm.aws_volume_type.$error.required"}
      = _("Required")

.form-group{"ng-class" => "{'has-error': angularForm.size.$invalid}"}
  %label.col-md-2.control-label
    = _('Size (in gigabytes)')
  .col-md-8
    %input.form-control{:type          => "text",
                        :name          => "size",
                        'ng-model'     => "vm.cloudVolumeModel.size",
                        'ng-maxlength' => 10,
                        'ng-change'    => "vm.sizeChanged(vm.cloudVolumeModel.size)",
                        'ng-disabled'  => "!vm.canModifyVolumeSize()",
                        :required      => "",
                        :checkchange   => true}
    %span.help-block{"ng-show" => "angularForm.size.$error.required"}
      = _("Required")

.form-group{"ng-class" => "{'has-error': angularForm.aws_iops.$invalid}",
            "ng-if"    => "vm.cloudVolumeModel.emstype == 'ManageIQ::Providers::Amazon::StorageManager::Ebs'"}
  %label.col-md-2.control-label
    = _('IOPS')
  .col-md-8
    %input.form-control{:type          => "text",
                        :name          => "aws_iops",
                        'ng-model'     => "vm.cloudVolumeModel.aws_iops",
                        'ng-maxlength' => 50,
                        'ng-disabled'  => "vm.cloudVolumeModel.aws_volume_type != 'io1'",
                        "ng-required"  => "vm.cloudVolumeModel.aws_volume_type == 'io1'",
                        :checkchange   => true}
    %span.help-block{"ng-show" => "vm.cloudVolumeModel.aws_volume_type == 'io1' && angularForm.aws_iops.$error.required"}
      = _("Required")

.form-group{"ng-if" => "vm.cloudVolumeModel.emstype == 'ManageIQ::Providers::Amazon::StorageManager::Ebs'"}
  %label.col-md-2.control-label
    = _('Encryption')
  .col-md-8
    %input.form-control{"bs-switch"       => "",
                        :data             => {:on_text => _('Yes'), :off_text => _('No'), :size => 'mini'},
                        :type             => "checkbox",
                        :name             => "aws_encryption",
                        'ng-model'        => "vm.cloudVolumeModel.aws_encryption",
                        'switch-readonly' => "!vm.newRecord",
                        'ng-disabled'     => "!vm.newRecord",
                        :checkchange      => ""}

= render :partial => "layouts/angular/generic_form_buttons"
