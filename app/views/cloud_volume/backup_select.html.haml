%form#form_div{:name => "angularForm",
               'ng-controller' => "cloudVolumeFormController as vm",
               "miq-form"      => true,
               "model"         => "vm.cloudVolumeModel",
               "model-copy"    => "vm.modelCopy"}
  = render :partial => "layouts/flash_msg"
  %h3
    = _('Basic Information')
  .form-horizontal
    .form-group
      %label.col-md-2.control-label
        = _('Cloud Volume Backup')
      .col-md-8
        = select_tag("backup_id",
          options_for_select([["<#{_('Choose')}>", nil]] + @backup_choices.sort),
                      "ng-model"    => "vm.cloudVolumeModel.backup_id",
                      "required"    => "",
                      :checkchange  => true,
                      "miq-select"  => true)

  .clearfix
  .pull-right.button-group.edit_buttons
    %miq-button{:name      => t = _("Save"),
                :title     => t,
                :alt       => t,
                :enabled   => "vm.saveable(angularForm)",
                'on-click' => "vm.backupRestoreClicked(angularForm)",
                :primary   => 'true'}
    %miq-button{:name      => t = _("Reset"),
                :title     => t,
                :alt       => t,
                :enabled   => "!angularForm.$pristine",
                'on-click' => "vm.resetClicked(angularForm)"}
    %miq-button{:name      => t = _("Cancel"),
                :title     => t,
                :alt       => t,
                :enabled   => "true",
                'on-click' => "vm.cancelBackupCreateClicked(angularForm)"}

:javascript
  ManageIQ.angular.app.value('cloudVolumeFormId', '#{@volume.id}');
  ManageIQ.angular.app.value('storageManagerId', '#{@volume.ext_management_system.id.to_s}');
  ManageIQ.angular.app.value('cloudVolumeFormOperation', 'BACKUP_SELECT');
  miq_bootstrap(jQuery('#form_div'));
