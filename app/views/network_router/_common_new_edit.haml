%form#form_div{'name'          => 'angularForm',
               'ng-controller' => 'networkRouterFormController as vm',
               'ng-cloak'      => '',
               'miq-form'      => true,
               'form-changed'  => true,
               'model'         => 'vm.networkRouterModel',
               'model-copy'    => 'vm.modelCopy',
               'ng-show'       => 'vm.afterGet'}

  = render :partial => 'layouts/flash_msg'

  %h3
    = _('Network Management Provider')

  .form-horizontal
    .form-group{'ng-class' => '{"has-error": angularForm.ems_id.$invalid}'}
      %label.col-md-2.control-label
        = _('Network Manager')
      .col-md-8{'ng-if' => 'vm.newRecord'}
        %select{'id'         => 'ems_id',
                'name'       => 'ems_id',
                'ng-change'  => 'vm.filterNetworkManagerChanged(vm.networkRouterModel.ems_id)',
                'ng-model'   => 'vm.networkRouterModel.ems_id',
                'ng-options' => 'ems.id as ems.name for ems in vm.ems',
                'miq-select' => true,
                'required'   => ''}
          %option{:value => ''}
            = "<#{_('Choose')}>"
        %span.help-block{'ng-show' => 'angularForm.ems_id.$error.required'}
          = _('Required')
      .col-md-8{'ng-if' => '!vm.newRecord'}
        %input.form-control{'type'        => 'text',
                            'name'        => 'ems_name',
                            'maxlength'   => 128,
                            'ng-model'    => 'vm.networkRouterModel.ext_management_system.name',
                            'disabled'    => true}

    .form-group{'ng-class' => '{"has-error": angularForm.cloud_tenant_id.$invalid}',
                'ng-if'    => 'vm.networkRouterModel.ems_id'}
      %label.col-md-2.control-label
        = _('Cloud Tenant Placement')
      .col-md-8{'ng-if' => 'vm.newRecord'}
        %select{'name'                        => 'cloud_tenant_id',
                'ng-model'                    => 'vm.networkRouterModel.cloud_tenant.id',
                'ng-options'                  => 'tenant.id as tenant.name for tenant in vm.available_tenants',
                'miq-select'                  => true,
                'required'                    => '',
                'selectpicker-for-select-tag' => ''}
          %option{'value' => ''}
            = "<#{_('Choose')}>"
        %span.help-block{'ng-show' => 'angularForm.cloud_tenant_id.$error.required'}
          = _('Required')
      .col-md-8{'ng-if' => '!vm.newRecord'}
        %input.form-control{'type'      => 'text',
                            'name'      => 'cloud_tenant_name',
                            'disabled'  => true,
                            'maxlength' => 128,
                            'ng-model'  => 'vm.networkRouterModel.cloud_tenant.name'}
  %h3
    = _('Router Information')
  .form-horizontal
    .form-group{'ng-class' => "{'has-error': angularForm.name.$invalid}"}
      %label.col-md-2.control-label
        = _('Router Name')
      .col-md-8
        %input.form-control{'type'      => 'text',
                            'name'      => 'name',
                            'ng-model'  => 'vm.networkRouterModel.name',
                            'maxlength' => 128,
                            'required'  => ''}
        %span.help-block{'ng-show' => 'angularForm.name.$error.required'}
          = _('Required')
    .form-group
      %label.col-md-2.control-label
        = _('Administrative State')
      .col-md-8
        %input{'bs-switch' => '',
               'data'      => {:on_text => _('Up'), :off_text => _('Down'), :size => 'mini'},
               'type'      => 'checkbox',
               'id'        => 'admin_state_up',
               'name'      => 'admin_state_up',
               'ng-model'  => 'vm.networkRouterModel.admin_state_up'}
  %h4
    = _('External Gateway')
  .form-horizontal
    .form-group
      %label.col-md-2.control-label{'for' => 'external_gateway'}
        = _('Enable')
      .col-md-8
        %input{'bs-switch' => '',
               'data'      => {:on_text => _('Yes'), :off_text => _('No'), :size => 'mini'},
               'type'      => 'checkbox',
               'id'        => 'external_gateway',
               'name'      => 'external_gateway',
               'ng-change' => 'vm.networkRouterModel.extra_attributes.external_gateway_info.enable_snat = true',
               'ng-model'  => 'vm.networkRouterModel.external_gateway'}
  .form-horizontal{'ng-if' => 'vm.networkRouterModel.external_gateway'}
    .form-group
      %label.col-md-2.control-label{'for' => 'enable_snat'}
        = _('Source NAT')
      .col-md-8
        %input{'bs-switch' => '',
               'data'      => {:on_text => _('Yes'), :off_text => _('No'), :size => 'mini'},
               'type'      => 'checkbox',
               'id'        => 'enable_snat',
               'name'      => 'enable_snat',
               'ng-model'  => 'vm.networkRouterModel.extra_attributes.external_gateway_info.enable_snat'}
    .form-group{'ng-class' => "{'has-error': angularForm.cloud_network_id.$invalid}"}
      %label.col-md-2.control-label
        = _('Network')
      .col-md-8
        %select{'name'                        => 'cloud_network_id',
                'ng-model'                    => 'vm.networkRouterModel.cloud_network_id',
                'ng-options'                  => 'network.id as network.name for network in vm.available_networks',
                'ng-change'                   => 'vm.getCloudSubnetsByNetworkID(vm.networkRouterModel.cloud_network_id)',
                'miq-select'                  => true,
                'ng-selected'                 => 'vm.networkRouterModel.cloud_network_id',
                'selectpicker-for-select-tag' => ''}
          %option{'value' => ''}
            = "<#{_('Choose')}>"
        %span.help-block{'ng-show' => 'angularForm.cloud_network_id.$error.required'}
          = _('Required')

    .form-group{'ng-if' => 'vm.networkRouterModel.cloud_network_id'}
      %label.col-md-2.control-label
        = _('Fixed IPs subnet')
      .col-md-8
        %select{'name'                        => 'cloud_subnet_id',
                'ng-model'                    => 'vm.networkRouterModel.cloud_subnet_id',
                'ng-options'                  => 'subnet.id as subnet.name for subnet in vm.available_subnets',
                'miq-select'                  => true,
                'ng-selected'                 => 'vm.networkRouterModel.cloud_subnet_id',
                'selectpicker-for-select-tag' => ''}
          %option{'value' => ''}
            = "<#{_('Choose')}>"

  = render :partial => 'layouts/angular/generic_form_buttons'

:javascript
  ManageIQ.angular.app.value('networkRouterFormId', '#{@router.id || "new"}');
  miq_bootstrap('#form_div');
