%form#form_div{:name           => "angularForm",
               "ng-show"       => "vm.afterGet",
               "ng-cloak"      => "",
               "miq-form"      => true,
               "model"         => "vm.cloudVolumeModel",
               "model-copy"    => "vm.modelCopy"}
  = render :partial => "layouts/flash_msg"
  %h3
    = _('Attach Volume')
  .form-horizontal
    .form-group{"ng-class" => "{'has-error': angularForm.vm_id.$invalid}"}
      %label.col-md-2.control-label{"for" => "vm_id"}
        = _('Instance')
      .col-md-8
        %select{:name                         => "vm_id",
                "ng-options"                  => "choice[1] as choice[0] for choice in vm.vmChoices",
                "ng-model"                    => "vm.cloudVolumeModel.vm_id",
                "required"                    => true,
                :checkchange                  => true}

    .form-group{"ng-class" => "{'has-error': angularForm.device_path.$invalid}"}
      %label.col-md-2.control-label{'ng-if' => 'vm.extManagementSystem === "ManageIQ::Providers::Amazon::StorageManager::Ebs"'}
        = _('Device Mountpoint')
      %label.col-md-2.control-label{'ng-if' => 'vm.extManagementSystem != "ManageIQ::Providers::Amazon::StorageManager::Ebs"'}
        = _('Device Mountpoint (optional)')

      .col-md-8
        %input.form-control{:type          => "text",
                            :name          => "device_path",
                            'ng-model'     => "vm.cloudVolumeModel.device_path",
                            'ng-maxlength' => 128,
                            "ng-required"  => "vm.cloudVolumeModel.emstype == 'ManageIQ::Providers::Amazon::StorageManager::Ebs'"}
        %span.help-block{"ng-show" => "angularForm.device_path.$error.required"}
          = _("Required")

  .clearfix
  .pull-right.button-group.edit_buttons
    %miq-button{:name      => t = _("Attach"),
                :title     => t,
                :alt       => t,
                :enabled   => "vm.saveable(angularForm)",
                'on-click' => "vm.attachClicked(angularForm)",
                :primary   => 'true'}
    %miq-button{:name      => t = _("Reset"),
                :title     => t,
                :alt       => t,
                :enabled   => "!angularForm.$pristine",
                'on-click' => "vm.resetClicked(angularForm)"}
    %miq-button{:name      => t = _("Cancel"),
                :title     => t,
                :alt       => t,
                :enabled   => "true",
                'on-click' => "vm.cancelAttachClicked(angularForm)"}
