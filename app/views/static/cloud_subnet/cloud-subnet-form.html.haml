%form#form_div{'name'          => 'angularForm',
               'form-changed'  => true,
               'miq-form'      => true,
               'model'         => 'vm.cloudSubnetModel',
               'model-copy'    => 'vm.modelCopy',
               'ng-cloak'      => '',
               'ng-show'       => 'vm.afterGet'}

  %h3
    = _('Network Management Provider')
  .form-horizontal
    .form-group{'ng-class' => '{"has-error": angularForm.ems_id.$invalid}'}
      %label.col-md-2.control-label
        = _('Network Manager')
      .col-md-8{'ng-if' => 'vm.newRecord'}
        %select{'name'                        => 'ems_id',
                'ng-change'                   => 'vm.filterNetworkManagerChanged(vm.cloudSubnetModel.ems_id)',
                'ng-model'                    => 'vm.cloudSubnetModel.ems_id',
                'ng-options'                  => 'ems.id as ems.name for ems in vm.available_ems',
                'miq-select'                  => true,
                'required'                    => '',
                'selectpicker-for-select-tag' => ''}
          %option{'value' => ''}
            = "<#{_('Choose')}>"
        %span.help-block{'ng-show' => 'angularForm.ems_id.$error.required'}
          = _('Required')
      .col-md-8{'ng-if' => '!vm.newRecord'}
        %input.form-control{'type'      => 'text',
                            'name'      => 'ems_name',
                            'disabled'  => true,
                            'maxlength' => 128,
                            'ng-model'  => 'vm.cloudSubnetModel.ext_management_system.name'}
    .form-group{'ng-class' => '{"has-error": angularForm.cloud_tenant_id.$invalid}',
                'ng-if' => 'vm.cloudSubnetModel.ems_id'}
      %label.col-md-2.control-label
        = _('Cloud Tenant Placement')
      .col-md-8{'ng-if' => 'vm.newRecord'}
        %select{'name'                        => 'cloud_tenant_id',
                'ng-model'                    => 'vm.cloudSubnetModel.cloud_tenant.id',
                'ng-options'                  => 'tenant.id as tenant.name for tenant in vm.available_tenants',
                'miq-select'                  => true,
                'required'                    => '',
                'selectpicker-for-select-tag' => ''}
          %option{'value' => ''}
            = "<#{_('Choose')}>"
        %span.help-block{'ng-show' => "angularForm.cloud_tenant_id.$error.required"}
          = _('Required')
      .col-md-8{'ng-if' => '!vm.newRecord'}
        %input.form-control{'type'      => 'text',
                            'name'      => ' clout_tenant_name',
                            'maxlength' => 128,
                            'ng-model'  => 'vm.cloudSubnetModel.cloud_tenant.name',
                            'disabled'  => true}
  %h3
    = _('Cloud Subnet details')
  .form-horizontal
    .form-group{'ng-class' => '{"has-error": angularForm.network_id.$invalid}'}
      %label.col-md-2.control-label
        = _('Network')
      .col-md-8{'ng-if' => 'vm.newRecord'}
        %select{'name'                        => 'network_id',
                'ng-model'                    => 'vm.cloudSubnetModel.network_id',
                'ng-options'                  => 'network.ems_ref as network.name for network in vm.available_networks',
                'miq-select'                  => true,
                'required'                    => '',
                'selectpicker-for-select-tag' => ''}
          %option{'value' => ''}
            = "<#{_('Choose')}>"
        %span.help-block{'ng-show' => 'angularForm.network_id.$error.required'}
          = _('Required')
      .col-md-8{'ng-if' => '!vm.newRecord'}
        %input.form-control{'type'      => 'text',
                            'name'      => 'network_name',
                            'maxlength' => 128,
                            'ng-model'  => 'vm.cloudSubnetModel.cloud_network.name',
                            'disabled'  => true}
  .form-horizontal
    .form-group
      %label.col-md-2.control-label
        = _('Subnet Name')
      .col-md-8
        %input.form-control{'type'      => 'text',
                            'name'      => 'name',
                            'ng-model'  => 'vm.cloudSubnetModel.name',
                            'maxlength' => 128}
    .form-group
      %label.col-md-2.control-label
        = _('Gateway')
      .col-md-8
        %input.form-control{'type'      => 'text',
                            'name'      => 'gateway_ip',
                            'ng-model'  => 'vm.cloudSubnetModel.gateway',
                            'maxlength' => 20}
    .form-group
      %label.control-label.col-md-2{'for' => 'dhcp'}
        = _('DHCP')
      .col-md-8
        %input{'type'        => 'checkbox',
               'name'        => 'dhcp',
               'bs-switch'   => '',
               'data'        => {:on_text => _('Enabled'), :off_text => _('Disabled'), :size => 'mini'},
               'ng-model'    => 'vm.cloudSubnetModel.dhcp_enabled'}
    .form-group{'ng-class' => '{"has-error": angularForm.network_protocol.$invalid}'}
      %label.col-md-2.control-label
        = _('IP Version')
      .col-md-8
        %select{'name'                        => 'network_protocol',
                'ng-model'                    => 'vm.cloudSubnetModel.network_protocol',
                'ng-disabled'                 => '!vm.newRecord',
                'ng-options'                  => 'protocol as protocol for protocol in vm.networkProtocols',
                'miq-select'                  => true,
                'required'                    => '',
                'selectpicker-for-select-tag' => ''}
        %span.help-block{'ng-show' => 'angularForm.network_protocol.$error.required'}
          = _('Required')

    .form-group{'ng-class' => "{'has-error': angularForm.cidr.$invalid}"}
      %label.col-md-2.control-label
        = _('Subnet CIDR')
      .col-md-8
        %input.form-control{'type'        => 'text',
                            'name'        => 'cidr',
                            'ng-disabled' => '!vm.newRecord',
                            'ng-model'    => 'vm.cloudSubnetModel.cidr',
                            'maxlength'   => 20,
                            'required'    => ''}
        %span.help-block{'ng-show' => 'angularForm.cidr.$error.required'}
          = _('Required')

  = render :partial => 'layouts/angular/generic_form_buttons'
