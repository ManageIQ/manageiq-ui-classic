/ begin: app/views/ansible_credential/_credential_form.html.haml
%br
.form-horizontal
  %form#form_div{'name'          => 'angularForm',
                 'ng-controller' => 'ansibleCredentialsFormController as vm',
                 'ng-show'       => 'vm.afterGet',
                 'ng-cloak'      => '',
                 'miq-form'      => true,
                 'model'         => 'vm.credentialModel',
                 'model-copy'    => 'vm.modelCopy',
                 'form-changed'  => true,
                 'novalidate'    => true}
    = render :partial => "layouts/flash_msg"
    .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
      %label.col-md-2.control-label
        = _('Name')
      .col-md-8
        %input.form-control{:type        => "text",
                            :name        => "name",
                            "id"         => "name",
                            'ng-model'   => "vm.credentialModel.name",
                            :maxlength   => ViewHelper::MAX_NAME_LEN,
                            :required    => true,
                            "auto-focus" => ""}
        %span.help-block{"ng-show" => "angularForm.name.$error.required"}
          = _("Required")
    .form-group
      %label.col-md-2.control-label
        = _('Credential type')
      - if @id == 'new' # we don't allow changing auth. type when editing a resource
        .col-md-8
          %select{'ng-model'   => 'vm.credentialModel.type',
                  'ng-options' => 'cred.value as cred.label for cred in vm.select_options',
                  'id'         => 'type',
                  'required'   => 'true',
                  'pf-select'  => 'true'}
      - else
        .col-md-8
          {{ vm.credential_options[vm.credentialModel.type].label }}

    %ansible-credential-options{:model                        => 'vm.credentialModel',
                                :options                      => 'vm.credential_options[vm.credentialModel.type]',
                                :reset                        => 'vm.reset',
                                'new-record'                  => 'vm.newRecord',
                                'delete-from-model'           => 'vm.deleteFromModel',
                                'stored-password-placeholder' => 'vm.storedPasswordPlaceholder'}

    = render :partial => 'layouts/angular/generic_form_buttons'

:javascript
  ManageIQ.angular.app.value('credentialId', '#{@id}');
  miq_bootstrap('#form_div');
/ end: app/views/ansible_credential/_credential_form.html.haml
